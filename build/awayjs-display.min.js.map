{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "box",
    "min",
    "ceil",
    "sqrt",
    "width",
    "height",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "positions",
    "posDim",
    "dimensions",
    "k",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "numVertices",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_pImplicitColorTransform",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "target",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "child_depths",
    "getChildDepths",
    "sessionID_depths",
    "end_index",
    "child",
    "_children",
    "update_indices",
    "update_cnt",
    "targetFrame_first_sessionID",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "removeChildAt",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "parseInt",
    "addChildAtDepth",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "getChildAtSessionID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_active_depths",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAt",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "exit_frame",
    "_skipAdvance",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate miny:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\r\n\tprivate buildGrid(box:Box):void\r\n\t{\r\n\t\tthis.minx = box.x;\r\n\t\tthis.miny = box.y;\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tthis.devisions = Math.min(Math.ceil(Math.sqrt(this._numVertices)), 32);\r\n\r\n\t\tthis.conversionX = this.devisions/box.width;\r\n\t\tthis.conversionY = this.devisions/box.height;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(this.devisions * this.devisions);\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - this.minx)*this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - this.miny)*this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - this.minx)*this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - this.miny)*this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\r\n\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\r\n\t\t\t\t\tvar index:number = i + j*this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index] || (this.cells[index] = new Array<number>());\r\n\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif (this.numVertices > 150) {\r\n\r\n\t\t\tif (this.cells == null)\r\n\t\t\t\tthis.buildGrid(box);\r\n\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\r\n\t\t\tif (cell == -1)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\r\n\t\t\tif (nodes == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t\t\tif (d > 0 && az == -1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\telse if (d < 0 && az == 1)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//brute force\r\n\t\tfor(var k:number = 0; k < this._numVertices; k += 3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tpublic _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _explicitColorTransform:ColorTransform;\r\n\tpublic _pImplicitColorTransform:ColorTransform = new ColorTransform();\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n\t\tif (this._inheritColorTransform == value)\r\n\t\t\treturn;\r\n\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._explicitColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n        this._explicitColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zOffset:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar newInstance:DisplayObject = new DisplayObject();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObject)\r\n\t{\r\n\t\tnewInstance.partition = this._explicitPartition;\r\n\t\tnewInstance.boundsType = this._boundsType;\r\n\t\tnewInstance.pivot = this._pivot;\r\n\t\tnewInstance.name = this._pName;\r\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\r\n\t\tnewInstance.extra = this.extra;\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\r\n\t\tif (this._explicitMasks)\r\n\t\t\tnewInstance.masks = this._explicitMasks;\r\n\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._explicitMaskId == -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\r\n\t\tif(this._iColorTransform)\r\n\t\t\tthis._iColorTransform.clear();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic get _iColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._explicitColorTransform;\r\n\t}\r\n\r\n\tpublic set _iColorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._explicitColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\r\n\t{\r\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n\t\tif (!newPropDirty)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= propDirty;\r\n\r\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartition();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled()\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible()\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId()\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks()\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform()\r\n\t{\r\n\t\tif (this._inheritColorTransform && this._pParent) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._explicitColorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = !this._maskMode;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "/**\r\n *\r\n */\r\nclass HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}\r\n\r\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar child_depths = target_mc.getChildDepths();\r\n\t\tvar sessionID_depths:Object = {};\r\n\t\tvar i:number;\r\n\t\tvar end_index:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc._children[i];\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\tsessionID_depths[child._depthID] = child._sessionID;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar targetFrame_first_sessionID:number=0;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\t\t\tvar start_index:number;\r\n\t\t\tvar idx:number;\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[i] - 16383;\r\n\t\t\t\t\tdelete child_depths[depth];\r\n\t\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--) {\r\n\t\t\t\t\tidx = i*2;\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\tchild_depths[depth] = target;\r\n\t\t\t\t\tsessionID_depths[depth] = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(k==target_keyframe_idx){\r\n\t\t\t\t\ttargetFrame_first_sessionID=start_index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_childs_dic\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tdepth = child._depthID;\r\n\t\t\tif (sessionID_depths[depth] == child._sessionID)\r\n\t\t\t\tdelete sessionID_depths[depth];\r\n\t\t\telse\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t}\r\n\r\n\t\t// the objects that are now child of target_mc, are alive on both frames\r\n\t\t// if we jump back, or we jump a gap forward, we want to reset all objects (but not the timelines of the mcs)\r\n\t\tif((!jump_forward)||(jump_gap)){\r\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\t\tchild = target_mc._children[i];\r\n\t\t\t\tif(child.adapter ) {\r\n\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\r\n\t\t\t\t\t\tif (child._iMatrix3D) {\r\n\t\t\t\t\t\t\tchild._iMatrix3D.identity();\r\n\t\t\t\t\t\t\tchild._iMatrix3D = child._iMatrix3D;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child._iColorTransform) {\r\n\t\t\t\t\t\t\tchild._iColorTransform.clear();\r\n\t\t\t\t\t\t\tchild._iColorTransform = child._iColorTransform;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//this.name=\"\";\r\n\t\t\t\t\t\tchild.masks = null;\r\n\t\t\t\t\t\tchild.maskMode = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\r\n\t\t\t\t\t\tchild.visible = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we need to addchild the objects that was added befor targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\r\n\t\tfor (var key in sessionID_depths) {\r\n\t\t\tif(parseInt(key)<targetFrame_first_sessionID){\r\n\t\t\t\tchild = child_depths[key];\r\n\t\t\t\tchild._sessionID = sessionID_depths[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!skip_script && firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\t\tfor (var key in sessionID_depths) {\r\n\t\t\tif(parseInt(key)>=targetFrame_first_sessionID) {\r\n\t\t\t\tchild = child_depths[key];\r\n\t\t\t\tchild._sessionID = sessionID_depths[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean = false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(constructed_keyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\t\t\ttarget._sessionID = i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[idx + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.x = new_matrix.rawData[12];\r\n\t\t\t\t\t\t\t\ttarget.y = new_matrix.rawData[13];\r\n\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target._iColorTransform || (target._iColorTransform = new ColorTransform());\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3: //mask the mc with a list of objects\r\n\r\n\t\t\t\t\t\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tvar numMasks:number = this.properties_stream_int[value_start_index++];\r\n\r\n\t\t\t\t\t\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t\t\t\t\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\t\t\t\t\t\tif((mask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++])))\r\n\t\t\t\t\t\t\t\t\tmasks.push(mask);\r\n\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (!target.adapter || !target.adapter.isVisibilityByScript())\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D;\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._elementsDirty = true;\r\n\r\n\t\t\t\t\t\t\t\ttarget.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\ttarget.x = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\ttarget.y = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttarget.maskMode = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 201:\r\n\t\t\t\t\t\t\ttarget.masks = null;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "/**\r\n *\r\n */\r\nclass TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n\r\n\tconstructor(x:number, y:number, id:number)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t}\r\n}\r\n\r\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._displayObject._iColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tthis._displayObject._iColorTransform = val;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _active_depths:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._active_depths[depth] = child;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObjectContainer\r\n\t{\r\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.mouseChildren = this._mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this._active_depths[depth];\r\n\t}\r\n\r\n\tpublic getChildDepths():Object\r\n\t{\r\n\t\treturn this._active_depths;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\t//check to make sure _active_depths wasn't modified with a new child\r\n\t\tif (this._active_depths[child._depthID] == this)\r\n\t\t\tdelete this._active_depths[child._depthID];\r\n\r\n\t\tchild._depthID = -16384;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tif (!this._active_depths[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._active_depths[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode()\r\n\t{\r\n\t\t(this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n\t\t}\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Mesh\r\n\t{\r\n\t\tvar newInstance:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:Mesh)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.geometry = this._geometry;\r\n\t\tnewInstance.material = this._material;\r\n\t\tnewInstance.castsShadows = this._castsShadows;\r\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n        if (this._animator)\r\n\t\t\tnewInstance.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the geometry thing\r\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\r\n\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0, box))\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Object;\r\n    private _active_session_ids:Object;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids = {};\r\n        this._potentialInstances = {};\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public loop:boolean = true;\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string)\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    /**\r\n     * the current index of the current active frame\r\n     */\r\n    public constructedKeyFrameIndex:number;\r\n\r\n    public exit_frame():void\r\n    {\r\n        this._skipAdvance = false;\r\n\r\n        var child:DisplayObject;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--) {\r\n            child = this._children[i];\r\n            if(child.isAsset(MovieClip))\r\n                (<MovieClip> child).exit_frame();\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        super.reset();\r\n\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)\r\n            this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this.constructedKeyFrameIndex = -1;\r\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n\r\n        this._skipAdvance = true;\r\n\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public get currentFrameIndex():number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n\r\n    public set currentFrameIndex(value:number)\r\n    {\r\n        if (this._currentFrameIndex == value)\r\n            return;\r\n\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n\r\n            var skip_script:boolean = false;\r\n\r\n            if (value < 0) {\r\n                value = 0;\r\n            } else if (value >= this._timeline.numFrames) {\r\n                value = this._timeline.numFrames - 1;\r\n                skip_script=true;\r\n            }\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n        }\r\n\r\n        this._currentFrameIndex = value;\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\r\n        child.reset();// this takes care of transform and visibility\r\n\r\n        super.addChildAtDepth(child, depth, true);\r\n\r\n        this._active_session_ids[child._sessionID] = child;\r\n\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtInternal(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject = super.removeChildAtInternal(index);\r\n\r\n        if(child.adapter)\r\n            child.adapter.freeFromScript();\r\n\r\n        this.adapter.unregisterScriptObject(child);\r\n\r\n        delete this._active_session_ids[child._sessionID];\r\n\r\n        child._sessionID = -1;\r\n\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we execute any intervals queued\r\n        FrameScriptManager.execute_intervals();\r\n\r\n        // finally, we execute any scripts that were added from intervals\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone():MovieClip\r\n    {\r\n        var newInstance:MovieClip = new MovieClip(this._timeline);\r\n\r\n        this.copyTo(newInstance);\r\n\r\n        return newInstance;\r\n    }\r\n\r\n    public copyTo(newInstance:MovieClip)\r\n    {\r\n        super.copyTo(newInstance);\r\n\r\n        newInstance.timeline = this._timeline;\r\n        newInstance.loop = this.loop;\r\n    }\r\n\r\n\r\n    public iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            if (((this._isPlaying && !this._skipAdvance) || this._currentFrameIndex == -1) && (this._currentFrameIndex != this._timeline.numFrames - 1 || this.loop)) {\r\n                this._currentFrameIndex++;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) { // looping - jump to first frame.\r\n                    this.currentFrameIndex = 0;\r\n                } else { // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n        }\r\n\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len:number = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i <  len; ++i) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        var child:DisplayObject;\r\n        for (var i:number = 0; i < len; i++) {\r\n            child = this._children[i];\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip> child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskMode = this.maskMode;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\r\n\t\tif(!this._iColorTransform)\r\n\t\t\tthis._iColorTransform = new ColorTransform();\r\n\r\n\t\tthis._iColorTransform.color = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\r\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\n\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number = 0;\r\n\t\t\tvar c_cnt:number = 0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextField\r\n    {\r\n\t\tvar newInstance:TextField = new TextField();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextField)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\t// each textfield needs its own geometry.\r\n\t\tnewInstance.geometry=new Geometry();\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tview._pTouchPoints.length = 0;\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\r\n\t\t\tif (event.touches) {\r\n\t\t\t\tvar touch;\r\n\t\t\t\tvar len:number = event.touches.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\ttouch = event.touches[i];\r\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n\r\n        if (this._pEntityNode)\r\n            this._pEntityNode.acceptTraverser(traverser);\r\n\r\n        var i:number;\r\n        for (i = 0; i < this._numChildMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n\r\n        for (i = 0; i < this._pNumChildNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = node.displayObject._depthID;\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
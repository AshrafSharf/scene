{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "../index.ts",
    "lib/View.ts",
    "lib/animators/lib/animators/data/ParticleData.ts",
    "lib/animators/lib/animators/nodes/AnimationNodeBase.ts",
    "lib/animators.ts",
    "lib/lib/base/AlignmentMode.ts",
    "lib/lib/base/HierarchicalProperties.ts",
    "lib/lib/base/OrientationMode.ts",
    "lib/lib/base/Style.ts",
    "lib/lib/base/Timeline.ts",
    "lib/lib/base/TouchPoint.ts",
    "lib/lib/base/Transform.ts",
    "lib/base.ts",
    "lib/lib/bounds/AxisAlignedBoundingBox.ts",
    "lib/lib/bounds/BoundingSphere.ts",
    "lib/lib/bounds/BoundingVolumeBase.ts",
    "lib/lib/bounds/BoundsType.ts",
    "lib/lib/bounds/NullBounds.ts",
    "lib/bounds.ts",
    "lib/lib/controllers/ControllerBase.ts",
    "lib/lib/controllers/FirstPersonController.ts",
    "lib/lib/controllers/FollowController.ts",
    "lib/lib/controllers/HoverController.ts",
    "lib/lib/controllers/LookAtController.ts",
    "lib/lib/controllers/SpringController.ts",
    "lib/controllers.ts",
    "lib/lib/display/Billboard.ts",
    "lib/lib/display/Camera.ts",
    "lib/lib/display/DirectionalLight.ts",
    "lib/lib/display/DisplayObjectContainer.ts",
    "lib/lib/display/DisplayObject.ts",
    "lib/lib/display/LightBase.ts",
    "lib/lib/display/LightProbe.ts",
    "lib/lib/display/LineSegment.ts",
    "lib/lib/display/LoaderContainer.ts",
    "lib/lib/display/MovieClip.ts",
    "lib/lib/display/PointLight.ts",
    "lib/lib/display/Scene.ts",
    "lib/lib/display/Shape.ts",
    "lib/lib/display/Skybox.ts",
    "lib/lib/display/Sprite.ts",
    "lib/lib/display/TextField.ts",
    "lib/display.ts",
    "lib/lib/draw/CapsStyle.ts",
    "lib/lib/draw/GradientType.ts",
    "lib/lib/draw/GraphicsFactoryFills.ts",
    "lib/lib/draw/GraphicsFactoryHelper.ts",
    "lib/lib/draw/GraphicsFactoryStrokes.ts",
    "lib/lib/draw/GraphicsFillStyle.ts",
    "lib/lib/draw/GraphicsPathCommand.ts",
    "lib/lib/draw/GraphicsPathWinding.ts",
    "lib/lib/draw/GraphicsPath.ts",
    "lib/lib/draw/GraphicsStrokeStyle.ts",
    "lib/lib/draw/InterpolationMethod.ts",
    "lib/lib/draw/JointStyle.ts",
    "lib/lib/draw/LineScaleMode.ts",
    "lib/lib/draw/PixelSnapping.ts",
    "lib/lib/draw/SpreadMethod.ts",
    "lib/lib/draw/TriangleCulling.ts",
    "lib/draw.ts",
    "lib/lib/errors/CastError.ts",
    "lib/errors.ts",
    "lib/lib/events/CameraEvent.ts",
    "lib/lib/events/DisplayObjectEvent.ts",
    "lib/lib/events/ElementsEvent.ts",
    "lib/lib/events/LightEvent.ts",
    "lib/lib/events/MouseEvent.ts",
    "lib/lib/events/RenderableEvent.ts",
    "lib/lib/events/RendererEvent.ts",
    "lib/lib/events/ResizeEvent.ts",
    "lib/lib/events/StyleEvent.ts",
    "lib/lib/events/SurfaceEvent.ts",
    "lib/lib/events/TouchEvent.ts",
    "lib/lib/events/TransformEvent.ts",
    "lib/events.ts",
    "lib/lib/graphics/ElementsBase.ts",
    "lib/lib/graphics/ElementsType.ts",
    "lib/lib/graphics/Graphics.ts",
    "lib/lib/graphics/Graphic.ts",
    "lib/lib/graphics/HitTestCache.ts",
    "lib/lib/graphics/LineElements.ts",
    "lib/lib/graphics/TriangleElements.ts",
    "lib/graphics.ts",
    "lib/lib/managers/DefaultMaterialManager.ts",
    "lib/lib/managers/FrameScriptManager.ts",
    "lib/lib/managers/MouseManager.ts",
    "lib/lib/managers/TouchManager.ts",
    "lib/managers.ts",
    "lib/lib/materials/BasicMaterial.ts",
    "lib/lib/materials/LightSources.ts",
    "lib/lib/materials/MaterialBase.ts",
    "lib/materials/lib/materials/lightpickers/LightPickerBase.ts",
    "lib/materials/lib/materials/lightpickers/StaticLightPicker.ts",
    "lib/materials/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "lib/materials.ts",
    "lib/lib/partition/BasicPartition.ts",
    "lib/lib/partition/CameraNode.ts",
    "lib/lib/partition/DirectionalLightNode.ts",
    "lib/lib/partition/DisplayObjectNode.ts",
    "lib/lib/partition/EntityNode.ts",
    "lib/lib/partition/LightProbeNode.ts",
    "lib/lib/partition/NodeBase.ts",
    "lib/lib/partition/PartitionBase.ts",
    "lib/lib/partition/PointLightNode.ts",
    "lib/lib/partition/SceneGraphNode.ts",
    "lib/lib/partition/SceneGraphPartition.ts",
    "lib/lib/partition/SkyboxNode.ts",
    "lib/partition.ts",
    "lib/lib/pick/JSPickingCollider.ts",
    "lib/lib/pick/PickingCollision.ts",
    "lib/lib/pick/RaycastPicker.ts",
    "lib/pick.ts",
    "lib/lib/prefabs/PrefabBase.ts",
    "lib/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "lib/lib/prefabs/PrimitiveConePrefab.ts",
    "lib/lib/prefabs/PrimitiveCubePrefab.ts",
    "lib/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "lib/lib/prefabs/PrimitivePlanePrefab.ts",
    "lib/lib/prefabs/PrimitivePolygonPrefab.ts",
    "lib/lib/prefabs/PrimitivePrefabBase.ts",
    "lib/lib/prefabs/PrimitiveSpherePrefab.ts",
    "lib/lib/prefabs/PrimitiveTorusPrefab.ts",
    "lib/prefabs.ts",
    "lib/lib/text/AntiAliasType.ts",
    "lib/lib/text/Font.ts",
    "lib/lib/text/GridFitType.ts",
    "lib/lib/text/TesselatedFontChar.ts",
    "lib/lib/text/TesselatedFontTable.ts",
    "lib/lib/text/TextFieldAutoSize.ts",
    "lib/lib/text/TextFieldType.ts",
    "lib/lib/text/TextFormatAlign.ts",
    "lib/lib/text/TextFormat.ts",
    "lib/lib/text/TextInteractionMode.ts",
    "lib/lib/text/TextLineMetrics.ts",
    "lib/text.ts",
    "lib/lib/textures/MappingMode.ts",
    "lib/lib/textures/Single2DTexture.ts",
    "lib/lib/textures/SingleCubeTexture.ts",
    "lib/lib/textures/TextureBase.ts",
    "lib/textures.ts",
    "lib/lib/utils/Cast.ts",
    "lib/lib/utils/ElementsUtils.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "adapters",
    "animators",
    "base",
    "bounds",
    "controllers",
    "display",
    "draw",
    "errors",
    "events",
    "factories",
    "graphics",
    "managers",
    "materials",
    "partition",
    "pick",
    "prefabs",
    "text",
    "textures",
    "utils",
    "View_1",
    "View",
    "PartitionBase",
    "registerAbstraction",
    "CameraNode",
    "Camera",
    "DirectionalLightNode",
    "DirectionalLight",
    "EntityNode",
    "Sprite",
    "Shape",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "LightProbeNode",
    "LightProbe",
    "PointLightNode",
    "PointLight",
    "SkyboxNode",
    "Skybox",
    "./lib/View",
    "./lib/adapters",
    "./lib/animators",
    "./lib/base",
    "./lib/bounds",
    "./lib/controllers",
    "./lib/display",
    "./lib/draw",
    "./lib/errors",
    "./lib/events",
    "./lib/factories",
    "./lib/graphics",
    "./lib/managers",
    "./lib/materials",
    "./lib/partition",
    "./lib/pick",
    "./lib/prefabs",
    "./lib/text",
    "./lib/textures",
    "./lib/utils",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "awayjs-display/lib/View",
    "getTimer_1",
    "TouchPoint_1",
    "Scene_1",
    "RaycastPicker_1",
    "Camera_1",
    "CameraEvent_1",
    "DisplayObjectEvent_1",
    "RendererEvent_1",
    "MouseManager_1",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "RaycastPicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "Scene",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "MouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "TouchPoint",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "RendererEvent",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "CameraEvent",
    "PROJECTION_CHANGED",
    "_pScene",
    "_iRegisterEntity",
    "DisplayObjectEvent",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "getTimer",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "./base/TouchPoint",
    "./display/Camera",
    "./display/Scene",
    "./events/CameraEvent",
    "./events/DisplayObjectEvent",
    "./events/RendererEvent",
    "./managers/MouseManager",
    "./pick/RaycastPicker",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/adapters",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "default",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "create",
    "AssetBase_1",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "AssetBase",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/animators",
    "ParticleData_1",
    "AnimationNodeBase_1",
    "./animators/data/ParticleData",
    "./animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher_1",
    "StyleEvent_1",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "StyleEvent",
    "INVALIDATE_PROPERTIES",
    "EventDispatcher",
    "../events/StyleEvent",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/base/Timeline",
    "HierarchicalProperties_1",
    "ColorTransform_1",
    "FrameScriptManager_1",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "FrameScriptManager",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "ColorTransform",
    "properties_stream_f32_ct",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "../base/HierarchicalProperties",
    "../managers/FrameScriptManager",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/base/TouchPoint",
    "awayjs-display/lib/base/Transform",
    "Matrix3D_1",
    "Matrix3DUtils_1",
    "Vector3D_1",
    "TransformEvent_1",
    "Transform",
    "_matrix3D",
    "Matrix3D",
    "_rotation",
    "Vector3D",
    "_skew",
    "_scale",
    "_components",
    "director",
    "Matrix3DUtils",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "TransformEvent",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "../events/TransformEvent",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base",
    "AlignmentMode_1",
    "OrientationMode_1",
    "Style_1",
    "Timeline_1",
    "Transform_1",
    "./base/AlignmentMode",
    "./base/HierarchicalProperties",
    "./base/OrientationMode",
    "./base/Style",
    "./base/Timeline",
    "./base/Transform",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification_1",
    "ElementsType_1",
    "BoundingVolumeBase_1",
    "PrimitiveCubePrefab_1",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "PlaneClassification",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "PrimitiveCubePrefab",
    "ElementsType",
    "LINE",
    "getNewObject",
    "BoundingVolumeBase",
    "../bounds/BoundingVolumeBase",
    "../graphics/ElementsType",
    "../prefabs/PrimitiveCubePrefab",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab_1",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "PrimitiveSpherePrefab",
    "../prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "AbstractMethodError_1",
    "AbstractMethodError",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/bounds",
    "AxisAlignedBoundingBox_1",
    "BoundingSphere_1",
    "BoundsType_1",
    "NullBounds_1",
    "./bounds/AxisAlignedBoundingBox",
    "./bounds/BoundingSphere",
    "./bounds/BoundingVolumeBase",
    "./bounds/BoundsType",
    "./bounds/NullBounds",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts_1",
    "ControllerBase_1",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "MathConsts",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "../controllers/ControllerBase",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController_1",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "HoverController",
    "../controllers/HoverController",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController_1",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "LookAtController",
    "../controllers/LookAtController",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "../events/DisplayObjectEvent",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "awayjs-display/lib/controllers",
    "FirstPersonController_1",
    "FollowController_1",
    "SpringController_1",
    "./controllers/ControllerBase",
    "./controllers/FirstPersonController",
    "./controllers/FollowController",
    "./controllers/HoverController",
    "./controllers/LookAtController",
    "./controllers/SpringController",
    "awayjs-display/lib/display/Billboard",
    "Rectangle_1",
    "DisplayObject_1",
    "RenderableEvent_1",
    "SurfaceEvent_1",
    "DefaultMaterialManager_1",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "SurfaceEvent",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "DefaultMaterialManager",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "Rectangle",
    "_pInvalidateBounds",
    "invalidateElements",
    "RenderableEvent",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_SURFACE",
    "DisplayObject",
    "../bounds/BoundsType",
    "../display/DisplayObject",
    "../events/RenderableEvent",
    "../events/SurfaceEvent",
    "../managers/DefaultMaterialManager",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/Camera",
    "Plane3D_1",
    "ProjectionEvent_1",
    "PerspectiveProjection_1",
    "DisplayObjectContainer_1",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "PerspectiveProjection",
    "ProjectionEvent",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "Plane3D",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "DisplayObjectContainer",
    "../display/DisplayObjectContainer",
    "../events/CameraEvent",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DirectionalLight",
    "LightBase_1",
    "DirectionalShadowMapper_1",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "DirectionalShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "LightBase",
    "../display/LightBase",
    "../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "ArgumentError_1",
    "RangeError_1",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "ArgumentError",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "_invalidateChildren",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "RangeError",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setBoundIdentity",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "_pIsContainer",
    "_pImplicitPartition",
    "_iUnregisterEntity",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/display/DisplayObject",
    "Box_1",
    "Sphere_1",
    "Point_1",
    "PickingCollision_1",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "alphaMultiplier",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "Point",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pickingCollision",
    "PickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "Box",
    "Sphere",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "../base/AlignmentMode",
    "../base/OrientationMode",
    "../base/Transform",
    "../pick/PickingCollision",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/display/IEntity",
    "awayjs-display/lib/display/LightBase",
    "LightEvent_1",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "LightEvent",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "../events/LightEvent",
    "awayjs-display/lib/display/LightProbe",
    "SamplerCube_1",
    "ErrorBase_1",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "SamplerCube",
    "specularSampler",
    "ErrorBase",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-display/lib/display/LineSegment",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle_1",
    "Loader_1",
    "AssetEvent_1",
    "URLLoaderEvent_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "AssetLibraryBundle",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "Loader",
    "LoaderEvent",
    "LOAD_COMPLETE",
    "AssetEvent",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "URLLoaderEvent",
    "LOAD_ERROR",
    "ParserEvent",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/display/MovieClip",
    "Sprite_1",
    "TextField_1",
    "MouseEvent_1",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MouseEvent",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "../base/Timeline",
    "../display/Sprite",
    "../display/TextField",
    "../events/MouseEvent",
    "awayjs-display/lib/display/PointLight",
    "CubeMapShadowMapper_1",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "CubeMapShadowMapper",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "../materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/display/Scene",
    "BasicPartition_1",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "BasicPartition",
    "traversePartitions",
    "traverse",
    "../partition/BasicPartition",
    "awayjs-display/lib/display/Shape",
    "Graphics_1",
    "_tempPoint",
    "_onGraphicsInvalidateDelegate",
    "_onGraphicsInvalidate",
    "_graphics",
    "Graphics",
    "INVALIDATE",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "count",
    "acceptTraverser",
    "local",
    "../graphics/Graphics",
    "awayjs-display/lib/display/Skybox",
    "BlendMode_1",
    "SingleCubeTexture_1",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "BlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "SingleCubeTexture",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "../base/Style",
    "../textures/SingleCubeTexture",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/display/Sprite",
    "_sprites",
    "sprite",
    "awayjs-display/lib/display/TextField",
    "AttributesView_1",
    "Float2Attributes_1",
    "Byte4Attributes_1",
    "Matrix_1",
    "Sampler2D_1",
    "TextFieldType_1",
    "TriangleElements_1",
    "_text",
    "TextFieldType",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textElements",
    "_textFields",
    "_textGraphic",
    "numVertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "letterSpacing",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "final_lines_justify_bool",
    "final_lines_justify",
    "maxlineWidth",
    "textWidth",
    "leftMargin",
    "rightMargin",
    "indent",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "fw",
    "ascent",
    "vertices",
    "Float32Array",
    "x_offset",
    "justify_addion",
    "align",
    "buffer",
    "concatenatedBuffer",
    "descent",
    "leading",
    "attributesView",
    "AttributesView",
    "vertexBuffer",
    "TriangleElements",
    "setPositions",
    "Float2Attributes",
    "setCustomAttributes",
    "Byte4Attributes",
    "addGraphic",
    "Sampler2D",
    "uvMatrix",
    "Matrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "../graphics/TriangleElements",
    "../text/TextFieldType",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/display",
    "Billboard_1",
    "DirectionalLight_1",
    "LightProbe_1",
    "LineSegment_1",
    "LoaderContainer_1",
    "MovieClip_1",
    "PointLight_1",
    "Shape_1",
    "Skybox_1",
    "./display/Billboard",
    "./display/DirectionalLight",
    "./display/DisplayObject",
    "./display/DisplayObjectContainer",
    "./display/LightBase",
    "./display/LightProbe",
    "./display/LineSegment",
    "./display/LoaderContainer",
    "./display/MovieClip",
    "./display/PointLight",
    "./display/Shape",
    "./display/Skybox",
    "./display/Sprite",
    "./display/TextField",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsFactoryFills",
    "GraphicsPathCommand_1",
    "Float3Attributes_1",
    "GraphicsFactoryHelper_1",
    "GraphicsFactoryFills",
    "draw_pathes",
    "targetGraphic",
    "queued_fill_pathes",
    "cp",
    "one_path",
    "contour_commands",
    "commands",
    "contour_data",
    "vert_cnt",
    "data_cnt",
    "draw_direction",
    "contours_vertices",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "last_dir_vec",
    "end_point",
    "new_dir",
    "new_dir_1",
    "new_dir_2",
    "dir_delta",
    "last_direction",
    "tmp_dir_point",
    "GraphicsPathCommand",
    "LINE_TO",
    "CURVE_TO",
    "atan2",
    "MOVE_TO",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "curve_direction",
    "curve_attr_1",
    "GraphicsFactoryHelper",
    "isClockWiseXY",
    "CUBIC_CURVE",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "verticesF32",
    "_tess_obj",
    "addContour",
    "tesselate",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "Float3Attributes",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "thisGraphic",
    "../draw/GraphicsFactoryHelper",
    "../draw/GraphicsPathCommand",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/draw/GraphicsFactoryHelper",
    "CapsStyle_1",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "num",
    "getSign",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "getControlXForCurveX",
    "getControlYForCurveY",
    "drawPoint",
    "startX",
    "startY",
    "addTriangle",
    "controlX",
    "controlY",
    "endX",
    "endY",
    "tri_type",
    "createCap",
    "start_le",
    "start_ri",
    "dir_vec",
    "capstyle",
    "cap_position",
    "tmp1_x",
    "tmp1_y",
    "tmp2_x",
    "tmp2_y",
    "getLineFormularData",
    "tmp_x",
    "tmp_y",
    "return_point",
    "getQuadricBezierPosition",
    "start",
    "control",
    "end",
    "xt",
    "subdivideCurve",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "angle_1",
    "angle_2",
    "angle_delta",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "../draw/CapsStyle",
    "awayjs-display/lib/draw/GraphicsFactoryStrokes",
    "JointStyle_1",
    "GraphicsFactoryStrokes",
    "queued_stroke_pathes",
    "strokeStyle",
    "start_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "tmp_point3",
    "closed",
    "stroke",
    "tessVerts",
    "new_cmds",
    "new_pnts",
    "new_cmds_cnt",
    "new_pnts_cnt",
    "prev_normal",
    "le_point",
    "curve_end_point",
    "ri_point",
    "ctr_point",
    "half_thickness",
    "add_segment",
    "half_angle",
    "merged_pnt_ri",
    "merged_pnt_le",
    "contour_le",
    "contour_prev_le",
    "contour_ri",
    "contour_prev_ri",
    "addJoints",
    "jointstyle",
    "JointStyle",
    "MITER",
    "distance_miter",
    "miter_limit",
    "BUILD_JOINT",
    "BUILD_ROUND_JOINT",
    "NO_OP",
    "length1",
    "length2",
    "length_calc",
    "dirNumber",
    "lengthpos",
    "curve_x",
    "curve_y",
    "curve_2x",
    "curve_2y",
    "subdivided",
    "subdivided2",
    "sc",
    "../draw/JointStyle",
    "awayjs-display/lib/draw/GraphicsFillStyle",
    "GraphicsFillStyle",
    "alpha",
    "_alpha",
    "data_type",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPathWinding_1",
    "GraphicsFillStyle_1",
    "GraphicsStrokeStyle_1",
    "GraphicsPath",
    "winding_rule",
    "_data",
    "_commands",
    "_startPoint",
    "_cur_point",
    "_winding_rule",
    "_winding_directions",
    "fill",
    "GraphicsStrokeStyle",
    "curveTo",
    "anchorX",
    "anchorY",
    "lineTo",
    "wideLineTo",
    "wideMoveTo",
    "../draw/GraphicsFillStyle",
    "../draw/GraphicsPathWinding",
    "../draw/GraphicsStrokeStyle",
    "awayjs-display/lib/draw/GraphicsStrokeStyle",
    "_thickness",
    "_jointstyle",
    "_capstyle",
    "_miter_limit",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "BEVEL",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/draw",
    "GradientType_1",
    "GraphicsFactoryFills_1",
    "GraphicsFactoryStrokes_1",
    "GraphicsPath_1",
    "InterpolationMethod_1",
    "LineScaleMode_1",
    "PixelSnapping_1",
    "SpreadMethod_1",
    "TriangleCulling_1",
    "./draw/CapsStyle",
    "./draw/GradientType",
    "./draw/GraphicsFactoryFills",
    "./draw/GraphicsFactoryHelper",
    "./draw/GraphicsFactoryStrokes",
    "./draw/GraphicsFillStyle",
    "./draw/GraphicsPath",
    "./draw/GraphicsPathCommand",
    "./draw/GraphicsPathWinding",
    "./draw/GraphicsStrokeStyle",
    "./draw/InterpolationMethod",
    "./draw/JointStyle",
    "./draw/LineScaleMode",
    "./draw/PixelSnapping",
    "./draw/SpreadMethod",
    "./draw/TriangleCulling",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "awayjs-display/lib/errors",
    "CastError_1",
    "./errors/CastError",
    "awayjs-display/lib/events/CameraEvent",
    "EventBase_1",
    "_camera",
    "EventBase",
    "awayjs-core/lib/events/EventBase",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/events/MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableEvent",
    "_renderable",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "NaN",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/events",
    "ElementsEvent_1",
    "ResizeEvent_1",
    "TouchEvent_1",
    "./events/ElementsEvent",
    "./events/LightEvent",
    "./events/MouseEvent",
    "./events/RenderableEvent",
    "./events/ResizeEvent",
    "./events/StyleEvent",
    "./events/SurfaceEvent",
    "./events/TouchEvent",
    "./events/TransformEvent",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/factories",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes_1",
    "ElementsBase",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_numVertices",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "getCustomAtributes",
    "indices",
    "setIndices",
    "values",
    "offset",
    "Short3Attributes",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "../events/ElementsEvent",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/graphics/ElementsType",
    "TRIANGLE",
    "awayjs-display/lib/graphics/Graphics",
    "Graphic_1",
    "PartialImplementationError_1",
    "_current_position",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "Graphic",
    "_available",
    "_iIndex",
    "parent",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setEmpty",
    "positions",
    "draw_fills",
    "draw_strokes",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "PartialImplementationError",
    "drawCircle",
    "radius2",
    "degree",
    "PI",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "drawTriangles",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "miterLimit",
    "../draw/GraphicsFactoryFills",
    "../draw/GraphicsFactoryStrokes",
    "../draw/GraphicsPath",
    "../graphics/Graphic",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/graphics/Graphic",
    "_elements",
    "awayjs-display/lib/graphics/HitTestCache",
    "HitTestCache",
    "cells",
    "lastCollisionIndex",
    "awayjs-display/lib/graphics/LineElements",
    "Float1Attributes_1",
    "ElementsBase_1",
    "ElementsUtils_1",
    "LineElements",
    "_positions",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "Float1Attributes",
    "floor",
    "Uint8Array",
    "ElementsUtils",
    "generateColors",
    "testLineCollision",
    "../graphics/ElementsBase",
    "../utils/ElementsUtils",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/graphics/TriangleElements",
    "apply",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "hitTestCache",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "hitTestTriangleElements",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/graphics",
    "LineElements_1",
    "./graphics/ElementsBase",
    "./graphics/ElementsType",
    "./graphics/Graphic",
    "./graphics/Graphics",
    "./graphics/LineElements",
    "./graphics/TriangleElements",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D_1",
    "BitmapImageCube_1",
    "BasicMaterial_1",
    "Single2DTexture_1",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "Single2DTexture",
    "BitmapImageCube",
    "BitmapImage2D",
    "setPixel",
    "BasicMaterial",
    "../display/Skybox",
    "../graphics/LineElements",
    "../materials/BasicMaterial",
    "../textures/Single2DTexture",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/managers/FrameScriptManager",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "awayjs-display/lib/managers/MouseManager",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "../base/TouchPoint",
    "awayjs-display/lib/managers/TouchManager",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "../events/TouchEvent",
    "awayjs-display/lib/managers",
    "TouchManager_1",
    "./managers/DefaultMaterialManager",
    "./managers/FrameScriptManager",
    "./managers/TouchManager",
    "awayjs-display/lib/materials/BasicMaterial",
    "Image2D_1",
    "MaterialBase_1",
    "imageColor",
    "_preserveAlpha",
    "Image2D",
    "invalidateTexture",
    "MaterialBase",
    "../materials/MaterialBase",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "awayjs-display/lib/materials/MaterialBase",
    "ImageBase_1",
    "_pUseColorTransform",
    "_alphaBlending",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "ImageBase",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "LightPickerBase_1",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "../../display/DirectionalLight",
    "../../display/LightProbe",
    "../../display/PointLight",
    "../../events/LightEvent",
    "../../materials/lightpickers/LightPickerBase",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection_1",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "FreeMatrixProjection",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "../../display/Camera",
    "../../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "ImageCube_1",
    "ShadowMapperBase_1",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "ImageCube",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "ShadowMapperBase",
    "../../materials/shadowmappers/ShadowMapperBase",
    "../../textures/SingleCubeTexture",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "../../textures/Single2DTexture",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "awayjs-display/lib/materials",
    "StaticLightPicker_1",
    "CascadeShadowMapper_1",
    "NearDirectionalShadowMapper_1",
    "LightSources_1",
    "./materials/BasicMaterial",
    "./materials/LightSources",
    "./materials/MaterialBase",
    "./materials/lightpickers/LightPickerBase",
    "./materials/lightpickers/StaticLightPicker",
    "./materials/shadowmappers/CascadeShadowMapper",
    "./materials/shadowmappers/CubeMapShadowMapper",
    "./materials/shadowmappers/DirectionalShadowMapper",
    "./materials/shadowmappers/NearDirectionalShadowMapper",
    "./materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/partition/BasicPartition",
    "NodeBase_1",
    "PartitionBase_1",
    "_rootNode",
    "NodeBase",
    "../partition/NodeBase",
    "../partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode_1",
    "../partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase_1",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "isMask",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "isRenderable",
    "AbstractionBase",
    "../bounds/AxisAlignedBoundingBox",
    "../bounds/BoundingSphere",
    "../bounds/NullBounds",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/partition/EntityNode",
    "DisplayObjectNode_1",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "_isRenderable",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "../partition/DisplayObjectNode",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "applyLightProbe",
    "awayjs-display/lib/partition/NodeBase",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "awayjs-display/lib/partition/PartitionBase",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "awayjs-display/lib/partition/PointLightNode",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_numNodes",
    "_childDepths",
    "_numMasks",
    "_childMasks",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNode_1",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "../partition/SceneGraphNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/partition",
    "CameraNode_1",
    "DirectionalLightNode_1",
    "LightProbeNode_1",
    "PointLightNode_1",
    "SceneGraphPartition_1",
    "SkyboxNode_1",
    "./partition/BasicPartition",
    "./partition/CameraNode",
    "./partition/DirectionalLightNode",
    "./partition/DisplayObjectNode",
    "./partition/EntityNode",
    "./partition/LightProbeNode",
    "./partition/NodeBase",
    "./partition/PartitionBase",
    "./partition/PointLightNode",
    "./partition/SceneGraphNode",
    "./partition/SceneGraphPartition",
    "./partition/SkyboxNode",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "awayjs-display/lib/pick/PickingCollision",
    "awayjs-display/lib/pick/RaycastPicker",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "applySkybox",
    "awayjs-display/lib/pick",
    "JSPickingCollider_1",
    "./pick/JSPickingCollider",
    "./pick/PickingCollision",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase_1",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "PrimitivePrefabBase",
    "../prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab_1",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "PrimitiveCylinderPrefab",
    "../prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "AttributesBuffer_1",
    "PrefabBase_1",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "AttributesBuffer",
    "updateGraphics",
    "updateUVs",
    "../prefabs/PrefabBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/prefabs",
    "PrimitiveCapsulePrefab_1",
    "PrimitiveConePrefab_1",
    "PrimitivePlanePrefab_1",
    "PrimitivePolygonPrefab_1",
    "PrimitiveTorusPrefab_1",
    "./prefabs/PrefabBase",
    "./prefabs/PrimitiveCapsulePrefab",
    "./prefabs/PrimitiveConePrefab",
    "./prefabs/PrimitiveCubePrefab",
    "./prefabs/PrimitiveCylinderPrefab",
    "./prefabs/PrimitivePlanePrefab",
    "./prefabs/PrimitivePolygonPrefab",
    "./prefabs/PrimitivePrefabBase",
    "./prefabs/PrimitiveSpherePrefab",
    "./prefabs/PrimitiveTorusPrefab",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "TesselatedFontTable_1",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "TesselatedFontTable",
    "../text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "awayjs-display/lib/text/TesselatedFontTable",
    "TesselatedFontChar_1",
    "_font_chars",
    "_font_chars_dic",
    "_ascent",
    "_descent",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "../text/TesselatedFontChar",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "awayjs-display/lib/text",
    "AntiAliasType_1",
    "Font_1",
    "GridFitType_1",
    "TextFieldAutoSize_1",
    "TextFormat_1",
    "TextFormatAlign_1",
    "TextInteractionMode_1",
    "TextLineMetrics_1",
    "./text/AntiAliasType",
    "./text/Font",
    "./text/GridFitType",
    "./text/TesselatedFontChar",
    "./text/TesselatedFontTable",
    "./text/TextFieldAutoSize",
    "./text/TextFieldType",
    "./text/TextFormat",
    "./text/TextFormatAlign",
    "./text/TextInteractionMode",
    "./text/TextLineMetrics",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "awayjs-display/lib/textures/Single2DTexture",
    "ImageUtils_1",
    "MappingMode_1",
    "TextureBase_1",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "ImageUtils",
    "isImage2DValid",
    "setImageAt",
    "TextureBase",
    "../textures/MappingMode",
    "../textures/TextureBase",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/textures",
    "./textures/MappingMode",
    "./textures/Single2DTexture",
    "./textures/SingleCubeTexture",
    "./textures/TextureBase",
    "awayjs-display/lib/utils/Cast",
    "ByteArray_1",
    "Cast",
    "string",
    "byteArray",
    "ByteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "../errors/CastError",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-display/lib/utils/ElementsUtils",
    "Float4Attributes_1",
    "HitTestCache_1",
    "indexAttributes",
    "positionAttributes",
    "output",
    "Float4Attributes",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvey0",
    "curvey1",
    "curvey2",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "../graphics/HitTestCache",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/utils",
    "Cast_1",
    "./utils/Cast",
    "./utils/ElementsUtils"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar adapters = require(\"./lib/adapters\");\nexports.adapters = adapters;\nvar animators = require(\"./lib/animators\");\nexports.animators = animators;\nvar base = require(\"./lib/base\");\nexports.base = base;\nvar bounds = require(\"./lib/bounds\");\nexports.bounds = bounds;\nvar controllers = require(\"./lib/controllers\");\nexports.controllers = controllers;\nvar display = require(\"./lib/display\");\nexports.display = display;\nvar draw = require(\"./lib/draw\");\nexports.draw = draw;\nvar errors = require(\"./lib/errors\");\nexports.errors = errors;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar factories = require(\"./lib/factories\");\nexports.factories = factories;\nvar graphics = require(\"./lib/graphics\");\nexports.graphics = graphics;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar materials = require(\"./lib/materials\");\nexports.materials = materials;\nvar partition = require(\"./lib/partition\");\nexports.partition = partition;\nvar pick = require(\"./lib/pick\");\nexports.pick = pick;\nvar prefabs = require(\"./lib/prefabs\");\nexports.prefabs = prefabs;\nvar text = require(\"./lib/text\");\nexports.text = text;\nvar textures = require(\"./lib/textures\");\nexports.textures = textures;\nvar utils = require(\"./lib/utils\");\nexports.utils = utils;\nvar View_1 = require(\"./lib/View\");\nexports.View = View_1.View;\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\n},{\"./lib/View\":\"awayjs-display/lib/View\",\"./lib/adapters\":\"awayjs-display/lib/adapters\",\"./lib/animators\":\"awayjs-display/lib/animators\",\"./lib/base\":\"awayjs-display/lib/base\",\"./lib/bounds\":\"awayjs-display/lib/bounds\",\"./lib/controllers\":\"awayjs-display/lib/controllers\",\"./lib/display\":\"awayjs-display/lib/display\",\"./lib/draw\":\"awayjs-display/lib/draw\",\"./lib/errors\":\"awayjs-display/lib/errors\",\"./lib/events\":\"awayjs-display/lib/events\",\"./lib/factories\":\"awayjs-display/lib/factories\",\"./lib/graphics\":\"awayjs-display/lib/graphics\",\"./lib/managers\":\"awayjs-display/lib/managers\",\"./lib/materials\":\"awayjs-display/lib/materials\",\"./lib/partition\":\"awayjs-display/lib/partition\",\"./lib/pick\":\"awayjs-display/lib/pick\",\"./lib/prefabs\":\"awayjs-display/lib/prefabs\",\"./lib/text\":\"awayjs-display/lib/text\",\"./lib/textures\":\"awayjs-display/lib/textures\",\"./lib/utils\":\"awayjs-display/lib/utils\"}],\"awayjs-display/lib/IRenderer\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/ITraverser\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/View\":[function(require,module,exports){\n\"use strict\";\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\nvar Scene_1 = require(\"./display/Scene\");\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\nvar Camera_1 = require(\"./display/Camera\");\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\nvar MouseManager_1 = require(\"./managers/MouseManager\");\nvar View = (function () {\n    /*\n     ***********************************************************************\n     * Disabled / Not yet implemented\n     ***********************************************************************\n     *\n     * private _background:away.textures.Texture2DBase;\n     *\n     * public _pTouch3DManager:away.managers.Touch3DManager;\n     *\n     */\n    function View(renderer, scene, camera) {\n        var _this = this;\n        if (scene === void 0) { scene = null; }\n        if (camera === void 0) { camera = null; }\n        this._width = 0;\n        this._height = 0;\n        this._time = 0;\n        this._deltaTime = 0;\n        this._backgroundColor = 0x000000;\n        this._backgroundAlpha = 1;\n        this._viewportDirty = true;\n        this._scissorDirty = true;\n        this._mousePicker = new RaycastPicker_1.RaycastPicker();\n        this._pTouchPoints = new Array();\n        this._onPartitionChangedDelegate = function (event) { return _this._onPartitionChanged(event); };\n        this._onProjectionChangedDelegate = function (event) { return _this._onProjectionChanged(event); };\n        this._onViewportUpdatedDelegate = function (event) { return _this._onViewportUpdated(event); };\n        this._onScissorUpdatedDelegate = function (event) { return _this._onScissorUpdated(event); };\n        this.scene = scene || new Scene_1.Scene();\n        this.camera = camera || new Camera_1.Camera();\n        this.renderer = renderer;\n        //make sure document border is zero\n        if (document) {\n            document.body.style.margin = \"0px\";\n            this._htmlElement = document.createElement(\"div\");\n            this._htmlElement.style.position = \"absolute\";\n            document.body.appendChild(this._htmlElement);\n        }\n        this._mouseManager = MouseManager_1.MouseManager.getInstance();\n        this._mouseManager.registerView(this);\n        //\t\t\tif (this._shareContext)\n        //\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n    }\n    Object.defineProperty(View.prototype, \"mouseX\", {\n        get: function () {\n            return this._pMouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mouseY\", {\n        get: function () {\n            return this._pMouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"touchPoints\", {\n        get: function () {\n            return this._pTouchPoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.prototype.getLocalMouseX = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n    };\n    View.prototype.getLocalMouseY = function (displayObject) {\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n    };\n    View.prototype.getLocalTouchPoints = function (displayObject) {\n        var localPosition;\n        var localTouchPoints = new Array();\n        var len = this._pTouchPoints.length;\n        for (var i = 0; i < len; i++) {\n            localPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n            localTouchPoints.push(new TouchPoint_1.TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n        }\n        return localTouchPoints;\n    };\n    Object.defineProperty(View.prototype, \"htmlElement\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._htmlElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer;\n        },\n        set: function (value) {\n            if (this._pRenderer == value)\n                return;\n            if (this._pRenderer) {\n                this._pRenderer.dispose();\n                this._pRenderer.removeEventListener(RendererEvent_1.RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n                this._pRenderer.removeEventListener(RendererEvent_1.RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            }\n            this._pRenderer = value;\n            this._pRenderer.addEventListener(RendererEvent_1.RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n            this._pRenderer.addEventListener(RendererEvent_1.RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n            //reset back buffer\n            this._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (this._backgroundColor & 0xff) / 0xff;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n            this._pRenderer.width = this._width;\n            this._pRenderer.height = this._height;\n            this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"shareContext\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shareContext;\n        },\n        set: function (value) {\n            if (this._shareContext == value)\n                return;\n            this._shareContext = value;\n            if (this._pRenderer)\n                this._pRenderer.shareContext = this._shareContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundColor\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._backgroundColor;\n        },\n        set: function (value) {\n            if (this._backgroundColor == value)\n                return;\n            this._backgroundColor = value;\n            this._pRenderer._iBackgroundR = ((value >> 16) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundG = ((value >> 8) & 0xff) / 0xff;\n            this._pRenderer._iBackgroundB = (value & 0xff) / 0xff;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"backgroundAlpha\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._backgroundAlpha;\n        },\n        /**\n         *\n         * @param value\n         */\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._backgroundAlpha == value)\n                return;\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"camera\", {\n        /**\n         *\n         * @returns {Camera3D}\n         */\n        get: function () {\n            return this._pCamera;\n        },\n        /**\n         * Set camera that's used to render the scene for this viewport\n         */\n        set: function (value) {\n            if (this._pCamera == value)\n                return;\n            if (this._pCamera)\n                this._pCamera.removeEventListener(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._pCamera = value;\n            if (this._pScene)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n            this._pCamera.addEventListener(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n            this._scissorDirty = true;\n            this._viewportDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"scene\", {\n        /**\n         *\n         * @returns {away.containers.Scene3D}\n         */\n        get: function () {\n            return this._pScene;\n        },\n        /**\n         * Set the scene that's used to render for this viewport\n         */\n        set: function (value) {\n            if (this._pScene == value)\n                return;\n            if (this._pScene)\n                this._pScene.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            this._pScene = value;\n            this._pScene.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n            if (this._pCamera)\n                this._pScene.partition._iRegisterEntity(this._pCamera);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"deltaTime\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return this._deltaTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"width\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            if (this._width == value)\n                return;\n            this._width = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.width = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.width = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"height\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            if (this._height == value)\n                return;\n            this._height = value;\n            this._aspectRatio = this._width / this._height;\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\n            this._pRenderer.height = value;\n            if (this._htmlElement) {\n                this._htmlElement.style.height = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"mousePicker\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._mousePicker;\n        },\n        set: function (value) {\n            if (this._mousePicker == value)\n                return;\n            if (value == null)\n                this._mousePicker = new RaycastPicker_1.RaycastPicker();\n            else\n                this._mousePicker = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"x\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.x;\n        },\n        set: function (value) {\n            if (this._pRenderer.x == value)\n                return;\n            this._pRenderer.x == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.left = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"y\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pRenderer.y;\n        },\n        set: function (value) {\n            if (this._pRenderer.y == value)\n                return;\n            this._pRenderer.y == value;\n            if (this._htmlElement) {\n                this._htmlElement.style.top = value + \"px\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"visible\", {\n        /**\n         *\n         */\n        get: function () {\n            return (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n        },\n        set: function (value) {\n            if (this._htmlElement) {\n                this._htmlElement.style.visibility = value ? \"visible\" : \"hidden\";\n            }\n            //TODO transfer visible property to associated context (if one exists)\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(View.prototype, \"renderedFacesCount\", {\n        /**\n         *\n         * @returns {number}\n         */\n        get: function () {\n            return 0; //TODO\n            //return this._pEntityCollector._pNumTriangles;//numTriangles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Renders the view.\n     */\n    View.prototype.render = function () {\n        this.pUpdateTime();\n        //update view and size data\n        this._pCamera.projection._iAspectRatio = this._aspectRatio;\n        if (this._scissorDirty) {\n            this._scissorDirty = false;\n            this._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n        }\n        if (this._viewportDirty) {\n            this._viewportDirty = false;\n            this._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n        }\n        // update picking\n        if (!this._shareContext) {\n            if (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            this._mouseManager.fireMouseEvents(this.forceMouseMove);\n        }\n        //_touch3DManager.updateCollider();\n        //render the contents of the scene\n        this._pRenderer.render(this._pCamera, this._pScene);\n    };\n    /**\n     *\n     */\n    View.prototype.pUpdateTime = function () {\n        var time = getTimer_1.getTimer();\n        if (this._time == 0)\n            this._time = time;\n        this._deltaTime = time - this._time;\n        this._time = time;\n    };\n    /**\n     *\n     */\n    View.prototype.dispose = function () {\n        this._pRenderer.dispose();\n        // TODO: imeplement mouseManager / touch3DManager\n        this._mouseManager.unregisterView(this);\n        //this._touch3DManager.disableTouchListeners(this);\n        //this._touch3DManager.dispose();\n        this._mouseManager = null;\n        //this._touch3DManager = null;\n        this._pRenderer = null;\n    };\n    /**\n     *\n     * @param e\n     */\n    View.prototype._onPartitionChanged = function (event) {\n        if (this._pCamera)\n            this._pScene.partition._iRegisterEntity(this._pCamera);\n    };\n    /**\n     *\n     */\n    View.prototype._onProjectionChanged = function (event) {\n        this._scissorDirty = true;\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onViewportUpdated = function (event) {\n        this._viewportDirty = true;\n    };\n    /**\n     *\n     */\n    View.prototype._onScissorUpdated = function (event) {\n        this._scissorDirty = true;\n    };\n    View.prototype.project = function (point3d) {\n        var v = this._pCamera.project(point3d);\n        v.x = v.x * this._pRenderer.viewPort.width / 2 + this._width * this._pCamera.projection.originX;\n        v.y = v.y * this._pRenderer.viewPort.height / 2 + this._height * this._pCamera.projection.originY;\n        return v;\n    };\n    View.prototype.unproject = function (sX, sY, sZ) {\n        return this._pCamera.unproject(2 * (sX - this._width * this._pCamera.projection.originX) / this._pRenderer.viewPort.width, 2 * (sY - this._height * this._pCamera.projection.originY) / this._pRenderer.viewPort.height, sZ);\n    };\n    View.prototype.getRay = function (sX, sY, sZ) {\n        return this._pCamera.getRay((sX * 2 - this._width) / this._width, (sY * 2 - this._height) / this._height, sZ);\n    };\n    /*TODO: implement Background\n     public get background():away.textures.Texture2DBase\n     {\n     return this._background;\n     }\n     */\n    /*TODO: implement Background\n     public set background( value:away.textures.Texture2DBase )\n     {\n     this._background = value;\n     this._renderer.background = _background;\n     }\n     */\n    // TODO: required dependency stageGL\n    View.prototype.updateCollider = function () {\n        if (!this._shareContext) {\n            if (this._htmlElement == this._mouseManager._iActiveDiv)\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n        }\n        else {\n            var collidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n            if (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n                this._mouseManager._iCollision = collidingObject;\n        }\n    };\n    return View;\n}());\nexports.View = View;\n\n},{\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\",\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-display/lib/adapters/IDisplayObjectAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters/IMovieClipAdapter\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/adapters\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimationSet\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/IAnimator\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/animators/data/ParticleData\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData = (function () {\n    function ParticleData() {\n    }\n    return ParticleData;\n}());\nexports.ParticleData = ParticleData;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ParticleData;\n\n},{}],\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nvar AnimationNodeBase = (function (_super) {\n    __extends(AnimationNodeBase, _super);\n    /**\n     * Creates a new <code>AnimationNodeBase</code> object.\n     */\n    function AnimationNodeBase() {\n        _super.call(this);\n    }\n    Object.defineProperty(AnimationNodeBase.prototype, \"stateClass\", {\n        get: function () {\n            return this._pStateClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    AnimationNodeBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(AnimationNodeBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return AnimationNodeBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnimationNodeBase.assetType = \"[asset AnimationNodeBase]\";\n    return AnimationNodeBase;\n}(AssetBase_1.AssetBase));\nexports.AnimationNodeBase = AnimationNodeBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/animators\":[function(require,module,exports){\n\"use strict\";\nvar ParticleData_1 = require(\"./animators/data/ParticleData\");\nexports.ParticleData = ParticleData_1.ParticleData;\nvar AnimationNodeBase_1 = require(\"./animators/nodes/AnimationNodeBase\");\nexports.AnimationNodeBase = AnimationNodeBase_1.AnimationNodeBase;\n\n},{\"./animators/data/ParticleData\":\"awayjs-display/lib/animators/data/ParticleData\",\"./animators/nodes/AnimationNodeBase\":\"awayjs-display/lib/animators/nodes/AnimationNodeBase\"}],\"awayjs-display/lib/base/AlignmentMode\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar AlignmentMode = (function () {\n    function AlignmentMode() {\n    }\n    /**\n     *\n     */\n    AlignmentMode.REGISTRATION_POINT = \"registrationPoint\";\n    /**\n     *\n     */\n    AlignmentMode.PIVOT_POINT = \"pivot\";\n    return AlignmentMode;\n}());\nexports.AlignmentMode = AlignmentMode;\n\n},{}],\"awayjs-display/lib/base/HierarchicalProperties\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar HierarchicalProperties = (function () {\n    function HierarchicalProperties() {\n    }\n    /**\n     *\n     */\n    HierarchicalProperties.MOUSE_ENABLED = 1;\n    /**\n     *\n     */\n    HierarchicalProperties.VISIBLE = 2;\n    /**\n     *\n     */\n    HierarchicalProperties.MASK_ID = 4;\n    /**\n     *\n     */\n    HierarchicalProperties.MASKS = 8;\n    /**\n     *\n     */\n    HierarchicalProperties.COLOR_TRANSFORM = 16;\n    /**\n     *\n     */\n    HierarchicalProperties.SCENE_TRANSFORM = 32;\n    /**\n     *\n     */\n    HierarchicalProperties.ALL = 63;\n    return HierarchicalProperties;\n}());\nexports.HierarchicalProperties = HierarchicalProperties;\n\n},{}],\"awayjs-display/lib/base/IBitmapDrawable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/IRenderable\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/ISurface\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/base/OrientationMode\":[function(require,module,exports){\n\"use strict\";\nvar OrientationMode = (function () {\n    function OrientationMode() {\n    }\n    /**\n     *\n     */\n    OrientationMode.DEFAULT = \"default\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_PLANE = \"cameraPlane\";\n    /**\n     *\n     */\n    OrientationMode.CAMERA_POSITION = \"cameraPosition\";\n    return OrientationMode;\n}());\nexports.OrientationMode = OrientationMode;\n\n},{}],\"awayjs-display/lib/base/Style\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n *\n */\nvar Style = (function (_super) {\n    __extends(Style, _super);\n    function Style() {\n        _super.call(this);\n        this._samplers = new Object();\n        this._images = new Object();\n        this._color = 0xFFFFFF;\n    }\n    Object.defineProperty(Style.prototype, \"sampler\", {\n        get: function () {\n            return this._sampler;\n        },\n        set: function (value) {\n            if (this._sampler == value)\n                return;\n            this._sampler = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"image\", {\n        get: function () {\n            return this._image;\n        },\n        set: function (value) {\n            if (this._image == value)\n                return;\n            this._image = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"uvMatrix\", {\n        get: function () {\n            return this._uvMatrix;\n        },\n        set: function (value) {\n            if (this._uvMatrix == value)\n                return;\n            this._uvMatrix = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"color\", {\n        /**\n         * The diffuse reflectivity color of the surface.\n         */\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            if (this._color == value)\n                return;\n            this._color = value;\n            this._invalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Style.prototype.getImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._images[texture.id] ? this._images[texture.id][index] : null) || this._image;\n    };\n    Style.prototype.getSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        return (this._samplers[texture.id] ? this._samplers[texture.id][index] : null) || this._sampler;\n    };\n    Style.prototype.addImageAt = function (image, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            this._images[texture.id] = new Array();\n        this._images[texture.id][index] = image;\n    };\n    Style.prototype.addSamplerAt = function (sampler, texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            this._samplers[texture.id] = new Array();\n        this._samplers[texture.id][index] = sampler;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeImageAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._images[texture.id])\n            return;\n        this._images[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype.removeSamplerAt = function (texture, index) {\n        if (index === void 0) { index = 0; }\n        if (!this._samplers[texture.id])\n            return;\n        this._samplers[texture.id][index] = null;\n        this._invalidateProperties();\n    };\n    Style.prototype._invalidateProperties = function () {\n        this.dispatchEvent(new StyleEvent_1.StyleEvent(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this));\n    };\n    return Style;\n}(EventDispatcher_1.EventDispatcher));\nexports.Style = Style;\n\n},{\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-display/lib/base/Timeline\":[function(require,module,exports){\n\"use strict\";\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\nvar Timeline = (function () {\n    function Timeline() {\n        this._functions = [];\n        this._update_indices = [];\n        this.numKeyFrames = 0;\n        this.keyframe_indices = [];\n        this._potentialPrototypes = [];\n        this._labels = {};\n        this._framescripts = {};\n        this._framescripts_translated = {};\n        //cache functions\n        this._functions[1] = this.update_mtx_all;\n        this._functions[2] = this.update_colortransform;\n        this._functions[3] = this.update_masks;\n        this._functions[4] = this.update_name;\n        this._functions[5] = this.update_button_name;\n        this._functions[6] = this.update_visibility;\n        this._functions[11] = this.update_mtx_scale_rot;\n        this._functions[12] = this.update_mtx_pos;\n        this._functions[200] = this.enable_maskmode;\n        this._functions[201] = this.remove_masks;\n    }\n    Timeline.prototype.init = function () {\n        if ((this.frame_command_indices == null) || (this.frame_recipe == null) || (this.keyframe_durations == null))\n            return;\n        this.keyframe_firstframes = [];\n        this.keyframe_constructframes = [];\n        var frame_cnt = 0;\n        var ic = 0;\n        var ic2 = 0;\n        var keyframe_cnt = 0;\n        var last_construct_frame = 0;\n        for (ic = 0; ic < this.numKeyFrames; ic++) {\n            var duration = this.keyframe_durations[(ic)];\n            if (this.frame_recipe[ic] & 1)\n                last_construct_frame = keyframe_cnt;\n            this.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n            this.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n            for (ic2 = 0; ic2 < duration; ic2++)\n                this.keyframe_indices[frame_cnt++] = ic;\n        }\n    };\n    Timeline.prototype.get_framescript = function (keyframe_index) {\n        if (this._framescripts[keyframe_index] == null)\n            return \"\";\n        if (typeof this._framescripts[keyframe_index] == \"string\")\n            return this._framescripts[keyframe_index];\n        else {\n            throw new Error(\"Framescript is already translated to Function!!!\");\n        }\n    };\n    Timeline.prototype.add_framescript = function (value, keyframe_index) {\n        if (FrameScriptManager_1.FrameScriptManager.frameScriptDebug) {\n            // if we are in debug mode, we try to extract the function name from the first line of framescript code,\n            // and check if this function is available on the object that is set as frameScriptDebug\n            // try to get the functions name (it should be the first line as comment)\n            var functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n            if (FrameScriptManager_1.FrameScriptManager.frameScriptDebug[functionname]) {\n                this._framescripts[keyframe_index] = FrameScriptManager_1.FrameScriptManager.frameScriptDebug[functionname];\n                this._framescripts_translated[keyframe_index] = true;\n                return;\n            }\n            else {\n                throw new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\" + functionname + \"' !!!\");\n            }\n        }\n        this._framescripts[keyframe_index] = value;\n    };\n    Timeline.prototype.regexIndexOf = function (str, regex, startpos) {\n        var indexOf = str.substring(startpos || 0).search(regex);\n        return (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n    };\n    Timeline.prototype.add_script_for_postcontruct = function (target_mc, keyframe_idx, scriptPass1) {\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        if (this._framescripts[keyframe_idx] != null) {\n            if (this._framescripts_translated[keyframe_idx] == null) {\n                this._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n                this._framescripts_translated[keyframe_idx] = true;\n            }\n            if (scriptPass1)\n                FrameScriptManager_1.FrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n            else\n                FrameScriptManager_1.FrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n        }\n    };\n    Object.defineProperty(Timeline.prototype, \"numFrames\", {\n        get: function () {\n            return this.keyframe_indices.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Timeline.prototype.getPotentialChildPrototype = function (id) {\n        return this._potentialPrototypes[id];\n    };\n    Timeline.prototype.getKeyframeIndexForFrameIndex = function (frame_index) {\n        return this.keyframe_indices[frame_index];\n    };\n    Timeline.prototype.getPotentialChildInstance = function (id) {\n        var this_clone = this._potentialPrototypes[id].clone();\n        this_clone.name = \"\";\n        return this_clone;\n    };\n    Timeline.prototype.registerPotentialChild = function (prototype) {\n        var id = this._potentialPrototypes.length;\n        this._potentialPrototypes[id] = prototype;\n    };\n    Timeline.prototype.jumpToLabel = function (target_mc, label) {\n        var key_frame_index = this._labels[label];\n        if (key_frame_index >= 0)\n            target_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n    };\n    Timeline.prototype.gotoFrame = function (target_mc, value, skip_script) {\n        if (skip_script === void 0) { skip_script = false; }\n        var current_keyframe_idx = target_mc.constructedKeyFrameIndex;\n        var target_keyframe_idx = this.keyframe_indices[value];\n        if (current_keyframe_idx == target_keyframe_idx)\n            return;\n        if (current_keyframe_idx + 1 == target_keyframe_idx) {\n            this.constructNextFrame(target_mc, !skip_script, true);\n            return;\n        }\n        var break_frame_idx = this.keyframe_constructframes[target_keyframe_idx];\n        //we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n        var jump_forward = (target_keyframe_idx > current_keyframe_idx);\n        var jump_gap = (break_frame_idx > current_keyframe_idx);\n        // in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n        // in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n        var start_construct_idx = (jump_forward && !jump_gap) ? current_keyframe_idx + 1 : break_frame_idx;\n        var i;\n        var k;\n        if (jump_gap)\n            for (i = target_mc.numChildren - 1; i >= 0; i--)\n                if (target_mc._children[i]._depthID < 0)\n                    target_mc.removeChildAt(i);\n        //if we jump back, we want to reset all objects (but not the timelines of the mcs)\n        if (!jump_forward)\n            target_mc.resetSessionIDs();\n        // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n        var depth_sessionIDs = target_mc.getSessionIDDepths();\n        //pass1: only apply add/remove commands into depth_sessionIDs.\n        this.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n        // check what childs are alive on both frames.\n        // childs that are not alive anymore get removed and unregistered\n        // childs that are alive on both frames have their properties reset if we are jumping back\n        var child;\n        for (i = target_mc.numChildren - 1; i >= 0; i--) {\n            child = target_mc._children[i];\n            if (child._depthID < 0) {\n                if (depth_sessionIDs[child._depthID] != child._sessionID) {\n                    target_mc.removeChildAt(i);\n                }\n                else if (!jump_forward) {\n                    if (child.adapter) {\n                        if (!child.adapter.isBlockedByScript()) {\n                            child.transform.clearMatrix3D();\n                            child.transform.clearColorTransform();\n                            //this.name=\"\";\n                            child.masks = null;\n                            child.maskMode = false;\n                        }\n                        if (!child.adapter.isVisibilityByScript()) {\n                            child.visible = true;\n                        }\n                    }\n                }\n            }\n        }\n        // now we need to addchild the objects that were added before targetframe first\n        // than we can add the script of the targetframe\n        // than we can addchild objects added on targetframe\n        for (var key in depth_sessionIDs) {\n            child = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key] * 2]);\n            if (child._sessionID == -1)\n                target_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n        }\n        if (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value)\n            this.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n        //pass2: apply update commands for objects on stage (only if they are not blocked by script)\n        this.pass2(target_mc);\n        target_mc.constructedKeyFrameIndex = target_keyframe_idx;\n    };\n    Timeline.prototype.pass1 = function (start_construct_idx, target_keyframe_idx, depth_sessionIDs) {\n        var i;\n        var k;\n        this._update_indices.length = 0; // store a list of updatecommand_indices, so we dont have to read frame_recipe again\n        var update_cnt = 0;\n        var start_index;\n        var end_index;\n        for (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n            var frame_command_idx = this.frame_command_indices[k];\n            var frame_recipe = this.frame_recipe[k];\n            if (frame_recipe & 2) {\n                // remove childs\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                for (i = start_index; i < end_index; i++)\n                    delete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n            }\n            if (frame_recipe & 4) {\n                start_index = this.command_index_stream[frame_command_idx];\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\n                // apply add commands in reversed order to have script exeucted in correct order.\n                // this could be changed in exporter\n                for (i = end_index - 1; i >= start_index; i--)\n                    depth_sessionIDs[this.add_child_stream[i * 2 + 1] - 16383] = i;\n            }\n            if (frame_recipe & 8)\n                this._update_indices[update_cnt++] = frame_command_idx; // execute update command later\n        }\n    };\n    Timeline.prototype.pass2 = function (target_mc) {\n        var k;\n        var len = this._update_indices.length;\n        for (k = 0; k < len; k++)\n            this.update_childs(target_mc, this._update_indices[k]);\n    };\n    Timeline.prototype.constructNextFrame = function (target_mc, queueScript, scriptPass1) {\n        if (queueScript === void 0) { queueScript = true; }\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\n        var frameIndex = target_mc.currentFrameIndex;\n        var new_keyFrameIndex = this.keyframe_indices[frameIndex];\n        if (queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n            this.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n        if (target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n            target_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n            var frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n            var frame_recipe = this.frame_recipe[new_keyFrameIndex];\n            if (frame_recipe & 1) {\n                for (var i = target_mc.numChildren - 1; i >= 0; i--)\n                    if (target_mc._children[i]._depthID < 0)\n                        target_mc.removeChildAt(i);\n            }\n            else if (frame_recipe & 2) {\n                this.remove_childs_continous(target_mc, frame_command_idx++);\n            }\n            if (frame_recipe & 4)\n                this.add_childs_continous(target_mc, frame_command_idx++);\n            if (frame_recipe & 8)\n                this.update_childs(target_mc, frame_command_idx++);\n        }\n    };\n    Timeline.prototype.remove_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = start_index; i < end_index; i++)\n            sourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n    };\n    // used to add childs when jumping between frames\n    Timeline.prototype.add_childs_continous = function (sourceMovieClip, frame_command_idx) {\n        // apply add commands in reversed order to have script exeucted in correct order.\n        // this could be changed in exporter\n        var idx;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        for (var i = end_index - 1; i >= start_index; i--) {\n            idx = i * 2;\n            sourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n        }\n    };\n    Timeline.prototype.update_childs = function (target_mc, frame_command_idx) {\n        var p;\n        var props_start_idx;\n        var props_end_index;\n        var start_index = this.command_index_stream[frame_command_idx];\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\n        var child;\n        for (var i = start_index; i < end_index; i++) {\n            child = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n            if (child) {\n                // check if the child is active + not blocked by script\n                this._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n                props_start_idx = this.update_child_props_indices_stream[i];\n                props_end_index = props_start_idx + this.update_child_props_length_stream[i];\n                for (p = props_start_idx; p < props_end_index; p++)\n                    this._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n            }\n        }\n    };\n    Timeline.prototype.update_mtx_all = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 6;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n        child.transform.invalidateComponents();\n    };\n    Timeline.prototype.update_colortransform = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 8;\n        var new_ct = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform_1.ColorTransform());\n        new_ct.rawData[0] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[1] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[2] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[3] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[4] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[5] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[6] = this.properties_stream_f32_ct[i++];\n        new_ct.rawData[7] = this.properties_stream_f32_ct[i];\n        child.transform.invalidateColorTransform();\n    };\n    Timeline.prototype.update_masks = function (child, target_mc, i) {\n        // an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n        // this is not implmeented in the runtime yet\n        // for now, a second mask-groupd would overwrite the first one\n        var mask;\n        var masks = new Array();\n        var numMasks = this.properties_stream_int[i++];\n        //mask may not exist if a goto command moves the playhead to a point in the timeline after\n        //one of the masks in a mask array has already been removed. Therefore a check is needed.\n        for (var m = 0; m < numMasks; m++)\n            if ((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n                masks.push(mask);\n        child.masks = masks;\n    };\n    Timeline.prototype.update_name = function (child, target_mc, i) {\n        child.name = this.properties_stream_strings[i];\n        target_mc.adapter.registerScriptObject(child);\n    };\n    Timeline.prototype.update_button_name = function (target, sourceMovieClip, i) {\n        target.name = this.properties_stream_strings[i];\n        // todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n        target.addButtonListeners();\n        sourceMovieClip.adapter.registerScriptObject(target);\n    };\n    Timeline.prototype.update_visibility = function (child, target_mc, i) {\n        if (!child.adapter || !child.adapter.isVisibilityByScript())\n            child.visible = Boolean(i);\n    };\n    Timeline.prototype.update_mtx_scale_rot = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 4;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n        child.transform.invalidateComponents();\n        child.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\n    };\n    Timeline.prototype.update_mtx_pos = function (child, target_mc, i) {\n        if (this._blocked)\n            return;\n        i *= 2;\n        var new_matrix = child.transform.matrix3D;\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n        child.transform.invalidatePosition();\n    };\n    Timeline.prototype.enable_maskmode = function (child, target_mc, i) {\n        child.maskMode = true;\n    };\n    Timeline.prototype.remove_masks = function (child, target_mc, i) {\n        child.masks = null;\n    };\n    return Timeline;\n}());\nexports.Timeline = Timeline;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-display/lib/base/TouchPoint\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar TouchPoint = (function () {\n    function TouchPoint(x, y, id) {\n        this.x = x;\n        this.y = y;\n        this.id = id;\n    }\n    return TouchPoint;\n}());\nexports.TouchPoint = TouchPoint;\n\n},{}],\"awayjs-display/lib/base/Transform\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nvar Transform = (function (_super) {\n    __extends(Transform, _super);\n    function Transform() {\n        _super.call(this);\n        this._matrix3D = new Matrix3D_1.Matrix3D();\n        this._rotation = new Vector3D_1.Vector3D();\n        this._skew = new Vector3D_1.Vector3D();\n        this._scale = new Vector3D_1.Vector3D(1, 1, 1);\n        // Cached vector of transformation components used when\n        // recomposing the transform matrix in updateTransform()\n        this._components = new Array(4);\n        this._components[1] = this._rotation;\n        this._components[2] = this._skew;\n        this._components[3] = this._scale;\n    }\n    Object.defineProperty(Transform.prototype, \"backVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.Matrix3DUtils.getForward(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"colorTransform\", {\n        /**\n         * A ColorTransform object containing values that universally adjust the\n         * colors in the display object.\n         *\n         * @throws TypeError The colorTransform is null when being set\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (val) {\n            if (this._colorTransform == val)\n                return;\n            this._colorTransform = val;\n            this.invalidateColorTransform();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedColorTransform\", {\n        /**\n         * A ColorTransform object representing the combined color transformations\n         * applied to the display object and all of its parent objects, back to the\n         * root level. If different color transformations have been applied at\n         * different levels, all of those transformations are concatenated into one\n         * ColorTransform object for this property.\n         */\n        get: function () {\n            return this._concatenatedColorTransform; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"concatenatedMatrix\", {\n        /**\n         * A Matrix object representing the combined transformation matrixes of the\n         * display object and all of its parent objects, back to the root level. If\n         * different transformation matrixes have been applied at different levels,\n         * all of those matrixes are concatenated into one matrix for this property.\n         * Also, for resizeable SWF content running in the browser, this property\n         * factors in the difference between stage coordinates and window coordinates\n         * due to window resizing. Thus, the property converts local coordinates to\n         * window coordinates, which may not be the same coordinate space as that of\n         * the Scene.\n         */\n        get: function () {\n            return this._concatenatedMatrix; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"downVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.Matrix3DUtils.getUp(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"forwardVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.Matrix3DUtils.getForward(this._matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"leftVector\", {\n        /**\n         *\n         */\n        get: function () {\n            var director = Matrix3DUtils_1.Matrix3DUtils.getRight(this._matrix3D);\n            director.negate();\n            return director;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"matrix3D\", {\n        /**\n         * Provides access to the Matrix3D object of a three-dimensional display\n         * object. The Matrix3D object represents a transformation matrix that\n         * determines the display object's position and orientation. A Matrix3D\n         * object can also perform perspective projection.\n         *\n         * <p>If the <code>matrix</code> property is set to a value(not\n         * <code>null</code>), the <code>matrix3D</code> property is\n         * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n         * value(not <code>null</code>), the <code>matrix</code> property is\n         * <code>null</code>.</p>\n         */\n        get: function () {\n            if (this._matrix3DDirty)\n                this._updateMatrix3D();\n            return this._matrix3D;\n        },\n        set: function (val) {\n            for (var i = 0; i < 15; i++)\n                this._matrix3D.rawData[i] = val.rawData[i];\n            this.invalidateComponents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"pixelBounds\", {\n        /**\n         * A Rectangle object that defines the bounding rectangle of the display\n         * object on the stage.\n         */\n        get: function () {\n            return this._pixelBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"position\", {\n        /**\n         * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            return this._matrix3D.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rightVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.Matrix3DUtils.getRight(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transform.prototype, \"rotation\", {\n        /**\n         * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._rotation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Rotates the 3d object directly to a euler angle\n     *\n     * @param    ax        The angle in degrees of the rotation around the x axis.\n     * @param    ay        The angle in degrees of the rotation around the y axis.\n     * @param    az        The angle in degrees of the rotation around the z axis.\n     */\n    Transform.prototype.rotateTo = function (ax, ay, az) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._rotation.x = ax;\n        this._rotation.y = ay;\n        this._rotation.z = az;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"scale\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._scale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.scaleTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._scale.x = sx;\n        this._scale.y = sy;\n        this._scale.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"skew\", {\n        /**\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n         */\n        get: function () {\n            if (this._componentsDirty)\n                this._updateComponents();\n            return this._skew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.skewTo = function (sx, sy, sz) {\n        if (this._componentsDirty)\n            this._updateComponents();\n        this._skew.x = sx;\n        this._skew.y = sy;\n        this._skew.z = sz;\n        this.invalidateMatrix3D();\n    };\n    Object.defineProperty(Transform.prototype, \"upVector\", {\n        /**\n         *\n         */\n        get: function () {\n            return Matrix3DUtils_1.Matrix3DUtils.getUp(this.matrix3D);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transform.prototype.dispose = function () {\n    };\n    /**\n     * Returns a Matrix3D object, which can transform the space of a specified\n     * display object in relation to the current display object's space. You can\n     * use the <code>getRelativeMatrix3D()</code> method to move one\n     * three-dimensional display object relative to another three-dimensional\n     * display object.\n     *\n     * @param relativeTo The display object relative to which the transformation\n     *                   occurs. To get a Matrix3D object relative to the stage,\n     *                   set the parameter to the <code>root</code> or\n     *                   <code>stage</code> object. To get the world-relative\n     *                   matrix of the display object, set the parameter to a\n     *                   display object that has a perspective transformation\n     *                   applied to it.\n     * @return A Matrix3D object that can be used to transform the space from the\n     *         <code>relativeTo</code> display object to the current display\n     *         object space.\n     */\n    Transform.prototype.getRelativeMatrix3D = function (relativeTo) {\n        return new Matrix3D_1.Matrix3D(); //TODO\n    };\n    /**\n     * Moves the 3d object forwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveForward = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.Z_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local z axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveBackward = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.Z_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveLeft = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.X_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local x axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveRight = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.X_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object forwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveUp = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.Y_AXIS, distance);\n    };\n    /**\n     * Moves the 3d object backwards along it's local y axis\n     *\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.moveDown = function (distance) {\n        this.translateLocal(Vector3D_1.Vector3D.Y_AXIS, -distance);\n    };\n    /**\n     * Moves the 3d object directly to a point in space\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    Transform.prototype.moveTo = function (dx, dy, dz) {\n        this._matrix3D.rawData[12] = dx;\n        this._matrix3D.rawData[13] = dy;\n        this._matrix3D.rawData[14] = dz;\n        this.invalidatePosition();\n    };\n    /**\n     * Rotates the 3d object around it's local x-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.pitch = function (angle) {\n        this.rotate(Vector3D_1.Vector3D.X_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local z-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.roll = function (angle) {\n        this.rotate(Vector3D_1.Vector3D.Z_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around it's local y-axis\n     *\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.yaw = function (angle) {\n        this.rotate(Vector3D_1.Vector3D.Y_AXIS, angle);\n    };\n    /**\n     * Rotates the 3d object around an axis by a defined angle\n     *\n     * @param    axis        The vector defining the axis of rotation\n     * @param    angle        The amount of rotation in degrees\n     */\n    Transform.prototype.rotate = function (axis, angle) {\n        this.matrix3D.prependRotation(angle, axis);\n        this.invalidateComponents();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translate = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.appendTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    /**\n     * Moves the 3d object along a vector by a defined length\n     *\n     * @param    axis        The vector defining the axis of movement\n     * @param    distance    The length of the movement\n     */\n    Transform.prototype.translateLocal = function (axis, distance) {\n        var x = axis.x, y = axis.y, z = axis.z;\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\n        this.matrix3D.prependTranslation(x * len, y * len, z * len);\n        this.invalidatePosition();\n    };\n    Transform.prototype.clearMatrix3D = function () {\n        this._matrix3D.identity();\n        this.invalidateComponents();\n    };\n    Transform.prototype.clearColorTransform = function () {\n        if (!this._colorTransform)\n            return;\n        this._colorTransform.clear();\n        this.invalidateColorTransform();\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    Transform.prototype.invalidateMatrix3D = function () {\n        this._matrix3DDirty = true;\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateComponents = function () {\n        this.invalidatePosition();\n        this._componentsDirty = true;\n    };\n    /**\n     *\n     */\n    Transform.prototype.invalidatePosition = function () {\n        this._matrix3D.invalidatePosition();\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, this));\n    };\n    Transform.prototype.invalidateColorTransform = function () {\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n    };\n    /**\n     *\n     */\n    Transform.prototype._updateMatrix3D = function () {\n        this._matrix3D.recompose(this._components);\n        this._matrix3DDirty = false;\n    };\n    Transform.prototype._updateComponents = function () {\n        var elements = this._matrix3D.decompose();\n        var vec;\n        vec = elements[1];\n        this._rotation.x = vec.x;\n        this._rotation.y = vec.y;\n        this._rotation.z = vec.z;\n        vec = elements[2];\n        this._skew.x = vec.x;\n        this._skew.y = vec.y;\n        this._skew.z = vec.z;\n        vec = elements[3];\n        this._scale.x = vec.x;\n        this._scale.y = vec.y;\n        this._scale.z = vec.z;\n        this._componentsDirty = false;\n    };\n    return Transform;\n}(EventDispatcher_1.EventDispatcher));\nexports.Transform = Transform;\n\n},{\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/base\":[function(require,module,exports){\n\"use strict\";\nvar AlignmentMode_1 = require(\"./base/AlignmentMode\");\nexports.AlignmentMode = AlignmentMode_1.AlignmentMode;\nvar HierarchicalProperties_1 = require(\"./base/HierarchicalProperties\");\nexports.HierarchicalProperties = HierarchicalProperties_1.HierarchicalProperties;\nvar OrientationMode_1 = require(\"./base/OrientationMode\");\nexports.OrientationMode = OrientationMode_1.OrientationMode;\nvar Style_1 = require(\"./base/Style\");\nexports.Style = Style_1.Style;\nvar Timeline_1 = require(\"./base/Timeline\");\nexports.Timeline = Timeline_1.Timeline;\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\nexports.TouchPoint = TouchPoint_1.TouchPoint;\nvar Transform_1 = require(\"./base/Transform\");\nexports.Transform = Transform_1.Transform;\n\n},{\"./base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"./base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"./base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"./base/Style\":\"awayjs-display/lib/base/Style\",\"./base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./base/Transform\":\"awayjs-display/lib/base/Transform\"}],\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar PrimitiveCubePrefab_1 = require(\"../prefabs/PrimitiveCubePrefab\");\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nvar AxisAlignedBoundingBox = (function (_super) {\n    __extends(AxisAlignedBoundingBox, _super);\n    /**\n     * Creates a new <code>AxisAlignedBoundingBox</code> object.\n     */\n    function AxisAlignedBoundingBox(entity) {\n        _super.call(this, entity);\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._width = 0;\n        this._height = 0;\n        this._depth = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n        this._halfExtentsX = 0;\n        this._halfExtentsY = 0;\n        this._halfExtentsZ = 0;\n    }\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.nullify = function () {\n        this._x = this._y = this._z = 0;\n        this._width = this._height = this._depth = 0;\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    AxisAlignedBoundingBox.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var a = plane.a;\n            var b = plane.b;\n            var c = plane.c;\n            var flippedExtentX = a < 0 ? -this._halfExtentsX : this._halfExtentsX;\n            var flippedExtentY = b < 0 ? -this._halfExtentsY : this._halfExtentsY;\n            var flippedExtentZ = c < 0 ? -this._halfExtentsZ : this._halfExtentsZ;\n            var projDist = a * (this._centerX + flippedExtentX) + b * (this._centerY + flippedExtentY) + c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0)\n                return false;\n        }\n        return true;\n    };\n    AxisAlignedBoundingBox.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._box.rayIntersection(position, direction, targetNormal);\n    };\n    AxisAlignedBoundingBox.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var centerDistance = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var boundOffset = a * this._halfExtentsX + b * this._halfExtentsY + c * this._halfExtentsZ;\n        return centerDistance > boundOffset ? PlaneClassification_1.PlaneClassification.FRONT : centerDistance < -boundOffset ? PlaneClassification_1.PlaneClassification.BACK : PlaneClassification_1.PlaneClassification.INTERSECT;\n    };\n    AxisAlignedBoundingBox.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._box = this._pEntity.getBox();\n        var matrix = this._pEntity.sceneTransform;\n        var hx = this._box.width / 2;\n        var hy = this._box.height / 2;\n        var hz = this._box.depth / 2;\n        var cx = this._box.x + hx;\n        var cy = this._box.y + hy;\n        var cz = this._box.z + hz;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        this._halfExtentsX = Math.abs(hx * m11 + hy * m12 + hz * m13);\n        this._halfExtentsY = Math.abs(hx * m21 + hy * m22 + hz * m23);\n        this._halfExtentsZ = Math.abs(hx * m31 + hy * m32 + hz * m33);\n        if (this._prefab) {\n            this._prefab.width = this._box.width;\n            this._prefab.height = this._box.height;\n            this._prefab.depth = this._box.depth;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n        this._width = this._halfExtentsX * 2;\n        this._height = this._halfExtentsY * 2;\n        this._depth = this._halfExtentsZ * 2;\n        this._x = this._centerX - this._halfExtentsX;\n        this._y = this._centerY - this._halfExtentsY;\n        this._z = this._centerZ - this._halfExtentsZ;\n    };\n    AxisAlignedBoundingBox.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveCubePrefab_1.PrimitiveCubePrefab(null, ElementsType_1.ElementsType.LINE);\n        return this._prefab.getNewObject();\n    };\n    return AxisAlignedBoundingBox;\n}(BoundingVolumeBase_1.BoundingVolumeBase));\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingSphere\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar PrimitiveSpherePrefab_1 = require(\"../prefabs/PrimitiveSpherePrefab\");\nvar BoundingSphere = (function (_super) {\n    __extends(BoundingSphere, _super);\n    function BoundingSphere(entity) {\n        _super.call(this, entity);\n        this._radius = 0;\n        this._centerX = 0;\n        this._centerY = 0;\n        this._centerZ = 0;\n    }\n    BoundingSphere.prototype.nullify = function () {\n        this._centerX = this._centerY = this._centerZ = 0;\n        this._radius = 0;\n    };\n    BoundingSphere.prototype.isInFrustum = function (planes, numPlanes) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        for (var i = 0; i < numPlanes; ++i) {\n            var plane = planes[i];\n            var flippedExtentX = plane.a < 0 ? -this._radius : this._radius;\n            var flippedExtentY = plane.b < 0 ? -this._radius : this._radius;\n            var flippedExtentZ = plane.c < 0 ? -this._radius : this._radius;\n            var projDist = plane.a * (this._centerX + flippedExtentX) + plane.b * (this._centerY + flippedExtentY) + plane.c * (this._centerZ + flippedExtentZ) - plane.d;\n            if (projDist < 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BoundingSphere.prototype.rayIntersection = function (position, direction, targetNormal) {\n        if (this._pInvalidated)\n            this._pUpdate();\n        return this._sphere.rayIntersection(position, direction, targetNormal);\n    };\n    //@override\n    BoundingSphere.prototype.classifyToPlane = function (plane) {\n        var a = plane.a;\n        var b = plane.b;\n        var c = plane.c;\n        var dd = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\n        if (a < 0)\n            a = -a;\n        if (b < 0)\n            b = -b;\n        if (c < 0)\n            c = -c;\n        var rr = (a + b + c) * this._radius;\n        return dd > rr ? PlaneClassification_1.PlaneClassification.FRONT : dd < -rr ? PlaneClassification_1.PlaneClassification.BACK : PlaneClassification_1.PlaneClassification.INTERSECT;\n    };\n    BoundingSphere.prototype._pUpdate = function () {\n        _super.prototype._pUpdate.call(this);\n        this._sphere = this._pEntity.getSphere();\n        var matrix = this._pEntity.sceneTransform;\n        var cx = this._sphere.x;\n        var cy = this._sphere.y;\n        var cz = this._sphere.z;\n        var r = this._sphere.radius;\n        var raw = matrix.rawData;\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\n        var rx = m11 + m12 + m13;\n        var ry = m21 + m22 + m23;\n        var rz = m31 + m32 + m33;\n        this._radius = r * Math.sqrt((rx * rx + ry * ry + rz * rz) / 3);\n        if (this._prefab) {\n            this._prefab.radius = r;\n            this._pBoundsPrimitive.x = cx;\n            this._pBoundsPrimitive.y = cy;\n            this._pBoundsPrimitive.z = cz;\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\n        }\n    };\n    BoundingSphere.prototype._pCreateBoundsPrimitive = function () {\n        this._prefab = new PrimitiveSpherePrefab_1.PrimitiveSpherePrefab(null, ElementsType_1.ElementsType.LINE);\n        return this._prefab.getNewObject();\n    };\n    return BoundingSphere;\n}(BoundingVolumeBase_1.BoundingVolumeBase));\nexports.BoundingSphere = BoundingSphere;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingVolumeBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar BoundingVolumeBase = (function () {\n    function BoundingVolumeBase(entity) {\n        this._pInvalidated = true;\n        this._pEntity = entity;\n    }\n    BoundingVolumeBase.prototype.dispose = function () {\n        this._pEntity = null;\n        this._pBoundsPrimitive = null;\n    };\n    Object.defineProperty(BoundingVolumeBase.prototype, \"boundsPrimitive\", {\n        get: function () {\n            if (this._pBoundsPrimitive == null) {\n                this._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n                this._pInvalidated = true;\n            }\n            if (this._pInvalidated)\n                this._pUpdate();\n            return this._pBoundsPrimitive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BoundingVolumeBase.prototype.nullify = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    BoundingVolumeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    BoundingVolumeBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    BoundingVolumeBase.prototype.rayIntersection = function (position, direction, targetNormal) {\n        return -1;\n    };\n    BoundingVolumeBase.prototype.classifyToPlane = function (plane) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    BoundingVolumeBase.prototype._pUpdate = function () {\n        this._pInvalidated = false;\n    };\n    BoundingVolumeBase.prototype.invalidate = function () {\n        this._pInvalidated = true;\n    };\n    BoundingVolumeBase.prototype._pCreateBoundsPrimitive = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    return BoundingVolumeBase;\n}());\nexports.BoundingVolumeBase = BoundingVolumeBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/bounds/BoundsType\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n */\nvar BoundsType = (function () {\n    function BoundsType() {\n    }\n    /**\n     *\n     */\n    BoundsType.SPHERE = \"sphere\";\n    /**\n     *\n     */\n    BoundsType.AXIS_ALIGNED_BOX = \"axisAlignedBox\";\n    /**\n     *\n     */\n    BoundsType.NULL = \"null\";\n    return BoundsType;\n}());\nexports.BoundsType = BoundsType;\n\n},{}],\"awayjs-display/lib/bounds/NullBounds\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\nvar NullBounds = (function (_super) {\n    __extends(NullBounds, _super);\n    function NullBounds(alwaysIn) {\n        if (alwaysIn === void 0) { alwaysIn = true; }\n        _super.call(this, null);\n        this._alwaysIn = alwaysIn;\n    }\n    //@override\n    NullBounds.prototype.clone = function () {\n        return new NullBounds(this._alwaysIn);\n    };\n    //@override\n    NullBounds.prototype.isInFrustum = function (planes, numPlanes) {\n        return this._alwaysIn;\n    };\n    NullBounds.prototype.classifyToPlane = function (plane) {\n        return PlaneClassification_1.PlaneClassification.INTERSECT;\n    };\n    return NullBounds;\n}(BoundingVolumeBase_1.BoundingVolumeBase));\nexports.NullBounds = NullBounds;\n\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds\":[function(require,module,exports){\n\"use strict\";\nvar AxisAlignedBoundingBox_1 = require(\"./bounds/AxisAlignedBoundingBox\");\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox_1.AxisAlignedBoundingBox;\nvar BoundingSphere_1 = require(\"./bounds/BoundingSphere\");\nexports.BoundingSphere = BoundingSphere_1.BoundingSphere;\nvar BoundingVolumeBase_1 = require(\"./bounds/BoundingVolumeBase\");\nexports.BoundingVolumeBase = BoundingVolumeBase_1.BoundingVolumeBase;\nvar BoundsType_1 = require(\"./bounds/BoundsType\");\nexports.BoundsType = BoundsType_1.BoundsType;\nvar NullBounds_1 = require(\"./bounds/NullBounds\");\nexports.NullBounds = NullBounds_1.NullBounds;\n\n},{\"./bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"./bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"./bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"./bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"./bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/controllers/ControllerBase\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ControllerBase = (function () {\n    function ControllerBase(targetObject) {\n        if (targetObject === void 0) { targetObject = null; }\n        this._pAutoUpdate = true;\n        this.targetObject = targetObject;\n    }\n    ControllerBase.prototype.pNotifyUpdate = function () {\n        if (this._pTargetObject)\n            this._pTargetObject.invalidatePartitionBounds();\n    };\n    Object.defineProperty(ControllerBase.prototype, \"targetObject\", {\n        get: function () {\n            return this._pTargetObject;\n        },\n        set: function (val) {\n            if (this._pTargetObject == val)\n                return;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = null;\n            this._pTargetObject = val;\n            if (this._pTargetObject && this._pAutoUpdate)\n                this._pTargetObject._iController = this;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControllerBase.prototype, \"autoUpdate\", {\n        get: function () {\n            return this._pAutoUpdate;\n        },\n        set: function (val) {\n            if (this._pAutoUpdate == val)\n                return;\n            this._pAutoUpdate = val;\n            if (this._pTargetObject) {\n                if (this._pAutoUpdate)\n                    this._pTargetObject._iController = this;\n                else\n                    this._pTargetObject._iController = null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ControllerBase.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ControllerBase.prototype.updateController = function () {\n        if (this._pControllerDirty && this._pAutoUpdate) {\n            this._pControllerDirty = false;\n            this.pNotifyUpdate();\n        }\n    };\n    return ControllerBase;\n}());\nexports.ControllerBase = ControllerBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/controllers/FirstPersonController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nvar FirstPersonController = (function (_super) {\n    __extends(FirstPersonController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function FirstPersonController(targetObject, panAngle, tiltAngle, minTiltAngle, maxTiltAngle, steps, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (steps === void 0) { steps = 8; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._walkIncrement = 0;\n        this._strafeIncrement = 0;\n        this._wrapPanAngle = false;\n        this.fly = false;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(FirstPersonController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirstPersonController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    FirstPersonController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        this.targetObject.rotationX = this._iCurrentTiltAngle;\n        this.targetObject.rotationY = this._iCurrentPanAngle;\n        if (this._walkIncrement) {\n            if (this.fly) {\n                this.targetObject.transform.moveForward(this._walkIncrement);\n            }\n            else {\n                this.targetObject.x += this._walkIncrement * Math.sin(this._panAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n                this.targetObject.z += this._walkIncrement * Math.cos(this._panAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n            }\n            this._walkIncrement = 0;\n        }\n        if (this._strafeIncrement) {\n            this.targetObject.transform.moveRight(this._strafeIncrement);\n            this._strafeIncrement = 0;\n        }\n    };\n    FirstPersonController.prototype.incrementWalk = function (val) {\n        if (val == 0)\n            return;\n        this._walkIncrement += val;\n        this.pNotifyUpdate();\n    };\n    FirstPersonController.prototype.incrementStrafe = function (val) {\n        if (val == 0)\n            return;\n        this._strafeIncrement += val;\n        this.pNotifyUpdate();\n    };\n    return FirstPersonController;\n}(ControllerBase_1.ControllerBase));\nexports.FirstPersonController = FirstPersonController;\n\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"awayjs-core/lib/geom/MathConsts\":undefined}],\"awayjs-display/lib/controllers/FollowController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar HoverController_1 = require(\"../controllers/HoverController\");\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nvar FollowController = (function (_super) {\n    __extends(FollowController, _super);\n    function FollowController(targetObject, lookAtObject, tiltAngle, distance) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (tiltAngle === void 0) { tiltAngle = 45; }\n        if (distance === void 0) { distance = 700; }\n        _super.call(this, targetObject, lookAtObject, 0, tiltAngle, distance);\n    }\n    FollowController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (!this.lookAtObject)\n            return;\n        this.panAngle = this._pLookAtObject.rotationY - 180;\n        _super.prototype.update.call(this);\n    };\n    return FollowController;\n}(HoverController_1.HoverController));\nexports.FollowController = FollowController;\n\n},{\"../controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\"}],\"awayjs-display/lib/controllers/HoverController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nvar HoverController = (function (_super) {\n    __extends(HoverController, _super);\n    /**\n     * Creates a new <code>HoverController</code> object.\n     */\n    function HoverController(targetObject, lookAtObject, panAngle, tiltAngle, distance, minTiltAngle, maxTiltAngle, minPanAngle, maxPanAngle, steps, yFactor, wrapPanAngle) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (panAngle === void 0) { panAngle = 0; }\n        if (tiltAngle === void 0) { tiltAngle = 90; }\n        if (distance === void 0) { distance = 1000; }\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\n        if (minPanAngle === void 0) { minPanAngle = null; }\n        if (maxPanAngle === void 0) { maxPanAngle = null; }\n        if (steps === void 0) { steps = 8; }\n        if (yFactor === void 0) { yFactor = 2; }\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\n        _super.call(this, targetObject, lookAtObject);\n        this._iCurrentPanAngle = 0;\n        this._iCurrentTiltAngle = 90;\n        this._panAngle = 0;\n        this._tiltAngle = 90;\n        this._distance = 1000;\n        this._minPanAngle = -Infinity;\n        this._maxPanAngle = Infinity;\n        this._minTiltAngle = -90;\n        this._maxTiltAngle = 90;\n        this._steps = 8;\n        this._yFactor = 2;\n        this._wrapPanAngle = false;\n        this._upAxis = new Vector3D_1.Vector3D();\n        this.distance = distance;\n        this.panAngle = panAngle;\n        this.tiltAngle = tiltAngle;\n        this.minPanAngle = (minPanAngle != null) ? minPanAngle : -Infinity;\n        this.maxPanAngle = (maxPanAngle != null) ? maxPanAngle : Infinity;\n        this.minTiltAngle = minTiltAngle;\n        this.maxTiltAngle = maxTiltAngle;\n        this.steps = steps;\n        this.yFactor = yFactor;\n        this.wrapPanAngle = wrapPanAngle;\n        //values passed in contrustor are applied immediately\n        this._iCurrentPanAngle = this._panAngle;\n        this._iCurrentTiltAngle = this._tiltAngle;\n    }\n    Object.defineProperty(HoverController.prototype, \"steps\", {\n        /**\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n         *\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n         *\n         * @see    #tiltAngle\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._steps;\n        },\n        set: function (val) {\n            val = (val < 1) ? 1 : val;\n            if (this._steps == val)\n                return;\n            this._steps = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"panAngle\", {\n        /**\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\n         */\n        get: function () {\n            return this._panAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n            if (this._panAngle == val)\n                return;\n            this._panAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"tiltAngle\", {\n        /**\n         * Elevation angle of the camera in degrees. Defaults to 90.\n         */\n        get: function () {\n            return this._tiltAngle;\n        },\n        set: function (val) {\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n            if (this._tiltAngle == val)\n                return;\n            this._tiltAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"distance\", {\n        /**\n         * Distance between the camera and the specified target. Defaults to 1000.\n         */\n        get: function () {\n            return this._distance;\n        },\n        set: function (val) {\n            if (this._distance == val)\n                return;\n            this._distance = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minPanAngle\", {\n        /**\n         * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._minPanAngle;\n        },\n        set: function (val) {\n            if (this._minPanAngle == val)\n                return;\n            this._minPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxPanAngle\", {\n        /**\n         * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n         *\n         * @see    #panAngle\n         */\n        get: function () {\n            return this._maxPanAngle;\n        },\n        set: function (val) {\n            if (this._maxPanAngle == val)\n                return;\n            this._maxPanAngle = val;\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"minTiltAngle\", {\n        /**\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._minTiltAngle;\n        },\n        set: function (val) {\n            if (this._minTiltAngle == val)\n                return;\n            this._minTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"maxTiltAngle\", {\n        /**\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n         *\n         * @see    #tiltAngle\n         */\n        get: function () {\n            return this._maxTiltAngle;\n        },\n        set: function (val) {\n            if (this._maxTiltAngle == val)\n                return;\n            this._maxTiltAngle = val;\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"yFactor\", {\n        /**\n         * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n         *\n         * @see    #distance\n         */\n        get: function () {\n            return this._yFactor;\n        },\n        set: function (val) {\n            if (this._yFactor == val)\n                return;\n            this._yFactor = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HoverController.prototype, \"wrapPanAngle\", {\n        /**\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n         */\n        get: function () {\n            return this._wrapPanAngle;\n        },\n        set: function (val) {\n            if (this._wrapPanAngle == val)\n                return;\n            this._wrapPanAngle = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates the current tilt angle and pan angle values.\n     *\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n     *\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n     *\n     * @see    #tiltAngle\n     * @see    #panAngle\n     * @see    #steps\n     */\n    HoverController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n            this._pControllerDirty = true;\n            if (this._wrapPanAngle) {\n                if (this._panAngle < 0) {\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360 + 360;\n                }\n                else {\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\n                    this._panAngle = this._panAngle % 360;\n                }\n                while (this._panAngle - this._iCurrentPanAngle < -180)\n                    this._iCurrentPanAngle -= 360;\n                while (this._panAngle - this._iCurrentPanAngle > 180)\n                    this._iCurrentPanAngle += 360;\n            }\n            if (interpolate) {\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\n            }\n            else {\n                this._iCurrentPanAngle = this._panAngle;\n                this._iCurrentTiltAngle = this._tiltAngle;\n            }\n            //snap coords if angle differences are close\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n                this._iCurrentTiltAngle = this._tiltAngle;\n                this._iCurrentPanAngle = this._panAngle;\n            }\n        }\n        var pos = (this.lookAtObject) ? this.lookAtObject.transform.position : (this.lookAtPosition) ? this.lookAtPosition : this._pOrigin;\n        this.targetObject.x = pos.x + this.distance * Math.sin(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n        this.targetObject.y = pos.y + this.distance * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * this.yFactor;\n        this.targetObject.z = pos.z + this.distance * Math.cos(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n        this._upAxis.x = -Math.sin(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n        this._upAxis.y = Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n        this._upAxis.z = -Math.cos(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n        }\n    };\n    return HoverController;\n}(LookAtController_1.LookAtController));\nexports.HoverController = HoverController;\n\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/LookAtController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\nvar LookAtController = (function (_super) {\n    __extends(LookAtController, _super);\n    function LookAtController(targetObject, lookAtObject) {\n        var _this = this;\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        _super.call(this, targetObject);\n        this._pOrigin = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\n        this._onLookAtObjectChangedDelegate = function (event) { return _this.onLookAtObjectChanged(event); };\n        if (lookAtObject)\n            this.lookAtObject = lookAtObject;\n        else\n            this.lookAtPosition = new Vector3D_1.Vector3D();\n    }\n    Object.defineProperty(LookAtController.prototype, \"lookAtPosition\", {\n        get: function () {\n            return this._pLookAtPosition;\n        },\n        set: function (val) {\n            if (this._pLookAtObject) {\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n                this._pLookAtObject = null;\n            }\n            this._pLookAtPosition = val;\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LookAtController.prototype, \"lookAtObject\", {\n        get: function () {\n            return this._pLookAtObject;\n        },\n        set: function (val) {\n            if (this._pLookAtPosition)\n                this._pLookAtPosition = null;\n            if (this._pLookAtObject == val)\n                return;\n            if (this._pLookAtObject)\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this._pLookAtObject = val;\n            if (this._pLookAtObject)\n                this._pLookAtObject.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n            this.pNotifyUpdate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LookAtController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        if (this._pTargetObject) {\n            if (this._pLookAtPosition)\n                this._pTargetObject.lookAt(this._pLookAtPosition);\n            else if (this._pLookAtObject)\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n        }\n    };\n    LookAtController.prototype.onLookAtObjectChanged = function (event) {\n        this.pNotifyUpdate();\n    };\n    return LookAtController;\n}(ControllerBase_1.ControllerBase));\nexports.LookAtController = LookAtController;\n\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/SpringController\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nvar SpringController = (function (_super) {\n    __extends(SpringController, _super);\n    function SpringController(targetObject, lookAtObject, stiffness, mass, damping) {\n        if (targetObject === void 0) { targetObject = null; }\n        if (lookAtObject === void 0) { lookAtObject = null; }\n        if (stiffness === void 0) { stiffness = 1; }\n        if (mass === void 0) { mass = 40; }\n        if (damping === void 0) { damping = 4; }\n        _super.call(this, targetObject, lookAtObject);\n        /**\n         * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n         */\n        this.positionOffset = new Vector3D_1.Vector3D(0, 500, -1000);\n        this.stiffness = stiffness;\n        this.damping = damping;\n        this.mass = mass;\n        this._velocity = new Vector3D_1.Vector3D();\n        this._dv = new Vector3D_1.Vector3D();\n        this._stretch = new Vector3D_1.Vector3D();\n        this._force = new Vector3D_1.Vector3D();\n        this._acceleration = new Vector3D_1.Vector3D();\n        this._desiredPosition = new Vector3D_1.Vector3D();\n    }\n    SpringController.prototype.update = function (interpolate) {\n        if (interpolate === void 0) { interpolate = true; }\n        var offs;\n        if (!this._pLookAtObject || !this._pTargetObject)\n            return;\n        this._pControllerDirty = true;\n        offs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n        this._desiredPosition.x = this._pLookAtObject.x + offs.x;\n        this._desiredPosition.y = this._pLookAtObject.y + offs.y;\n        this._desiredPosition.z = this._pLookAtObject.z + offs.z;\n        this._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n        this._stretch.scaleBy(-this.stiffness);\n        this._dv.copyFrom(this._velocity);\n        this._dv.scaleBy(this.damping);\n        this._force.x = this._stretch.x - this._dv.x;\n        this._force.y = this._stretch.y - this._dv.y;\n        this._force.z = this._stretch.z - this._dv.z;\n        this._acceleration.copyFrom(this._force);\n        this._acceleration.scaleBy(1 / this.mass);\n        this._velocity.incrementBy(this._acceleration);\n        var position = this._pTargetObject.transform.position.add(this._velocity);\n        this._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n        _super.prototype.update.call(this);\n    };\n    return SpringController;\n}(LookAtController_1.LookAtController));\nexports.SpringController = SpringController;\n\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers\":[function(require,module,exports){\n\"use strict\";\nvar ControllerBase_1 = require(\"./controllers/ControllerBase\");\nexports.ControllerBase = ControllerBase_1.ControllerBase;\nvar FirstPersonController_1 = require(\"./controllers/FirstPersonController\");\nexports.FirstPersonController = FirstPersonController_1.FirstPersonController;\nvar FollowController_1 = require(\"./controllers/FollowController\");\nexports.FollowController = FollowController_1.FollowController;\nvar HoverController_1 = require(\"./controllers/HoverController\");\nexports.HoverController = HoverController_1.HoverController;\nvar LookAtController_1 = require(\"./controllers/LookAtController\");\nexports.LookAtController = LookAtController_1.LookAtController;\nvar SpringController_1 = require(\"./controllers/SpringController\");\nexports.SpringController = SpringController_1.SpringController;\n\n},{\"./controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"./controllers/FirstPersonController\":\"awayjs-display/lib/controllers/FirstPersonController\",\"./controllers/FollowController\":\"awayjs-display/lib/controllers/FollowController\",\"./controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\",\"./controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"./controllers/SpringController\":\"awayjs-display/lib/controllers/SpringController\"}],\"awayjs-display/lib/display/Billboard\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\nvar Billboard = (function (_super) {\n    __extends(Billboard, _super);\n    function Billboard(material, pixelSnapping, smoothing) {\n        var _this = this;\n        if (pixelSnapping === void 0) { pixelSnapping = \"auto\"; }\n        if (smoothing === void 0) { smoothing = false; }\n        _super.call(this);\n        this._pIsEntity = true;\n        this.onInvalidateTextureDelegate = function (event) { return _this.onInvalidateTexture(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this.material = material;\n        this._updateDimensions();\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(Billboard.prototype, \"animator\", {\n        /**\n         * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Billboard.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardRect\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardRect;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardHeight\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"billboardWidth\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._billboardWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Billboard.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            if (this._material) {\n                this._material.iRemoveOwner(this);\n                this._material.removeEventListener(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n            this._material = value;\n            if (this._material) {\n                this._material.iAddOwner(this);\n                this._material.addEventListener(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    Billboard.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.width = this._billboardRect.width;\n        this._pBoxBounds.height = this._billboardRect.height;\n    };\n    Billboard.prototype.clone = function () {\n        var clone = new Billboard(this.material);\n        return clone;\n    };\n    Object.defineProperty(Billboard.prototype, \"style\", {\n        /**\n         * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._onInvalidateProperties();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Billboard.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n    };\n    /**\n     * @private\n     */\n    Billboard.prototype.onInvalidateTexture = function (event) {\n        this._updateDimensions();\n    };\n    Billboard.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    Billboard.prototype._updateDimensions = function () {\n        var texture = this.material.getTextureAt(0);\n        var image = texture ? ((this._style ? this._style.getImageAt(texture) : null) || (this.material.style ? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n        if (image) {\n            var sampler = ((this._style ? this._style.getSamplerAt(texture) : null) || (this.material.style ? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager_1.DefaultMaterialManager.getDefaultSampler());\n            if (sampler.imageRect) {\n                this._billboardWidth = sampler.imageRect.width * image.width;\n                this._billboardHeight = sampler.imageRect.height * image.height;\n            }\n            else {\n                this._billboardWidth = image.rect.width;\n                this._billboardHeight = image.rect.height;\n            }\n            this._billboardRect = sampler.frameRect || new Rectangle_1.Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n        }\n        else {\n            this._billboardWidth = 1;\n            this._billboardHeight = 1;\n            this._billboardRect = new Rectangle_1.Rectangle(0, 0, 1, 1);\n        }\n        this._pInvalidateBounds();\n        this.invalidateElements();\n    };\n    Billboard.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\n    };\n    Billboard.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\n    };\n    Billboard.prototype._onInvalidateProperties = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidateSurface();\n        this._updateDimensions();\n    };\n    Billboard.assetType = \"[asset Billboard]\";\n    return Billboard;\n}(DisplayObject_1.DisplayObject));\nexports.Billboard = Billboard;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/geom/Rectangle\":undefined}],\"awayjs-display/lib/display/Camera\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Plane3D_1 = require(\"awayjs-core/lib/geom/Plane3D\");\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar CameraEvent_1 = require(\"../events/CameraEvent\");\nvar Camera = (function (_super) {\n    __extends(Camera, _super);\n    function Camera(projection) {\n        var _this = this;\n        if (projection === void 0) { projection = null; }\n        _super.call(this);\n        this._viewProjection = new Matrix3D_1.Matrix3D();\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this._pIsEntity = true;\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\n        this._projection = projection || new PerspectiveProjection_1.PerspectiveProjection();\n        this._projection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n        this._frustumPlanes = [];\n        for (var i = 0; i < 6; ++i)\n            this._frustumPlanes[i] = new Plane3D_1.Plane3D();\n        this.z = -1000;\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.NULL;\n    }\n    Object.defineProperty(Camera.prototype, \"assetType\", {\n        //@override\n        get: function () {\n            return Camera.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.onProjectionMatrixChanged = function (event) {\n        this._viewProjectionDirty = true;\n        this._frustumPlanesDirty = true;\n        this.dispatchEvent(event);\n    };\n    Object.defineProperty(Camera.prototype, \"frustumPlanes\", {\n        get: function () {\n            if (this._frustumPlanesDirty)\n                this.updateFrustum();\n            return this._frustumPlanes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Camera.prototype.updateFrustum = function () {\n        var a, b, c;\n        //var d : Number;\n        var c11, c12, c13, c14;\n        var c21, c22, c23, c24;\n        var c31, c32, c33, c34;\n        var c41, c42, c43, c44;\n        var p;\n        var raw = this.viewProjection.rawData;\n        var invLen;\n        c11 = raw[0];\n        c12 = raw[4];\n        c13 = raw[8];\n        c14 = raw[12];\n        c21 = raw[1];\n        c22 = raw[5];\n        c23 = raw[9];\n        c24 = raw[13];\n        c31 = raw[2];\n        c32 = raw[6];\n        c33 = raw[10];\n        c34 = raw[14];\n        c41 = raw[3];\n        c42 = raw[7];\n        c43 = raw[11];\n        c44 = raw[15];\n        // left plane\n        p = this._frustumPlanes[0];\n        a = c41 + c11;\n        b = c42 + c12;\n        c = c43 + c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c14) * invLen;\n        // right plane\n        p = this._frustumPlanes[1];\n        a = c41 - c11;\n        b = c42 - c12;\n        c = c43 - c13;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c14 - c44) * invLen;\n        // bottom\n        p = this._frustumPlanes[2];\n        a = c41 + c21;\n        b = c42 + c22;\n        c = c43 + c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -(c44 + c24) * invLen;\n        // top\n        p = this._frustumPlanes[3];\n        a = c41 - c21;\n        b = c42 - c22;\n        c = c43 - c23;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c24 - c44) * invLen;\n        // near\n        p = this._frustumPlanes[4];\n        a = c31;\n        b = c32;\n        c = c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = -c34 * invLen;\n        // far\n        p = this._frustumPlanes[5];\n        a = c41 - c31;\n        b = c42 - c32;\n        c = c43 - c33;\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\n        p.a = a * invLen;\n        p.b = b * invLen;\n        p.c = c * invLen;\n        p.d = (c34 - c44) * invLen;\n        this._frustumPlanesDirty = false;\n    };\n    Camera.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM) {\n            this._viewProjectionDirty = true;\n            this._frustumPlanesDirty = true;\n        }\n        return false;\n    };\n    Object.defineProperty(Camera.prototype, \"projection\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._projection;\n        },\n        set: function (value) {\n            if (this._projection == value)\n                return;\n            if (!value)\n                throw new Error(\"Projection cannot be null!\");\n            this._projection.removeEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this._projection = value;\n            this._projection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n            this.dispatchEvent(new CameraEvent_1.CameraEvent(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Camera.prototype, \"viewProjection\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._viewProjectionDirty) {\n                this._viewProjection.copyFrom(this.inverseSceneTransform);\n                this._viewProjection.append(this._projection.matrix);\n                this._viewProjectionDirty = false;\n            }\n            return this._viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n     * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The ray from the camera to the scene space position of the given screen coordinates.\n     */\n    Camera.prototype.getRay = function (nX, nY, sZ) {\n        return this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    /**\n     * Calculates the normalised position in screen space of the given scene position.\n     *\n     * @param point3d the position vector of the scene coordinates to be projected.\n     * @return The normalised screen position of the given scene coordinates.\n     */\n    Camera.prototype.project = function (point3d) {\n        return this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n    };\n    /**\n     * Calculates the scene position of the given normalized coordinates in screen space.\n     *\n     * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n     * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\n     * @return The scene position of the given screen coordinates.\n     */\n    Camera.prototype.unproject = function (nX, nY, sZ) {\n        return this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n    };\n    Camera.prototype._applyRenderer = function (renderer) {\n        // Since this getter is invoked every iteration of the render loop, and\n        // the prefab construct could affect the sub-sprites, the prefab is\n        // validated here to give it a chance to rebuild.\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //nothing to do here\n    };\n    Camera.assetType = \"[asset Camera]\";\n    return Camera;\n}(DisplayObjectContainer_1.DisplayObjectContainer));\nexports.Camera = Camera;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"awayjs-core/lib/events/ProjectionEvent\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Plane3D\":undefined,\"awayjs-core/lib/projections/PerspectiveProjection\":undefined}],\"awayjs-display/lib/display/DirectionalLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar DirectionalShadowMapper_1 = require(\"../materials/shadowmappers/DirectionalShadowMapper\");\nvar DirectionalLight = (function (_super) {\n    __extends(DirectionalLight, _super);\n    function DirectionalLight(xDir, yDir, zDir) {\n        if (xDir === void 0) { xDir = 0; }\n        if (yDir === void 0) { yDir = -1; }\n        if (zDir === void 0) { zDir = 1; }\n        _super.call(this);\n        this._pAabbPoints = new Array(24);\n        this._pIsEntity = true;\n        this.direction = new Vector3D_1.Vector3D(xDir, yDir, zDir);\n        this._sceneDirection = new Vector3D_1.Vector3D();\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.NULL;\n    }\n    Object.defineProperty(DirectionalLight.prototype, \"assetType\", {\n        get: function () {\n            return DirectionalLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"sceneDirection\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._sceneDirection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLight.prototype, \"direction\", {\n        get: function () {\n            return this._direction;\n        },\n        set: function (value) {\n            this._direction = value;\n            if (!this._tmpLookAt)\n                this._tmpLookAt = new Vector3D_1.Vector3D();\n            this._tmpLookAt.x = this.x + this._direction.x;\n            this._tmpLookAt.y = this.y + this._direction.y;\n            this._tmpLookAt.z = this.z + this._direction.z;\n            this.lookAt(this._tmpLookAt);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    DirectionalLight.prototype.pUpdateSceneTransform = function () {\n        _super.prototype.pUpdateSceneTransform.call(this);\n        this.sceneTransform.copyColumnTo(2, this._sceneDirection);\n        this._sceneDirection.normalize();\n    };\n    //@override\n    DirectionalLight.prototype.pCreateShadowMapper = function () {\n        return new DirectionalShadowMapper_1.DirectionalShadowMapper();\n    };\n    //override\n    DirectionalLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.Matrix3D();\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        if (!this._projAABBPoints)\n            this._projAABBPoints = [];\n        m.transformVectors(this._pAabbPoints, this._projAABBPoints);\n        var xMin = Infinity, xMax = -Infinity;\n        var yMin = Infinity, yMax = -Infinity;\n        var zMin = Infinity, zMax = -Infinity;\n        var d;\n        for (var i = 0; i < 24;) {\n            d = this._projAABBPoints[i++];\n            if (d < xMin)\n                xMin = d;\n            if (d > xMax)\n                xMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < yMin)\n                yMin = d;\n            if (d > yMax)\n                yMax = d;\n            d = this._projAABBPoints[i++];\n            if (d < zMin)\n                zMin = d;\n            if (d > zMax)\n                zMax = d;\n        }\n        var invXRange = 1 / (xMax - xMin);\n        var invYRange = 1 / (yMax - yMin);\n        var invZRange = 1 / (zMax - zMin);\n        raw[0] = 2 * invXRange;\n        raw[5] = 2 * invYRange;\n        raw[10] = invZRange;\n        raw[12] = -(xMax + xMin) * invXRange;\n        raw[13] = -(yMax + yMin) * invYRange;\n        raw[14] = -zMin * invZRange;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        raw[15] = 1;\n        if (!target)\n            target = new Matrix3D_1.Matrix3D();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DirectionalLight.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        //update points\n        var minX = this._pBoxBounds.x;\n        var minY = this._pBoxBounds.y - this._pBoxBounds.height;\n        var minZ = this._pBoxBounds.z;\n        var maxX = this._pBoxBounds.x + this._pBoxBounds.width;\n        var maxY = this._pBoxBounds.y;\n        var maxZ = this._pBoxBounds.z + this._pBoxBounds.depth;\n        this._pAabbPoints[0] = minX;\n        this._pAabbPoints[1] = minY;\n        this._pAabbPoints[2] = minZ;\n        this._pAabbPoints[3] = maxX;\n        this._pAabbPoints[4] = minY;\n        this._pAabbPoints[5] = minZ;\n        this._pAabbPoints[6] = minX;\n        this._pAabbPoints[7] = maxY;\n        this._pAabbPoints[8] = minZ;\n        this._pAabbPoints[9] = maxX;\n        this._pAabbPoints[10] = maxY;\n        this._pAabbPoints[11] = minZ;\n        this._pAabbPoints[12] = minX;\n        this._pAabbPoints[13] = minY;\n        this._pAabbPoints[14] = maxZ;\n        this._pAabbPoints[15] = maxX;\n        this._pAabbPoints[16] = minY;\n        this._pAabbPoints[17] = maxZ;\n        this._pAabbPoints[18] = minX;\n        this._pAabbPoints[19] = maxY;\n        this._pAabbPoints[20] = maxZ;\n        this._pAabbPoints[21] = maxX;\n        this._pAabbPoints[22] = maxY;\n        this._pAabbPoints[23] = maxZ;\n    };\n    DirectionalLight.assetType = \"[light DirectionalLight]\";\n    return DirectionalLight;\n}(LightBase_1.LightBase));\nexports.DirectionalLight = DirectionalLight;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/DisplayObjectContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar RangeError_1 = require(\"awayjs-core/lib/errors/RangeError\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nvar DisplayObjectContainer = (function (_super) {\n    __extends(DisplayObjectContainer, _super);\n    /**\n     * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n     * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n     * constructors for the following subclasses of DisplayObjectContainer:\n     * <ul>\n     *   <li><code>new Loader()</code></li>\n     *   <li><code>new Sprite()</code></li>\n     *   <li><code>new MovieClip()</code></li>\n     * </ul>\n     */\n    function DisplayObjectContainer() {\n        _super.call(this);\n        this._mouseChildren = true;\n        this._depth_childs = {};\n        this._nextHighestDepth = 0;\n        this._children = new Array();\n    }\n    Object.defineProperty(DisplayObjectContainer.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return DisplayObjectContainer.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"mouseChildren\", {\n        /**\n         * Determines whether or not the children of the object are mouse, or user\n         * input device, enabled. If an object is enabled, a user can interact with\n         * it by using a mouse or user input device. The default is\n         * <code>true</code>.\n         *\n         * <p>This property is useful when you create a button with an instance of\n         * the Sprite class(instead of using the SimpleButton class). When you use a\n         * Sprite instance to create a button, you can choose to decorate the button\n         * by using the <code>addChild()</code> method to add additional Sprite\n         * instances. This process can cause unexpected behavior with mouse events\n         * because the Sprite instances you add as children can become the target\n         * object of a mouse event when you expect the parent instance to be the\n         * target object. To ensure that the parent instance serves as the target\n         * objects for mouse events, you can set the <code>mouseChildren</code>\n         * property of the parent instance to <code>false</code>.</p>\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED)\n                this._updateMouseEnabled();\n            return this._mouseChildren;\n        },\n        set: function (value) {\n            if (this._mouseChildren == value)\n                return;\n            this._mouseChildren = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectContainer.prototype, \"numChildren\", {\n        /**\n         * Returns the number of children of this object.\n         */\n        get: function () {\n            return this._children.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added to the front(top) of all other children in\n     * this DisplayObjectContainer instance.(To add a child to a specific index\n     * position, use the <code>addChildAt()</code> method.)\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n     * problems with a published SWF file, including security problems and\n     * conflicts with other loaded SWF files. There is only one Stage within a\n     * Flash runtime instance, no matter how many SWF files you load into the\n     * runtime. So, generally, objects should not be added to the Stage,\n     * directly, at all. The only object the Stage should contain is the root\n     * object. Create a DisplayObjectContainer to contain all of the items on the\n     * display list. Then, if necessary, add that DisplayObjectContainer instance\n     * to the Stage.</p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChild = function (child) {\n        return this.addChildAt(child, this._children.length);\n    };\n    DisplayObjectContainer.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        if (child == null)\n            throw new ArgumentError_1.ArgumentError(\"Parameter child cannot be null.\");\n        //if child already has a parent, remove it.\n        if (child._pParent)\n            child._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n        var index = this.getDepthIndexInternal(depth);\n        if (index != -1) {\n            if (replace) {\n                this.removeChildAt(index);\n            }\n            else {\n                //move depth of existing child up by 1\n                this.addChildAtDepth(this._children[index], depth + 1, false);\n            }\n        }\n        if (this._nextHighestDepth < depth + 1)\n            this._nextHighestDepth = depth + 1;\n        this._depth_childs[depth] = child;\n        this._children.push(child);\n        child._depthID = depth;\n        child.iSetParent(this);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\n     * instance. The child is added at the index position specified. An index of\n     * 0 represents the back(bottom) of the display list for this\n     * DisplayObjectContainer object.\n     *\n     * <p>For example, the following example shows three display objects, labeled\n     * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n     *\n     * <p>If you add a child object that already has a different display object\n     * container as a parent, the object is removed from the child list of the\n     * other display object container. </p>\n     *\n     * @param child The DisplayObject instance to add as a child of this\n     *              DisplayObjectContainer instance.\n     * @param index The index position to which the child is added. If you\n     *              specify a currently occupied index position, the child object\n     *              that exists at that position and all higher positions are\n     *              moved up one position in the child list.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\n     *                       throws if the caller is a child(or grandchild etc.)\n     *                       of the child being added.\n     * @throws RangeError    Throws if the index position does not exist in the\n     *                       child list.\n     * @event added Dispatched when a display object is added to the display\n     *              list.\n     */\n    DisplayObjectContainer.prototype.addChildAt = function (child, index) {\n        return this.addChildAtDepth(child, (index < this._children.length) ? this._children[index]._depthID : this.getNextHighestDepth(), false);\n    };\n    DisplayObjectContainer.prototype.addChildren = function () {\n        var childarray = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            childarray[_i - 0] = arguments[_i];\n        }\n        var len = childarray.length;\n        for (var i = 0; i < len; i++)\n            this.addChild(childarray[i]);\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.clone = function () {\n        var newInstance = new DisplayObjectContainer();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObjectContainer.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.mouseChildren = this._mouseChildren;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            newInstance.addChild(this._children[i].clone());\n    };\n    /**\n     * Determines whether the specified display object is a child of the\n     * DisplayObjectContainer instance or the instance itself. The search\n     * includes the entire display list including this DisplayObjectContainer\n     * instance. Grandchildren, great-grandchildren, and so on each return\n     * <code>true</code>.\n     *\n     * @param child The child object to test.\n     * @return <code>true</code> if the <code>child</code> object is a child of\n     *         the DisplayObjectContainer or the container itself; otherwise\n     *         <code>false</code>.\n     */\n    DisplayObjectContainer.prototype.contains = function (child) {\n        return this._children.indexOf(child) >= 0;\n    };\n    /**\n     *\n     */\n    DisplayObjectContainer.prototype.disposeValues = function () {\n        for (var i = this._children.length - 1; i >= 0; i--)\n            this.removeChild(this._children[i]);\n        _super.prototype.disposeValues.call(this);\n    };\n    DisplayObjectContainer.prototype.getChildAtDepth = function (depth) {\n        return this._depth_childs[depth];\n    };\n    /**\n     * Returns the child display object instance that exists at the specified\n     * index.\n     *\n     * @param index The index position of the child object.\n     * @return The child display object at the specified index position.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.getChildAt = function (index) {\n        var child = this._children[index];\n        if (child == null)\n            throw new RangeError_1.RangeError(\"Index does not exist in the child list of the caller\");\n        return child;\n    };\n    /**\n     * Returns the child display object that exists with the specified name. If\n     * more that one child display object has the specified name, the method\n     * returns the first object in the child list.\n     *\n     * <p>The <code>getChildAt()</code> method is faster than the\n     * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n     * accesses a child from a cached array, whereas the\n     * <code>getChildByName()</code> method has to traverse a linked list to\n     * access a child.</p>\n     *\n     * @param name The name of the child to return.\n     * @return The child display object with the specified name.\n     */\n    DisplayObjectContainer.prototype.getChildByName = function (name) {\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            if (this._children[i].name == name)\n                return this._children[i];\n        return null;\n    };\n    /**\n     * Returns the index position of a <code>child</code> DisplayObject instance.\n     *\n     * @param child The DisplayObject instance to identify.\n     * @return The index position of the child display object to identify.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.getChildIndex = function (child) {\n        var childIndex = this._children.indexOf(child);\n        if (childIndex == -1)\n            throw new ArgumentError_1.ArgumentError(\"Child parameter is not a child of the caller\");\n        return childIndex;\n    };\n    DisplayObjectContainer.prototype.getNextHighestDepth = function () {\n        if (this._nextHighestDepthDirty)\n            this._updateNextHighestDepth();\n        return this._nextHighestDepth;\n    };\n    /**\n     * Returns an array of objects that lie under the specified point and are\n     * children(or grandchildren, and so on) of this DisplayObjectContainer\n     * instance. Any child objects that are inaccessible for security reasons are\n     * omitted from the returned array. To determine whether this security\n     * restriction affects the returned array, call the\n     * <code>areInaccessibleObjectsUnderPoint()</code> method.\n     *\n     * <p>The <code>point</code> parameter is in the coordinate space of the\n     * Stage, which may differ from the coordinate space of the display object\n     * container(unless the display object container is the Stage). You can use\n     * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n     * methods to convert points between these coordinate spaces.</p>\n     *\n     * @param point The point under which to look.\n     * @return An array of objects that lie under the specified point and are\n     *         children(or grandchildren, and so on) of this\n     *         DisplayObjectContainer instance.\n     */\n    DisplayObjectContainer.prototype.getObjectsUnderPoint = function (point) {\n        return new Array();\n    };\n    /**\n     * Removes the specified <code>child</code> DisplayObject instance from the\n     * child list of the DisplayObjectContainer instance. The <code>parent</code>\n     * property of the removed child is set to <code>null</code> , and the object\n     * is garbage collected if no other references to the child exist. The index\n     * positions of any display objects above the child in the\n     * DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param child The DisplayObject instance to remove.\n     * @return The DisplayObject instance that you pass in the <code>child</code>\n     *         parameter.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     */\n    DisplayObjectContainer.prototype.removeChild = function (child) {\n        if (child == null)\n            throw new ArgumentError_1.ArgumentError(\"Parameter child cannot be null\");\n        this.removeChildAt(this.getChildIndex(child));\n        return child;\n    };\n    DisplayObjectContainer.prototype.removeChildAtDepth = function (depth) {\n        return this.removeChildAt(this.getDepthIndexInternal(depth));\n    };\n    /**\n     * Removes a child DisplayObject from the specified <code>index</code>\n     * position in the child list of the DisplayObjectContainer. The\n     * <code>parent</code> property of the removed child is set to\n     * <code>null</code>, and the object is garbage collected if no other\n     * references to the child exist. The index positions of any display objects\n     * above the child in the DisplayObjectContainer are decreased by 1.\n     *\n     * <p>The garbage collector reallocates unused memory space. When a variable\n     * or object is no longer actively referenced or stored somewhere, the\n     * garbage collector sweeps through and wipes out the memory space it used to\n     * occupy if no other references to it exist.</p>\n     *\n     * @param index The child index of the DisplayObject to remove.\n     * @return The DisplayObject instance that was removed.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     * @throws SecurityError This child display object belongs to a sandbox to\n     *                       which the calling object does not have access. You\n     *                       can avoid this situation by having the child movie\n     *                       call the <code>Security.allowDomain()</code> method.\n     */\n    DisplayObjectContainer.prototype.removeChildAt = function (index) {\n        var child = this.removeChildAtInternal(index);\n        child.iSetParent(null);\n        this._invalidateChildren();\n        return child;\n    };\n    /**\n     * Removes all <code>child</code> DisplayObject instances from the child list\n     * of the DisplayObjectContainer instance. The <code>parent</code> property\n     * of the removed children is set to <code>null</code>, and the objects are\n     * garbage collected if no other references to the children exist.\n     *\n     * The garbage collector reallocates unused memory space. When a variable or\n     * object is no longer actively referenced or stored somewhere, the garbage\n     * collector sweeps through and wipes out the memory space it used to occupy\n     * if no other references to it exist.\n     *\n     * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n     * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n     * @throws RangeError    Throws if the beginIndex or endIndex positions do\n     *                       not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.removeChildren = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = 0; }\n        if (endIndex === void 0) { endIndex = 2147483647; }\n        if (beginIndex < 0)\n            throw new RangeError_1.RangeError(\"beginIndex is out of range of the child list\");\n        if (endIndex > this._children.length)\n            throw new RangeError_1.RangeError(\"endIndex is out of range of the child list\");\n        for (var i = beginIndex; i < endIndex; i++)\n            this.removeChild(this._children[i]);\n    };\n    /**\n     * Changes the position of an existing child in the display object container.\n     * This affects the layering of child objects. For example, the following\n     * example shows three display objects, labeled a, b, and c, at index\n     * positions 0, 1, and 2, respectively:\n     *\n     * <p>When you use the <code>setChildIndex()</code> method and specify an\n     * index position that is already occupied, the only positions that change\n     * are those in between the display object's former and new position. All\n     * others will stay the same. If a child is moved to an index LOWER than its\n     * current index, all children in between will INCREASE by 1 for their index\n     * reference. If a child is moved to an index HIGHER than its current index,\n     * all children in between will DECREASE by 1 for their index reference. For\n     * example, if the display object container in the previous example is named\n     * <code>container</code>, you can swap the position of the display objects\n     * labeled a and b by calling the following code:</p>\n     *\n     * <p>This code results in the following arrangement of objects:</p>\n     *\n     * @param child The child DisplayObject instance for which you want to change\n     *              the index number.\n     * @param index The resulting index number for the <code>child</code> display\n     *              object.\n     * @throws ArgumentError Throws if the child parameter is not a child of this\n     *                       object.\n     * @throws RangeError    Throws if the index does not exist in the child\n     *                       list.\n     */\n    DisplayObjectContainer.prototype.setChildIndex = function (child, index) {\n        //TODO\n    };\n    /**\n     * Swaps the z-order (front-to-back order) of the two specified child\n     * objects. All other child objects in the display object container remain in\n     * the same index positions.\n     *\n     * @param child1 The first child object.\n     * @param child2 The second child object.\n     * @throws ArgumentError Throws if either child parameter is not a child of\n     *                       this object.\n     */\n    DisplayObjectContainer.prototype.swapChildren = function (child1, child2) {\n        this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\n    };\n    /**\n     * Swaps the z-order(front-to-back order) of the child objects at the two\n     * specified index positions in the child list. All other child objects in\n     * the display object container remain in the same index positions.\n     *\n     * @param index1 The index position of the first child object.\n     * @param index2 The index position of the second child object.\n     * @throws RangeError If either index does not exist in the child list.\n     */\n    DisplayObjectContainer.prototype.swapChildrenAt = function (index1, index2) {\n        var depth = this._children[index2]._depthID;\n        var child = this._children[index1];\n        this.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n        this.addChildAtDepth(child, depth);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    DisplayObjectContainer.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        var box;\n        var numChildren = this._children.length;\n        if (numChildren > 0) {\n            var min;\n            var max;\n            var minX, minY, minZ;\n            var maxX, maxY, maxZ;\n            for (var i = 0; i < numChildren; ++i) {\n                box = this._children[i].getBox(this);\n                if (i == 0) {\n                    maxX = box.width + (minX = box.x);\n                    maxY = box.height + (minY = box.y);\n                    maxZ = box.depth + (minZ = box.z);\n                }\n                else {\n                    max = box.width + (min = box.x);\n                    if (min < minX)\n                        minX = min;\n                    if (max > maxX)\n                        maxX = max;\n                    max = box.height + (min = box.y);\n                    if (min < minY)\n                        minY = min;\n                    if (max > maxY)\n                        maxY = max;\n                    max = box.depth + (min = box.z);\n                    if (min < minZ)\n                        minZ = min;\n                    if (max > maxZ)\n                        maxZ = max;\n                }\n            }\n            this._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n            this._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n            this._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n        }\n        else {\n            this._pBoxBounds.setBoundIdentity();\n        }\n    };\n    /**\n     * @protected\n     */\n    DisplayObjectContainer.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\n            return true;\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i].pInvalidateHierarchicalProperties(bitFlag);\n        return false;\n    };\n    /**\n     * @internal\n     */\n    DisplayObjectContainer.prototype._iSetScene = function (value, partition) {\n        _super.prototype._iSetScene.call(this, value, partition);\n        var len = this._children.length;\n        for (var i = 0; i < len; ++i)\n            this._children[i]._iSetScene(value, partition);\n    };\n    /**\n     * @private\n     *\n     * @param child\n     */\n    DisplayObjectContainer.prototype.removeChildAtInternal = function (index) {\n        var child = this._children.splice(index, 1)[0];\n        //update next highest depth\n        if (this._nextHighestDepth == child._depthID + 1)\n            this._nextHighestDepthDirty = true;\n        delete this._depth_childs[child._depthID];\n        child._depthID = -16384;\n        return child;\n    };\n    DisplayObjectContainer.prototype.getDepthIndexInternal = function (depth) {\n        if (!this._depth_childs[depth])\n            return -1;\n        return this._children.indexOf(this._depth_childs[depth]);\n    };\n    DisplayObjectContainer.prototype._updateNextHighestDepth = function () {\n        this._nextHighestDepthDirty = false;\n        this._nextHighestDepth = 0;\n        var len = this._children.length;\n        for (var i = 0; i < len; i++)\n            if (this._nextHighestDepth < this._children[i]._depthID)\n                this._nextHighestDepth = this._children[i]._depthID;\n        this._nextHighestDepth += 1;\n    };\n    DisplayObjectContainer.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        var numChildren = this._children.length;\n        for (var i = 0; i < numChildren; i++)\n            if (this._children[i].hitTestPoint(x, y, shapeFlag, masksFlag))\n                return true;\n        return false;\n    };\n    DisplayObjectContainer.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseChildren = false;\n        _super.prototype._updateMaskMode.call(this);\n    };\n    DisplayObjectContainer.prototype._invalidateChildren = function () {\n        if (this._pIsContainer != Boolean(this._children.length)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsContainer = Boolean(this._children.length);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    DisplayObjectContainer.assetType = \"[asset DisplayObjectContainer]\";\n    return DisplayObjectContainer;\n}(DisplayObject_1.DisplayObject));\nexports.DisplayObjectContainer = DisplayObjectContainer;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/errors/RangeError\":undefined}],\"awayjs-display/lib/display/DisplayObject\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar AlignmentMode_1 = require(\"../base/AlignmentMode\");\nvar OrientationMode_1 = require(\"../base/OrientationMode\");\nvar Transform_1 = require(\"../base/Transform\");\nvar PickingCollision_1 = require(\"../pick/PickingCollision\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n *\n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nvar DisplayObject = (function (_super) {\n    __extends(DisplayObject, _super);\n    /**\n     * Creates a new <code>DisplayObject</code> instance.\n     */\n    function DisplayObject() {\n        var _this = this;\n        _super.call(this);\n        this._queuedEvents = new Array();\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._pSceneTransform = new Matrix3D_1.Matrix3D();\n        this._pIsEntity = false;\n        this._pIsContainer = false;\n        this._sessionID = -1;\n        this._depthID = -16384;\n        this._inverseSceneTransform = new Matrix3D_1.Matrix3D();\n        this._scenePosition = new Vector3D_1.Vector3D();\n        this._explicitVisibility = true;\n        this._explicitMaskId = -1;\n        this._pImplicitVisibility = true;\n        this._pImplicitMaskId = -1;\n        this._pImplicitMaskIds = new Array();\n        this._explicitMouseEnabled = true;\n        this._pImplicitMouseEnabled = true;\n        this._orientationMatrix = new Matrix3D_1.Matrix3D();\n        this._inheritColorTransform = false;\n        this._maskMode = false;\n        //temp vector used in global to local\n        this._tempVector3D = new Vector3D_1.Vector3D();\n        /**\n         *\n         */\n        this.alignmentMode = AlignmentMode_1.AlignmentMode.REGISTRATION_POINT;\n        /**\n         *\n         */\n        this.castsShadows = true;\n        /**\n         *\n         */\n        this.orientationMode = OrientationMode_1.OrientationMode.DEFAULT;\n        /**\n         *\n         */\n        this.zOffset = 0;\n        //creation of associated transform object\n        this._transform = new Transform_1.Transform();\n        //setup transform listeners\n        this._transform.addEventListener(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, function (event) { return _this._onInvalidateMatrix3D(event); });\n        this._transform.addEventListener(TransformEvent_1.TransformEvent.INVALIDATE_COLOR_TRANSFORM, function (event) { return _this._onInvalidateColorTransform(event); });\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(DisplayObject.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inheritColorTransform\", {\n        get: function () {\n            return this._inheritColorTransform;\n        },\n        set: function (value) {\n            if (this._inheritColorTransform == value)\n                return;\n            this._inheritColorTransform = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"alpha\", {\n        /**\n         * Indicates the alpha transparency value of the object specified. Valid\n         * values are 0(fully transparent) to 1(fully opaque). The default value is\n         * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n         * even though they are invisible.\n         */\n        get: function () {\n            return this._transform.colorTransform ? this._transform.colorTransform.alphaMultiplier : 1;\n        },\n        set: function (value) {\n            if (!this._transform.colorTransform)\n                this._transform.colorTransform = new ColorTransform_1.ColorTransform();\n            this._transform.colorTransform.alphaMultiplier = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"boundsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._boundsType;\n        },\n        set: function (value) {\n            if (this._boundsType == value)\n                return;\n            this._boundsType = value;\n            this.invalidate();\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"depth\", {\n        /**\n         * Indicates the depth of the display object, in pixels. The depth is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>depth</code> property, the <code>scaleZ</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a depth of 0, even if you try to\n         * set <code>depth</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().depth * this.scaleZ;\n        },\n        set: function (val) {\n            if (this._depth == val)\n                return;\n            this._depth = val;\n            this._setScaleZ(val / this.getBox().depth);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"eulers\", {\n        /**\n         * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n         */\n        get: function () {\n            if (!this._eulers)\n                this._eulers = new Vector3D_1.Vector3D();\n            this._eulers.x = this.rotationX;\n            this._eulers.y = this.rotationY;\n            this._eulers.z = this.rotationZ;\n            return this._eulers;\n        },\n        set: function (value) {\n            this.rotationX = value.x;\n            this.rotationY = value.y;\n            this.rotationZ = value.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"height\", {\n        /**\n         * An indexed array that contains each filter object currently associated\n         * with the display object. The flash.filters package contains several\n         * classes that define specific filters you can use.\n         *\n         * <p>Filters can be applied in Flash Professional at design time, or at run\n         * time by using ActionScript code. To apply a filter by using ActionScript,\n         * you must make a temporary copy of the entire <code>filters</code> array,\n         * modify the temporary array, then assign the value of the temporary array\n         * back to the <code>filters</code> array. You cannot directly add a new\n         * filter object to the <code>filters</code> array.</p>\n         *\n         * <p>To add a filter by using ActionScript, perform the following steps\n         * (assume that the target display object is named\n         * <code>myDisplayObject</code>):</p>\n         *\n         * <ol>\n         *   <li>Create a new filter object by using the constructor method of your\n         * chosen filter class.</li>\n         *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n         * to a temporary array, such as one named <code>myFilters</code>.</li>\n         *   <li>Add the new filter object to the <code>myFilters</code> temporary\n         * array.</li>\n         *   <li>Assign the value of the temporary array to the\n         * <code>myDisplayObject.filters</code> array.</li>\n         * </ol>\n         *\n         * <p>If the <code>filters</code> array is undefined, you do not need to use\n         * a temporary array. Instead, you can directly assign an array literal that\n         * contains one or more filter objects that you create. The first example in\n         * the Examples section adds a drop shadow filter by using code that handles\n         * both defined and undefined <code>filters</code> arrays.</p>\n         *\n         * <p>To modify an existing filter object, you must use the technique of\n         * modifying a copy of the <code>filters</code> array:</p>\n         *\n         * <ol>\n         *   <li>Assign the value of the <code>filters</code> array to a temporary\n         * array, such as one named <code>myFilters</code>.</li>\n         *   <li>Modify the property by using the temporary array,\n         * <code>myFilters</code>. For example, to set the quality property of the\n         * first filter in the array, you could use the following code:\n         * <code>myFilters[0].quality = 1;</code></li>\n         *   <li>Assign the value of the temporary array to the <code>filters</code>\n         * array.</li>\n         * </ol>\n         *\n         * <p>At load time, if a display object has an associated filter, it is\n         * marked to cache itself as a transparent bitmap. From this point forward,\n         * as long as the display object has a valid filter list, the player caches\n         * the display object as a bitmap. This source bitmap is used as a source\n         * image for the filter effects. Each display object usually has two bitmaps:\n         * one with the original unfiltered source display object and another for the\n         * final image after filtering. The final image is used when rendering. As\n         * long as the display object does not change, the final image does not need\n         * updating.</p>\n         *\n         * <p>The flash.filters package includes classes for filters. For example, to\n         * create a DropShadow filter, you would write:</p>\n         *\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader output type is not compatible with\n         *                       this operation(the shader must specify a\n         *                       <code>pixel4</code> output).\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader doesn't specify any image input or\n         *                       the first input is not an <code>image4</code> input.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n         *                       and the shader specifies an image input that isn't\n         *                       provided.\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n         *                       ByteArray or Vector.<Number> instance as a shader\n         *                       input, and the <code>width</code> and\n         *                       <code>height</code> properties aren't specified for\n         *                       the ShaderInput object, or the specified values\n         *                       don't match the amount of data in the input data.\n         *                       See the <code>ShaderInput.input</code> property for\n         *                       more information.\n         */\n        //\t\tpublic filters:Array<Dynamic>;\n        /**\n         * Indicates the height of the display object, in pixels. The height is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>height</code> property, the <code>scaleY</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content (such as an empty sprite) has a height of 0, even if you try to\n         * set <code>height</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().height * this.scaleY;\n        },\n        set: function (val) {\n            if (this._height == val)\n                return;\n            this._height = val;\n            this._setScaleY(val / this.getBox().height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"index\", {\n        /**\n         * Indicates the instance container index of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByIndex()</code> method of the display object\n         * container.\n         *\n         * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n         */\n        get: function () {\n            if (this._pParent)\n                return this._pParent.getChildIndex(this);\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"inverseSceneTransform\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._inverseSceneTransformDirty) {\n                this._inverseSceneTransform.copyFrom(this.sceneTransform);\n                this._inverseSceneTransform.invert();\n                this._inverseSceneTransformDirty = false;\n            }\n            return this._inverseSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsEntity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"isContainer\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pIsContainer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"loaderInfo\", {\n        /**\n         * Returns a LoaderInfo object containing information about loading the file\n         * to which this display object belongs. The <code>loaderInfo</code> property\n         * is defined only for the root display object of a SWF file or for a loaded\n         * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n         * <code>loaderInfo</code> object associated with the SWF file that contains\n         * a display object named <code>myDisplayObject</code>, use\n         * <code>myDisplayObject.root.loaderInfo</code>.\n         *\n         * <p>A large SWF file can monitor its download by calling\n         * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n         * func)</code>.</p>\n         */\n        get: function () {\n            return this._loaderInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"maskMode\", {\n        get: function () {\n            return this._maskMode;\n        },\n        set: function (value) {\n            if (this._maskMode == value)\n                return;\n            this._maskMode = value;\n            this._explicitMaskId = value ? this.id : -1;\n            this._updateMaskMode();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseEnabled\", {\n        /**\n         * Specifies whether this object receives mouse, or other user input,\n         * messages. The default value is <code>true</code>, which means that by\n         * default any InteractiveObject instance that is on the display list\n         * receives mouse events or other user input events. If\n         * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n         * not receive any mouse events(or other user input events like keyboard\n         * events). Any children of this instance on the display list are not\n         * affected. To change the <code>mouseEnabled</code> behavior for all\n         * children of an object on the display list, use\n         * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n         *\n         * <p> No event is dispatched by setting this property. You must use the\n         * <code>addEventListener()</code> method to create interactive\n         * functionality.</p>\n         */\n        get: function () {\n            return this._explicitMouseEnabled;\n        },\n        set: function (value) {\n            if (this._explicitMouseEnabled == value)\n                return;\n            this._explicitMouseEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseX\", {\n        /**\n         * Indicates the x coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"mouseY\", {\n        /**\n         * Indicates the y coordinate of the mouse or user input device position, in\n         * pixels.\n         *\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n         * coordinate will reflect the non-rotated object.</p>\n         */\n        get: function () {\n            return this._mouseY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"name\", {\n        /**\n         * Indicates the instance name of the DisplayObject. The object can be\n         * identified in the child list of its parent display object container by\n         * calling the <code>getChildByName()</code> method of the display object\n         * container.\n         *\n         * @throws IllegalOperationError If you are attempting to set this property\n         *                               on an object that was placed on the timeline\n         *                               in the Flash authoring tool.\n         */\n        get: function () {\n            return this._pName;\n        },\n        set: function (value) {\n            this._pName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"parent\", {\n        /**\n         * Indicates the DisplayObjectContainer object that contains this display\n         * object. Use the <code>parent</code> property to specify a relative path to\n         * display objects that are above the current display object in the display\n         * list hierarchy.\n         *\n         * <p>You can use <code>parent</code> to move up multiple levels in the\n         * display list as in the following:</p>\n         *\n         * @throws SecurityError The parent display object belongs to a security\n         *                       sandbox to which you do not have access. You can\n         *                       avoid this situation by having the parent movie call\n         *                       the <code>Security.allowDomain()</code> method.\n         */\n        get: function () {\n            return this._pParent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"partition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._explicitPartition;\n        },\n        set: function (value) {\n            if (this._explicitPartition == value)\n                return;\n            this._explicitPartition = value;\n            this._iSetScene(this._pScene, this._pParent ? this._pParent._iAssignedPartition : null);\n            this.dispatchEvent(new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"pivot\", {\n        /**\n         * Defines the local point around which the object rotates.\n         */\n        get: function () {\n            return this._pivot;\n        },\n        set: function (pivot) {\n            if (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n                return;\n            if (!pivot) {\n                this._pivot = null;\n                this._pivotScale = null;\n            }\n            else {\n                if (!this._pivot)\n                    this._pivot = new Vector3D_1.Vector3D();\n                this._pivot.x = pivot.x;\n                this._pivot.y = pivot.y;\n                this._pivot.z = pivot.z;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"root\", {\n        /**\n         * For a display object in a loaded SWF file, the <code>root</code> property\n         * is the top-most display object in the portion of the display list's tree\n         * structure represented by that SWF file. For a Bitmap object representing a\n         * loaded image file, the <code>root</code> property is the Bitmap object\n         * itself. For the instance of the main class of the first SWF file loaded,\n         * the <code>root</code> property is the display object itself. The\n         * <code>root</code> property of the Scene object is the Scene object itself.\n         * The <code>root</code> property is set to <code>null</code> for any display\n         * object that has not been added to the display list, unless it has been\n         * added to a display object container that is off the display list but that\n         * is a child of the top-most display object in a loaded SWF file.\n         *\n         * <p>For example, if you create a new Sprite object by calling the\n         * <code>Sprite()</code> constructor method, its <code>root</code> property\n         * is <code>null</code> until you add it to the display list(or to a display\n         * object container that is off the display list but that is a child of the\n         * top-most display object in a SWF file).</p>\n         *\n         * <p>For a loaded SWF file, even though the Loader object used to load the\n         * file may not be on the display list, the top-most display object in the\n         * SWF file has its <code>root</code> property set to itself. The Loader\n         * object does not have its <code>root</code> property set until it is added\n         * as a child of a display object for which the <code>root</code> property is\n         * set.</p>\n         */\n        get: function () {\n            return this._root;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationX\", {\n        /**\n         * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.x * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationX == val)\n                return;\n            this._transform.rotation.x = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationY\", {\n        /**\n         * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.y * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationY == val)\n                return;\n            this._transform.rotation.y = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"rotationZ\", {\n        /**\n         * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n         * from its original orientation relative to the 3D parent container. Values\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\n         * represent counterclockwise rotation. Values outside this range are added\n         * to or subtracted from 360 to obtain a value within the range.\n         */\n        get: function () {\n            return this._transform.rotation.z * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        },\n        set: function (val) {\n            if (this.rotationZ == val)\n                return;\n            this._transform.rotation.z = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleX\", {\n        /**\n         * Indicates the horizontal scale(percentage) of the object as applied from\n         * the registration point. The default registration point is(0,0). 1.0\n         * equals 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.x;\n        },\n        set: function (val) {\n            //remove absolute width\n            this._width = null;\n            this._setScaleX(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleY\", {\n        /**\n         * Indicates the vertical scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\n         * <code>y</code> property values, which are defined in whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.y;\n        },\n        set: function (val) {\n            //remove absolute height\n            this._height = null;\n            this._setScaleY(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scaleZ\", {\n        /**\n         * Indicates the depth scale(percentage) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         * 1.0 is 100% scale.\n         *\n         * <p>Scaling the local coordinate system changes the <code>x</code>,\n         * <code>y</code> and <code>z</code> property values, which are defined in\n         * whole pixels. </p>\n         */\n        get: function () {\n            return this._transform.scale.z;\n        },\n        set: function (val) {\n            //remove absolute depth\n            this._depth = null;\n            this._setScaleZ(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewX\", {\n        /**\n         * Indicates the horizontal skew(angle) of the object as applied from\n         * the registration point. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.x;\n        },\n        set: function (val) {\n            if (this.skewX == val)\n                return;\n            this._transform.skew.x = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewY\", {\n        /**\n         * Indicates the vertical skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.y;\n        },\n        set: function (val) {\n            if (this.skewY == val)\n                return;\n            this._transform.skew.y = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"skewZ\", {\n        /**\n         * Indicates the depth skew(angle) of an object as applied from the\n         * registration point of the object. The default registration point is(0,0).\n         */\n        get: function () {\n            return this._transform.skew.z;\n        },\n        set: function (val) {\n            if (this.skewZ == val)\n                return;\n            this._transform.skew.z = val;\n            this._transform.invalidateMatrix3D();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scene\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._pScene;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"scenePosition\", {\n        /**\n         *\n         */\n        get: function () {\n            if (this._scenePositionDirty) {\n                if (this._pivot && this.alignmentMode == AlignmentMode_1.AlignmentMode.PIVOT_POINT) {\n                    this._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n                }\n                else {\n                    this.sceneTransform.copyColumnTo(3, this._scenePosition);\n                }\n                this._scenePositionDirty = false;\n            }\n            return this._scenePosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"sceneTransform\", {\n        get: function () {\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM)\n                this.pUpdateSceneTransform();\n            return this._pSceneTransform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"shaderPickingDetails\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._shaderPickingDetails;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"debugVisible\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._debugVisible;\n        },\n        set: function (value) {\n            if (value == this._debugVisible)\n                return;\n            this._debugVisible = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"transform\", {\n        /**\n         * An object with properties pertaining to a display object's matrix, color\n         * transform, and pixel bounds. The specific properties  -  matrix,\n         * colorTransform, and three read-only properties\n         * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n         * and <code>pixelBounds</code>)  -  are described in the entry for the\n         * Transform class.\n         *\n         * <p>Each of the transform object's properties is itself an object. This\n         * concept is important because the only way to set new values for the matrix\n         * or colorTransform objects is to create a new object and copy that object\n         * into the transform.matrix or transform.colorTransform property.</p>\n         *\n         * <p>For example, to increase the <code>tx</code> value of a display\n         * object's matrix, you must make a copy of the entire matrix object, then\n         * copy the new object into the matrix property of the transform object:</p>\n         * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n         * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n         * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n         *\n         * <p>You cannot directly set the <code>tx</code> property. The following\n         * code has no effect on <code>myDisplayObject</code>: </p>\n         * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n         * 10; </code></pre>\n         *\n         * <p>You can also copy an entire transform object and assign it to another\n         * display object's transform property. For example, the following code\n         * copies the entire transform object from <code>myOldDisplayObj</code> to\n         * <code>myNewDisplayObj</code>:</p>\n         * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n         *\n         * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n         * same values for its matrix, color transform, and pixel bounds as the old\n         * display object, <code>myOldDisplayObj</code>.</p>\n         *\n         * <p>Note that AIR for TV devices use hardware acceleration, if it is\n         * available, for color transforms.</p>\n         */\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"visible\", {\n        /**\n         * Whether or not the display object is visible. Display objects that are not\n         * visible are disabled. For example, if <code>visible=false</code> for an\n         * InteractiveObject instance, it cannot be clicked.\n         */\n        get: function () {\n            return this._explicitVisibility;\n        },\n        set: function (value) {\n            if (this._explicitVisibility == value)\n                return;\n            this._explicitVisibility = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.VISIBLE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"masks\", {\n        get: function () {\n            return this._explicitMasks;\n        },\n        set: function (value) {\n            if (this._explicitMasks == value)\n                return;\n            this._explicitMasks = value;\n            //make sure maskMode is set to true for all masks\n            if (value != null && value.length) {\n                var len = value.length;\n                for (var i = 0; i < len; i++)\n                    value[i].maskMode = true;\n            }\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MASKS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"width\", {\n        /**\n         * Indicates the width of the display object, in pixels. The width is\n         * calculated based on the bounds of the content of the display object. When\n         * you set the <code>width</code> property, the <code>scaleX</code> property\n         * is adjusted accordingly, as shown in the following code:\n         *\n         * <p>Except for TextField and Video objects, a display object with no\n         * content(such as an empty sprite) has a width of 0, even if you try to set\n         * <code>width</code> to a different value.</p>\n         */\n        get: function () {\n            return this.getBox().width * this.scaleX;\n        },\n        set: function (val) {\n            if (this._width == val)\n                return;\n            this._width = val;\n            this._setScaleX(val / this.getBox().width);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"x\", {\n        /**\n         * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.x;\n        },\n        set: function (val) {\n            if (this._transform.position.x == val)\n                return;\n            this._transform.matrix3D.rawData[12] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"y\", {\n        /**\n         * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n         * to the local coordinates of the parent DisplayObjectContainer. If the\n         * object is inside a DisplayObjectContainer that has transformations, it is\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n         * DisplayObjectContainer's children inherit a coordinate system that is\n         * rotated 90° counterclockwise. The object's coordinates refer to the\n         * registration point position.\n         */\n        get: function () {\n            return this._transform.position.y;\n        },\n        set: function (val) {\n            if (this._transform.position.y == val)\n                return;\n            this._transform.matrix3D.rawData[13] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"z\", {\n        /**\n         * Indicates the z coordinate position along the z-axis of the DisplayObject\n         * instance relative to the 3D parent container. The z property is used for\n         * 3D coordinates, not screen or pixel coordinates.\n         *\n         * <p>When you set a <code>z</code> property for a display object to\n         * something other than the default value of <code>0</code>, a corresponding\n         * Matrix3D object is automatically created. for adjusting a display object's\n         * position and orientation in three dimensions. When working with the\n         * z-axis, the existing behavior of x and y properties changes from screen or\n         * pixel coordinates to positions relative to the 3D parent container.</p>\n         *\n         * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n         * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n         * wherever the 3D projection calculation puts it. The calculation is:</p>\n         *\n         * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n         * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n         */\n        get: function () {\n            return this._transform.position.z;\n        },\n        set: function (val) {\n            if (this._transform.position.z == val)\n                return;\n            this._transform.matrix3D.rawData[14] = val;\n            this._transform.invalidatePosition();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    DisplayObject.prototype.addEventListener = function (type, listener) {\n        _super.prototype.addEventListener.call(this, type, listener);\n        switch (type) {\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED:\n                this._listenToSceneChanged = true;\n                break;\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.clone = function () {\n        var newInstance = new DisplayObject();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    DisplayObject.prototype.copyTo = function (newInstance) {\n        newInstance.partition = this._explicitPartition;\n        newInstance.boundsType = this._boundsType;\n        newInstance.pivot = this._pivot;\n        newInstance.name = this._pName;\n        newInstance.mouseEnabled = this._explicitMouseEnabled;\n        newInstance.extra = this.extra;\n        newInstance.maskMode = this._maskMode;\n        newInstance.castsShadows = this.castsShadows;\n        if (this._explicitMasks)\n            newInstance.masks = this._explicitMasks;\n        if (this._adapter)\n            newInstance.adapter = this._adapter.clone(newInstance);\n        newInstance._transform.matrix3D = this._transform.matrix3D;\n        if (this._transform.colorTransform)\n            newInstance.transform.colorTransform = this._transform.colorTransform.clone();\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.dispose = function () {\n        this.disposeValues();\n    };\n    DisplayObject.prototype.disposeValues = function () {\n        if (this._pParent)\n            this._pParent.removeChild(this);\n        //if (this._adapter) {\n        //\tthis._adapter.dispose();\n        //\tthis._adapter = null;\n        //}\n        //this._pos = null;\n        //this._rot = null;\n        //this._sca = null;\n        //this._ske = null;\n        //this._transformComponents = null;\n        //this._transform.dispose();\n        //this._transform = null;\n        //\n        //this._matrix3D = null;\n        //this._pSceneTransform = null;\n        //this._inverseSceneTransform = null;\n        this._explicitMasks = null;\n    };\n    /**\n     * Returns a rectangle that defines the area of the display object relative\n     * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n     * Consider the following code, which shows how the rectangle returned can\n     * vary depending on the <code>targetCoordinateSpace</code> parameter that\n     * you pass to the method:\n     *\n     * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to display coordinates, or display coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * <p>The <code>getBounds()</code> method is similar to the\n     * <code>getRect()</code> method; however, the Rectangle returned by the\n     * <code>getBounds()</code> method includes any strokes on shapes, whereas\n     * the Rectangle returned by the <code>getRect()</code> method does not. For\n     * an example, see the description of the <code>getRect()</code> method.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getBounds = function (targetCoordinateSpace) {\n        return this._bounds; //TODO\n    };\n    /**\n     * Returns a rectangle that defines the boundary of the display object, based\n     * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n     * parameter, excluding any strokes on shapes. The values that the\n     * <code>getRect()</code> method returns are the same or smaller than those\n     * returned by the <code>getBounds()</code> method.\n     *\n     * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n     * <code>globalToLocal()</code> methods to convert the display object's local\n     * coordinates to Scene coordinates, or Scene coordinates to local\n     * coordinates, respectively.</p>\n     *\n     * @param targetCoordinateSpace The display object that defines the\n     *                              coordinate system to use.\n     * @return The rectangle that defines the area of the display object relative\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\n     *         system.\n     */\n    DisplayObject.prototype.getRect = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        return this._bounds; //TODO\n    };\n    DisplayObject.prototype.getBox = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        //TODO targetCoordinateSpace\n        if (this._boxBoundsInvalid) {\n            this._pUpdateBoxBounds();\n            //scale updates if absolute dimensions are detected\n            if (this._width != null)\n                this._setScaleX(this._width / this._pBoxBounds.width);\n            if (this._height != null)\n                this._setScaleY(this._height / this._pBoxBounds.height);\n            if (this._depth != null)\n                this._setScaleZ(this._depth / this._pBoxBounds.depth);\n        }\n        if (targetCoordinateSpace == null || targetCoordinateSpace == this)\n            return this._pBoxBounds;\n        if (targetCoordinateSpace == this._pParent)\n            return this._transform.matrix3D.transformBox(this._pBoxBounds);\n        else\n            return targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n    };\n    DisplayObject.prototype.getSphere = function (targetCoordinateSpace) {\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\n        if (this._iSourcePrefab)\n            this._iSourcePrefab._iValidate();\n        if (this._sphereBoundsInvalid)\n            this._pUpdateSphereBounds();\n        return this._pSphereBounds;\n    };\n    /**\n     * Converts the <code>point</code> object from the Scene(global) coordinates\n     * to the display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n     * because they relate to the origin(0,0) of the main display area. Then\n     * pass the Point instance as the parameter to the\n     * <code>globalToLocal()</code> method. The method returns a new Point object\n     * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n     * object instead of the origin of the Scene.</p>\n     *\n     * @param point An object created with the Point class. The Point object\n     *              specifies the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the display object.\n     */\n    DisplayObject.prototype.globalToLocal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.Point();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a two-dimensional point from the Scene(global) coordinates to a\n     * three-dimensional display object's(local) coordinates.\n     *\n     * <p>To use this method, first create an instance of the Vector3D class. The x,\n     * y and z values that you assign to the Vector3D object represent global\n     * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n     * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n     * <code>position</code> parameter.\n     * The method returns three-dimensional coordinates as a Vector3D object\n     * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n     * are relative to the origin of the three-dimensional display object.</p>\n     *\n     * @param point A Vector3D object representing global x, y and z coordinates in\n     *              the scene.\n     * @return A Vector3D object with coordinates relative to the three-dimensional\n     *         display object.\n     */\n    DisplayObject.prototype.globalToLocal3D = function (position) {\n        return this.inverseSceneTransform.transformVector(position);\n    };\n    /**\n     * Evaluates the bounding box of the display object to see if it overlaps or\n     * intersects with the bounding box of the <code>obj</code> display object.\n     *\n     * @param obj The display object to test against.\n     * @return <code>true</code> if the bounding boxes of the display objects\n     *         intersect; <code>false</code> if not.\n     */\n    DisplayObject.prototype.hitTestObject = function (obj) {\n        var objBox = obj.getBox();\n        if (!objBox)\n            return false;\n        var topLeft = new Point_1.Point(objBox.x, objBox.y);\n        var bottomLeft = new Point_1.Point(objBox.x, objBox.y - objBox.height);\n        var topRight = new Point_1.Point(objBox.x + objBox.width, objBox.y);\n        var bottomRight = new Point_1.Point(objBox.x + objBox.width, objBox.y - objBox.height);\n        topLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n        bottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n        topRight = this.globalToLocal(obj.localToGlobal(topRight));\n        bottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n        var box = this.getBox();\n        if (!box)\n            return false;\n        //first check all points against targer box\n        if (topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom)\n            return true;\n        if (bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom)\n            return true;\n        if (topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom)\n            return true;\n        if (bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom)\n            return true;\n        //now test against obj box\n        var n0x = topRight.y - topLeft.y;\n        var n0y = -(topRight.x - topLeft.x);\n        var n1x = bottomRight.y - topRight.y;\n        var n1y = -(bottomRight.x - topRight.x);\n        var n2x = bottomLeft.y - bottomRight.y;\n        var n2y = -(bottomLeft.x - bottomRight.x);\n        var n3x = topLeft.y - bottomLeft.y;\n        var n3y = -(topLeft.x - bottomLeft.x);\n        var p0x = box.left - topLeft.x;\n        var p0y = box.top - topLeft.y;\n        var p1x = box.left - topRight.x;\n        var p1y = box.top - topRight.y;\n        var p2x = box.left - bottomRight.x;\n        var p2y = box.top - bottomRight.y;\n        var p3x = box.left - bottomLeft.x;\n        var p3y = box.top - bottomLeft.y;\n        var dot0 = (n0x * p0x) + (n0y * p0y);\n        var dot1 = (n1x * p1x) + (n1y * p1y);\n        var dot2 = (n2x * p2x) + (n2y * p2y);\n        var dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.top - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.top - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.top - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.top - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if topRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.left - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.left - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.left - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.left - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomLeft is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        p0x = box.right - topLeft.x;\n        p0y = box.bottom - topLeft.y;\n        p1x = box.right - topRight.x;\n        p1y = box.bottom - topRight.y;\n        p2x = box.right - bottomRight.x;\n        p2y = box.bottom - bottomRight.y;\n        p3x = box.right - bottomLeft.x;\n        p3y = box.bottom - bottomLeft.y;\n        dot0 = (n0x * p0x) + (n0y * p0y);\n        dot1 = (n1x * p1x) + (n1y * p1y);\n        dot2 = (n2x * p2x) + (n2y * p2y);\n        dot3 = (n3x * p3x) + (n3y * p3y);\n        //check if bottomRight is contained\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\n            return true;\n        return false; //TODO\n    };\n    /**\n     * Evaluates the display object to see if it overlaps or intersects with the\n     * point specified by the <code>x</code> and <code>y</code> parameters. The\n     * <code>x</code> and <code>y</code> parameters specify a point in the\n     * coordinate space of the Scene, not the display object container that\n     * contains the display object(unless that display object container is the\n     * Scene).\n     *\n     * @param x         The <i>x</i> coordinate to test against this object.\n     * @param y         The <i>y</i> coordinate to test against this object.\n     * @param shapeFlag Whether to check against the actual pixels of the object\n     *                 (<code>true</code>) or the bounding box\n     *                 (<code>false</code>).\n     * @param maskFlag Whether to check against the object when it is used as mask\n     *                 (<code>false</code>).\n     * @return <code>true</code> if the display object overlaps or intersects\n     *         with the specified point; <code>false</code> otherwise.\n     */\n    DisplayObject.prototype.hitTestPoint = function (x, y, shapeFlag, masksFlag) {\n        if (shapeFlag === void 0) { shapeFlag = false; }\n        if (masksFlag === void 0) { masksFlag = false; }\n        if (!this._pImplicitVisibility)\n            return;\n        if (this._pImplicitMaskId != -1 && !masksFlag)\n            return;\n        if (this._explicitMasks) {\n            var numMasks = this._explicitMasks.length;\n            var maskHit = false;\n            for (var i = 0; i < numMasks; i++) {\n                if (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n                    maskHit = true;\n                    break;\n                }\n            }\n            if (!maskHit)\n                return false;\n        }\n        return this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n    };\n    /**\n     * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n     *\n     * @param    target        The vector defining the point to be looked at\n     * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n     */\n    DisplayObject.prototype.lookAt = function (target, upAxis) {\n        if (upAxis === void 0) { upAxis = null; }\n        var yAxis;\n        var zAxis;\n        var xAxis;\n        var raw;\n        if (upAxis == null)\n            upAxis = Vector3D_1.Vector3D.Y_AXIS;\n        else\n            upAxis.normalize();\n        zAxis = target.subtract(this._transform.position);\n        zAxis.normalize();\n        xAxis = upAxis.crossProduct(zAxis);\n        xAxis.normalize();\n        if (xAxis.length < 0.05) {\n            xAxis.x = upAxis.y;\n            xAxis.y = upAxis.x;\n            xAxis.z = 0;\n            xAxis.normalize();\n        }\n        yAxis = zAxis.crossProduct(xAxis);\n        raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        raw[0] = xAxis.x;\n        raw[1] = xAxis.y;\n        raw[2] = xAxis.z;\n        raw[3] = 0;\n        raw[4] = yAxis.x;\n        raw[5] = yAxis.y;\n        raw[6] = yAxis.z;\n        raw[7] = 0;\n        raw[8] = zAxis.x;\n        raw[9] = zAxis.y;\n        raw[10] = zAxis.z;\n        raw[11] = 0;\n        var m = new Matrix3D_1.Matrix3D();\n        m.copyRawDataFrom(raw);\n        var vec = m.decompose()[1];\n        this.rotationX = vec.x * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        this.rotationY = vec.y * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        this.rotationZ = vec.z * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n    };\n    /**\n     * Converts the <code>point</code> object from the display object's(local)\n     * coordinates to the Scene(global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n     * coordinates from values that are relative to the origin(0,0) of a\n     * specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Point instance that you created as the parameter to\n     * the <code>localToGlobal()</code> method. The method returns a new Point\n     * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n     * Scene instead of the origin of the display object.</p>\n     *\n     * @param point The name or identifier of a point created with the Point\n     *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n     *              properties.\n     * @return A Point object with coordinates relative to the Scene.\n     */\n    DisplayObject.prototype.localToGlobal = function (point, target) {\n        if (target === void 0) { target = null; }\n        this._tempVector3D.setTo(point.x, point.y, 0);\n        var pos = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n        if (!target)\n            target = new Point_1.Point();\n        target.x = pos.x;\n        target.y = pos.y;\n        return target;\n    };\n    /**\n     * Converts a three-dimensional point of the three-dimensional display\n     * object's(local) coordinates to a three-dimensional point in the Scene\n     * (global) coordinates.\n     *\n     * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n     * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n     * a specific display object(local coordinates) to values that are relative to\n     * the origin of the Scene(global coordinates).</p>\n     *\n     * <p>To use this method, first create an instance of the Point class. The\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n     * because they relate to the origin of the display object.</p>\n     *\n     * <p>You then pass the Vector3D instance that you created as the parameter to\n     * the <code>localToGlobal3D()</code> method. The method returns a new\n     * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n     * the origin of the Scene instead of the origin of the display object.</p>\n     *\n     * @param position A Vector3D object containing either a three-dimensional\n     *                position or the coordinates of the three-dimensional\n     *                display object.\n     * @return A Vector3D object representing a three-dimensional position in\n     *         the Scene.\n     */\n    DisplayObject.prototype.localToGlobal3D = function (position) {\n        return this.sceneTransform.transformVector(position);\n    };\n    /**\n     * Moves the local point around which the object rotates.\n     *\n     * @param    dx        The amount of movement along the local x axis.\n     * @param    dy        The amount of movement along the local y axis.\n     * @param    dz        The amount of movement along the local z axis.\n     */\n    DisplayObject.prototype.movePivot = function (dx, dy, dz) {\n        if (dx == 0 && dy == 0 && dz == 0)\n            return;\n        this._pivot.x += dx;\n        this._pivot.y += dy;\n        this._pivot.z += dz;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\n    };\n    DisplayObject.prototype.reset = function () {\n        this.visible = true;\n        if (this._transform.matrix3D)\n            this._transform.clearMatrix3D();\n        if (this._transform.colorTransform)\n            this._transform.clearColorTransform();\n        //this.name=\"\";\n        this.masks = null;\n        this.maskMode = false;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.getRenderSceneTransform = function (cameraTransform) {\n        if (this.orientationMode == OrientationMode_1.OrientationMode.CAMERA_PLANE) {\n            var comps = cameraTransform.decompose();\n            var scale = comps[3];\n            comps[0].copyFrom(this.scenePosition);\n            scale.x = this.scaleX;\n            scale.y = this.scaleY;\n            scale.z = this.scaleZ;\n            this._orientationMatrix.recompose(comps);\n            //add in case of pivot\n            if (this._pivot && this.alignmentMode == AlignmentMode_1.AlignmentMode.PIVOT_POINT)\n                this._orientationMatrix.prependTranslation(-this._pivot.x / this.scaleX, -this._pivot.y / this.scaleY, -this._pivot.z / this.scaleZ);\n            return this._orientationMatrix;\n        }\n        return this.sceneTransform;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype.removeEventListener = function (type, listener) {\n        _super.prototype.removeEventListener.call(this, type, listener);\n        if (this.hasEventListener(type))\n            return;\n        switch (type) {\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED:\n                this._listenToSceneChanged = false;\n                break;\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n                this._listenToSceneTransformChanged = true;\n                break;\n        }\n    };\n    Object.defineProperty(DisplayObject.prototype, \"_iAssignedPartition\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._pImplicitPartition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObject.prototype, \"_iPickingCollision\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (!this._pickingCollision)\n                this._pickingCollision = new PickingCollision_1.PickingCollision(this);\n            return this._pickingCollision;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    DisplayObject.prototype.iSetParent = function (value) {\n        this._pParent = value;\n        if (value)\n            this._iSetScene(value._pScene, value._iAssignedPartition);\n        else\n            this._iSetScene(null, null);\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.ALL);\n    };\n    DisplayObject.prototype.pInvalidateHierarchicalProperties = function (propDirty) {\n        var newPropDirty = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n        if (!newPropDirty)\n            return true;\n        this._hierarchicalPropsDirty |= propDirty;\n        if (newPropDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM) {\n            this._inverseSceneTransformDirty = true;\n            this._scenePositionDirty = true;\n            if (this.isEntity)\n                this.invalidatePartitionBounds();\n            if (this._pParent)\n                this._pParent._pInvalidateBounds();\n            if (this._listenToSceneTransformChanged)\n                this.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n        }\n        return false;\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype._iSetScene = function (scene, partition) {\n        var sceneChanged = this._pScene != scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //unregister partition from current scene\n            this._pScene._iUnregisterPartition(this._pImplicitPartition);\n            //unregister entity from current partition\n            this._pImplicitPartition._iUnregisterEntity(this);\n            //gc abstraction objects\n            this.clear();\n        }\n        // assign parent implicit partition if no explicit one is given\n        this._pImplicitPartition = this._explicitPartition || partition;\n        //assign scene\n        if (sceneChanged)\n            this._pScene = scene;\n        if (this._pScene && this._pImplicitPartition) {\n            //register partition with scene\n            this._pScene._iRegisterPartition(this._pImplicitPartition);\n            //register entity with new partition\n            this._pImplicitPartition._iRegisterEntity(this);\n        }\n        if (sceneChanged && this._listenToSceneChanged)\n            this.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED, this)));\n    };\n    /**\n     * @protected\n     */\n    DisplayObject.prototype.pUpdateSceneTransform = function () {\n        if (this._iController)\n            this._iController.updateController();\n        this._pSceneTransform.copyFrom(this._transform.matrix3D);\n        if (this._pivot) {\n            if (!this._pivotScale)\n                this._pivotScale = new Vector3D_1.Vector3D();\n            this._pivotScale.x = this._pivot.x / this._transform.scale.x;\n            this._pivotScale.y = this._pivot.y / this._transform.scale.y;\n            this._pivotScale.z = this._pivot.z / this._transform.scale.z;\n            this._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n            if (this.alignmentMode != AlignmentMode_1.AlignmentMode.PIVOT_POINT)\n                this._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n        }\n        if (this._pParent && !this._pParent._iIsRoot)\n            this._pSceneTransform.append(this._pParent.sceneTransform);\n        this._matrix3DDirty = false;\n        this._positionDirty = false;\n        this._rotationDirty = false;\n        this._skewDirty = false;\n        this._scaleDirty = false;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM;\n    };\n    /**\n     *\n     */\n    DisplayObject.prototype._iInternalUpdate = function () {\n        if (this._iController)\n            this._iController.update();\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i)\n            this.dispatchEvent(this._queuedEvents[i]);\n        this._queuedEvents.length = 0;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsVisible = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.VISIBLE)\n            this._updateVisible();\n        return this._pImplicitVisibility;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMaskId = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASK_ID)\n            this._updateMaskId();\n        return this._pImplicitMaskId;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iAssignedMasks = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASKS)\n            this._updateMasks();\n        return this._pImplicitMasks;\n    };\n    DisplayObject.prototype._iMasksConfig = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASKS)\n            this._updateMasks();\n        return this._pImplicitMaskIds;\n    };\n    DisplayObject.prototype._iAssignedColorTransform = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM)\n            this._updateColorTransform();\n        return this._pImplicitColorTransform;\n    };\n    /**\n     * @internal\n     */\n    DisplayObject.prototype._iIsMouseEnabled = function () {\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED)\n            this._updateMouseEnabled();\n        return this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n    };\n    DisplayObject.prototype._acceptTraverser = function (collector) {\n        //nothing to do here\n    };\n    /**\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n     *\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateMatrix3D = function (event) {\n        if (this._matrix3DDirty)\n            return;\n        this._matrix3DDirty = true;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\n    };\n    /**\n     * @private\n     */\n    DisplayObject.prototype._onInvalidateColorTransform = function (event) {\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\n    };\n    DisplayObject.prototype._pInvalidateBounds = function () {\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        if (this.isEntity)\n            this.invalidatePartitionBounds();\n        if (this._pParent)\n            this._pParent._pInvalidateBounds();\n    };\n    DisplayObject.prototype._pUpdateBoxBounds = function () {\n        this._boxBoundsInvalid = false;\n        if (this._pBoxBounds == null)\n            this._pBoxBounds = new Box_1.Box();\n    };\n    DisplayObject.prototype._pUpdateSphereBounds = function () {\n        this._sphereBoundsInvalid = false;\n        if (this._pSphereBounds == null)\n            this._pSphereBounds = new Sphere_1.Sphere();\n    };\n    DisplayObject.prototype.queueDispatch = function (event) {\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    DisplayObject.prototype._setScaleX = function (val) {\n        if (this.scaleX == val)\n            return;\n        this._transform.scale.x = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleY = function (val) {\n        if (this.scaleY == val)\n            return;\n        this._transform.scale.y = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._setScaleZ = function (val) {\n        if (this.scaleZ == val)\n            return;\n        this._transform.scale.z = val;\n        this._transform.invalidateMatrix3D();\n    };\n    DisplayObject.prototype._updateMouseEnabled = function () {\n        this._pImplicitMouseEnabled = (this._pParent) ? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n        // If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n        if (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n            this.pickingCollider = this._pParent.pickingCollider;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED;\n    };\n    DisplayObject.prototype._updateVisible = function () {\n        this._pImplicitVisibility = (this._pParent) ? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.VISIBLE;\n    };\n    DisplayObject.prototype._updateMaskId = function () {\n        this._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1) ? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MASK_ID;\n    };\n    DisplayObject.prototype._updateMasks = function () {\n        this._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks()) ? (this._explicitMasks != null) ? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null) ? [this._explicitMasks] : null;\n        this._pImplicitMaskIds.length = 0;\n        if (this._pImplicitMasks && this._pImplicitMasks.length) {\n            var numLayers = this._pImplicitMasks.length;\n            var numChildren;\n            var implicitChildren;\n            var implicitChildIds;\n            for (var i = 0; i < numLayers; i++) {\n                implicitChildren = this._pImplicitMasks[i];\n                numChildren = implicitChildren.length;\n                implicitChildIds = new Array();\n                for (var j = 0; j < numChildren; j++)\n                    implicitChildIds.push(implicitChildren[j].id);\n                this._pImplicitMaskIds.push(implicitChildIds);\n            }\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MASKS;\n    };\n    DisplayObject.prototype._updateColorTransform = function () {\n        if (!this._pImplicitColorTransform)\n            this._pImplicitColorTransform = new ColorTransform_1.ColorTransform();\n        if (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n            this._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.prepend(this._transform.colorTransform);\n        }\n        else {\n            if (this._transform.colorTransform)\n                this._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n            else\n                this._pImplicitColorTransform.clear();\n        }\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM;\n    };\n    DisplayObject.prototype._updateMaskMode = function () {\n        if (this.maskMode)\n            this.mouseEnabled = false;\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MASK_ID);\n    };\n    DisplayObject.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        var i;\n        this._pImplicitColorTransform = null;\n        this._pImplicitMasks = null;\n    };\n    DisplayObject.prototype.invalidatePartitionBounds = function () {\n        this.dispatchEvent(new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n    };\n    DisplayObject.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        return false;\n    };\n    return DisplayObject;\n}(AssetBase_1.AssetBase));\nexports.DisplayObject = DisplayObject;\n\n},{\"../base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"../base/Transform\":\"awayjs-display/lib/base/Transform\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"../pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/display/IEntity\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/display/LightBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar LightEvent_1 = require(\"../events/LightEvent\");\nvar LightBase = (function (_super) {\n    __extends(LightBase, _super);\n    function LightBase() {\n        _super.call(this);\n        this._color = 0xffffff;\n        this._colorR = 1;\n        this._colorG = 1;\n        this._colorB = 1;\n        this._ambientColor = 0xffffff;\n        this._ambient = 0;\n        this._iAmbientR = 0;\n        this._iAmbientG = 0;\n        this._iAmbientB = 0;\n        this._specular = 1;\n        this._iSpecularR = 1;\n        this._iSpecularG = 1;\n        this._iSpecularB = 1;\n        this._diffuse = 1;\n        this._iDiffuseR = 1;\n        this._iDiffuseG = 1;\n        this._iDiffuseB = 1;\n        this._shadowsEnabled = false;\n    }\n    Object.defineProperty(LightBase.prototype, \"shadowsEnabled\", {\n        get: function () {\n            return this._shadowsEnabled;\n        },\n        set: function (value) {\n            if (this._shadowsEnabled == value)\n                return;\n            this._shadowsEnabled = value;\n            if (value) {\n                if (this._shadowMapper == null)\n                    this._shadowMapper = this.pCreateShadowMapper();\n                this._shadowMapper.light = this;\n            }\n            else {\n                this._shadowMapper.dispose();\n                this._shadowMapper = null;\n            }\n            //*/\n            this.dispatchEvent(new LightEvent_1.LightEvent(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.pCreateShadowMapper = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    Object.defineProperty(LightBase.prototype, \"specular\", {\n        get: function () {\n            return this._specular;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._specular = value;\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"diffuse\", {\n        get: function () {\n            return this._diffuse;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            this._diffuse = value;\n            this.updateDiffuse();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n            this._colorR = ((this._color >> 16) & 0xff) / 0xff;\n            this._colorG = ((this._color >> 8) & 0xff) / 0xff;\n            this._colorB = (this._color & 0xff) / 0xff;\n            this.updateDiffuse();\n            this.updateSpecular();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambient\", {\n        get: function () {\n            return this._ambient;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            this._ambient = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightBase.prototype, \"ambientColor\", {\n        get: function () {\n            return this._ambientColor;\n        },\n        set: function (value) {\n            this._ambientColor = value;\n            this.updateAmbient();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LightBase.prototype.updateAmbient = function () {\n        this._iAmbientR = ((this._ambientColor >> 16) & 0xff) / 0xff * this._ambient;\n        this._iAmbientG = ((this._ambientColor >> 8) & 0xff) / 0xff * this._ambient;\n        this._iAmbientB = (this._ambientColor & 0xff) / 0xff * this._ambient;\n    };\n    LightBase.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    LightBase.prototype.updateSpecular = function () {\n        this._iSpecularR = this._colorR * this._specular;\n        this._iSpecularG = this._colorG * this._specular;\n        this._iSpecularB = this._colorB * this._specular;\n    };\n    LightBase.prototype.updateDiffuse = function () {\n        this._iDiffuseR = this._colorR * this._diffuse;\n        this._iDiffuseG = this._colorG * this._diffuse;\n        this._iDiffuseB = this._colorB * this._diffuse;\n    };\n    Object.defineProperty(LightBase.prototype, \"shadowMapper\", {\n        get: function () {\n            return this._shadowMapper;\n        },\n        set: function (value) {\n            this._shadowMapper = value;\n            this._shadowMapper.light = this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LightBase;\n}(DisplayObjectContainer_1.DisplayObjectContainer));\nexports.LightBase = LightBase;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/display/LightProbe\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar LightProbe = (function (_super) {\n    __extends(LightProbe, _super);\n    function LightProbe(diffuseMap, specularMap) {\n        if (specularMap === void 0) { specularMap = null; }\n        _super.call(this);\n        this.diffuseSampler = new SamplerCube_1.SamplerCube();\n        this.specularSampler = new SamplerCube_1.SamplerCube();\n        this._pIsEntity = true;\n        this.diffuseMap = diffuseMap;\n        this.specularMap = specularMap;\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.NULL;\n    }\n    Object.defineProperty(LightProbe.prototype, \"assetType\", {\n        get: function () {\n            return LightProbe.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //@override\n    LightProbe.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        throw new ErrorBase_1.ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n    };\n    LightProbe.assetType = \"[light LightProbe]\";\n    return LightProbe;\n}(LightBase_1.LightBase));\nexports.LightProbe = LightProbe;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/image/SamplerCube\":undefined}],\"awayjs-display/lib/display/LineSegment\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * A Line Segment primitive.\n */\nvar LineSegment = (function (_super) {\n    __extends(LineSegment, _super);\n    /**\n     * Create a line segment\n     *\n     * @param startPosition Start position of the line segment\n     * @param endPosition Ending position of the line segment\n     * @param thickness Thickness of the line\n     */\n    function LineSegment(material, startPosition, endPosition, thickness) {\n        var _this = this;\n        if (thickness === void 0) { thickness = 1; }\n        _super.call(this);\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._pIsEntity = true;\n        this.material = material;\n        this._startPosition = startPosition;\n        this._endPosition = endPosition;\n        this._halfThickness = thickness * 0.5;\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\n    }\n    Object.defineProperty(LineSegment.prototype, \"animator\", {\n        /**\n         * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n         */\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return LineSegment.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPostion\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._startPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"startPosition\", {\n        set: function (value) {\n            if (this._startPosition == value)\n                return;\n            this._startPosition = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"endPosition\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._endPosition;\n        },\n        set: function (value) {\n            if (this._endPosition == value)\n                return;\n            this._endPosition = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"material\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._halfThickness * 2;\n        },\n        set: function (value) {\n            if (this._halfThickness == value)\n                return;\n            this._halfThickness = value * 0.5;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineSegment.prototype, \"style\", {\n        /**\n         * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @protected\n     */\n    LineSegment.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n        this._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n        this._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n        this._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n        this._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n        this._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n    };\n    LineSegment.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pUpdateBoxBounds();\n        var halfWidth = (this._endPosition.x - this._startPosition.x) / 2;\n        var halfHeight = (this._endPosition.y - this._startPosition.y) / 2;\n        var halfDepth = (this._endPosition.z - this._startPosition.z) / 2;\n        this._pSphereBounds.x = this._startPosition.x + halfWidth;\n        this._pSphereBounds.y = this._startPosition.y + halfHeight;\n        this._pSphereBounds.z = this._startPosition.z + halfDepth;\n        this._pSphereBounds.radius = Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight + halfDepth * halfDepth);\n    };\n    /**\n     * @private\n     */\n    LineSegment.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this)); //TODO improve performance by only using one geometry for all line segments\n    };\n    LineSegment.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\n    };\n    LineSegment.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    LineSegment.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false; //TODO: detect line collisions\n    };\n    LineSegment.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    LineSegment.assetType = \"[asset LineSegment]\";\n    return LineSegment;\n}(DisplayObject_1.DisplayObject));\nexports.LineSegment = LineSegment;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/display/LoaderContainer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nvar LoaderContainer = (function (_super) {\n    __extends(LoaderContainer, _super);\n    /**\n     * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n     * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n     * as a child of the Loader instance. You can then add the Loader object to\n     * the display list(for instance, by using the <code>addChild()</code>\n     * method of a DisplayObjectContainer instance). The asset appears on the\n     * Stage as it loads.\n     *\n     * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n     * to a display object container on the display list. In this mode, the\n     * Loader instance might be used to load a SWF file that contains additional\n     * modules of an application. </p>\n     *\n     * <p>To detect when the SWF file is finished loading, you can use the events\n     * of the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object. At that\n     * point, the code in the module SWF file can be executed to initialize and\n     * start the module. In the offlist mode, a Loader instance might also be\n     * used to load a SWF file that contains components or media assets. Again,\n     * you can use the LoaderInfo object event notifications to detect when the\n     * components are finished loading. At that point, the application can start\n     * using the components and media assets in the library of the SWF file by\n     * instantiating the ActionScript 3.0 classes that represent those components\n     * and assets.</p>\n     *\n     * <p>To determine the status of a Loader object, monitor the following\n     * events that the LoaderInfo object associated with the\n     * <code>contentLoaderInfo</code> property of the Loader object:</p>\n     *\n     * <ul>\n     *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n     *   <li>The <code>ioError</code> or <code>securityError</code> event is\n     * dispatched if the file cannot be loaded or if an error occured during the\n     * load process. </li>\n     *   <li>The <code>progress</code> event fires continuously while the file is\n     * being loaded.</li>\n     *   <li>The <code>complete</code> event is dispatched when a file completes\n     * downloading, but before the loaded movie clip's methods and properties are\n     * available. </li>\n     *   <li>The <code>init</code> event is dispatched after the properties and\n     * methods of the loaded SWF file are accessible, so you can begin\n     * manipulating the loaded SWF file. This event is dispatched before the\n     * <code>complete</code> handler. In streaming SWF files, the\n     * <code>init</code> event can occur significantly earlier than the\n     * <code>complete</code> event. For most purposes, use the <code>init</code>\n     * handler.</li>\n     * </ul>\n     */\n    function LoaderContainer(useAssetLibrary, assetLibraryId) {\n        var _this = this;\n        if (useAssetLibrary === void 0) { useAssetLibrary = true; }\n        if (assetLibraryId === void 0) { assetLibraryId = null; }\n        _super.call(this);\n        this._useAssetLib = useAssetLibrary;\n        this._assetLibId = assetLibraryId;\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\n    }\n    Object.defineProperty(LoaderContainer.prototype, \"content\", {\n        /**\n         * Contains the root display object of the SWF file or image(JPG, PNG, or\n         * GIF) file that was loaded by using the <code>load()</code> or\n         * <code>loadBytes()</code> methods.\n         *\n         * @throws SecurityError The loaded SWF file or image file belongs to a\n         *                       security sandbox to which you do not have access.\n         *                       For a loaded SWF file, you can avoid this situation\n         *                       by having the file call the\n         *                       <code>Security.allowDomain()</code> method or by\n         *                       having the loading file specify a\n         *                       <code>loaderContext</code> parameter with its\n         *                       <code>securityDomain</code> property set to\n         *                       <code>SecurityDomain.currentDomain</code> when you\n         *                       call the <code>load()</code> or\n         *                       <code>loadBytes()</code> method.\n         */\n        get: function () {\n            return this._content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Cancels a <code>load()</code> method operation that is currently in\n     * progress for the Loader instance.\n     *\n     */\n    LoaderContainer.prototype.close = function () {\n        if (!this._loader)\n            return;\n        if (this._useAssetLib) {\n            var lib;\n            lib = AssetLibraryBundle_1.AssetLibraryBundle.getInstance(this._assetLibId);\n            lib.disposeLoader(this._loader);\n        }\n        this._disposeLoader();\n    };\n    /**\n     * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n     * object that is a child of this Loader object. If you load an animated GIF\n     * file, only the first frame is displayed. As the Loader object can contain\n     * only a single child, issuing a subsequent <code>load()</code> request\n     * terminates the previous request, if still pending, and commences a new\n     * load.\n     *\n     * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n     * loaded image is 8,191 pixels in width or height, and the total number of\n     * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n     * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n     * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n     * and 2,880 pixels in width.</p>\n     *\n     * <p>A SWF file or image loaded into a Loader object inherits the position,\n     * rotation, and scale properties of the parent display objects of the Loader\n     * object. </p>\n     *\n     * <p>Use the <code>unload()</code> method to remove movies or images loaded\n     * with this method, or to cancel a load operation that is in progress.</p>\n     *\n     * <p>You can prevent a SWF file from using this method by setting the\n     * <code>allowNetworking</code> parameter of the the <code>object</code> and\n     * <code>embed</code> tags in the HTML page that contains the SWF\n     * content.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n     * example \"multipart/form-data\") that contains an upload(indicated by a\n     * \"filename\" parameter in a \"content-disposition\" header within the POST\n     * body), the POST operation is subject to the security rules applied to\n     * uploads:</p>\n     *\n     * <ul>\n     *   <li>The POST operation must be performed in response to a user-initiated\n     * action, such as a mouse click or key press.</li>\n     *   <li>If the POST operation is cross-domain(the POST target is not on the\n     * same server as the SWF file that is sending the POST request), the target\n     * server must provide a URL policy file that permits cross-domain\n     * access.</li>\n     * </ul>\n     *\n     * <p>Also, for any multipart Content-Type, the syntax must be valid\n     * (according to the RFC2046 standard). If the syntax appears to be invalid,\n     * the POST operation is subject to the security rules applied to\n     * uploads.</p>\n     *\n     * <p>For more information related to security, see the Flash Player\n     * Developer Center Topic: <a\n     * href=\"http://www.adobe.com/go/devnet_security_en\"\n     * scope=\"external\">Security</a>.</p>\n     *\n     * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n     *                file to be loaded. A relative path must be relative to the\n     *                main SWF file. Absolute URLs must include the protocol\n     *                reference, such as http:// or file:///. Filenames cannot\n     *                include disk drive specifications.\n     * @param context A LoaderContext object, which has properties that define\n     *                the following:\n     *                <ul>\n     *                  <li>Whether or not to check for the existence of a policy\n     *                file upon loading the object</li>\n     *                  <li>The ApplicationDomain for the loaded object</li>\n     *                  <li>The SecurityDomain for the loaded object</li>\n     *                  <li>The ImageDecodingPolicy for the loaded image\n     *                object</li>\n     *                </ul>\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the loaded content remains in\n     *                its own security domain.</p>\n     *\n     *                <p>For complete details, see the description of the\n     *                properties in the <a\n     *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n     *                class.</p>\n     * @param ns      An optional namespace string under which the file is to be\n     *                loaded, allowing the differentiation of two resources with\n     *                identical assets.\n     * @param parser  An optional parser object for translating the loaded data\n     *                into a usable resource. If not provided, Loader will\n     *                attempt to auto-detect the file type.\n     * @throws IOError               The <code>digest</code> property of the\n     *                               <code>request</code> object is not\n     *                               <code>null</code>. You should only set the\n     *                               <code>digest</code> property of a URLRequest\n     *                               object when calling the\n     *                               <code>URLLoader.load()</code> method when\n     *                               loading a SWZ file(an Adobe platform\n     *                               component).\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         The value of\n     *                               <code>LoaderContext.securityDomain</code>\n     *                               must be either <code>null</code> or\n     *                               <code>SecurityDomain.currentDomain</code>.\n     *                               This reflects the fact that you can only\n     *                               place the loaded media in its natural\n     *                               security sandbox or your own(the latter\n     *                               requires a policy file).\n     * @throws SecurityError         Local SWF files may not set\n     *                               LoaderContext.securityDomain to anything\n     *                               other than <code>null</code>. It is not\n     *                               permitted to import non-local media into a\n     *                               local sandbox, or to place other local media\n     *                               in anything other than its natural sandbox.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @throws SecurityError         If the <code>applicationDomain</code> or\n     *                               <code>securityDomain</code> properties of\n     *                               the <code>context</code> parameter are from\n     *                               a disallowed domain.\n     * @throws SecurityError         If a local SWF file is attempting to use the\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the file has completed loading. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a network request is made over HTTP and\n     *                      Flash Player can detect the HTTP status code.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      SWF file are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when an input or output error occurs that\n     *                      causes a load operation to fail.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the loading operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is received while load operation\n     *                      progresses.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if a SWF file in the local-with-filesystem\n     *                      sandbox attempts to load content in the\n     *                      local-with-networking sandbox, or vice versa.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.load = function (request, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().load(request, context, ns, parser);\n    };\n    /**\n     * Loads from binary data stored in a ByteArray object.\n     *\n     * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n     * the \"init\" event before accessing the properties of a loaded object.</p>\n     *\n     * <p>When you use this method, consider the Flash Player security model,\n     * which is described in the Loader class description. </p>\n     *\n     * @param bytes   A ByteArray object. The contents of the ByteArray can be\n     *                any of the file formats supported by the Loader class: SWF,\n     *                GIF, JPEG, or PNG.\n     * @param context A LoaderContext object. Only the\n     *                <code>applicationDomain</code> property of the\n     *                LoaderContext object applies; the\n     *                <code>checkPolicyFile</code> and\n     *                <code>securityDomain</code> properties of the LoaderContext\n     *                object do not apply.\n     *\n     *                <p>If the <code>context</code> parameter is not specified\n     *                or refers to a null object, the content is loaded into the\n     *                current security domain -  a process referred to as \"import\n     *                loading\" in Flash Player security documentation.\n     *                Specifically, if the loading SWF file trusts the remote SWF\n     *                by incorporating the remote SWF into its code, then the\n     *                loading SWF can import it directly into its own security\n     *                domain.</p>\n     *\n     *                <p>For more information related to security, see the Flash\n     *                Player Developer Center Topic: <a\n     *                href=\"http://www.adobe.com/go/devnet_security_en\"\n     *                scope=\"external\">Security</a>.</p>\n     * @throws ArgumentError         If the <code>length</code> property of the\n     *                               ByteArray object is not greater than 0.\n     * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n     *                               <code>securityDomain</code> property of the\n     *                               <code>context</code> parameter are non-null.\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\n     *                               property of the <code>context</code>\n     *                               parameter is a <code>Loader</code>.\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n     *                               parameter is set to non-null and has some\n     *                               values which are not Strings.\n     * @throws SecurityError         If the provided\n     *                               <code>applicationDomain</code> property of\n     *                               the <code>context</code> property is from a\n     *                               disallowed domain.\n     * @throws SecurityError         You cannot connect to commonly reserved\n     *                               ports. For a complete list of blocked ports,\n     *                               see \"Restricting Networking APIs\" in the\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and it is not possible to\n     *                      add the loaded content as a child to the specified\n     *                      DisplayObjectContainer. This could happen if the\n     *                      loaded content is a\n     *                      <code>flash.display.AVM1Movie</code> or if the\n     *                      <code>addChild()</code> call to the\n     *                      requestedContentParent throws an error.\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation is complete. The\n     *                      <code>complete</code> event is always dispatched\n     *                      after the <code>init</code> event.\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the properties and methods of the loaded\n     *                      data are accessible. The <code>init</code> event\n     *                      always precedes the <code>complete</code> event.\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the runtime cannot parse the data in the\n     *                      byte array.\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when the operation starts.\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n     *                      object as data is transfered in memory.\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n     *                      object if the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      property has been specified and the security sandbox\n     *                      of the\n     *                      <code>LoaderContext.requestedContentParent</code>\n     *                      does not have access to the loaded SWF.\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n     *                      object when a loaded object is removed.\n     */\n    LoaderContainer.prototype.loadData = function (data, context, ns, parser) {\n        if (context === void 0) { context = null; }\n        if (ns === void 0) { ns = null; }\n        if (parser === void 0) { parser = null; }\n        this._getLoader().loadData(data, '', context, ns, parser);\n    };\n    LoaderContainer.prototype._getLoader = function () {\n        if (this._useAssetLib) {\n            var lib = AssetLibraryBundle_1.AssetLibraryBundle.getInstance(this._assetLibId);\n            this._loader = lib.getLoader();\n        }\n        else {\n            this._loader = new Loader_1.Loader();\n        }\n        this._loader.addEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        // Error are handled separately (see documentation for addErrorHandler)\n        this._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n        this._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n        return this._loader;\n    };\n    LoaderContainer.prototype._disposeLoader = function () {\n        this._loader.removeEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n        this._loader.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n        this._loader.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n        if (!this._useAssetLib)\n            this._loader.stop();\n        this._loader = null;\n    };\n    /**\n     * Removes a child of this Loader object that was loaded by using the\n     * <code>load()</code> method. The <code>property</code> of the associated\n     * LoaderInfo object is reset to <code>null</code>. The child is not\n     * necessarily destroyed because other objects might have references to it;\n     * however, it is no longer a child of the Loader object.\n     *\n     * <p>As a best practice, before you unload a child SWF file, you should\n     * explicitly close any streams in the child SWF file's objects, such as\n     * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n     * audio in the child SWF file might continue to play, even though the child\n     * SWF file was unloaded. To close streams in the child SWF file, add an\n     * event listener to the child that listens for the <code>unload</code>\n     * event. When the parent calls <code>Loader.unload()</code>, the\n     * <code>unload</code> event is dispatched to the child. The following code\n     * shows how you might do this:</p>\n     * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n     * myNetStream.close(); mySound.close(); myNetConnection.close();\n     * myLocalConnection.close(); }\n     * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n     * closeAllStreams);</pre>\n     *\n     */\n    LoaderContainer.prototype.unload = function () {\n        //TODO\n    };\n    /**\n     * Enables a specific parser.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClass The parser class to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParser = function (parserClass) {\n        Loader_1.Loader.enableParser(parserClass);\n    };\n    /**\n     * Enables a list of parsers.\n     * When no specific parser is set for a loading/parsing opperation,\n     * loader3d can autoselect the correct parser to use.\n     * A parser must have been enabled, to be considered when autoselecting the parser.\n     *\n     * @param parserClasses A Vector of parser classes to enable.\n     * @see away.parsers.Parsers\n     */\n    LoaderContainer.enableParsers = function (parserClasses) {\n        Loader_1.Loader.enableParsers(parserClasses);\n    };\n    LoaderContainer.prototype.onAssetComplete = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when an error occurs during loading\n     */\n    LoaderContainer.prototype.onLoadError = function (event) {\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Called when a an error occurs during parsing\n     */\n    LoaderContainer.prototype.onParseError = function (event) {\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\n            this.dispatchEvent(event);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LoaderContainer.prototype.onTextureSizeError = function (event) {\n        this.dispatchEvent(event);\n    };\n    /**\n     * Called when the resource and all of its dependencies was retrieved.\n     */\n    LoaderContainer.prototype.onLoadComplete = function (event) {\n        this._content = event.content;\n        if (this._content)\n            this.addChild(this._content);\n        this.dispatchEvent(event);\n        this._disposeLoader();\n    };\n    return LoaderContainer;\n}(DisplayObjectContainer_1.DisplayObjectContainer));\nexports.LoaderContainer = LoaderContainer;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/events/LoaderEvent\":undefined,\"awayjs-core/lib/events/ParserEvent\":undefined,\"awayjs-core/lib/events/URLLoaderEvent\":undefined,\"awayjs-core/lib/library/AssetLibraryBundle\":undefined,\"awayjs-core/lib/library/Loader\":undefined}],\"awayjs-display/lib/display/MovieClip\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar TextField_1 = require(\"../display/TextField\");\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\nvar Timeline_1 = require(\"../base/Timeline\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\nvar MovieClip = (function (_super) {\n    __extends(MovieClip, _super);\n    function MovieClip(timeline) {\n        var _this = this;\n        if (timeline === void 0) { timeline = null; }\n        _super.call(this);\n        this._isButton = false;\n        this._time = 0; // the current time inside the animation\n        this._currentFrameIndex = -1; // the current frame\n        this._isPlaying = true; // false if paused or stopped\n        this._isInit = true;\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n        /**\n         *\n         */\n        this.loop = true;\n        /**\n         * the current index of the current active frame\n         */\n        this.constructedKeyFrameIndex = -1;\n        this._enterFrame = new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ENTER_FRAME, this);\n        this.inheritColorTransform = true;\n        this._onMouseOver = function (event) { return _this.currentFrameIndex = 1; };\n        this._onMouseOut = function (event) { return _this.currentFrameIndex = 0; };\n        this._onMouseDown = function (event) { return _this.currentFrameIndex = 2; };\n        this._onMouseUp = function (event) { return _this.currentFrameIndex = _this.currentFrameIndex == 0 ? 0 : 1; };\n        this._timeline = timeline || new Timeline_1.Timeline();\n    }\n    Object.defineProperty(MovieClip.prototype, \"adapter\", {\n        /**\n         * adapter is used to provide MovieClip to scripts taken from different platforms\n         * setter typically managed by factory\n         */\n        get: function () {\n            return this._adapter;\n        },\n        set: function (value) {\n            this._adapter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.dispose = function () {\n        this.disposeValues();\n        MovieClip._movieClips.push(this);\n    };\n    MovieClip.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._potentialInstances = [];\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    };\n    MovieClip.prototype.reset_textclones = function () {\n        if (this.timeline) {\n            var len = this._potentialInstances.length;\n            for (var i = 0; i < len; i++) {\n                if (this._potentialInstances[i] != null) {\n                    if (this._potentialInstances[i].isAsset(TextField_1.TextField))\n                        this._potentialInstances[i].text = this.timeline.getPotentialChildPrototype(i).text;\n                    else if (this._potentialInstances[i].isAsset(MovieClip))\n                        this._potentialInstances[i].reset_textclones();\n                }\n            }\n        }\n    };\n    Object.defineProperty(MovieClip.prototype, \"isInit\", {\n        get: function () {\n            return this._isInit;\n        },\n        set: function (value) {\n            this._isInit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"timeline\", {\n        get: function () {\n            return this._timeline;\n        },\n        set: function (value) {\n            this._timeline = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MovieClip.prototype, \"numFrames\", {\n        get: function () {\n            return this._timeline.numFrames;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.jumpToLabel = function (label) {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    };\n    MovieClip.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n        if (this.adapter)\n            this.adapter.freeFromScript();\n        this.constructedKeyFrameIndex = -1;\n        for (var i = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n        this._skipAdvance = MovieClip._skipAdvance;\n        var numFrames = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        }\n        else {\n            this._currentFrameIndex = -1;\n        }\n    };\n    MovieClip.prototype.resetSessionIDs = function () {\n        this._depth_sessionIDs = {};\n    };\n    Object.defineProperty(MovieClip.prototype, \"currentFrameIndex\", {\n        /*\n        * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n         */\n        get: function () {\n            return this._currentFrameIndex;\n        },\n        set: function (value) {\n            //if currentFrame is set greater than the available number of\n            //frames, the playhead is moved to the last frame in the timeline.\n            //But because the frame specified was not a keyframe, no scripts are\n            //executed, even if they exist on the last frame.\n            var skip_script = false;\n            var numFrames = this._timeline.keyframe_indices.length;\n            if (!numFrames)\n                return;\n            if (value < 0) {\n                value = 0;\n            }\n            else if (value >= numFrames) {\n                value = numFrames - 1;\n                skip_script = true;\n            }\n            if (this._currentFrameIndex == value)\n                return;\n            this._currentFrameIndex = value;\n            //changing current frame will ignore advance command for that\n            //update's advanceFrame function, unless advanceFrame has\n            //already been executed\n            this._skipAdvance = MovieClip._skipAdvance;\n            this._timeline.gotoFrame(this, value, skip_script);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MovieClip.prototype.addButtonListeners = function () {\n        this._isButton = true;\n        this.stop();\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.removeButtonListeners = function () {\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_UP, this._onMouseUp);\n    };\n    MovieClip.prototype.getChildAtSessionID = function (sessionID) {\n        return this._sessionID_childs[sessionID];\n    };\n    MovieClip.prototype.getSessionIDDepths = function () {\n        return this._depth_sessionIDs;\n    };\n    MovieClip.prototype.addChildAtDepth = function (child, depth, replace) {\n        if (replace === void 0) { replace = true; }\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n        child.reset(); // this takes care of transform and visibility\n        return _super.prototype.addChildAtDepth.call(this, child, depth, replace);\n    };\n    MovieClip.prototype._addTimelineChildAt = function (child, depth, sessionID) {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n        this._sessionID_childs[sessionID] = child;\n        return this.addChildAtDepth(child, depth);\n    };\n    MovieClip.prototype.removeChildAtInternal = function (index) {\n        var child = this._children[index];\n        if (child.adapter)\n            child.adapter.freeFromScript();\n        this.adapter.unregisterScriptObject(child);\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n        delete this._sessionID_childs[child._sessionID];\n        child._sessionID = -1;\n        return _super.prototype.removeChildAtInternal.call(this, index);\n    };\n    Object.defineProperty(MovieClip.prototype, \"assetType\", {\n        get: function () {\n            return MovieClip.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Starts playback of animation from current position\n     */\n    MovieClip.prototype.play = function () {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    };\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    MovieClip.prototype.update = function () {\n        MovieClip._skipAdvance = true;\n        this.advanceFrame();\n        MovieClip._skipAdvance = false;\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\n        // now we execute any intervals queued\n        FrameScriptManager_1.FrameScriptManager.execute_intervals();\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\n        //execute any disposes as a result of framescripts\n        FrameScriptManager_1.FrameScriptManager.execute_dispose();\n    };\n    MovieClip.prototype.getPotentialChildInstance = function (id) {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n        return this._potentialInstances[id];\n    };\n    /**\n     * Stop playback of animation and hold current position\n     */\n    MovieClip.prototype.stop = function () {\n        this._isPlaying = false;\n    };\n    MovieClip.prototype.clone = function () {\n        var newInstance = (MovieClip._movieClips.length) ? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    MovieClip.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    };\n    MovieClip.prototype.advanceFrame = function () {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop)\n                    this.currentFrameIndex = 0;\n                else\n                    this._isPlaying = false;\n            }\n            else {\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; ++i) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.advanceFrame();\n        }\n        this._skipAdvance = false;\n    };\n    // DEBUG CODE:\n    MovieClip.prototype.logHierarchy = function (depth) {\n        if (depth === void 0) { depth = 0; }\n        this.printHierarchyName(depth, this);\n        var len = this._children.length;\n        var child;\n        for (var i = 0; i < len; i++) {\n            child = this._children[i];\n            if (child.isAsset(MovieClip))\n                child.logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    };\n    MovieClip.prototype.printHierarchyName = function (depth, target) {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    };\n    MovieClip.prototype.clear = function () {\n        //clear out potential instances\n        var len = this._potentialInstances.length;\n        for (var i = 0; i < len; i++) {\n            var instance = this._potentialInstances[i];\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance && instance.name == \"\") {\n                FrameScriptManager_1.FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[i];\n            }\n        }\n        _super.prototype.clear.call(this);\n    };\n    MovieClip._movieClips = new Array();\n    MovieClip.assetType = \"[asset MovieClip]\";\n    return MovieClip;\n}(Sprite_1.Sprite));\nexports.MovieClip = MovieClip;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = MovieClip;\n\n},{\"../base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../display/TextField\":\"awayjs-display/lib/display/TextField\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/display/PointLight\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar LightBase_1 = require(\"../display/LightBase\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar CubeMapShadowMapper_1 = require(\"../materials/shadowmappers/CubeMapShadowMapper\");\nvar PointLight = (function (_super) {\n    __extends(PointLight, _super);\n    function PointLight() {\n        _super.call(this);\n        this._pRadius = 90000;\n        this._pFallOff = 100000;\n        this._pIsEntity = true;\n        this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.SPHERE;\n    }\n    Object.defineProperty(PointLight.prototype, \"assetType\", {\n        get: function () {\n            return PointLight.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.pCreateShadowMapper = function () {\n        return new CubeMapShadowMapper_1.CubeMapShadowMapper();\n    };\n    Object.defineProperty(PointLight.prototype, \"radius\", {\n        get: function () {\n            return this._pRadius;\n        },\n        set: function (value) {\n            this._pRadius = value;\n            if (this._pRadius < 0) {\n                this._pRadius = 0;\n            }\n            else if (this._pRadius > this._pFallOff) {\n                this._pFallOff = this._pRadius;\n                this._pInvalidateBounds();\n            }\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype.iFallOffFactor = function () {\n        return this._pFallOffFactor;\n    };\n    Object.defineProperty(PointLight.prototype, \"fallOff\", {\n        get: function () {\n            return this._pFallOff;\n        },\n        set: function (value) {\n            this._pFallOff = value;\n            if (this._pFallOff < 0)\n                this._pFallOff = 0;\n            if (this._pFallOff < this._pRadius)\n                this._pRadius = this._pFallOff;\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\n            this._pInvalidateBounds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PointLight.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        this._pSphereBounds.radius = this._pFallOff;\n    };\n    PointLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\n        if (target === void 0) { target = null; }\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var m = new Matrix3D_1.Matrix3D();\n        // todo: do not use lookAt on Light\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this._pParent.inverseSceneTransform);\n        this.lookAt(m.position);\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n        m.append(this.inverseSceneTransform);\n        var box = entity.getBox();\n        var v1 = m.deltaTransformVector(new Vector3D_1.Vector3D(box.left, box.bottom, box.front));\n        var v2 = m.deltaTransformVector(new Vector3D_1.Vector3D(box.right, box.top, box.back));\n        var d1 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;\n        var d2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n        var d = Math.sqrt(d1 > d2 ? d1 : d2);\n        var zMin;\n        var zMax;\n        var z = m.rawData[14];\n        zMin = z - d;\n        zMax = z + d;\n        raw[5] = raw[0] = zMin / d;\n        raw[10] = zMax / (zMax - zMin);\n        raw[11] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n        raw[14] = -zMin * raw[10];\n        if (!target)\n            target = new Matrix3D_1.Matrix3D();\n        target.copyRawDataFrom(raw);\n        target.prepend(m);\n        return target;\n    };\n    PointLight.assetType = \"[light PointLight]\";\n    return PointLight;\n}(LightBase_1.LightBase));\nexports.PointLight = PointLight;\n\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Scene\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\nvar BasicPartition_1 = require(\"../partition/BasicPartition\");\nvar Scene = (function (_super) {\n    __extends(Scene, _super);\n    function Scene(partition) {\n        if (partition === void 0) { partition = null; }\n        _super.call(this);\n        this._expandedPartitions = new Array();\n        this._partitions = new Array();\n        this._iCollectionMark = 0;\n        this.partition = partition || new BasicPartition_1.BasicPartition();\n        this._iIsRoot = true;\n        this._pScene = this;\n    }\n    Scene.prototype.traversePartitions = function (traverser) {\n        var i = 0;\n        var len = this._partitions.length;\n        while (i < len)\n            this._partitions[i++].traverse(traverser);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iRegisterPartition = function (partition) {\n        this._expandedPartitions.push(partition);\n        //ensure duplicates are not found in partitions array\n        if (this._partitions.indexOf(partition) == -1)\n            this._partitions.push(partition);\n    };\n    /**\n     * @internal\n     */\n    Scene.prototype._iUnregisterPartition = function (partition) {\n        this._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n        //if no more partition references found, remove from partitions array\n        if (this._expandedPartitions.indexOf(partition) == -1)\n            this._partitions.splice(this._partitions.indexOf(partition), 1);\n    };\n    return Scene;\n}(DisplayObjectContainer_1.DisplayObjectContainer));\nexports.Scene = Scene;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\"}],\"awayjs-display/lib/display/Shape\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar Graphics_1 = require(\"../graphics/Graphics\");\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nvar Shape = (function (_super) {\n    __extends(Shape, _super);\n    /**\n     * Create a new Shape object.\n     *\n     * @param material    [optional]        The material with which to render the Shape.\n     */\n    function Shape(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.Point();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.Graphics(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Shape.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Shape.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Shape object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"material\", {\n        /**\n         * The material with which to render the Shape.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Shape.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Shape.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.dispose = function () {\n        this.disposeValues();\n        Shape._shapes.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Shape.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Shape instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this shape,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subShapees, children of the shape, and the animator.\n     *\n     * If you want to copy just the shape, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new shape manually:\n     *\n     * <code>\n     * var clone : Shape = new Shape(original.graphics, original.material);\n     * </code>\n     */\n    Shape.prototype.clone = function () {\n        var newInstance = (Shape._shapes.length) ? Shape._shapes.pop() : new Shape();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Shape.prototype.copyTo = function (shape) {\n        _super.prototype.copyTo.call(this, shape);\n        this._graphics.copyTo(shape.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Shape.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Shape.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.Vector3D();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Shape.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Shape.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Shape.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return false;\n    };\n    Shape.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Shape._shapes = new Array();\n    Shape.assetType = \"[asset Shape]\";\n    return Shape;\n}(DisplayObject_1.DisplayObject));\nexports.Shape = Shape;\n\n},{\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Skybox\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\nvar Style_1 = require(\"../base/Style\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nvar Skybox = (function (_super) {\n    __extends(Skybox, _super);\n    /**\n     * Create a new Skybox object.\n     *\n     * @param material\tThe material with which to render the Skybox.\n     */\n    function Skybox(image) {\n        var _this = this;\n        if (image === void 0) { image = null; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pAlphaThreshold = 0;\n        this._pBlendMode = BlendMode_1.BlendMode.NORMAL;\n        this._curves = false;\n        this._imageRect = false;\n        this._style = new Style_1.Style();\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        this._pIsEntity = true;\n        this._owners = new Array(this);\n        this._style.image = image;\n        this.texture = new SingleCubeTexture_1.SingleCubeTexture();\n        //default bounds type\n        this._boundsType = BoundsType_1.BoundsType.NULL;\n    }\n    Object.defineProperty(Skybox.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"curves\", {\n        /**\n         * Indicates whether skybox should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"animator\", {\n        get: function () {\n            return this._animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"texture\", {\n        /**\n        * The cube texture to use as the skybox.\n        */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Skybox.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    Skybox.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    Object.defineProperty(Skybox.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Skybox.prototype, \"assetType\", {\n        get: function () {\n            return Skybox.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    Skybox.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_PASSES, this));\n    };\n    Skybox.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\n    };\n    Skybox.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\n    };\n    Skybox.prototype.addTexture = function (texture) {\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    Skybox.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidate();\n    };\n    Skybox.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    Skybox.prototype._acceptTraverser = function (traverser) {\n        traverser.applyRenderable(this);\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Skybox.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return false;\n    };\n    Skybox.assetType = \"[asset Skybox]\";\n    return Skybox;\n}(DisplayObject_1.DisplayObject));\nexports.Skybox = Skybox;\n\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-display/lib/display/Sprite\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Graphics_1 = require(\"../graphics/Graphics\");\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nvar Sprite = (function (_super) {\n    __extends(Sprite, _super);\n    /**\n     * Create a new Sprite object.\n     *\n     * @param material    [optional]        The material with which to render the Sprite.\n     */\n    function Sprite(material) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        _super.call(this);\n        //temp point used in hit testing\n        this._tempPoint = new Point_1.Point();\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\n        this._graphics = new Graphics_1.Graphics(); //unique graphics object for each Sprite\n        this._graphics.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n        this.material = material;\n    }\n    Object.defineProperty(Sprite.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Sprite.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"graphics\", {\n        /**\n         * Specifies the Graphics object belonging to this Sprite object, where\n         * drawing commands can occur.\n         */\n        get: function () {\n            if (this._iSourcePrefab)\n                this._iSourcePrefab._iValidate();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._graphics.animator;\n        },\n        set: function (value) {\n            if (this._graphics.animator)\n                this._graphics.animator.removeOwner(this);\n            this._graphics.animator = value;\n            if (this._graphics.animator)\n                this._graphics.animator.addOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"material\", {\n        /**\n         * The material with which to render the Sprite.\n         */\n        get: function () {\n            return this._graphics.material;\n        },\n        set: function (value) {\n            this._graphics.material = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._graphics.style;\n        },\n        set: function (value) {\n            this._graphics.style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Sprite.prototype.bakeTransformations = function () {\n        this._graphics.applyTransformation(this.transform.matrix3D);\n        this.transform.clearMatrix3D();\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.dispose = function () {\n        this.disposeValues();\n        Sprite._sprites.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    Sprite.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._graphics.dispose();\n    };\n    /**\n     * Clones this Sprite instance along with all it's children, while re-using the same\n     * material, graphics and animation set. The returned result will be a copy of this sprite,\n     * containing copies of all of it's children.\n     *\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\n     * graphics, and material. Properties that are cloned or created anew for the copy\n     * include subSpritees, children of the sprite, and the animator.\n     *\n     * If you want to copy just the sprite, reusing it's graphics and material while not\n     * cloning it's children, the simplest way is to create a new sprite manually:\n     *\n     * <code>\n     * var clone : Sprite = new Sprite(original.graphics, original.material);\n     * </code>\n     */\n    Sprite.prototype.clone = function () {\n        var newInstance = (Sprite._sprites.length) ? Sprite._sprites.pop() : new Sprite();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    Sprite.prototype.copyTo = function (sprite) {\n        _super.prototype.copyTo.call(this, sprite);\n        this._graphics.copyTo(sprite.graphics);\n    };\n    /**\n     * //TODO\n     *\n     * @protected\n     */\n    Sprite.prototype._pUpdateBoxBounds = function () {\n        _super.prototype._pUpdateBoxBounds.call(this);\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n    };\n    Sprite.prototype._pUpdateSphereBounds = function () {\n        _super.prototype._pUpdateSphereBounds.call(this);\n        var box = this.getBox();\n        if (!this._center)\n            this._center = new Vector3D_1.Vector3D();\n        this._center.x = box.x + box.width / 2;\n        this._center.y = box.y + box.height / 2;\n        this._center.z = box.z + box.depth / 2;\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n    };\n    /**\n     * //TODO\n     *\n     * @private\n     */\n    Sprite.prototype._onGraphicsInvalidate = function (event) {\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iUnregisterEntity(this);\n            this._pIsEntity = Boolean(this._graphics.count);\n            if (this._pImplicitPartition)\n                this._pImplicitPartition._iRegisterEntity(this);\n        }\n        this._pInvalidateBounds();\n    };\n    /**\n     *\n     * @param renderer\n     *\n     * @internal\n     */\n    Sprite.prototype._acceptTraverser = function (traverser) {\n        this.graphics.acceptTraverser(traverser);\n    };\n    Sprite.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\n        if (this._graphics.count) {\n            this._tempPoint.setTo(x, y);\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\n            var box;\n            //early out for box test\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\n                return false;\n            //early out for non-shape tests\n            if (!shapeFlag)\n                return true;\n            //ok do the graphics thing\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\n                return true;\n        }\n        return _super.prototype._hitTestPointInternal.call(this, x, y, shapeFlag, masksFlag);\n    };\n    Sprite.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._graphics.clear();\n    };\n    Sprite._sprites = new Array();\n    Sprite.assetType = \"[asset Sprite]\";\n    return Sprite;\n}(DisplayObjectContainer_1.DisplayObjectContainer));\nexports.Sprite = Sprite;\n\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/TextField\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\nvar Style_1 = require(\"../base/Style\");\nvar TextFieldType_1 = require(\"../text/TextFieldType\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n *\n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nvar TextField = (function (_super) {\n    __extends(TextField, _super);\n    /**\n     * Creates a new TextField instance. After you create the TextField instance,\n     * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n     * the parent DisplayObjectContainer object to add the TextField instance to\n     * the display list.\n     *\n     * <p>The default size for a text field is 100 x 100 pixels.</p>\n     */\n    function TextField() {\n        _super.call(this);\n        this._text = \"\";\n        this.type = TextFieldType_1.TextFieldType.STATIC;\n    }\n    Object.defineProperty(TextField.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return TextField.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"bottomScrollV\", {\n        /**\n         * An integer(1-based index) that indicates the bottommost line that is\n         * currently visible in the specified text field. Think of the text field as\n         * a window onto a block of text. The <code>scrollV</code> property is the\n         * 1-based index of the topmost visible line in the window.\n         *\n         * <p>All the text between the lines indicated by <code>scrollV</code> and\n         * <code>bottomScrollV</code> is currently visible in the text field.</p>\n         */\n        get: function () {\n            return this._bottomScrollV;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"caretIndex\", {\n        /**\n         * The index of the insertion point(caret) position. If no insertion point\n         * is displayed, the value is the position the insertion point would be if\n         * you restored focus to the field(typically where the insertion point last\n         * was, or 0 if the field has not had focus).\n         *\n         * <p>Selection span indexes are zero-based(for example, the first position\n         * is 0, the second position is 1, and so on).</p>\n         */\n        get: function () {\n            return this._caretIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"length\", {\n        /**\n         * The number of characters in a text field. A character such as tab\n         * (<code>\\t</code>) counts as one character.\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The maximum value of <code>scrollH</code>.\n     */\n    TextField.prototype.maxScrollH = function () {\n        return this._maxScrollH;\n    };\n    /**\n     * The maximum value of <code>scrollV</code>.\n     */\n    TextField.prototype.maxScrollV = function () {\n        return this._maxScrollV;\n    };\n    Object.defineProperty(TextField.prototype, \"numLines\", {\n        /**\n         * Defines the number of text lines in a multiline text field. If\n         * <code>wordWrap</code> property is set to <code>true</code>, the number of\n         * lines increases when text wraps.\n         */\n        get: function () {\n            return this._numLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionBeginIndex\", {\n        /**\n         * The zero-based character index value of the first character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionBeginIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"selectionEndIndex\", {\n        /**\n         * The zero-based character index value of the last character in the current\n         * selection. For example, the first character is 0, the second character is\n         * 1, and so on. If no text is selected, this property is the value of\n         * <code>caretIndex</code>.\n         */\n        get: function () {\n            return this._selectionEndIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"text\", {\n        /**\n         * A string that is the current text in the text field. Lines are separated\n         * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n         * property contains unformatted text in the text field, without HTML tags.\n         *\n         * <p>To get the text in HTML form, use the <code>htmlText</code>\n         * property.</p>\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            value = value.toString();\n            if (this._text == value)\n                return;\n            this._text = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textFormat\", {\n        get: function () {\n            return this._textFormat;\n        },\n        set: function (value) {\n            if (this._textFormat == value)\n                return;\n            this._textFormat = value;\n            this._textGraphicsDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"graphics\", {\n        /**\n         * The graphics used by the sprite that provides it with its shape.\n         */\n        get: function () {\n            if (this._textGraphicsDirty)\n                this.reConstruct();\n            return this._graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textColor\", {\n        get: function () {\n            return this._textColor;\n        },\n        set: function (value) {\n            this._textColor = value;\n            if (!this.transform.colorTransform)\n                this.transform.colorTransform = new ColorTransform_1.ColorTransform();\n            this.transform.colorTransform.color = value;\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textInteractionMode\", {\n        /**\n         * The interaction mode property, Default value is\n         * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n         * that the text can be scrolled but not selected. One can switch to the\n         * selectable mode through the in-built context menu on the text field. On\n         * Desktop, the normal mode implies that the text is in scrollable as well as\n         * selection mode.\n         */\n        get: function () {\n            return this._textInteractionMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textWidth\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textWidth;\n        },\n        set: function (value) {\n            this._textWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"textHeight\", {\n        /**\n         * The width of the text in pixels.\n         */\n        get: function () {\n            return this._textHeight;\n        },\n        set: function (value) {\n            this._textHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextField.prototype, \"isEntity\", {\n        /**\n         *\n         */\n        get: function () {\n            return true; //TODO do this better\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextField.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        if (this._textElements)\n            this._textElements.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.dispose = function () {\n        this.disposeValues();\n        TextField._textFields.push(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    TextField.prototype.disposeValues = function () {\n        _super.prototype.disposeValues.call(this);\n        this._textFormat = null;\n        this._textGraphic = null;\n        if (this._textElements) {\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n    };\n    /**\n     * Reconstructs the Graphics for this Text-field.\n     */\n    TextField.prototype.reConstruct = function () {\n        this._textGraphicsDirty = false;\n        if (this._textFormat == null)\n            return;\n        if (this._textGraphic) {\n            this._textGraphic.dispose();\n            this._textGraphic = null;\n            this._textElements.clear();\n            this._textElements.dispose();\n            this._textElements = null;\n        }\n        if (this._text == \"\")\n            return;\n        var numVertices = 0;\n        var elements;\n        var char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n        var y_offset = 0;\n        var prev_char = null;\n        var j = 0;\n        var k = 0;\n        var whitespace_width = (this._textFormat.font_table.get_whitespace_width() * char_scale) + this._textFormat.letterSpacing;\n        var textlines = this.text.toString().split(\"\\\\n\");\n        var final_lines_chars = [];\n        var final_lines_char_scale = [];\n        var final_lines_width = [];\n        var final_lines_justify_bool = [];\n        var final_lines_justify = [];\n        var maxlineWidth = this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n        for (var tl = 0; tl < textlines.length; tl++) {\n            final_lines_chars.push([]);\n            final_lines_char_scale.push([]);\n            final_lines_width.push(0);\n            final_lines_justify.push(0);\n            final_lines_justify_bool.push(false);\n            var words = textlines[tl].split(\" \");\n            for (var i = 0; i < words.length; i++) {\n                var word_width = 0;\n                var word_chars = [];\n                var word_chars_scale = [];\n                var c_cnt = 0;\n                for (var w = 0; w < words[i].length; w++) {\n                    char_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n                    var this_char = this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n                    if (this_char == null) {\n                        if (this._textFormat.fallback_font_table) {\n                            char_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n                            this_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n                        }\n                    }\n                    if (this_char != null) {\n                        elements = this_char.elements;\n                        if (elements != null) {\n                            numVertices += elements.numVertices;\n                            // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                            var kerning_value = 0;\n                            if (prev_char != null) {\n                                for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                    if (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n                                        kerning_value = prev_char.kerningValues[k];\n                                        break;\n                                    }\n                                }\n                            }\n                            word_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                        }\n                        else {\n                            // if no char-elements was found, we insert a \"space\"\n                            word_width += whitespace_width;\n                        }\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        //x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n                        word_width += whitespace_width;\n                    }\n                    word_chars_scale[c_cnt] = char_scale;\n                    word_chars[c_cnt++] = this_char;\n                }\n                if (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth) || (final_lines_chars[final_lines_chars.length - 1].length == 0)) {\n                    // if line can hold this word without breaking the bounds, we can just add all chars\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] += word_width;\n                }\n                else {\n                    // word does not fit\n                    // todo respect autowrapping properties.\n                    // right now we just pretend everything has autowrapping and multiline\n                    if (final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length - 1] == null) {\n                        final_lines_chars[final_lines_chars.length - 1].pop();\n                        final_lines_char_scale[final_lines_char_scale.length - 1].pop();\n                        final_lines_width[final_lines_width.length - 1] -= whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] -= 1;\n                    }\n                    final_lines_justify_bool[final_lines_justify_bool.length - 1] = true;\n                    final_lines_chars.push([]);\n                    final_lines_char_scale.push([]);\n                    final_lines_width.push(0);\n                    final_lines_justify.push(0);\n                    final_lines_justify_bool.push(false);\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n                    }\n                    final_lines_width[final_lines_width.length - 1] = word_width;\n                }\n                if (i < (words.length - 1)) {\n                    if ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n                        final_lines_chars[final_lines_chars.length - 1].push(null);\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n                        final_lines_width[final_lines_width.length - 1] += whitespace_width;\n                        final_lines_justify[final_lines_justify.length - 1] += 1;\n                    }\n                }\n            }\n        }\n        y_offset = 2 + (this._textFormat.font_table.ascent - this._textFormat.font_table.get_font_em_size()) * char_scale;\n        var vertices = new Float32Array(numVertices * 3);\n        for (var i = 0; i < final_lines_chars.length; i++) {\n            var x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent;\n            var justify_addion = 0;\n            if (this._textFormat.align == \"center\") {\n                x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent + (maxlineWidth - final_lines_width[i]) / 2;\n            }\n            else if (this._textFormat.align == \"justify\") {\n                if (final_lines_justify_bool[i]) {\n                    justify_addion = ((maxlineWidth) - final_lines_width[i]) / final_lines_justify[i];\n                }\n            }\n            else if (this._textFormat.align == \"right\") {\n                x_offset = (this._textWidth - final_lines_width[i]) - (2 + this._textFormat.rightMargin);\n            }\n            //console.log(\"this._textFormat.align=\"+this._textFormat.align);\n            //console.log(\"this._width=\"+this._width);\n            for (var t = 0; t < final_lines_chars[i].length; t++) {\n                var this_char = final_lines_chars[i][t];\n                char_scale = final_lines_char_scale[i][t];\n                if (this_char != null) {\n                    elements = this_char.elements;\n                    if (elements != null) {\n                        var buffer = new Float32Array(elements.concatenatedBuffer.buffer);\n                        for (var v = 0; v < elements.numVertices; v++) {\n                            vertices[j++] = buffer[v * 3] * char_scale + x_offset;\n                            vertices[j++] = buffer[v * 3 + 1] * char_scale + y_offset;\n                            vertices[j++] = buffer[v * 3 + 2];\n                        }\n                        // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n                        var kerning_value = 0;\n                        if (prev_char != null) {\n                            for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\n                                if (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n                                    kerning_value = prev_char.kerningValues[k];\n                                    break;\n                                }\n                            }\n                        }\n                        x_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n                    }\n                    else {\n                        // if no char-elements was found, we insert a \"space\"\n                        x_offset += whitespace_width + justify_addion;\n                    }\n                }\n                else {\n                    x_offset += whitespace_width + justify_addion;\n                }\n            }\n            // hack for multiline textfield in icycle.\n            y_offset += (this._textFormat.font_table.ascent + this._textFormat.font_table.descent) * char_scale;\n            //y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n            y_offset += this._textFormat.leading;\n        }\n        var attributesView = new AttributesView_1.AttributesView(Float32Array, 3);\n        attributesView.set(vertices);\n        var vertexBuffer = attributesView.buffer;\n        attributesView.dispose();\n        this._textElements = new TriangleElements_1.TriangleElements(vertexBuffer);\n        this._textElements.setPositions(new Float2Attributes_1.Float2Attributes(vertexBuffer));\n        this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes_1.Byte4Attributes(vertexBuffer, false));\n        this._textGraphic = this._graphics.addGraphic(this._textElements);\n        this.material = this._textFormat.material;\n        var sampler = new Sampler2D_1.Sampler2D();\n        this.style = new Style_1.Style();\n        this.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n        this.style.uvMatrix = new Matrix_1.Matrix(0, 0, 0, 0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n        this.material.animateUVs = true;\n    };\n    /**\n     * Appends the string specified by the <code>newText</code> parameter to the\n     * end of the text of the text field. This method is more efficient than an\n     * addition assignment(<code>+=</code>) on a <code>text</code> property\n     * (such as <code>someTextField.text += moreText</code>), particularly for a\n     * text field that contains a significant amount of content.\n     *\n     * @param newText The string to append to the existing text.\n     */\n    TextField.prototype.appendText = function (newText) {\n        this._text += newText;\n    };\n    /**\n     * *tells the Textfield that a paragraph is defined completly.\n     * e.g. the textfield will start a new line for future added text.\n     */\n    TextField.prototype.closeParagraph = function () {\n        //TODO\n    };\n    /**\n     * Returns a rectangle that is the bounding box of the character.\n     *\n     * @param charIndex The zero-based index value for the character(for\n     *                  example, the first position is 0, the second position is\n     *                  1, and so on).\n     * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n     *         maximum values defining the bounding box of the character.\n     */\n    TextField.prototype.getCharBoundaries = function (charIndex) {\n        return this._charBoundaries;\n    };\n    /**\n     * Returns the zero-based index value of the character at the point specified\n     * by the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the character.\n     * @param y The <i>y</i> coordinate of the character.\n     * @return The zero-based index value of the character(for example, the\n     *         first position is 0, the second position is 1, and so on). Returns\n     *         -1 if the point is not over any character.\n     */\n    TextField.prototype.getCharIndexAtPoint = function (x, y) {\n        return this._charIndexAtPoint;\n    };\n    /**\n     * Given a character index, returns the index of the first character in the\n     * same paragraph.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the first character in the same\n     *         paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getFirstCharInParagraph = function (charIndex /*int*/) {\n        return this._firstCharInParagraph;\n    };\n    /**\n     * Returns a DisplayObject reference for the given <code>id</code>, for an\n     * image or SWF file that has been added to an HTML-formatted text field by\n     * using an <code><img></code> tag. The <code><img></code> tag is in the\n     * following format:\n     *\n     * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n     * 'instanceName' ></code></pre></p>\n     *\n     * @param id The <code>id</code> to match(in the <code>id</code> attribute\n     *           of the <code><img></code> tag).\n     * @return The display object corresponding to the image or SWF file with the\n     *         matching <code>id</code> attribute in the <code><img></code> tag\n     *         of the text field. For media loaded from an external source, this\n     *         object is a Loader object, and, once loaded, the media object is a\n     *         child of that Loader object. For media embedded in the SWF file,\n     *         it is the loaded object. If no <code><img></code> tag with the\n     *         matching <code>id</code> exists, the method returns\n     *         <code>null</code>.\n     */\n    TextField.prototype.getImageReference = function (id) {\n        return this._imageReference;\n    };\n    /**\n     * Returns the zero-based index value of the line at the point specified by\n     * the <code>x</code> and <code>y</code> parameters.\n     *\n     * @param x The <i>x</i> coordinate of the line.\n     * @param y The <i>y</i> coordinate of the line.\n     * @return The zero-based index value of the line(for example, the first\n     *         line is 0, the second line is 1, and so on). Returns -1 if the\n     *         point is not over any line.\n     */\n    TextField.prototype.getLineIndexAtPoint = function (x, y) {\n        return this._lineIndexAtPoint;\n    };\n    /**\n     * Returns the zero-based index value of the line containing the character\n     * specified by the <code>charIndex</code> parameter.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return The zero-based index value of the line.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getLineIndexOfChar = function (charIndex /*int*/) {\n        return this._lineIndexOfChar;\n    };\n    /**\n     * Returns the number of characters in a specific text line.\n     *\n     * @param lineIndex The line number for which you want the length.\n     * @return The number of characters in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineLength = function (lineIndex /*int*/) {\n        return this._lineLength;\n    };\n    /**\n     * Returns metrics information about a given text line.\n     *\n     * @param lineIndex The line number for which you want metrics information.\n     * @return A TextLineMetrics object.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineMetrics = function (lineIndex /*int*/) {\n        return this._lineMetrics;\n    };\n    /**\n     * Returns the character index of the first character in the line that the\n     * <code>lineIndex</code> parameter specifies.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The zero-based index value of the first character in the line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineOffset = function (lineIndex /*int*/) {\n        return this._lineOffset;\n    };\n    /**\n     * Returns the text of the line specified by the <code>lineIndex</code>\n     * parameter.\n     *\n     * @param lineIndex The zero-based index value of the line(for example, the\n     *                  first line is 0, the second line is 1, and so on).\n     * @return The text string contained in the specified line.\n     * @throws RangeError The line number specified is out of range.\n     */\n    TextField.prototype.getLineText = function (lineIndex /*int*/) {\n        return this._lineText;\n    };\n    /**\n     * Given a character index, returns the length of the paragraph containing\n     * the given character. The length is relative to the first character in the\n     * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n     * the character index passed in.\n     *\n     * @param charIndex The zero-based index value of the character(for example,\n     *                  the first character is 0, the second character is 1, and\n     *                  so on).\n     * @return Returns the number of characters in the paragraph.\n     * @throws RangeError The character index specified is out of range.\n     */\n    TextField.prototype.getParagraphLength = function (charIndex /*int*/) {\n        return this._paragraphLength;\n    };\n    /**\n     * Returns a TextFormat object that contains formatting information for the\n     * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n     * parameters specify. Only properties that are common to the entire text\n     * specified are set in the resulting TextFormat object. Any property that is\n     * <i>mixed</i>, meaning that it has different values at different points in\n     * the text, has a value of <code>null</code>.\n     *\n     * <p>If you do not specify values for these parameters, this method is\n     * applied to all the text in the text field. </p>\n     *\n     * <p>The following table describes three possible usages:</p>\n     *\n     * @return The TextFormat object that represents the formatting properties\n     *         for the specified text.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.getTextFormat = function (beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n        return this._textFormat;\n    };\n    /**\n     * Replaces the current selection with the contents of the <code>value</code>\n     * parameter. The text is inserted at the position of the current selection,\n     * using the current default character format and default paragraph format.\n     * The text is not treated as HTML.\n     *\n     * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n     * delete text without disrupting the character and paragraph formatting of\n     * the rest of the text.</p>\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param value The string to replace the currently selected text.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceSelectedText = function (value) {\n    };\n    /**\n     * Replaces the range of characters that the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters specify with the contents of the\n     * <code>newText</code> parameter. As designed, the text from\n     * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * @param beginIndex The zero-based index value for the start position of the\n     *                   replacement range.\n     * @param endIndex   The zero-based index position of the first character\n     *                   after the desired text span.\n     * @param newText    The text to use to replace the specified range of\n     *                   characters.\n     * @throws Error This method cannot be used on a text field with a style\n     *               sheet.\n     */\n    TextField.prototype.replaceText = function (beginIndex /*int*/, endIndex /*int*/, newText) {\n    };\n    /**\n     * Sets as selected the text designated by the index values of the first and\n     * last characters, which are specified with the <code>beginIndex</code> and\n     * <code>endIndex</code> parameters. If the two parameter values are the\n     * same, this method sets the insertion point, as if you set the\n     * <code>caretIndex</code> property.\n     *\n     * @param beginIndex The zero-based index value of the first character in the\n     *                   selection(for example, the first character is 0, the\n     *                   second character is 1, and so on).\n     * @param endIndex   The zero-based index value of the last character in the\n     *                   selection.\n     */\n    TextField.prototype.setSelection = function (beginIndex /*int*/, endIndex /*int*/) {\n    };\n    /**\n     * Applies the text formatting that the <code>format</code> parameter\n     * specifies to the specified text in a text field. The value of\n     * <code>format</code> must be a TextFormat object that specifies the desired\n     * text formatting changes. Only the non-null properties of\n     * <code>format</code> are applied to the text field. Any property of\n     * <code>format</code> that is set to <code>null</code> is not applied. By\n     * default, all of the properties of a newly created TextFormat object are\n     * set to <code>null</code>.\n     *\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\n     * the text field.</p>\n     *\n     * <p>The <code>setTextFormat()</code> method changes the text formatting\n     * applied to a range of characters or to the entire body of text in a text\n     * field. To apply the properties of format to all text in the text field, do\n     * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n     * To apply the properties of the format to a range of text, specify values\n     * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n     * You can use the <code>length</code> property to determine the index\n     * values.</p>\n     *\n     * <p>The two types of formatting information in a TextFormat object are\n     * character level formatting and paragraph level formatting. Each character\n     * in a text field can have its own character formatting settings, such as\n     * font name, font size, bold, and italic.</p>\n     *\n     * <p>For paragraphs, the first character of the paragraph is examined for\n     * the paragraph formatting settings for the entire paragraph. Examples of\n     * paragraph formatting settings are left margin, right margin, and\n     * indentation.</p>\n     *\n     * <p>Any text inserted manually by the user, or replaced by the\n     * <code>replaceSelectedText()</code> method, receives the default text field\n     * formatting for new text, and not the formatting specified for the text\n     * insertion point. To set the default formatting for new text, use\n     * <code>defaultTextFormat</code>.</p>\n     *\n     * @param format A TextFormat object that contains character and paragraph\n     *               formatting information.\n     * @throws Error      This method cannot be used on a text field with a style\n     *                    sheet.\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n     *                    specified is out of range.\n     */\n    TextField.prototype.setTextFormat = function (format, beginIndex, endIndex) {\n        if (beginIndex === void 0) { beginIndex = -1; }\n        if (endIndex === void 0) { endIndex = -1; }\n    };\n    /**\n     * Returns true if an embedded font is available with the specified\n     * <code>fontName</code> and <code>fontStyle</code> where\n     * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n     * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n     * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n     * embedded fonts are only used with the flash.text.engine classes. The two\n     * types are distinguished by the <code>fontType</code> property of the\n     * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n     * function.\n     *\n     * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n     * <code>embedFonts</code> is set to <code>true</code> and the only font\n     * available at run time with the specified name and style is of type\n     * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n     * embedded font were available with the specified name and style.</p>\n     *\n     * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n     * available with the same name and style, the <code>EMBEDDED</code> font is\n     * selected and text renders with the <code>EMBEDDED</code> font.</p>\n     *\n     * @param fontName  The name of the embedded font to check.\n     * @param fontStyle Specifies the font style to check. Use\n     *                  <code>flash.text.FontStyle</code>\n     * @return <code>true</code> if a compatible embedded font is available,\n     *         otherwise <code>false</code>.\n     * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n     *                       of <code>flash.text.FontStyle</code>.\n     */\n    TextField.isFontCompatible = function (fontName, fontStyle) {\n        return false;\n    };\n    TextField.prototype.clone = function () {\n        var newInstance = (TextField._textFields.length) ? TextField._textFields.pop() : new TextField();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    TextField.prototype.copyTo = function (newInstance) {\n        _super.prototype.copyTo.call(this, newInstance);\n        newInstance.textWidth = this._textWidth;\n        newInstance.textHeight = this._textHeight;\n        newInstance.textFormat = this._textFormat;\n        //newInstance.textColor = this._textColor;\n        newInstance.text = this._text;\n    };\n    TextField._textFields = new Array();\n    TextField.assetType = \"[asset TextField]\";\n    return TextField;\n}(Sprite_1.Sprite));\nexports.TextField = TextField;\n\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/display\":[function(require,module,exports){\n\"use strict\";\nvar Billboard_1 = require(\"./display/Billboard\");\nexports.Billboard = Billboard_1.Billboard;\nvar Camera_1 = require(\"./display/Camera\");\nexports.Camera = Camera_1.Camera;\nvar DirectionalLight_1 = require(\"./display/DirectionalLight\");\nexports.DirectionalLight = DirectionalLight_1.DirectionalLight;\nvar DisplayObject_1 = require(\"./display/DisplayObject\");\nexports.DisplayObject = DisplayObject_1.DisplayObject;\nvar DisplayObjectContainer_1 = require(\"./display/DisplayObjectContainer\");\nexports.DisplayObjectContainer = DisplayObjectContainer_1.DisplayObjectContainer;\nvar LightBase_1 = require(\"./display/LightBase\");\nexports.LightBase = LightBase_1.LightBase;\nvar LightProbe_1 = require(\"./display/LightProbe\");\nexports.LightProbe = LightProbe_1.LightProbe;\nvar LineSegment_1 = require(\"./display/LineSegment\");\nexports.LineSegment = LineSegment_1.LineSegment;\nvar LoaderContainer_1 = require(\"./display/LoaderContainer\");\nexports.LoaderContainer = LoaderContainer_1.LoaderContainer;\nvar MovieClip_1 = require(\"./display/MovieClip\");\nexports.MovieClip = MovieClip_1.MovieClip;\nvar PointLight_1 = require(\"./display/PointLight\");\nexports.PointLight = PointLight_1.PointLight;\nvar Scene_1 = require(\"./display/Scene\");\nexports.Scene = Scene_1.Scene;\nvar Shape_1 = require(\"./display/Shape\");\nexports.Shape = Shape_1.Shape;\nvar Skybox_1 = require(\"./display/Skybox\");\nexports.Skybox = Skybox_1.Skybox;\nvar Sprite_1 = require(\"./display/Sprite\");\nexports.Sprite = Sprite_1.Sprite;\nvar TextField_1 = require(\"./display/TextField\");\nexports.TextField = TextField_1.TextField;\n\n},{\"./display/Billboard\":\"awayjs-display/lib/display/Billboard\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"./display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"./display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"./display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"./display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"./display/LineSegment\":\"awayjs-display/lib/display/LineSegment\",\"./display/LoaderContainer\":\"awayjs-display/lib/display/LoaderContainer\",\"./display/MovieClip\":\"awayjs-display/lib/display/MovieClip\",\"./display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./display/Shape\":\"awayjs-display/lib/display/Shape\",\"./display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"./display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"./display/TextField\":\"awayjs-display/lib/display/TextField\"}],\"awayjs-display/lib/draw/CapsStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nvar CapsStyle = (function () {\n    function CapsStyle() {\n    }\n    /**\n     * Used to specify round caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.ROUND = 1;\n    /**\n     * Used to specify no caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.NONE = 0;\n    /**\n     * Used to specify square caps in the <code>caps</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    CapsStyle.SQUARE = 2;\n    return CapsStyle;\n}());\nexports.CapsStyle = CapsStyle;\n\n},{}],\"awayjs-display/lib/draw/GradientType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nvar GradientType = (function () {\n    function GradientType() {\n    }\n    /**\n     * Value used to specify a linear gradient fill.\n     */\n    GradientType.LINEAR = \"linear\";\n    /**\n     * Value used to specify a radial gradient fill.\n     */\n    GradientType.RADIAL = \"radial\";\n    return GradientType;\n}());\nexports.GradientType = GradientType;\n\n},{}],\"awayjs-display/lib/draw/GraphicsFactoryFills\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryFills = (function () {\n    function GraphicsFactoryFills() {\n    }\n    GraphicsFactoryFills.draw_pathes = function (targetGraphic) {\n        var len = targetGraphic.queued_fill_pathes.length;\n        var cp = 0;\n        for (cp = 0; cp < len; cp++) {\n            var one_path = targetGraphic.queued_fill_pathes[cp];\n            //one_path.finalizeContour();\n            var contour_commands = one_path.commands;\n            var contour_data = one_path.data;\n            var commands;\n            var data;\n            var i = 0;\n            var k = 0;\n            var vert_cnt = 0;\n            var data_cnt = 0;\n            var draw_direction = 0;\n            var contours_vertices = [[]];\n            var final_vert_list = [];\n            var final_vert_cnt = 0;\n            var lastPoint = new Point_1.Point();\n            var last_dir_vec = new Point_1.Point();\n            var end_point = new Point_1.Point();\n            for (k = 0; k < contour_commands.length; k++) {\n                contours_vertices.push([]);\n                vert_cnt = 0;\n                data_cnt = 0;\n                commands = contour_commands[k];\n                data = contour_data[k];\n                draw_direction = 0;\n                var new_dir = 0;\n                var new_dir_1 = 0;\n                var new_dir_2 = 0;\n                var dir_delta = 0;\n                var last_direction = 0;\n                var tmp_dir_point = new Point_1.Point();\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1])) {\n                    data[data.length] == data[0];\n                    data[data.length] == data[1];\n                }\n                lastPoint.x = data[0];\n                lastPoint.y = data[1];\n                if (commands[1] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\n                    last_dir_vec.x = data[2] - lastPoint.x;\n                    last_dir_vec.y = data[3] - lastPoint.y;\n                }\n                else if (commands[1] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                    last_dir_vec.x = data[4] - lastPoint.x;\n                    last_dir_vec.y = data[5] - lastPoint.y;\n                }\n                data_cnt = 2;\n                last_dir_vec.normalize();\n                last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                for (i = 1; i < commands.length; i++) {\n                    end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO) {\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                    }\n                    else if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                        end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\n                    }\n                    //get the directional vector and the direction for this segment\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\n                    tmp_dir_point.normalize();\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                    // get the difference in angle to the last segment\n                    dir_delta = new_dir - last_direction;\n                    if (dir_delta > 180) {\n                        dir_delta -= 360;\n                    }\n                    if (dir_delta < -180) {\n                        dir_delta += 360;\n                    }\n                    draw_direction += dir_delta;\n                    last_direction = new_dir;\n                    lastPoint.x = end_point.x;\n                    lastPoint.y = end_point.y;\n                }\n                lastPoint.x = data[0];\n                lastPoint.y = data[1];\n                data_cnt = 2;\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                //console.log(\"Draw directions complete: \"+draw_direction);\n                for (i = 1; i < commands.length; i++) {\n                    switch (commands[i]) {\n                        case GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO:\n                            console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                            break;\n                        case GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO:\n                            lastPoint.x = data[data_cnt++];\n                            lastPoint.y = data[data_cnt++];\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                            break;\n                        case GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO:\n                            var control_x = data[data_cnt++];\n                            var control_y = data[data_cnt++];\n                            var end_x = data[data_cnt++];\n                            var end_y = data[data_cnt++];\n                            tmp_dir_point.x = control_x - lastPoint.x;\n                            tmp_dir_point.y = control_y - lastPoint.y;\n                            tmp_dir_point.normalize();\n                            new_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                            tmp_dir_point.x = end_x - lastPoint.x;\n                            tmp_dir_point.y = end_y - lastPoint.y;\n                            tmp_dir_point.normalize();\n                            new_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                            // get the difference in angle to the last segment\n                            var curve_direction = new_dir_2 - new_dir_1;\n                            if (curve_direction > 180) {\n                                curve_direction -= 360;\n                            }\n                            if (curve_direction < -180) {\n                                curve_direction += 360;\n                            }\n                            if ((curve_direction == 0) && (curve_direction == 180) && (curve_direction == -180)) {\n                                lastPoint.x = end_x;\n                                lastPoint.y = end_y;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n                                break;\n                            }\n                            var curve_attr_1 = -1;\n                            if (draw_direction < 0) {\n                                if (curve_direction > 0) {\n                                    //convex\n                                    //console.log(\"convex\");\n                                    curve_attr_1 = 1;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                                }\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                            }\n                            else {\n                                if (curve_direction < 0) {\n                                    //convex\n                                    //console.log(\"convex\");\n                                    curve_attr_1 = 1;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n                                }\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n                            }\n                            if (GraphicsFactoryHelper_1.GraphicsFactoryHelper.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\n                                final_vert_list[final_vert_cnt++] = end_x;\n                                final_vert_list[final_vert_cnt++] = end_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = control_x;\n                                final_vert_list[final_vert_cnt++] = control_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.5;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                            }\n                            else {\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = control_x;\n                                final_vert_list[final_vert_cnt++] = control_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.5;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = end_x;\n                                final_vert_list[final_vert_cnt++] = end_y;\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                                final_vert_list[final_vert_cnt++] = 1.0;\n                                final_vert_list[final_vert_cnt++] = 0.0;\n                            }\n                            lastPoint.x = end_x;\n                            lastPoint.y = end_y;\n                            break;\n                        case GraphicsPathCommand_1.GraphicsPathCommand.CUBIC_CURVE:\n                            //todo\n                            break;\n                    }\n                }\n            }\n            var verts = [];\n            var all_verts = [];\n            var vertIndicess = [];\n            var elems = [];\n            for (k = 0; k < contours_vertices.length; k++) {\n                var vertices = contours_vertices[k];\n                //for (i = 0; i < vertices.length / 2; ++i)\n                //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n                var verticesF32 = new Float32Array(vertices);\n                //var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n                //console.log(\"in vertices\", vertices);\n                //var tess = new TESS();\n                if (GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj == null) {\n                    console.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n                    return;\n                }\n                GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n            }\n            GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.tesselate(0 /*TESS.WINDING_ODD*/, 0 /*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n            //console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n            verts = GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.getVertices();\n            elems = GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.getElements();\n            //console.log(\"out elements\", Graphics._tess_obj.getElements());\n            var numVerts = verts.length / 2;\n            var numElems = elems.length / 3;\n            for (i = 0; i < numVerts; ++i)\n                all_verts.push(new Point_1.Point(verts[i * 2], verts[i * 2 + 1]));\n            for (i = 0; i < numElems; ++i) {\n                var p1 = elems[i * 3];\n                var p2 = elems[i * 3 + 1];\n                var p3 = elems[i * 3 + 2];\n                final_vert_list[final_vert_cnt++] = all_verts[p3].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p3].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = all_verts[p2].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p2].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = all_verts[p1].x;\n                final_vert_list[final_vert_cnt++] = all_verts[p1].y;\n                final_vert_list[final_vert_cnt++] = 1;\n                final_vert_list[final_vert_cnt++] = 2.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n                final_vert_list[final_vert_cnt++] = 1.0;\n                final_vert_list[final_vert_cnt++] = 0.0;\n            }\n            //for (i = 0; i < final_vert_list.length/7; ++i)\n            //\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n            var attributesView = new AttributesView_1.AttributesView(Float32Array, 7);\n            attributesView.set(final_vert_list);\n            var attributesBuffer = attributesView.buffer;\n            attributesView.dispose();\n            var elements = new TriangleElements_1.TriangleElements(attributesBuffer);\n            elements.setPositions(new Float2Attributes_1.Float2Attributes(attributesBuffer));\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.Float3Attributes(attributesBuffer));\n            elements.setUVs(new Float2Attributes_1.Float2Attributes(attributesBuffer));\n            var material = DefaultMaterialManager_1.DefaultMaterialManager.getDefaultMaterial();\n            material.bothSides = true;\n            material.useColorTransform = true;\n            material.curves = true;\n            var thisGraphic = targetGraphic.addGraphic(elements, material);\n        }\n        targetGraphic.queued_fill_pathes.length = 0;\n    };\n    return GraphicsFactoryFills;\n}());\nexports.GraphicsFactoryFills = GraphicsFactoryFills;\n\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryHelper\":[function(require,module,exports){\n\"use strict\";\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryHelper = (function () {\n    function GraphicsFactoryHelper() {\n    }\n    GraphicsFactoryHelper.isClockWiseXY = function (point1x, point1y, point2x, point2y, point3x, point3y) {\n        var num = (point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\n        if (num < 0)\n            return false;\n        return true;\n    };\n    GraphicsFactoryHelper.getSign = function (ax, ay, cx, cy, bx, by) {\n        return (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n    };\n    GraphicsFactoryHelper.pointInTri = function (ax, ay, bx, by, cx, cy, xx, xy) {\n        var b1 = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\n        var b2 = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\n        var b3 = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\n        return ((b1 == b2) && (b2 == b3));\n    };\n    GraphicsFactoryHelper.getControlXForCurveX = function (a, c, b) {\n        return c;\n    };\n    GraphicsFactoryHelper.getControlYForCurveY = function (a, c, b) {\n        return c;\n    };\n    GraphicsFactoryHelper.drawPoint = function (startX, startY, vertices) {\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX + 2, startY - 2, startX + 2, startY + 2, 0, vertices);\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX - 2, startY + 2, startX + 2, startY + 2, 0, vertices);\n    };\n    GraphicsFactoryHelper.addTriangle = function (startX, startY, controlX, controlY, endX, endY, tri_type, vertices) {\n        var final_vert_cnt = vertices.length;\n        if (tri_type == 0) {\n            vertices[final_vert_cnt++] = startX;\n            vertices[final_vert_cnt++] = startY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = controlX;\n            vertices[final_vert_cnt++] = controlY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = endX;\n            vertices[final_vert_cnt++] = endY;\n            vertices[final_vert_cnt++] = 1;\n            vertices[final_vert_cnt++] = 2.0;\n            vertices[final_vert_cnt++] = 0.0;\n        }\n        else {\n            vertices[final_vert_cnt++] = startX;\n            vertices[final_vert_cnt++] = startY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 1.0;\n            vertices[final_vert_cnt++] = 1.0;\n            vertices[final_vert_cnt++] = controlX;\n            vertices[final_vert_cnt++] = controlY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 0.5;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = endX;\n            vertices[final_vert_cnt++] = endY;\n            vertices[final_vert_cnt++] = tri_type;\n            vertices[final_vert_cnt++] = 0.0;\n            vertices[final_vert_cnt++] = 0.0;\n        }\n    };\n    GraphicsFactoryHelper.createCap = function (startX, startY, start_le, start_ri, dir_vec, capstyle, cap_position, thickness, vertices) {\n        if (capstyle == CapsStyle_1.CapsStyle.ROUND) {\n            //console.log(\"add round cap\");\n            var tmp1_x = startX + (cap_position * (dir_vec.x * thickness));\n            var tmp1_y = startY + (cap_position * (dir_vec.y * thickness));\n            tmp1_x = tmp1_x * 2 - start_le.x / 2 - start_ri.x / 2;\n            tmp1_y = tmp1_y * 2 - start_le.y / 2 - start_ri.y / 2;\n            GraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\n        }\n        else if (capstyle == CapsStyle_1.CapsStyle.SQUARE) {\n            //console.log(\"add square cap\");\n            var tmp1_x = start_le.x + (cap_position * (dir_vec.x * thickness));\n            var tmp1_y = start_le.y + (cap_position * (dir_vec.y * thickness));\n            var tmp2_x = start_ri.x + (cap_position * (dir_vec.x * thickness));\n            var tmp2_y = start_ri.y + (cap_position * (dir_vec.y * thickness));\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\n        }\n    };\n    GraphicsFactoryHelper.getLineFormularData = function (a, b) {\n        var tmp_x = b.x - a.x;\n        var tmp_y = b.y - a.y;\n        var return_point = new Point_1.Point();\n        if ((tmp_x != 0) && (tmp_y != 0))\n            return_point.x = tmp_y / tmp_x;\n        return_point.y = -(return_point.x * a.x - a.y);\n        return return_point;\n    };\n    GraphicsFactoryHelper.getQuadricBezierPosition = function (t, start, control, end) {\n        var xt = 1 - t;\n        return xt * xt * start + 2 * xt * t * control + t * t * end;\n    };\n    GraphicsFactoryHelper.subdivideCurve = function (startx, starty, cx, cy, endx, endy, startx2, starty2, cx2, cy2, endx2, endy2, array_out, array2_out) {\n        var angle_1 = Math.atan2(cy - starty, cx - startx) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        var angle_2 = Math.atan2(endy - cy, endx - cx) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n        var angle_delta = angle_2 - angle_1;\n        //console.log(\"angle_delta \"+angle_delta);\n        if (angle_delta > 180) {\n            angle_delta -= 360;\n        }\n        if (angle_delta < -180) {\n            angle_delta += 360;\n        }\n        if (Math.abs(angle_delta) >= 150) {\n            array_out.push(startx, starty, cx, cy, endx, endy);\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n            return;\n        }\n        var b1 = false;\n        var b2 = false;\n        if (angle_delta < 0) {\n            // curve is curved to right side. right side is convex\n            b1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\n            b2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\n            b1 = (((starty - endy) * (cx - startx) + (endx - startx) * (cy - starty)) * ((starty - endy) * (cx2 - startx) + (endx - startx) * (cy2 - starty))) < 0;\n        }\n        else {\n            // curve is curved to left side. left side is convex\n            b1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\n            b2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\n            b1 = (((starty2 - endy) * (cx - startx2) + (endx2 - startx2) * (cy - starty2)) * ((starty2 - endy2) * (cx2 - startx2) + (endx2 - startx2) * (cy2 - starty2))) < 0;\n        }\n        if (b1) {\n            array_out.push(startx, starty, cx, cy, endx, endy);\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n            return;\n        }\n        // triangles overlap. we must subdivide:\n        var c1x = startx + (cx - startx) * 0.5; // new controlpoint 1.1\n        var c1y = starty + (cy - starty) * 0.5;\n        var c2x = cx + (endx - cx) * 0.5; // new controlpoint 1.2\n        var c2y = cy + (endy - cy) * 0.5;\n        var ax = c1x + (c2x - c1x) * 0.5; // new middlepoint 1\n        var ay = c1y + (c2y - c1y) * 0.5;\n        var c1x2 = startx2 + (cx2 - startx2) * 0.5; // new controlpoint 2.1\n        var c1y2 = starty2 + (cy2 - starty2) * 0.5;\n        var c2x2 = cx2 + (endx2 - cx2) * 0.5; // new controlpoint 2.2\n        var c2y2 = cy2 + (endy2 - cy2) * 0.5;\n        var ax2 = c1x2 + (c2x2 - c1x2) * 0.5; // new middlepoint 2\n        var ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n        GraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n        GraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n    };\n    return GraphicsFactoryHelper;\n}());\nexports.GraphicsFactoryHelper = GraphicsFactoryHelper;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryStrokes\":[function(require,module,exports){\n\"use strict\";\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nvar GraphicsFactoryStrokes = (function () {\n    function GraphicsFactoryStrokes() {\n    }\n    GraphicsFactoryStrokes.draw_pathes = function (targetGraphic) {\n        var len = targetGraphic.queued_stroke_pathes.length;\n        var contour_commands;\n        var contour_data;\n        var strokeStyle;\n        var one_path;\n        var commands;\n        var data;\n        var i = 0;\n        var k = 0;\n        var vert_cnt = 0;\n        var data_cnt = 0;\n        var final_vert_list = [];\n        var final_vert_cnt = 0;\n        var lastPoint = new Point_1.Point();\n        var start_point = new Point_1.Point();\n        var end_point = new Point_1.Point();\n        var start_left = new Point_1.Point();\n        var start_right = new Point_1.Point();\n        var ctr_left = new Point_1.Point();\n        var ctr_right = new Point_1.Point();\n        var ctr_left2 = new Point_1.Point();\n        var ctr_right2 = new Point_1.Point();\n        var end_left = new Point_1.Point();\n        var end_right = new Point_1.Point();\n        var tmp_point = new Point_1.Point();\n        var tmp_point2 = new Point_1.Point();\n        var tmp_point3 = new Point_1.Point();\n        var closed = false;\n        var last_dir_vec = new Point_1.Point();\n        var cp = 0;\n        for (cp = 0; cp < len; cp++) {\n            one_path = targetGraphic.queued_stroke_pathes[cp];\n            contour_commands = one_path.commands;\n            contour_data = one_path.data;\n            strokeStyle = one_path.stroke();\n            var tessVerts = [];\n            for (k = 0; k < contour_commands.length; k++) {\n                commands = contour_commands[k];\n                data = contour_data[k];\n                vert_cnt = 0;\n                data_cnt = 0;\n                var new_dir = 0;\n                var dir_delta = 0;\n                var last_direction = 0;\n                var tmp_dir_point = new Point_1.Point();\n                closed = true;\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1]))\n                    closed = false;\n                else {\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\n                    last_dir_vec.normalize();\n                    last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                }\n                data_cnt = 0;\n                lastPoint.x = data[data_cnt++];\n                lastPoint.y = data[data_cnt++];\n                var new_cmds = [];\n                var new_pnts = [];\n                var new_cmds_cnt = 0;\n                var new_pnts_cnt = 0;\n                var prev_normal = new Point_1.Point();\n                var le_point = new Point_1.Point();\n                var curve_end_point = new Point_1.Point();\n                var ri_point = new Point_1.Point();\n                var ctr_point = new Point_1.Point();\n                prev_normal.x = -1 * last_dir_vec.y;\n                prev_normal.y = last_dir_vec.x;\n                for (i = 1; i < commands.length; i++) {\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO) {\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n                        continue;\n                    }\n                    //console.log(\"\");\n                    //console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\n                    end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\n                    //console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                        curve_end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\n                    }\n                    //get the directional vector and the direction for this segment\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\n                    tmp_dir_point.normalize();\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                    // get the difference in angle to the last segment\n                    dir_delta = new_dir - last_direction;\n                    if (dir_delta > 180) {\n                        dir_delta -= 360;\n                    }\n                    if (dir_delta < -180) {\n                        dir_delta += 360;\n                    }\n                    last_direction = new_dir;\n                    //console.log(\"segment \"+i+\" direction: \"+dir_delta);\n                    // rotate direction around 90 degree\n                    tmp_point.x = -1 * tmp_dir_point.y;\n                    tmp_point.y = tmp_dir_point.x;\n                    ri_point = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                    le_point = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                    var add_segment = false;\n                    // check if this is the first segment, and the path is not closed\n                    // in this case, we can just set the points to the contour points\n                    if ((i == 1) && (!closed)) {\n                        //console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\n                        add_segment = true;\n                    }\n                    else {\n                        // we need to figure out if we need to add a joint or not\n                        if ((dir_delta == 0) || (dir_delta == 180)) {\n                            // check if this and the prev segment was a line. if yes, than they can be merged\n                            if ((i != 1) && (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) && (new_cmds[new_cmds.length - 1] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO)) {\n                                //console.log(\"straight line can be merged in prev straight line\");\n                                add_segment = false;\n                            }\n                            else {\n                                add_segment = true;\n                            }\n                        }\n                        if (dir_delta == 180) {\n                            console.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\");\n                        }\n                        else if (dir_delta != 0) {\n                            add_segment = true;\n                            var half_angle = (180 - (dir_delta));\n                            if (dir_delta < 0) {\n                                half_angle = (-180 - (dir_delta));\n                            }\n                            half_angle = half_angle * -0.5 * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n                            var distance = strokeStyle.half_thickness / Math.sin(half_angle);\n                            tmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\n                            tmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\n                            tmp_point2.normalize();\n                            var merged_pnt_ri = new Point_1.Point(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\n                            var merged_pnt_le = new Point_1.Point(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\n                            if (dir_delta > 0) {\n                                ri_point = merged_pnt_ri;\n                                var contour_le = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                                var contour_prev_le = new Point_1.Point(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\n                                le_point = contour_le;\n                            }\n                            else {\n                                le_point = merged_pnt_le;\n                                var contour_ri = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                                var contour_prev_ri = new Point_1.Point(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\n                                ri_point = contour_ri;\n                            }\n                            var addJoints = true;\n                            if (strokeStyle.jointstyle == JointStyle_1.JointStyle.MITER) {\n                                var distance_miter = (Math.sqrt((distance * distance) - (strokeStyle.half_thickness * strokeStyle.half_thickness)) / strokeStyle.half_thickness);\n                                if (distance_miter <= strokeStyle.miter_limit) {\n                                    addJoints = false;\n                                    ri_point = merged_pnt_ri;\n                                    le_point = merged_pnt_le;\n                                }\n                                else {\n                                    if (dir_delta > 0) {\n                                        contour_le.x = contour_le.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_le.y = contour_le.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        tmp_point3.x = prev_normal.y * -1;\n                                        tmp_point3.y = prev_normal.x;\n                                        contour_prev_le.x = contour_prev_le.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_prev_le.y = contour_prev_le.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                    }\n                                    else {\n                                        contour_ri.x = contour_ri.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_ri.y = contour_ri.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        tmp_point3.x = prev_normal.y * -1;\n                                        tmp_point3.y = prev_normal.x;\n                                        contour_prev_ri.x = contour_prev_ri.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                        contour_prev_ri.y = contour_prev_ri.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\n                                    }\n                                }\n                            }\n                            if (addJoints) {\n                                new_cmds[new_cmds_cnt++] = (strokeStyle.jointstyle != JointStyle_1.JointStyle.ROUND) ? GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT : GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT;\n                                if (dir_delta > 0) {\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_ri;\n                                    new_pnts[new_pnts_cnt++] = contour_prev_le;\n                                    new_pnts[new_pnts_cnt++] = contour_le;\n                                }\n                                else {\n                                    new_pnts[new_pnts_cnt++] = contour_prev_ri;\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_le;\n                                    new_pnts[new_pnts_cnt++] = contour_ri;\n                                }\n                                if (strokeStyle.jointstyle == JointStyle_1.JointStyle.ROUND) {\n                                    new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\n                                    if (dir_delta > 0) {\n                                        new_pnts[new_pnts_cnt++] = contour_prev_le;\n                                        new_pnts[new_pnts_cnt++] = contour_le;\n                                    }\n                                    else {\n                                        new_pnts[new_pnts_cnt++] = contour_prev_ri;\n                                        new_pnts[new_pnts_cnt++] = contour_ri;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    prev_normal.x = tmp_point.x;\n                    prev_normal.y = tmp_point.y;\n                    if (add_segment) {\n                        if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO;\n                            new_pnts[new_pnts_cnt++] = ri_point;\n                            new_pnts[new_pnts_cnt++] = le_point;\n                        }\n                        else if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                            tmp_dir_point.x = curve_end_point.x - end_point.x;\n                            tmp_dir_point.y = curve_end_point.y - end_point.y;\n                            tmp_dir_point.normalize();\n                            new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                            dir_delta = new_dir - last_direction;\n                            last_direction = new_dir;\n                            tmp_point.x = -1 * tmp_dir_point.y;\n                            tmp_point.y = tmp_dir_point.x;\n                            if ((dir_delta != 0) && (dir_delta != 180)) {\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO;\n                                new_pnts[new_pnts_cnt++] = ri_point;\n                                new_pnts[new_pnts_cnt++] = le_point;\n                                new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x, lastPoint.y);\n                                new_pnts[new_pnts_cnt++] = new Point_1.Point(end_point.x, end_point.y);\n                                new_pnts[new_pnts_cnt++] = curve_end_point;\n                            }\n                            else {\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO;\n                                new_pnts[new_pnts_cnt++] = ri_point;\n                                new_pnts[new_pnts_cnt++] = le_point;\n                            }\n                            prev_normal.x = tmp_point.x;\n                            prev_normal.y = tmp_point.y;\n                            lastPoint = curve_end_point;\n                        }\n                    }\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\n                        lastPoint = end_point;\n                    }\n                    if (i == commands.length - 1) {\n                        if (!closed) {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.NO_OP;\n                            new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n                            new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n                        }\n                        else {\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.NO_OP;\n                            new_pnts[new_pnts_cnt++] = new_pnts[0];\n                            new_pnts[new_pnts_cnt++] = new_pnts[1];\n                        }\n                    }\n                }\n                // first we draw all the curves:\n                new_cmds_cnt = 0;\n                new_pnts_cnt = 0;\n                for (i = 0; i < new_cmds.length; i++) {\n                    if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\n                        new_pnts_cnt += 2;\n                    }\n                    else if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        start_point = new_pnts[new_pnts_cnt++];\n                        ctr_point = new_pnts[new_pnts_cnt++];\n                        end_point = new_pnts[new_pnts_cnt++];\n                        end_right = new_pnts[new_pnts_cnt];\n                        end_left = new_pnts[new_pnts_cnt + 1];\n                        // get the directional vector for the first part of the curve\n                        tmp_dir_point.x = ctr_point.x - start_point.x;\n                        tmp_dir_point.y = ctr_point.y - start_point.y;\n                        tmp_point3.x = ctr_point.x - start_point.x;\n                        tmp_point3.y = ctr_point.y - start_point.y;\n                        var length1 = tmp_point3.length;\n                        tmp_dir_point.normalize();\n                        // get the directional vector for the second part of the curve\n                        tmp_point2.x = end_point.x - ctr_point.x;\n                        tmp_point2.y = end_point.y - ctr_point.y;\n                        var length2 = tmp_point2.length;\n                        tmp_point2.normalize();\n                        var length_calc = 0.5 - ((length2 - length1) / length1) * 0.5;\n                        if (length1 > length2) {\n                            length_calc = 0.5 + ((length1 - length2) / length2) * 0.5;\n                        }\n                        // get angle to positive x-axis for both dir-vectors, than get the difference between those\n                        var angle_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                        var angle_2 = Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\n                        dir_delta = angle_2 - angle_1;\n                        if (dir_delta > 180) {\n                            dir_delta -= 360;\n                        }\n                        if (dir_delta < -180) {\n                            dir_delta += 360;\n                        }\n                        if (dir_delta == 0) {\n                            console.log(\"This is not a curve, we can just draw it like a straight line\");\n                        }\n                        //console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\n                        var dirNumber = 1;\n                        if (dir_delta < 0) {\n                            dirNumber = -1;\n                        }\n                        var half_angle = dir_delta * 0.5 * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\n                        var lengthpos = Math.abs(length1 * Math.sin(half_angle));\n                        var distance = strokeStyle.half_thickness / Math.sin(half_angle);\n                        tmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\n                        tmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\n                        tmp_point3.normalize();\n                        var merged_pnt_ri = new Point_1.Point(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\n                        var merged_pnt_le = new Point_1.Point(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\n                        var curve_x = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\n                        var curve_y = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\n                        var curve_2x = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\n                        var curve_2y = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\n                        tmp_point3.x = -1 * (curve_y - curve_2y);\n                        tmp_point3.y = curve_x - curve_2x;\n                        tmp_point3.normalize();\n                        //GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\n                        // move the point on the curve to use correct thickness\n                        ctr_right.x = curve_x + (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n                        ctr_right.y = curve_y + (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n                        ctr_left.x = curve_x - (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n                        ctr_left.y = curve_y - (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n                        //GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n                        //GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n                        // calculate the actual controlpoints\n                        ctr_right.x = ctr_right.x * 2 - start_right.x / 2 - end_right.x / 2;\n                        ctr_right.y = ctr_right.y * 2 - start_right.y / 2 - end_right.y / 2;\n                        ctr_left.x = ctr_left.x * 2 - start_left.x / 2 - end_left.x / 2;\n                        ctr_left.y = ctr_left.y * 2 - start_left.y / 2 - end_left.y / 2;\n                        //ctr_right=merged_pnt_ri;\n                        //ctr_left=merged_pnt_le;\n                        /*\n                        // controlpoints version2:\n                        tmp_dir_point.x = start_left.x-start_right.x;\n                        tmp_dir_point.y = start_left.y-start_right.y;\n                        tmp_point2.x = end_left.x-end_right.x;\n                        tmp_point2.y = end_left.y-end_right.y;\n\n                        ctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\n                        ctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\n                        var new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\n\n                        ctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\n                        ctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\n                        var new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\n                        */\n                        /*\n                                                GraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\n                                                GraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\n                        */\n                        var subdivided = [];\n                        var subdivided2 = [];\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n                        if (dir_delta > 0) {\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                                // right curved\n                                // concave curves:\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\n                                // fills\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\n                                // convex curves:\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\n                            }\n                        }\n                        else {\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\n                                // left curved\n                                // convex curves:\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\n                                // fills\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\n                                // concave curves:\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\n                            }\n                        }\n                    }\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT) {\n                        new_pnts_cnt += 3;\n                        //GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n                        if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT) {\n                            end_left = new_pnts[new_pnts_cnt++]; // concave curves:\n                            start_right = new_pnts[new_pnts_cnt++];\n                            start_left = new_pnts[new_pnts_cnt++];\n                            //console.log(\"add round tri\");\n                            GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, end_left.x, end_left.y, start_left.x, start_left.y, -1, final_vert_list);\n                        }\n                    }\n                }\n                // now we draw all the normal triangles.\n                // we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\n                new_cmds_cnt = 0;\n                new_pnts_cnt = 0;\n                for (i = 0; i < new_cmds.length; i++) {\n                    if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        end_right = new_pnts[new_pnts_cnt];\n                        end_left = new_pnts[new_pnts_cnt + 1];\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_left.x, start_left.y, end_left.x, end_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                    }\n                    else if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\n                        new_pnts_cnt += 5;\n                    }\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT) {\n                        end_right = new_pnts[new_pnts_cnt++];\n                        start_right = new_pnts[new_pnts_cnt++];\n                        start_left = new_pnts[new_pnts_cnt++];\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\n                        if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT) {\n                            new_pnts_cnt += 3;\n                        }\n                    }\n                }\n                if (!closed) {\n                    last_dir_vec.x = data[2] - data[0];\n                    last_dir_vec.y = data[3] - data[1];\n                    last_dir_vec.normalize();\n                    GraphicsFactoryHelper_1.GraphicsFactoryHelper.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\n                    last_dir_vec.normalize();\n                    GraphicsFactoryHelper_1.GraphicsFactoryHelper.createCap(data[data.length - 2], data[data.length - 1], new_pnts[new_pnts.length - 2], new_pnts[new_pnts.length - 1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\n                }\n            }\n            //console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\n            // todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n            var attributesView = new AttributesView_1.AttributesView(Float32Array, 5);\n            attributesView.set(final_vert_list);\n            var attributesBuffer = attributesView.buffer;\n            attributesView.dispose();\n            var elements = new TriangleElements_1.TriangleElements(attributesBuffer);\n            elements.setPositions(new Float2Attributes_1.Float2Attributes(attributesBuffer));\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.Float3Attributes(attributesBuffer));\n            //elements.setUVs(new Float2Attributes(attributesBuffer));\n            //curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n            var material = DefaultMaterialManager_1.DefaultMaterialManager.getDefaultMaterial();\n            material.bothSides = true;\n            material.useColorTransform = true;\n            material.curves = true;\n            targetGraphic.addGraphic(elements, material);\n        }\n        targetGraphic.queued_stroke_pathes.length = 0;\n    };\n    return GraphicsFactoryStrokes;\n}());\nexports.GraphicsFactoryStrokes = GraphicsFactoryStrokes;\n\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFillStyle\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsFillStyle = (function () {\n    function GraphicsFillStyle(color, alpha) {\n        if (color === void 0) { color = 0xffffff; }\n        if (alpha === void 0) { alpha = 1; }\n        this._color = color;\n        this._alpha = alpha;\n    }\n    Object.defineProperty(GraphicsFillStyle.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsFillStyle.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsFillStyle.data_type = \"[graphicsdata FillStyle]\";\n    return GraphicsFillStyle;\n}());\nexports.GraphicsFillStyle = GraphicsFillStyle;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathCommand\":[function(require,module,exports){\n\"use strict\";\n/**\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPathCommand = (function () {\n    function GraphicsPathCommand() {\n    }\n    /**\n     * Represents the default \"do nothing\" command.\n     */\n    GraphicsPathCommand.NO_OP = 0;\n    /**\n     * Specifies a drawing command that moves the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.MOVE_TO = 1;\n    /**\n     * Specifies a drawing command that draws a line from the current drawing position\n     * to the x- and y-coordinates specified in the data vector.\n     */\n    GraphicsPathCommand.LINE_TO = 2;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.CURVE_TO = 3;\n    /**\n     *  Specifies a drawing command that draws a curve from the current drawing position\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\n     */\n    GraphicsPathCommand.BUILD_JOINT = 13;\n    GraphicsPathCommand.BUILD_ROUND_JOINT = 14;\n    /**\n     * Specifies a \"line to\" drawing command,\n     * but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_LINE_TO = 4;\n    /**\n     *   Specifies a \"move to\" drawing command,\n     *   but uses two sets of coordinates (four values) instead of one set.\n     */\n    GraphicsPathCommand.WIDE_MOVE_TO = 5;\n    /**\n     * Specifies a drawing command that draws a curve from the current drawing position\n     * to the x- and y-coordinates specified in the data vector, using 2 control points.\n     */\n    GraphicsPathCommand.CUBIC_CURVE = 6;\n    return GraphicsPathCommand;\n}());\nexports.GraphicsPathCommand = GraphicsPathCommand;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GraphicsPathCommand;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPathWinding\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nvar GraphicsPathWinding = (function () {\n    function GraphicsPathWinding() {\n    }\n    GraphicsPathWinding.EVEN_ODD = \"evenOdd\";\n    GraphicsPathWinding.NON_ZERO = \"nonZero\";\n    return GraphicsPathWinding;\n}());\nexports.GraphicsPathWinding = GraphicsPathWinding;\n\n},{}],\"awayjs-display/lib/draw/GraphicsPath\":[function(require,module,exports){\n\"use strict\";\nvar GraphicsPathWinding_1 = require(\"../draw/GraphicsPathWinding\");\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nvar GraphicsPath = (function () {\n    function GraphicsPath(commands, data, winding_rule) {\n        if (commands === void 0) { commands = null; }\n        if (data === void 0) { data = null; }\n        if (winding_rule === void 0) { winding_rule = GraphicsPathWinding_1.GraphicsPathWinding.EVEN_ODD; }\n        this._data = [];\n        this._commands = [];\n        this._style = null;\n        if (commands != null && data != null) {\n            this._data[0] = data;\n            this._commands[0] = commands;\n        }\n        else {\n            this._data[0] = [];\n            this._commands[0] = [];\n        }\n        this._startPoint = new Point_1.Point();\n        this._cur_point = new Point_1.Point();\n        this._winding_rule = winding_rule;\n        this._winding_directions = [];\n    }\n    Object.defineProperty(GraphicsPath.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsPath.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsPath.prototype.fill = function () {\n        if (this._style == null)\n            return null;\n        if (this._style.data_type == GraphicsFillStyle_1.GraphicsFillStyle.data_type)\n            return this._style;\n        return null;\n    };\n    GraphicsPath.prototype.stroke = function () {\n        if (this._style == null)\n            return null;\n        if (this._style.data_type == GraphicsStrokeStyle_1.GraphicsStrokeStyle.data_type)\n            return this._style;\n        return null;\n    };\n    Object.defineProperty(GraphicsPath.prototype, \"commands\", {\n        get: function () {\n            return this._commands;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsPath.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsPath.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO);\n        /*\n         if(this.isFill){\n         this._tmp_point.x=anchorX-this._cur_point.x;\n         this._tmp_point.y=anchorY-this._cur_point.y;\n         this._tmp_point.normalize();\n\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n         testpoint.normalize();\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n         if(degree_anchor>180)degree_anchor-=360;\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n         this._tmp_point.x=controlX-this._cur_point.x;\n         this._tmp_point.y=controlY-this._cur_point.y;\n         this._tmp_point.normalize();\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n         if(degree_control>180)degree_control-=360;\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n         console.log(\"degree_control \"+degree_control);\n         console.log(\"degree_anchor \"+degree_anchor);\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n         this._direction.x=testpoint.x;\n         this._direction.y=testpoint.y;\n         if((degree_control)<0)\n         this._data[this._data.length-1].push(1);\n         else\n         this._data[this._data.length-1].push(2);\n\n         }\n         else{\n         this._data[this._data.length-1].push(1);\n         }\n         */\n        this._data[this._data.length - 1].push(controlX);\n        this._data[this._data.length - 1].push(controlY);\n        this._data[this._data.length - 1].push(anchorX);\n        this._data[this._data.length - 1].push(anchorY);\n        this._cur_point.x = anchorX;\n        this._cur_point.y = anchorY;\n    };\n    GraphicsPath.prototype.lineTo = function (x, y) {\n        if (this._commands[this._commands.length - 1].length == 0) {\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length - 1].push(this._cur_point.x);\n            this._data[this._data.length - 1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length - 1].push(x);\n        this._data[this._data.length - 1].push(y);\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.moveTo = function (x, y) {\n        // whenever a moveTo command apears, we start a new contour\n        if (this._commands[this._commands.length - 1].length > 0) {\n            this._commands.push([GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO]);\n            this._data.push([x, y]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    };\n    GraphicsPath.prototype.wideLineTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    GraphicsPath.prototype.wideMoveTo = function (x, y) {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    };\n    GraphicsPath.data_type = \"[graphicsdata path]\";\n    return GraphicsPath;\n}());\nexports.GraphicsPath = GraphicsPath;\n\n},{\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsStrokeStyle\":[function(require,module,exports){\n\"use strict\";\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar GraphicsStrokeStyle = (function () {\n    function GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miter_limit) {\n        if (color === void 0) { color = 0xffffff; }\n        if (alpha === void 0) { alpha = 1; }\n        if (thickness === void 0) { thickness = 10; }\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.JointStyle.ROUND; }\n        if (capstyle === void 0) { capstyle = CapsStyle_1.CapsStyle.SQUARE; }\n        if (miter_limit === void 0) { miter_limit = 10; }\n        this._color = color;\n        this._alpha = alpha;\n        this._thickness = thickness;\n        this._jointstyle = jointstyle;\n        this._capstyle = capstyle;\n        this._miter_limit = miter_limit;\n    }\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"data_type\", {\n        get: function () {\n            return GraphicsStrokeStyle.data_type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"color\", {\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            this._color = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"alpha\", {\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            this._alpha = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"half_thickness\", {\n        get: function () {\n            return this._thickness / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"thickness\", {\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            this._thickness = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"jointstyle\", {\n        get: function () {\n            return this._jointstyle;\n        },\n        set: function (value) {\n            this._jointstyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"miter_limit\", {\n        get: function () {\n            return this._miter_limit;\n        },\n        set: function (value) {\n            this._miter_limit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"capstyle\", {\n        get: function () {\n            return this._capstyle;\n        },\n        set: function (value) {\n            this._capstyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    GraphicsStrokeStyle.data_type = \"[graphicsdata StrokeStyle]\";\n    return GraphicsStrokeStyle;\n}());\nexports.GraphicsStrokeStyle = GraphicsStrokeStyle;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\"}],\"awayjs-display/lib/draw/IGraphicsData\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/draw/InterpolationMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nvar InterpolationMethod = (function () {\n    function InterpolationMethod() {\n    }\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.LINEAR_RGB = \"linearRGB\";\n    /**\n     * Specifies that the RGB interpolation method should be used. This means\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\n     * conversion between red, green, and blue component values and the actual\n     * intensity of the visible component color.\n     *\n     * <p>For example, consider a simple linear gradient between two colors(with\n     * the <code>spreadMethod</code> parameter set to\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n     * affect the appearance as follows: </p>\n     */\n    InterpolationMethod.RGB = \"rgb\";\n    return InterpolationMethod;\n}());\nexports.InterpolationMethod = InterpolationMethod;\n\n},{}],\"awayjs-display/lib/draw/JointStyle\":[function(require,module,exports){\n\"use strict\";\n/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nvar JointStyle = (function () {\n    function JointStyle() {\n    }\n    /**\n     * Specifies beveled joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.BEVEL = 2;\n    /**\n     * Specifies mitered joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.MITER = 0;\n    /**\n     * Specifies round joints in the <code>joints</code> parameter of the\n     * <code>flash.display.Graphics.lineStyle()</code> method.\n     */\n    JointStyle.ROUND = 1;\n    return JointStyle;\n}());\nexports.JointStyle = JointStyle;\n\n},{}],\"awayjs-display/lib/draw/LineScaleMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nvar LineScaleMode = (function () {\n    function LineScaleMode() {\n    }\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> vertically. For example, consider the following circles, drawn\n     * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n     * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n     * scaled only vertically, and the circle on the right is scaled both\n     * vertically and horizontally.\n     */\n    LineScaleMode.HORIZONTAL = \"horizontal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line never scales.\n     */\n    LineScaleMode.NONE = \"none\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line always scales\n     * when the object is scaled(the default).\n     */\n    LineScaleMode.NORMAL = \"normal\";\n    /**\n     * With this setting used as the <code>scaleMode</code> parameter of the\n     * <code>lineStyle()</code> method, the thickness of the line scales\n     * <i>only</i> horizontally. For example, consider the following circles,\n     * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n     * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n     * left is scaled only horizontally, and the circle on the right is scaled\n     * both vertically and horizontally.\n     */\n    LineScaleMode.VERTICAL = \"vertical\";\n    return LineScaleMode;\n}());\nexports.LineScaleMode = LineScaleMode;\n\n},{}],\"awayjs-display/lib/draw/PixelSnapping\":[function(require,module,exports){\n\"use strict\";\n/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nvar PixelSnapping = (function () {\n    function PixelSnapping() {\n    }\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is always snapped to the\n     * nearest pixel, independent of any transformation.\n     */\n    PixelSnapping.ALWAYS = \"always\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that the bitmap image is snapped to the nearest\n     * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n     * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n     * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n     * setting allows the image to be drawn as fast as possible by using the\n     * vector renderer.\n     */\n    PixelSnapping.AUTO = \"auto\";\n    /**\n     * A constant value used in the <code>pixelSnapping</code> property of a\n     * Bitmap object to specify that no pixel snapping occurs.\n     */\n    PixelSnapping.NEVER = \"never\";\n    return PixelSnapping;\n}());\nexports.PixelSnapping = PixelSnapping;\n\n},{}],\"awayjs-display/lib/draw/SpreadMethod\":[function(require,module,exports){\n\"use strict\";\n/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nvar SpreadMethod = (function () {\n    function SpreadMethod() {\n    }\n    /**\n     * Specifies that the gradient use the <i>pad</i> spread method.\n     */\n    SpreadMethod.PAD = \"pad\";\n    /**\n     * Specifies that the gradient use the <i>reflect</i> spread method.\n     */\n    SpreadMethod.REFLECT = \"reflect\";\n    /**\n     * Specifies that the gradient use the <i>repeat</i> spread method.\n     */\n    SpreadMethod.REPEAT = \"repeat\";\n    return SpreadMethod;\n}());\nexports.SpreadMethod = SpreadMethod;\n\n},{}],\"awayjs-display/lib/draw/TriangleCulling\":[function(require,module,exports){\n\"use strict\";\n/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nvar TriangleCulling = (function () {\n    function TriangleCulling() {\n    }\n    /**\n     * Specifies culling of all triangles facing toward the current view point.\n     */\n    TriangleCulling.NEGATIVE = \"negative\";\n    /**\n     * Specifies no culling. All triangles in the path are rendered.\n     */\n    TriangleCulling.NONE = \"none\";\n    /**\n     * Specifies culling of all triangles facing away from the current view\n     * point. This is also known as backface culling.\n     */\n    TriangleCulling.POSITIVE = \"positive\";\n    return TriangleCulling;\n}());\nexports.TriangleCulling = TriangleCulling;\n\n},{}],\"awayjs-display/lib/draw\":[function(require,module,exports){\n\"use strict\";\nvar CapsStyle_1 = require(\"./draw/CapsStyle\");\nexports.CapsStyle = CapsStyle_1.CapsStyle;\nvar GradientType_1 = require(\"./draw/GradientType\");\nexports.GradientType = GradientType_1.GradientType;\nvar GraphicsFactoryFills_1 = require(\"./draw/GraphicsFactoryFills\");\nexports.GraphicsFactoryFills = GraphicsFactoryFills_1.GraphicsFactoryFills;\nvar GraphicsFactoryHelper_1 = require(\"./draw/GraphicsFactoryHelper\");\nexports.GraphicsFactoryHelper = GraphicsFactoryHelper_1.GraphicsFactoryHelper;\nvar GraphicsFactoryStrokes_1 = require(\"./draw/GraphicsFactoryStrokes\");\nexports.GraphicsFactoryStrokes = GraphicsFactoryStrokes_1.GraphicsFactoryStrokes;\nvar GraphicsFillStyle_1 = require(\"./draw/GraphicsFillStyle\");\nexports.GraphicsFillStyle = GraphicsFillStyle_1.GraphicsFillStyle;\nvar GraphicsStrokeStyle_1 = require(\"./draw/GraphicsStrokeStyle\");\nexports.GraphicsStrokeStyle = GraphicsStrokeStyle_1.GraphicsStrokeStyle;\nvar GraphicsPath_1 = require(\"./draw/GraphicsPath\");\nexports.GraphicsPath = GraphicsPath_1.GraphicsPath;\nvar GraphicsPathCommand_1 = require(\"./draw/GraphicsPathCommand\");\nexports.GraphicsPathCommand = GraphicsPathCommand_1.GraphicsPathCommand;\nvar GraphicsPathWinding_1 = require(\"./draw/GraphicsPathWinding\");\nexports.GraphicsPathWinding = GraphicsPathWinding_1.GraphicsPathWinding;\nvar InterpolationMethod_1 = require(\"./draw/InterpolationMethod\");\nexports.InterpolationMethod = InterpolationMethod_1.InterpolationMethod;\nvar JointStyle_1 = require(\"./draw/JointStyle\");\nexports.JointStyle = JointStyle_1.JointStyle;\nvar LineScaleMode_1 = require(\"./draw/LineScaleMode\");\nexports.LineScaleMode = LineScaleMode_1.LineScaleMode;\nvar PixelSnapping_1 = require(\"./draw/PixelSnapping\");\nexports.PixelSnapping = PixelSnapping_1.PixelSnapping;\nvar SpreadMethod_1 = require(\"./draw/SpreadMethod\");\nexports.SpreadMethod = SpreadMethod_1.SpreadMethod;\nvar TriangleCulling_1 = require(\"./draw/TriangleCulling\");\nexports.TriangleCulling = TriangleCulling_1.TriangleCulling;\n\n},{\"./draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"./draw/GradientType\":\"awayjs-display/lib/draw/GradientType\",\"./draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"./draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"./draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"./draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"./draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"./draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"./draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"./draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"./draw/InterpolationMethod\":\"awayjs-display/lib/draw/InterpolationMethod\",\"./draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"./draw/LineScaleMode\":\"awayjs-display/lib/draw/LineScaleMode\",\"./draw/PixelSnapping\":\"awayjs-display/lib/draw/PixelSnapping\",\"./draw/SpreadMethod\":\"awayjs-display/lib/draw/SpreadMethod\",\"./draw/TriangleCulling\":\"awayjs-display/lib/draw/TriangleCulling\"}],\"awayjs-display/lib/errors/CastError\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar CastError = (function (_super) {\n    __extends(CastError, _super);\n    function CastError(message) {\n        _super.call(this, message);\n    }\n    return CastError;\n}(ErrorBase_1.ErrorBase));\nexports.CastError = CastError;\n\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-display/lib/errors\":[function(require,module,exports){\n\"use strict\";\nvar CastError_1 = require(\"./errors/CastError\");\nexports.CastError = CastError_1.CastError;\n\n},{\"./errors/CastError\":\"awayjs-display/lib/errors/CastError\"}],\"awayjs-display/lib/events/CameraEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * @class away.events.CameraEvent\n */\nvar CameraEvent = (function (_super) {\n    __extends(CameraEvent, _super);\n    function CameraEvent(type, camera) {\n        _super.call(this, type);\n        this._camera = camera;\n    }\n    Object.defineProperty(CameraEvent.prototype, \"camera\", {\n        get: function () {\n            return this._camera;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    CameraEvent.prototype.clone = function () {\n        return new CameraEvent(this.type, this._camera);\n    };\n    CameraEvent.PROJECTION_CHANGED = \"projectionChanged\";\n    return CameraEvent;\n}(EventBase_1.EventBase));\nexports.CameraEvent = CameraEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/DisplayObjectEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar DisplayObjectEvent = (function (_super) {\n    __extends(DisplayObjectEvent, _super);\n    function DisplayObjectEvent(type, object) {\n        _super.call(this, type);\n        this._object = object;\n    }\n    Object.defineProperty(DisplayObjectEvent.prototype, \"object\", {\n        get: function () {\n            return this._object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    DisplayObjectEvent.prototype.clone = function () {\n        return new DisplayObjectEvent(this.type, this._object);\n    };\n    /**\n     *\n     */\n    DisplayObjectEvent.VISIBLITY_UPDATED = \"visiblityUpdated\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENETRANSFORM_CHANGED = \"scenetransformChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.SCENE_CHANGED = \"sceneChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.PARTITION_CHANGED = \"partitionChanged\";\n    /**\n     *\n     */\n    DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS = \"invalidatePartitionBounds\";\n    return DisplayObjectEvent;\n}(EventBase_1.EventBase));\nexports.DisplayObjectEvent = DisplayObjectEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ElementsEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nvar ElementsEvent = (function (_super) {\n    __extends(ElementsEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param attributesView An optional data type of the vertex data being updated.\n     */\n    function ElementsEvent(type, attributesView) {\n        _super.call(this, type);\n        this._attributesView = attributesView;\n    }\n    Object.defineProperty(ElementsEvent.prototype, \"attributesView\", {\n        /**\n         * The attributes view of the vertex data.\n         */\n        get: function () {\n            return this._attributesView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ElementsEvent.prototype.clone = function () {\n        return new ElementsEvent(this.type, this._attributesView);\n    };\n    /**\n     * Dispatched when a Elements's index data has been updated.\n     */\n    ElementsEvent.INVALIDATE_INDICES = \"invalidateIndices\";\n    /**\n     * Dispatched when a Elements's index data has been disposed.\n     */\n    ElementsEvent.CLEAR_INDICES = \"clearIndices\";\n    /**\n     * Dispatched when a Elements's vertex data has been updated.\n     */\n    ElementsEvent.INVALIDATE_VERTICES = \"invalidateVertices\";\n    /**\n     * Dispatched when a Elements's vertex data has been disposed.\n     */\n    ElementsEvent.CLEAR_VERTICES = \"clearVertices\";\n    return ElementsEvent;\n}(EventBase_1.EventBase));\nexports.ElementsEvent = ElementsEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/LightEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar LightEvent = (function (_super) {\n    __extends(LightEvent, _super);\n    function LightEvent(type) {\n        _super.call(this, type);\n    }\n    //@override\n    LightEvent.prototype.clone = function () {\n        return new LightEvent(this.type);\n    };\n    LightEvent.CASTS_SHADOW_CHANGE = \"castsShadowChange\";\n    return LightEvent;\n}(EventBase_1.EventBase));\nexports.LightEvent = LightEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/MouseEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nvar MouseEvent = (function (_super) {\n    __extends(MouseEvent, _super);\n    /**\n     * Create a new MouseEvent object.\n     * @param type The type of the MouseEvent.\n     */\n    function MouseEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(MouseEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    MouseEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n     */\n    MouseEvent.prototype.clone = function () {\n        var result = new MouseEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.delta = this.delta;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        result._iAllowedToPropagate = this._iAllowedToPropagate;\n        return result;\n    };\n    Object.defineProperty(MouseEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MouseEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Defines the value of the type property of a mouseOver3d event object.\n     */\n    MouseEvent.MOUSE_OVER = \"mouseOver3d\";\n    /**\n     * Defines the value of the type property of a mouseOut3d event object.\n     */\n    MouseEvent.MOUSE_OUT = \"mouseOut3d\";\n    /**\n     * Defines the value of the type property of a mouseUp3d event object.\n     */\n    MouseEvent.MOUSE_UP = \"mouseUp3d\";\n    /**\n     * Defines the value of the type property of a mouseDown3d event object.\n     */\n    MouseEvent.MOUSE_DOWN = \"mouseDown3d\";\n    /**\n     * Defines the value of the type property of a mouseMove3d event object.\n     */\n    MouseEvent.MOUSE_MOVE = \"mouseMove3d\";\n    /**\n     * Defines the value of the type property of a rollOver3d event object.\n     */\n    //\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n    /**\n     * Defines the value of the type property of a rollOut3d event object.\n     */\n    //\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n    /**\n     * Defines the value of the type property of a click3d event object.\n     */\n    MouseEvent.CLICK = \"click3d\";\n    /**\n     * Defines the value of the type property of a doubleClick3d event object.\n     */\n    MouseEvent.DOUBLE_CLICK = \"doubleClick3d\";\n    /**\n     * Defines the value of the type property of a mouseWheel3d event object.\n     */\n    MouseEvent.MOUSE_WHEEL = \"mouseWheel3d\";\n    return MouseEvent;\n}(EventBase_1.EventBase));\nexports.MouseEvent = MouseEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RenderableEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nvar RenderableEvent = (function (_super) {\n    __extends(RenderableEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function RenderableEvent(type, renderable) {\n        _super.call(this, type);\n        this._renderable = renderable;\n    }\n    Object.defineProperty(RenderableEvent.prototype, \"renderable\", {\n        /**\n         * The renderobject owner of the renderable owner.\n         */\n        get: function () {\n            return this._renderable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    RenderableEvent.prototype.clone = function () {\n        return new RenderableEvent(this.type, this._renderable);\n    };\n    /**\n     * Dispatched when a Renderable owners's render object owner has been updated.\n     */\n    RenderableEvent.INVALIDATE_SURFACE = \"invalidateRenderable\";\n    /**\n     *\n     */\n    RenderableEvent.INVALIDATE_ELEMENTS = \"invalidateElements\";\n    return RenderableEvent;\n}(EventBase_1.EventBase));\nexports.RenderableEvent = RenderableEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RendererEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar RendererEvent = (function (_super) {\n    __extends(RendererEvent, _super);\n    function RendererEvent(type) {\n        _super.call(this, type);\n    }\n    RendererEvent.VIEWPORT_UPDATED = \"viewportUpdated\";\n    RendererEvent.SCISSOR_UPDATED = \"scissorUpdated\";\n    return RendererEvent;\n}(EventBase_1.EventBase));\nexports.RendererEvent = RendererEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ResizeEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar ResizeEvent = (function (_super) {\n    __extends(ResizeEvent, _super);\n    function ResizeEvent(type, oldHeight, oldWidth) {\n        if (oldHeight === void 0) { oldHeight = NaN; }\n        if (oldWidth === void 0) { oldWidth = NaN; }\n        _super.call(this, type);\n        this._oldHeight = oldHeight;\n        this._oldWidth = oldWidth;\n    }\n    Object.defineProperty(ResizeEvent.prototype, \"oldHeight\", {\n        get: function () {\n            return this._oldHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeEvent.prototype, \"oldWidth\", {\n        get: function () {\n            return this._oldWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    ResizeEvent.prototype.clone = function () {\n        return new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n    };\n    ResizeEvent.RESIZE = \"resize\";\n    return ResizeEvent;\n}(EventBase_1.EventBase));\nexports.ResizeEvent = ResizeEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/StyleEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar StyleEvent = (function (_super) {\n    __extends(StyleEvent, _super);\n    function StyleEvent(type, style) {\n        _super.call(this, type);\n        this._style = style;\n    }\n    Object.defineProperty(StyleEvent.prototype, \"style\", {\n        get: function () {\n            return this._style;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    StyleEvent.prototype.clone = function () {\n        return new StyleEvent(this.type, this._style);\n    };\n    /**\n     *\n     */\n    StyleEvent.INVALIDATE_PROPERTIES = \"invalidateProperties\";\n    return StyleEvent;\n}(EventBase_1.EventBase));\nexports.StyleEvent = StyleEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/SurfaceEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar SurfaceEvent = (function (_super) {\n    __extends(SurfaceEvent, _super);\n    /**\n     * Create a new GraphicsEvent\n     * @param type The event type.\n     * @param dataType An optional data type of the vertex data being updated.\n     */\n    function SurfaceEvent(type, surface) {\n        _super.call(this, type);\n        this._surface = surface;\n    }\n    Object.defineProperty(SurfaceEvent.prototype, \"surface\", {\n        /**\n         * The surface of the renderable.\n         */\n        get: function () {\n            return this._surface;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     *\n     * @return An exact duplicate of the current object.\n     */\n    SurfaceEvent.prototype.clone = function () {\n        return new SurfaceEvent(this.type, this._surface);\n    };\n    SurfaceEvent.INVALIDATE_TEXTURE = \"invalidateTexture\";\n    SurfaceEvent.INVALIDATE_ANIMATION = \"invalidateAnimation\";\n    SurfaceEvent.INVALIDATE_PASSES = \"invalidatePasses\";\n    return SurfaceEvent;\n}(EventBase_1.EventBase));\nexports.SurfaceEvent = SurfaceEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TouchEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TouchEvent = (function (_super) {\n    __extends(TouchEvent, _super);\n    /**\n     * Create a new TouchEvent object.\n     * @param type The type of the TouchEvent.\n     */\n    function TouchEvent(type) {\n        _super.call(this, type);\n        // Private.\n        this._iAllowedToPropagate = true;\n    }\n    Object.defineProperty(TouchEvent.prototype, \"bubbles\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            var doesBubble = this._iAllowedToPropagate;\n            this._iAllowedToPropagate = true;\n            // Don't bubble if propagation has been stopped.\n            return doesBubble;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopPropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopPropagation();\n    };\n    /**\n     * @inheritDoc\n     */\n    TouchEvent.prototype.stopImmediatePropagation = function () {\n        this._iAllowedToPropagate = false;\n        if (this._iParentEvent)\n            this._iParentEvent.stopImmediatePropagation();\n    };\n    /**\n     * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n     */\n    TouchEvent.prototype.clone = function () {\n        var result = new TouchEvent(this.type);\n        /* TODO: Debug / test - look into isDefaultPrevented\n         if (isDefaultPrevented())\n         result.preventDefault();\n         */\n        result.screenX = this.screenX;\n        result.screenY = this.screenY;\n        result.view = this.view;\n        result.entity = this.entity;\n        result.renderable = this.renderable;\n        result.material = this.material;\n        result.uv = this.uv;\n        result.position = this.position;\n        result.normal = this.normal;\n        result.elementIndex = this.elementIndex;\n        result.ctrlKey = this.ctrlKey;\n        result.shiftKey = this.shiftKey;\n        result._iParentEvent = this;\n        return result;\n    };\n    Object.defineProperty(TouchEvent.prototype, \"scenePosition\", {\n        /**\n         * The position in scene space where the event took place\n         */\n        get: function () {\n            return this.entity.sceneTransform.transformVector(this.position);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TouchEvent.prototype, \"sceneNormal\", {\n        /**\n         * The normal in scene space where the event took place\n         */\n        get: function () {\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\n            sceneNormal.normalize();\n            return sceneNormal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    TouchEvent.TOUCH_END = \"touchEnd3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_BEGIN = \"touchBegin3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_MOVE = \"touchMove3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OUT = \"touchOut3d\";\n    /**\n     *\n     */\n    TouchEvent.TOUCH_OVER = \"touchOver3d\";\n    return TouchEvent;\n}(EventBase_1.EventBase));\nexports.TouchEvent = TouchEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TransformEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar TransformEvent = (function (_super) {\n    __extends(TransformEvent, _super);\n    function TransformEvent(type, transform) {\n        _super.call(this, type);\n        this._transform = transform;\n    }\n    Object.defineProperty(TransformEvent.prototype, \"transform\", {\n        get: function () {\n            return this._transform;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clones the event.\n     * @return An exact duplicate of the current object.\n     */\n    TransformEvent.prototype.clone = function () {\n        return new TransformEvent(this.type, this._transform);\n    };\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_MATRIX3D = \"invalidateMatrix3D\";\n    /**\n     *\n     */\n    TransformEvent.INVALIDATE_COLOR_TRANSFORM = \"invalidateColorTransform\";\n    return TransformEvent;\n}(EventBase_1.EventBase));\nexports.TransformEvent = TransformEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\nexports.CameraEvent = CameraEvent_1.CameraEvent;\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\nexports.DisplayObjectEvent = DisplayObjectEvent_1.DisplayObjectEvent;\nvar ElementsEvent_1 = require(\"./events/ElementsEvent\");\nexports.ElementsEvent = ElementsEvent_1.ElementsEvent;\nvar LightEvent_1 = require(\"./events/LightEvent\");\nexports.LightEvent = LightEvent_1.LightEvent;\nvar MouseEvent_1 = require(\"./events/MouseEvent\");\nexports.MouseEvent = MouseEvent_1.MouseEvent;\nvar RenderableEvent_1 = require(\"./events/RenderableEvent\");\nexports.RenderableEvent = RenderableEvent_1.RenderableEvent;\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\nexports.RendererEvent = RendererEvent_1.RendererEvent;\nvar ResizeEvent_1 = require(\"./events/ResizeEvent\");\nexports.ResizeEvent = ResizeEvent_1.ResizeEvent;\nvar StyleEvent_1 = require(\"./events/StyleEvent\");\nexports.StyleEvent = StyleEvent_1.StyleEvent;\nvar SurfaceEvent_1 = require(\"./events/SurfaceEvent\");\nexports.SurfaceEvent = SurfaceEvent_1.SurfaceEvent;\nvar TouchEvent_1 = require(\"./events/TouchEvent\");\nexports.TouchEvent = TouchEvent_1.TouchEvent;\nvar TransformEvent_1 = require(\"./events/TransformEvent\");\nexports.TransformEvent = TransformEvent_1.TransformEvent;\n\n},{\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"./events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"./events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"./events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./events/ResizeEvent\":\"awayjs-display/lib/events/ResizeEvent\",\"./events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"./events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"./events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"./events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\"}],\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/factories\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/graphics/ElementsBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Short3Attributes_1 = require(\"awayjs-core/lib/attributes/Short3Attributes\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\n/**\n * @class away.base.TriangleElements\n */\nvar ElementsBase = (function (_super) {\n    __extends(ElementsBase, _super);\n    /**\n     *\n     */\n    function ElementsBase(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this);\n        this._customAttributesNames = new Array();\n        this._customAttributes = new Object();\n        this._numElements = 0;\n        this._numVertices = 0;\n        this._verticesDirty = new Object();\n        this._invalidateVertices = new Object();\n        this._concatenatedBuffer = concatenatedBuffer;\n    }\n    Object.defineProperty(ElementsBase.prototype, \"concatenatedBuffer\", {\n        get: function () {\n            return this._concatenatedBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"indices\", {\n        /**\n         * The raw index data that define the faces.\n         */\n        get: function () {\n            return this._indices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributesNames = function () {\n        return this._customAttributesNames;\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.getCustomAtributes = function (name) {\n        return this._customAttributes[name];\n    };\n    Object.defineProperty(ElementsBase.prototype, \"numElements\", {\n        /**\n         * The total amount of triangles in the TriangleElements.\n         */\n        get: function () {\n            return this._numElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementsBase.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ElementsBase.prototype.copyTo = function (elements) {\n        if (this.indices)\n            elements.setIndices(this.indices.clone());\n        for (var name in this._customAttributes)\n            elements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n    };\n    /**\n     *\n     */\n    ElementsBase.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n        }\n        for (var name in this._customAttributes) {\n            this._customAttributes[name].dispose();\n            delete this._customAttributes;\n        }\n    };\n    ElementsBase.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Short3Attributes_1.Short3Attributes) {\n            if (this._indices)\n                this.clearIndices();\n            this._indices = values;\n        }\n        else if (values) {\n            if (!this._indices)\n                this._indices = new Short3Attributes_1.Short3Attributes();\n            this._indices.set(values, offset);\n        }\n        else if (this._indices) {\n            this._indices.dispose();\n            this._indices = null;\n            this.clearIndices();\n        }\n        if (this._indices) {\n            this._numElements = this._indices.count;\n            this.invalidateIndicies();\n        }\n        else {\n            this._numElements = 0;\n        }\n    };\n    ElementsBase.prototype.setCustomAttributes = function (name, values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._customAttributes[name])\n            return;\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributes[name] = values;\n        }\n        else if (values) {\n            if (!this._customAttributes[name])\n                this._customAttributes[name] = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n            this._customAttributes[name].set(values, offset);\n        }\n        else if (this._customAttributes[name]) {\n            this.clearVertices(this._customAttributes[name]);\n            this._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n            delete this._customAttributes[name];\n            return;\n        }\n        this.invalidateVertices(this._customAttributes[name]);\n        this._verticesDirty[this._customAttributes[name].id] = false;\n        if (this._customAttributesNames.indexOf(name) == -1)\n            this._customAttributesNames.push(name);\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    ElementsBase.prototype.clone = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.applyTransformation = function (transform, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    ElementsBase.prototype.scale = function (scale, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.getBoxBounds = function (target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.getSphereBounds = function (center, target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ElementsBase.prototype.invalidateIndicies = function () {\n        if (!this._invalidateIndices)\n            this._invalidateIndices = new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.INVALIDATE_INDICES, this._indices);\n        this.dispatchEvent(this._invalidateIndices);\n    };\n    ElementsBase.prototype.clearIndices = function () {\n        this.dispatchEvent(new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.CLEAR_INDICES, this._indices));\n    };\n    ElementsBase.prototype.invalidateVertices = function (attributesView) {\n        if (!attributesView || this._verticesDirty[attributesView.id])\n            return;\n        this._verticesDirty[attributesView.id] = true;\n        if (!this._invalidateVertices[attributesView.id])\n            this._invalidateVertices[attributesView.id] = new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, attributesView);\n        this.dispatchEvent(this._invalidateVertices[attributesView.id]);\n    };\n    ElementsBase.prototype.clearVertices = function (attributesView) {\n        if (!attributesView)\n            return;\n        attributesView.dispose();\n        this.dispatchEvent(new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.CLEAR_VERTICES, attributesView));\n        this._verticesDirty[attributesView.id] = null;\n        this._invalidateVertices[attributesView.id] = null;\n    };\n    ElementsBase.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    return ElementsBase;\n}(AssetBase_1.AssetBase));\nexports.ElementsBase = ElementsBase;\n\n},{\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Short3Attributes\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/ElementsType\":[function(require,module,exports){\n\"use strict\";\nvar ElementsType = (function () {\n    function ElementsType() {\n    }\n    /**\n     *\n     */\n    ElementsType.TRIANGLE = \"triangle\";\n    /**\n     *\n     */\n    ElementsType.LINE = \"line\";\n    return ElementsType;\n}());\nexports.ElementsType = ElementsType;\n\n},{}],\"awayjs-display/lib/graphics/Graphics\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar Graphic_1 = require(\"../graphics/Graphic\");\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\nvar GraphicsPath_1 = require(\"../draw/GraphicsPath\");\nvar GraphicsFactoryFills_1 = require(\"../draw/GraphicsFactoryFills\");\nvar GraphicsFactoryStrokes_1 = require(\"../draw/GraphicsFactoryStrokes\");\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\nvar JointStyle_1 = require(\"../draw/JointStyle\");\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nvar Graphics = (function (_super) {\n    __extends(Graphics, _super);\n    /**\n     * Creates a new Graphics object.\n     */\n    function Graphics() {\n        var _this = this;\n        _super.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._graphics = new Array();\n        this._current_position = new Point_1.Point();\n        this._current_position = new Point_1.Point();\n        this._queued_fill_pathes = [];\n        this._queued_stroke_pathes = [];\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n    }\n    Object.defineProperty(Graphics.prototype, \"assetType\", {\n        get: function () {\n            return Graphics.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"count\", {\n        get: function () {\n            return this._graphics.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"animator\", {\n        /**\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\n         */\n        get: function () {\n            return this._animator;\n        },\n        set: function (value) {\n            this._animator = value;\n            var len = this._graphics.length;\n            var graphic;\n            for (var i = 0; i < len; ++i) {\n                graphic = this._graphics[i];\n                // cause material to be unregistered and registered again to work with the new animation type (if possible)\n                if (graphic.material) {\n                    graphic.material.iRemoveOwner(graphic);\n                    graphic.material.iAddOwner(graphic);\n                }\n                //invalidate any existing graphic objects in case they need to pull new elements\n                graphic.invalidateElements();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"style\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._iInvalidateSurfaces();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"queued_stroke_pathes\", {\n        get: function () {\n            return this._queued_stroke_pathes;\n        },\n        set: function (value) {\n            this._queued_stroke_pathes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"queued_fill_pathes\", {\n        get: function () {\n            return this._queued_fill_pathes;\n        },\n        set: function (value) {\n            this._queued_fill_pathes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphics.prototype, \"material\", {\n        /**\n         * The material with which to render the Graphics.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            var i;\n            var len = this._graphics.length;\n            var graphic;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iRemoveOwner(graphic);\n            this._material = value;\n            if (this._material)\n                for (i = 0; i < len; i++)\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n                        this._material.iAddOwner(graphic);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a GraphicBase wrapping a Elements.\n     *\n     * @param elements\n     */\n    Graphics.prototype.addGraphic = function (elements, material, style, count, offset) {\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        var graphic;\n        if (Graphic_1.Graphic._available.length) {\n            graphic = Graphic_1.Graphic._available.pop();\n            graphic._iIndex = this._graphics.length;\n            graphic.parent = this;\n            graphic.elements = elements;\n            graphic.material = material;\n            graphic.style = style;\n            graphic.count = count;\n            graphic.offset = offset;\n        }\n        else {\n            graphic = new Graphic_1.Graphic(this._graphics.length, this, elements, material, style, count, offset);\n        }\n        this._graphics.push(graphic);\n        graphic.addEventListener(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        this.invalidate();\n        return graphic;\n    };\n    Graphics.prototype.removeGraphic = function (graphic) {\n        this._graphics.splice(this._graphics.indexOf(graphic), 1);\n        graphic.removeEventListener(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n        graphic.elements = null;\n        graphic.material = null;\n        graphic.style = null;\n        graphic.clear();\n        this.invalidate();\n    };\n    Graphics.prototype.getGraphicAt = function (index) {\n        return this._graphics[index];\n    };\n    Graphics.prototype.applyTransformation = function (transform) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].applyTransformation(transform);\n    };\n    Graphics.prototype.copyTo = function (graphics) {\n        graphics.material = this._material;\n        graphics.style = this.style;\n        graphics.particles = this.particles;\n        graphics.numParticles = this.numParticles;\n        var graphic;\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i) {\n            graphic = this._graphics[i];\n            graphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\n        }\n        if (this._animator)\n            graphics.animator = this._animator.clone();\n    };\n    Graphics.prototype.clone = function () {\n        var newInstance = new Graphics();\n        this.copyTo(newInstance);\n        return newInstance;\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    Graphics.prototype.scale = function (scale) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].scale(scale);\n    };\n    Graphics.prototype.clear = function () {\n        for (var i = this._graphics.length - 1; i >= 0; i--) {\n            this._graphics[i].clear();\n        }\n    };\n    /**\n     * Clears all resources used by the Graphics object, including SubGeometries.\n     */\n    Graphics.prototype.dispose = function () {\n        this.material = null;\n        for (var i = this._graphics.length - 1; i >= 0; i--)\n            this._graphics[i].dispose();\n        if (this._animator)\n            this._animator.dispose();\n    };\n    /**\n     * Scales the uv coordinates (tiling)\n     * @param scaleU The amount by which to scale on the u axis. Default is 1;\n     * @param scaleV The amount by which to scale on the v axis. Default is 1;\n     */\n    Graphics.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].scaleUV(scaleU, scaleV);\n    };\n    Graphics.prototype.getBoxBounds = function () {\n        if (this._boxBoundsInvalid) {\n            this._boxBoundsInvalid = false;\n            if (!this._boxBounds)\n                this._boxBounds = new Box_1.Box();\n            if (this._graphics.length) {\n                this._boxBounds.setBoundIdentity();\n                var len = this._graphics.length;\n                for (var i = 0; i < len; i++)\n                    this._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\n            }\n            else {\n                this._boxBounds.setEmpty();\n            }\n        }\n        return this._boxBounds;\n    };\n    Graphics.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            target = this._graphics[i].getSphereBounds(center, target);\n        return target;\n    };\n    Graphics.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphics.prototype._iInvalidateSurfaces = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateSurface();\n    };\n    Graphics.prototype.invalidateElements = function () {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; ++i)\n            this._graphics[i].invalidateElements();\n    };\n    Graphics.prototype._hitTestPointInternal = function (x, y) {\n        //TODO: handle lines as well\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            if (this._graphics[i].hitTestPoint(x, y, 0))\n                return true;\n        return false;\n    };\n    Graphics.prototype.acceptTraverser = function (traverser) {\n        var len = this._graphics.length;\n        for (var i = 0; i < len; i++)\n            traverser.applyRenderable(this._graphics[i]);\n    };\n    Graphics.prototype._onInvalidateProperties = function (event) {\n        this._iInvalidateSurfaces();\n    };\n    Graphics.prototype._onInvalidateVertices = function (event) {\n        if (event.attributesView != event.target.positions)\n            return;\n        this.invalidate();\n    };\n    Graphics.prototype.draw_fills = function () {\n        GraphicsFactoryFills_1.GraphicsFactoryFills.draw_pathes(this);\n    };\n    Graphics.prototype.draw_strokes = function () {\n        GraphicsFactoryStrokes_1.GraphicsFactoryStrokes.draw_pathes(this);\n    };\n    /**\n     * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n     * tiled to fill the area. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param bitmap A transparent or opaque bitmap image that contains the bits\n     *               to be displayed.\n     * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n     *               can use to define transformations on the bitmap. For\n     *               example, you can use the following matrix to rotate a bitmap\n     *               by 45 degrees(pi/4 radians):\n     * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n     *               pattern. If <code>false</code>, the bitmap image does not\n     *               repeat, and the edges of the bitmap are used for any fill\n     *               area that extends beyond the bitmap.\n     *\n     *               <p>For example, consider the following bitmap(a 20 x\n     *               20-pixel checkerboard pattern):</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>true</code>(as\n     *               in the following example), the bitmap fill repeats the\n     *               bitmap:</p>\n     *\n     *               <p>When <code>repeat</code> is set to <code>false</code>,\n     *               the bitmap fill uses the edge pixels for the fill area\n     *               outside the bitmap:</p>\n     * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n     *               by using a nearest-neighbor algorithm and look pixelated. If\n     *               <code>true</code>, upscaled bitmap images are rendered by\n     *               using a bilinear algorithm. Rendering by using the nearest\n     *               neighbor algorithm is faster.\n     */\n    Graphics.prototype.beginBitmapFill = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\n        // todo: create bitmap fill style\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(0xffffff, 1);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a simple one-color fill that subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n     * when drawing. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called.</p>\n     *\n     * @param color The color of the fill(0xRRGGBB).\n     * @param alpha The alpha value of the fill(0.0 to 1.0).\n     */\n    Graphics.prototype.beginFill = function (color /*int*/, alpha) {\n        if (alpha === void 0) { alpha = 1; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(color, alpha);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Specifies a gradient fill used by subsequent calls to other Graphics\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n     * the object. The fill remains in effect until you call the\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n     * method. Calling the <code>clear()</code> method clears the fill.\n     *\n     * <p>The application renders the fill whenever three or more points are\n     * drawn, or when the <code>endFill()</code> method is called. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use:\n     *                            <code>GradientType.LINEAR</code> or\n     *                            <code>GradientType.RADIAL</code>.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>beginGradientFill()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use, either:\n     *                            <code>SpreadMethod.PAD</code>,\n     *                            <code>SpreadMethod.REFLECT</code>, or\n     *                            <code>SpreadMethod.REPEAT</code>.\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors:</p>\n     *\n     *                            <p>This example uses\n     *                            <code>SpreadMethod.PAD</code> for the spread\n     *                            method, and the gradient fill looks like the\n     *                            following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     *\n     *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n     *                            for the spread method, the gradient fill looks\n     *                            like the following:</p>\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use:\n     *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n     *                            <code>InterpolationMethod.RGB</code>\n     *\n     *                            <p>For example, consider a simple linear\n     *                            gradient between two colors(with the\n     *                            <code>spreadMethod</code> parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows: </p>\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. 0 means that the\n     *                            focal point is in the center. 1 means that the\n     *                            focal point is at one border of the gradient\n     *                            circle. -1 means that the focal point is at the\n     *                            other border of the gradient circle. A value\n     *                            less than -1 or greater than 1 is rounded to -1\n     *                            or 1. For example, the following example shows\n     *                            a <code>focalPointRatio</code> set to 0.75:\n     * @throws ArgumentError If the <code>type</code> parameter is not valid.\n     */\n    Graphics.prototype.beginGradientFill = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = \"pad\"; }\n        if (interpolationMethod === void 0) { interpolationMethod = \"rgb\"; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        this.draw_fills();\n        // start a new fill path\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\n        // todo: create gradient fill style\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(colors[0], alphas[0]);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_fill_pathes.push(this._active_fill_path);\n    };\n    /**\n     * Copies all of drawing commands from the source Graphics object into the\n     * calling Graphics object.\n     *\n     * @param sourceGraphics The Graphics object from which to copy the drawing\n     *                       commands.\n     */\n    Graphics.prototype.copyFrom = function (sourceGraphics) {\n        sourceGraphics.copyTo(this);\n    };\n    /**\n     * Draws a cubic Bezier curve from the current drawing position to the\n     * specified anchor point. Cubic Bezier curves consist of two anchor points\n     * and two control points. The curve interpolates the two anchor points and\n     * curves toward the two control points.\n     *\n     * The four points you use to draw a cubic Bezier curve with the\n     * <code>cubicCurveTo()</code> method are as follows:\n     *\n     * <ul>\n     *   <li>The current drawing position is the first anchor point. </li>\n     *   <li>The anchorX and anchorY parameters specify the second anchor point.\n     *   </li>\n     *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n     *   specify the first control point.</li>\n     *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n     *   specify the second control point.</li>\n     * </ul>\n     *\n     * If you call the <code>cubicCurveTo()</code> method before calling the\n     * <code>moveTo()</code> method, your curve starts at position (0, 0).\n     *\n     * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n     * the current drawing position to (<code>anchorX</code>,\n     * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n     * the current drawing position remains unchanged.\n     *\n     * If your movie clip contains content created with the Flash drawing tools,\n     * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n     * underneath that content.\n     *\n     * @param controlX1 Specifies the horizontal position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY1 Specifies the vertical position of the first control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlX2 Specifies the horizontal position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param controlY2 Specifies the vertical position of the second control\n     *                  point relative to the registration point of the parent\n     *                  display object.\n     * @param anchorX   Specifies the horizontal position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     * @param anchorY   Specifies the vertical position of the anchor point\n     *                  relative to the registration point of the parent display\n     *                  object.\n     */\n    Graphics.prototype.cubicCurveTo = function (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY) {\n        throw new PartialImplementationError_1.PartialImplementationError(\"cubicCurveTo\");\n        /*\n         t = 0.5; // given example value\n         x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n         y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n         this.queued_command_types.push(Graphics.CMD_BEZIER);\n         this.queued_command_data.push(controlX1);\n         this.queued_command_data.push(controlY1);\n         this.queued_command_data.push(controlX2);\n         this.queued_command_data.push(controlY2);\n         this.queued_command_data.push(anchorX);\n         this.queued_command_data.push(anchorY);\n\n         // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n         this.draw_direction+=0;\n         */\n    };\n    /**\n     * Draws a curve using the current line style from the current drawing\n     * position to(anchorX, anchorY) and using the control point that\n     * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n     * drawing position is then set to(<code>anchorX</code>,\n     * <code>anchorY</code>). If the movie clip in which you are drawing contains\n     * content created with the Flash drawing tools, calls to the\n     * <code>curveTo()</code> method are drawn underneath this content. If you\n     * call the <code>curveTo()</code> method before any calls to the\n     * <code>moveTo()</code> method, the default of the current drawing position\n     * is(0, 0). If any of the parameters are missing, this method fails and the\n     * current drawing position is not changed.\n     *\n     * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n     * consist of two anchor points and one control point. The curve interpolates\n     * the two anchor points and curves toward the control point. </p>\n     *\n     * @param controlX A number that specifies the horizontal position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param controlY A number that specifies the vertical position of the\n     *                 control point relative to the registration point of the\n     *                 parent display object.\n     * @param anchorX  A number that specifies the horizontal position of the\n     *                 next anchor point relative to the registration point of\n     *                 the parent display object.\n     * @param anchorY  A number that specifies the vertical position of the next\n     *                 anchor point relative to the registration point of the\n     *                 parent display object.\n     */\n    Graphics.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n        }\n        this._current_position.x = anchorX;\n        this._current_position.y = anchorY;\n    };\n    /**\n     * Draws a circle. Set the line style, fill, or both before you call the\n     * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      The <i>x</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param y      The <i>y</i> location of the center of the circle relative\n     *               to the registration point of the parent display object(in\n     *               pixels).\n     * @param radius The radius of the circle(in pixels).\n     */\n    Graphics.prototype.drawCircle = function (x, y, radius) {\n        // todo: directly create triangles instead of draw commands ?\n        var radius2 = radius * 1.065;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x - radius, y);\n            for (var i = 8; i >= 0; i--) {\n                var degree = (i) * (360 / 8) * Math.PI / 180;\n                var degree2 = degree + ((360 / 16) * Math.PI / 180);\n                this._active_fill_path.curveTo(x - (Math.cos(degree2) * radius2), y + (Math.sin(degree2) * radius2), x - (Math.cos(degree) * radius), y + (Math.sin(degree) * radius));\n            }\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + radius);\n            var radius2 = radius * 0.93;\n            this._active_stroke_path.curveTo(x - (radius2), y + (radius2), x - radius, y);\n            this._active_stroke_path.curveTo(x - (radius2), y - (radius2), x, y - radius);\n            this._active_stroke_path.curveTo(x + (radius2), y - (radius2), x + radius, y);\n            this._active_stroke_path.curveTo(x + (radius2), y + (radius2), x, y + radius);\n        }\n    };\n    /**\n     * Draws an ellipse. Set the line style, fill, or both before you call the\n     * <code>drawEllipse()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x      The <i>x</i> location of the top-left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param y      The <i>y</i> location of the top left of the bounding-box of\n     *               the ellipse relative to the registration point of the parent\n     *               display object(in pixels).\n     * @param width  The width of the ellipse(in pixels).\n     * @param height The height of the ellipse(in pixels).\n     */\n    Graphics.prototype.drawEllipse = function (x, y, width, height) {\n        width /= 2;\n        height /= 2;\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y + height);\n            this._active_fill_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_fill_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_fill_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_fill_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y + height);\n            this._active_stroke_path.curveTo(x - (width), y + (height), x - width, y);\n            this._active_stroke_path.curveTo(x - (width), y - (height), x, y - height);\n            this._active_stroke_path.curveTo(x + (width), y - (height), x + width, y);\n            this._active_stroke_path.curveTo(x + (width), y + (height), x, y + height);\n        }\n    };\n    /**\n     * Submits a series of IGraphicsData instances for drawing. This method\n     * accepts a Vector containing objects including paths, fills, and strokes\n     * that implement the IGraphicsData interface. A Vector of IGraphicsData\n     * instances can refer to a part of a shape, or a complex fully defined set\n     * of data for rendering a complete shape.\n     *\n     * <p> Graphics paths can contain other graphics paths. If the\n     * <code>graphicsData</code> Vector includes a path, that path and all its\n     * sub-paths are rendered during this operation. </p>\n     *\n     */\n    Graphics.prototype.drawGraphicsData = function (graphicsData) {\n        //this.draw_fills();\n        /*\n         for (var i:number=0; i<graphicsData.length; i++){\n         //todo\n         if(graphicsData[i].dataType==\"beginFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"endFill\"){\n\n         }\n         else if(graphicsData[i].dataType==\"Path\"){\n\n         }\n\n         }\n         */\n    };\n    /**\n     * Submits a series of commands for drawing. The <code>drawPath()</code>\n     * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n     * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n     * single call. The <code>drawPath()</code> method parameters combine drawing\n     * commands with x- and y-coordinate value pairs and a drawing direction. The\n     * drawing commands are values from the GraphicsPathCommand class. The x- and\n     * y-coordinate value pairs are Numbers in an array where each pair defines a\n     * coordinate location. The drawing direction is a value from the\n     * GraphicsPathWinding class.\n     *\n     * <p> Generally, drawings render faster with <code>drawPath()</code> than\n     * with a series of individual <code>lineTo()</code> and\n     * <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method uses a uses a floating computation\n     * so rotation and scaling of shapes is more accurate and gives better\n     * results. However, curves submitted using the <code>drawPath()</code>\n     * method can have small sub-pixel alignment errors when used in conjunction\n     * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n     *\n     * <p> The <code>drawPath()</code> method also uses slightly different rules\n     * for filling and drawing lines. They are: </p>\n     *\n     * <ul>\n     *   <li>When a fill is applied to rendering a path:\n     * <ul>\n     *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n     * stroke rendering will still occur, consistent with the rules for strokes\n     * below.)</li>\n     *   <li>A sub-path that isn't closed(the end point is not equal to the\n     * begin point) is implicitly closed.</li>\n     * </ul>\n     * </li>\n     *   <li>When a stroke is applied to rendering a path:\n     * <ul>\n     *   <li>The sub-paths can be composed of any number of points.</li>\n     *   <li>The sub-path is never implicitly closed.</li>\n     * </ul>\n     * </li>\n     * </ul>\n     *\n     * @param winding Specifies the winding rule using a value defined in the\n     *                GraphicsPathWinding class.\n     */\n    Graphics.prototype.drawPath = function (commands, data, winding) {\n        //todo\n        /*\n         if(this._active_fill_path!=null){\n         this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         if(this._active_stroke_path!=null){\n         this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n         }\n         this._current_position.x=anchorX;\n         this._current_position.y=anchorY;\n         */\n    };\n    /**\n     * Draws a rectangle. Set the line style, fill, or both before you call the\n     * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method.\n     *\n     * @param x      A number indicating the horizontal position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param y      A number indicating the vertical position relative to the\n     *               registration point of the parent display object(in pixels).\n     * @param width  The width of the rectangle(in pixels).\n     * @param height The height of the rectangle(in pixels).\n     * @throws ArgumentError If the <code>width</code> or <code>height</code>\n     *                       parameters are not a number\n     *                      (<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRect = function (x, y, width, height) {\n        //todo: directly create triangles instead of drawing commands ?\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n            this._active_fill_path.lineTo(x + width, y);\n            this._active_fill_path.lineTo(x + width, y + height);\n            this._active_fill_path.lineTo(x, y + height);\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n            this._active_stroke_path.lineTo(x + width, y);\n            this._active_stroke_path.lineTo(x + width, y + height);\n            this._active_stroke_path.lineTo(x, y + height);\n            this._active_stroke_path.lineTo(x, y);\n        }\n    };\n    /**\n     * Draws a rounded rectangle. Set the line style, fill, or both before you\n     * call the <code>drawRoundRect()</code> method, by calling the\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method.\n     *\n     * @param x             A number indicating the horizontal position relative\n     *                      to the registration point of the parent display\n     *                      object(in pixels).\n     * @param y             A number indicating the vertical position relative to\n     *                      the registration point of the parent display object\n     *                     (in pixels).\n     * @param width         The width of the round rectangle(in pixels).\n     * @param height        The height of the round rectangle(in pixels).\n     * @param ellipseWidth  The width of the ellipse used to draw the rounded\n     *                      corners(in pixels).\n     * @param ellipseHeight The height of the ellipse used to draw the rounded\n     *                      corners(in pixels). Optional; if no value is\n     *                      specified, the default value matches that provided\n     *                      for the <code>ellipseWidth</code> parameter.\n     * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n     *                       <code>ellipseWidth</code> or\n     *                       <code>ellipseHeight</code> parameters are not a\n     *                       number(<code>Number.NaN</code>).\n     */\n    Graphics.prototype.drawRoundRect = function (x, y, width, height, ellipseWidth, ellipseHeight) {\n        if (ellipseHeight === void 0) { ellipseHeight = NaN; }\n        //todo: directly create triangles instead of drawing commands ?\n        if (!ellipseHeight) {\n            ellipseHeight = ellipseWidth;\n        }\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x + ellipseWidth, y);\n            this._active_fill_path.lineTo(x + width - ellipseWidth, y);\n            this._active_fill_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_fill_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_fill_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_fill_path.lineTo(x + ellipseWidth, y + height);\n            this._active_fill_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_fill_path.lineTo(x, y + ellipseHeight);\n            this._active_fill_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x + ellipseWidth, y);\n            this._active_stroke_path.lineTo(x + width - ellipseWidth, y);\n            this._active_stroke_path.curveTo(x + width, y, x + width, y + ellipseHeight);\n            this._active_stroke_path.lineTo(x + width, y + height - ellipseHeight);\n            this._active_stroke_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\n            this._active_stroke_path.lineTo(x + ellipseWidth, y + height);\n            this._active_stroke_path.curveTo(x, y + height, x, y + height - ellipseHeight);\n            this._active_stroke_path.lineTo(x, y + ellipseHeight);\n            this._active_stroke_path.curveTo(x, y, x + ellipseWidth, y);\n        }\n    };\n    //public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n    /**\n     * Renders a set of triangles, typically to distort bitmaps and give them a\n     * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n     * either the current fill, or a bitmap fill, to the triangle faces using a\n     * set of(u,v) coordinates.\n     *\n     * <p> Any type of fill can be used, but if the fill has a transform matrix\n     * that transform matrix is ignored. </p>\n     *\n     * <p> A <code>uvtData</code> parameter improves texture mapping when a\n     * bitmap fill is used. </p>\n     *\n     * @param culling Specifies whether to render triangles that face in a\n     *                specified direction. This parameter prevents the rendering\n     *                of triangles that cannot be seen in the current view. This\n     *                parameter can be set to any value defined by the\n     *                TriangleCulling class.\n     */\n    Graphics.prototype.drawTriangles = function (vertices, indices, uvtData, culling) {\n        if (indices === void 0) { indices = null; }\n        if (uvtData === void 0) { uvtData = null; }\n        if (culling === void 0) { culling = null; }\n        if (this._active_fill_path != null) {\n        }\n        if (this._active_stroke_path != null) {\n        }\n    };\n    /**\n     * Applies a fill to the lines and curves that were added since the last call\n     * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n     * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n     * specified in the previous call to the <code>beginFill()</code>,\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n     * method. If the current drawing position does not equal the previous\n     * position specified in a <code>moveTo()</code> method and a fill is\n     * defined, the path is closed with a line and then filled.\n     *\n     */\n    Graphics.prototype.endFill = function () {\n        this.draw_strokes();\n        this.draw_fills();\n        this._active_fill_path = null;\n        this._active_stroke_path = null;\n    };\n    /**\n     * Specifies a bitmap to use for the line stroke when drawing lines.\n     *\n     * <p>The bitmap line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param bitmap The bitmap to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     * @param repeat Whether to repeat the bitmap in a tiled fashion.\n     * @param smooth Whether smoothing should be applied to the bitmap.\n     */\n    Graphics.prototype.lineBitmapStyle = function (bitmap, matrix, repeat, smooth) {\n        if (matrix === void 0) { matrix = null; }\n        if (repeat === void 0) { repeat = true; }\n        if (smooth === void 0) { smooth = false; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a gradient to use for the stroke when drawing lines.\n     *\n     * <p>The gradient line style is used for subsequent calls to Graphics\n     * methods such as the <code>lineTo()</code> methods or the\n     * <code>drawCircle()</code> method. The line style remains in effect until\n     * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n     * methods, or the <code>lineGradientStyle()</code> method again with\n     * different parameters. </p>\n     *\n     * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n     * of drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param type                A value from the GradientType class that\n     *                            specifies which gradient type to use, either\n     *                            GradientType.LINEAR or GradientType.RADIAL.\n     * @param colors              An array of RGB hexadecimal color values used\n     *                            in the gradient; for example, red is 0xFF0000,\n     *                            blue is 0x0000FF, and so on. You can specify\n     *                            up to 15 colors. For each color, specify a\n     *                            corresponding value in the alphas and ratios\n     *                            parameters.\n     * @param alphas              An array of alpha values for the corresponding\n     *                            colors in the colors array; valid values are 0\n     *                            to 1. If the value is less than 0, the default\n     *                            is 0. If the value is greater than 1, the\n     *                            default is 1.\n     * @param ratios              An array of color distribution ratios; valid\n     *                            values are 0-255. This value defines the\n     *                            percentage of the width where the color is\n     *                            sampled at 100%. The value 0 represents the\n     *                            left position in the gradient box, and 255\n     *                            represents the right position in the gradient\n     *                            box.\n     * @param matrix              A transformation matrix as defined by the\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\n     *                            class includes a\n     *                            <code>createGradientBox()</code> method, which\n     *                            lets you conveniently set up the matrix for use\n     *                            with the <code>lineGradientStyle()</code>\n     *                            method.\n     * @param spreadMethod        A value from the SpreadMethod class that\n     *                            specifies which spread method to use:\n     * @param interpolationMethod A value from the InterpolationMethod class that\n     *                            specifies which value to use. For example,\n     *                            consider a simple linear gradient between two\n     *                            colors(with the <code>spreadMethod</code>\n     *                            parameter set to\n     *                            <code>SpreadMethod.REFLECT</code>). The\n     *                            different interpolation methods affect the\n     *                            appearance as follows:\n     * @param focalPointRatio     A number that controls the location of the\n     *                            focal point of the gradient. The value 0 means\n     *                            the focal point is in the center. The value 1\n     *                            means the focal point is at one border of the\n     *                            gradient circle. The value -1 means that the\n     *                            focal point is at the other border of the\n     *                            gradient circle. Values less than -1 or greater\n     *                            than 1 are rounded to -1 or 1. The following\n     *                            image shows a gradient with a\n     *                            <code>focalPointRatio</code> of -0.75:\n     */\n    Graphics.prototype.lineGradientStyle = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\n        if (matrix === void 0) { matrix = null; }\n        if (spreadMethod === void 0) { spreadMethod = null; }\n        if (interpolationMethod === void 0) { interpolationMethod = null; }\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Specifies a shader to use for the line stroke when drawing lines.\n     *\n     * <p>The shader line style is used for subsequent calls to Graphics methods\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\n     * </p>\n     *\n     * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within a path. </p>\n     *\n     * <p>Call the <code>lineStyle()</code> method before you call the\n     * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n     * value of the line style is <code>undefined</code>.</p>\n     *\n     * <p>Calls to the <code>clear()</code> method set the line style back to\n     * <code>undefined</code>. </p>\n     *\n     * @param shader The shader to use for the line stroke.\n     * @param matrix An optional transformation matrix as defined by the\n     *               flash.geom.Matrix class. The matrix can be used to scale or\n     *               otherwise manipulate the bitmap before applying it to the\n     *               line style.\n     */\n    //\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n    //\t\t{\n    //\n    //\t\t}\n    /**\n     * Specifies a line style used for subsequent calls to Graphics methods such\n     * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n     * method. The line style remains in effect until you call the\n     * <code>lineGradientStyle()</code> method, the\n     * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n     * method with different parameters.\n     *\n     * <p>You can call the <code>lineStyle()</code> method in the middle of\n     * drawing a path to specify different styles for different line segments\n     * within the path.</p>\n     *\n     * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n     * style back to <code>undefined</code>.</p>\n     *\n     * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n     * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n     *\n     * @param thickness    An integer that indicates the thickness of the line in\n     *                     points; valid values are 0-255. If a number is not\n     *                     specified, or if the parameter is undefined, a line is\n     *                     not drawn. If a value of less than 0 is passed, the\n     *                     default is 0. The value 0 indicates hairline\n     *                     thickness; the maximum thickness is 255. If a value\n     *                     greater than 255 is passed, the default is 255.\n     * @param color        A hexadecimal color value of the line; for example,\n     *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n     *                     value is not indicated, the default is 0x000000\n     *                    (black). Optional.\n     * @param alpha        A number that indicates the alpha value of the color\n     *                     of the line; valid values are 0 to 1. If a value is\n     *                     not indicated, the default is 1(solid). If the value\n     *                     is less than 0, the default is 0. If the value is\n     *                     greater than 1, the default is 1.\n     * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n     *                     specifies whether to hint strokes to full pixels. This\n     *                     affects both the position of anchors of a curve and\n     *                     the line stroke size itself. With\n     *                     <code>pixelHinting</code> set to <code>true</code>,\n     *                     line widths are adjusted to full pixel widths. With\n     *                     <code>pixelHinting</code> set to <code>false</code>,\n     *                     disjoints can appear for curves and straight lines.\n     *                     For example, the following illustrations show how\n     *                     Flash Player or Adobe AIR renders two rounded\n     *                     rectangles that are identical, except that the\n     *                     <code>pixelHinting</code> parameter used in the\n     *                     <code>lineStyle()</code> method is set differently\n     *                    (the images are scaled by 200%, to emphasize the\n     *                     difference):\n     *\n     *                     <p>If a value is not supplied, the line does not use\n     *                     pixel hinting.</p>\n     * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n     *                     LineScaleMode class that specifies which scale mode to\n     *                     use:\n     *                     <ul>\n     *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n     *                     scale the line thickness when the object is scaled\n     *                    (the default). </li>\n     *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n     *                     the line thickness. </li>\n     *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     vertically <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n     *                     left is scaled vertically only, and the circle on the\n     *                     right is scaled both vertically and horizontally:\n     *                     </li>\n     *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n     *                     scale the line thickness if the object is scaled\n     *                     horizontally <i>only</i>. For example, consider the\n     *                     following circles, drawn with a one-pixel line, and\n     *                     each with the <code>scaleMode</code> parameter set to\n     *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n     *                     the left is scaled horizontally only, and the circle\n     *                     on the right is scaled both vertically and\n     *                     horizontally:   </li>\n     *                     </ul>\n     * @param caps        (Not supported in Flash Lite 4) A value from the\n     *                     CapsStyle class that specifies the type of caps at the\n     *                     end of lines. Valid values are:\n     *                     <code>CapsStyle.NONE</code>,\n     *                     <code>CapsStyle.ROUND</code>, and\n     *                     <code>CapsStyle.SQUARE</code>. If a value is not\n     *                     indicated, Flash uses round caps.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>capsStyle</code> settings. For each\n     *                     setting, the illustration shows a blue line with a\n     *                     thickness of 30(for which the <code>capsStyle</code>\n     *                     applies), and a superimposed black line with a\n     *                     thickness of 1(for which no <code>capsStyle</code>\n     *                     applies): </p>\n     * @param joints      (Not supported in Flash Lite 4) A value from the\n     *                     JointStyle class that specifies the type of joint\n     *                     appearance used at angles. Valid values are:\n     *                     <code>JointStyle.BEVEL</code>,\n     *                     <code>JointStyle.MITER</code>, and\n     *                     <code>JointStyle.ROUND</code>. If a value is not\n     *                     indicated, Flash uses round joints.\n     *\n     *                     <p>For example, the following illustrations show the\n     *                     different <code>joints</code> settings. For each\n     *                     setting, the illustration shows an angled blue line\n     *                     with a thickness of 30(for which the\n     *                     <code>jointStyle</code> applies), and a superimposed\n     *                     angled black line with a thickness of 1(for which no\n     *                     <code>jointStyle</code> applies): </p>\n     *\n     *                     <p><b>Note:</b> For <code>joints</code> set to\n     *                     <code>JointStyle.MITER</code>, you can use the\n     *                     <code>miterLimit</code> parameter to limit the length\n     *                     of the miter.</p>\n     * @param miterLimit  (Not supported in Flash Lite 4) A number that\n     *                     indicates the limit at which a miter is cut off. Valid\n     *                     values range from 1 to 255(and values outside that\n     *                     range are rounded to 1 or 255). This value is only\n     *                     used if the <code>jointStyle</code> is set to\n     *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n     *                     value represents the length that a miter can extend\n     *                     beyond the point at which the lines meet to form a\n     *                     joint. The value expresses a factor of the line\n     *                     <code>thickness</code>. For example, with a\n     *                     <code>miterLimit</code> factor of 2.5 and a\n     *                     <code>thickness</code> of 10 pixels, the miter is cut\n     *                     off at 25 pixels.\n     *\n     *                     <p>For example, consider the following angled lines,\n     *                     each drawn with a <code>thickness</code> of 20, but\n     *                     with <code>miterLimit</code> set to 1, 2, and 4.\n     *                     Superimposed are black reference lines showing the\n     *                     meeting points of the joints:</p>\n     *\n     *                     <p>Notice that a given <code>miterLimit</code> value\n     *                     has a specific maximum angle for which the miter is\n     *                     cut off. The following table lists some examples:</p>\n     */\n    Graphics.prototype.lineStyle = function (thickness, color, alpha, pixelHinting, scaleMode, capstyle, jointstyle, miterLimit) {\n        if (thickness === void 0) { thickness = 0; }\n        if (color === void 0) { color = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (pixelHinting === void 0) { pixelHinting = false; }\n        if (scaleMode === void 0) { scaleMode = null; }\n        if (capstyle === void 0) { capstyle = CapsStyle_1.CapsStyle.NONE; }\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.JointStyle.MITER; }\n        if (miterLimit === void 0) { miterLimit = 100; }\n        // start a new stroke path\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\n        this._active_stroke_path.style = new GraphicsStrokeStyle_1.GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miterLimit);\n        if (this._current_position.x != 0 || this._current_position.y != 0)\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n        this._queued_stroke_pathes.push(this._active_stroke_path);\n    };\n    /**\n     * Draws a line using the current line style from the current drawing\n     * position to(<code>x</code>, <code>y</code>); the current drawing position\n     * is then set to(<code>x</code>, <code>y</code>). If the display object in\n     * which you are drawing contains content that was created with the Flash\n     * drawing tools, calls to the <code>lineTo()</code> method are drawn\n     * underneath the content. If you call <code>lineTo()</code> before any calls\n     * to the <code>moveTo()</code> method, the default position for the current\n     * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n     * method fails and the current drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.lineTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.lineTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.lineTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    /**\n     * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n     * any of the parameters are missing, this method fails and the current\n     * drawing position is not changed.\n     *\n     * @param x A number that indicates the horizontal position relative to the\n     *          registration point of the parent display object(in pixels).\n     * @param y A number that indicates the vertical position relative to the\n     *          registration point of the parent display object(in pixels).\n     */\n    Graphics.prototype.moveTo = function (x, y) {\n        if (this._active_fill_path != null) {\n            this._active_fill_path.moveTo(x, y);\n        }\n        if (this._active_stroke_path != null) {\n            this._active_stroke_path.moveTo(x, y);\n        }\n        this._current_position.x = x;\n        this._current_position.y = y;\n    };\n    Graphics.assetType = \"[asset Graphics]\";\n    return Graphics;\n}(AssetBase_1.AssetBase));\nexports.Graphics = Graphics;\n\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"../draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-core/lib/errors/PartialImplementationError\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/Graphic\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nvar Graphic = (function (_super) {\n    __extends(Graphic, _super);\n    /**\n     * Creates a new Graphic object\n     */\n    function Graphic(index, parent, elements, material, style, count, offset) {\n        var _this = this;\n        if (material === void 0) { material = null; }\n        if (style === void 0) { style = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        _super.call(this);\n        this._iIndex = 0;\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\n        this._iIndex = index;\n        this.parent = parent;\n        this.elements = elements;\n        this.material = material;\n        this.style = style;\n        this.count = count;\n        this.offset = offset;\n    }\n    Object.defineProperty(Graphic.prototype, \"elements\", {\n        /**\n         * The Elements object which provides the geometry data for this Graphic.\n         */\n        get: function () {\n            return this._elements;\n        },\n        set: function (value) {\n            if (this._elements == value)\n                return;\n            this._elements = value;\n            this.invalidateElements();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Graphic.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"animator\", {\n        /**\n         *\n         */\n        get: function () {\n            return this.parent.animator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"material\", {\n        //TODO test shader picking\n        //\t\tpublic get shaderPickingDetails():boolean\n        //\t\t{\n        //\n        //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n        //\t\t}\n        /**\n         * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n         */\n        get: function () {\n            return this._material || this.parent.material;\n        },\n        set: function (value) {\n            if (this.material)\n                this.material.iRemoveOwner(this);\n            this._material = value;\n            if (this.material)\n                this.material.iAddOwner(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Graphic.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style || this.parent.style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidateSurface();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Graphic.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.parent.removeGraphic(this);\n        this.parent = null;\n        Graphic._available.push(this);\n    };\n    Graphic.prototype.invalidate = function () {\n        _super.prototype.invalidate.call(this);\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphic.prototype.invalidateElements = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\n        this._boxBoundsInvalid = true;\n        this._sphereBoundsInvalid = true;\n    };\n    Graphic.prototype.invalidateSurface = function () {\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\n    };\n    Graphic.prototype._iGetExplicitMaterial = function () {\n        return this._material;\n    };\n    Graphic.prototype._iGetExplicitStyle = function () {\n        return this._style;\n    };\n    Graphic.prototype._onInvalidateProperties = function (event) {\n        this.invalidateSurface();\n    };\n    Graphic.prototype._onInvalidateVertices = function (event) {\n        if (event.attributesView != event.target.positions)\n            return;\n        this.invalidate();\n        this.dispatchEvent(event);\n    };\n    /**\n     * //TODO\n     *\n     * @param shortestCollisionDistance\n     * @param findClosest\n     * @returns {boolean}\n     *\n     * @internal\n     */\n    Graphic.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\n        return this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset);\n    };\n    Graphic.prototype.applyTransformation = function (transform) {\n        this._elements.applyTransformation(transform, this.count, this.offset);\n    };\n    Graphic.prototype.hitTestPoint = function (x, y, z) {\n        var box;\n        //early out for box test\n        if (!(box = this.getBoxBounds()).contains(x, y, z))\n            return false;\n        return this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\n    };\n    Graphic.prototype.scale = function (scale) {\n        this._elements.scale(scale, this.count, this.offset);\n    };\n    Graphic.prototype.scaleUV = function (scaleU, scaleV) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        this._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\n    };\n    Graphic.prototype.getBoxBounds = function () {\n        if (this._boxBoundsInvalid) {\n            this._boxBoundsInvalid = false;\n            this._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box_1.Box()), this.count, this.offset);\n        }\n        return this._boxBounds;\n    };\n    Graphic.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        return this._elements.getSphereBounds(center, target, this.count, this.offset);\n    };\n    Graphic._available = new Array();\n    Graphic.assetType = \"[asset Graphic]\";\n    return Graphic;\n}(AssetBase_1.AssetBase));\nexports.Graphic = Graphic;\n\n},{\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/HitTestCache\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.base.HitTestCache\n */\nvar HitTestCache = (function () {\n    function HitTestCache() {\n        /**\n         *\n         */\n        this.cells = new Array();\n        /**\n         *\n         */\n        this.lastCollisionIndex = -1;\n    }\n    return HitTestCache;\n}());\nexports.HitTestCache = HitTestCache;\n\n},{}],\"awayjs-display/lib/graphics/LineElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Float1Attributes_1 = require(\"awayjs-core/lib/attributes/Float1Attributes\");\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\n/**\n * @class LineElements\n */\nvar LineElements = (function (_super) {\n    __extends(LineElements, _super);\n    /**\n     *\n     */\n    function LineElements(concatenatedBuffer) {\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\n        _super.call(this, concatenatedBuffer);\n        this._positions = new AttributesView_1.AttributesView(Float32Array, 6, concatenatedBuffer);\n    }\n    Object.defineProperty(LineElements.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return LineElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"thickness\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._thickness;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineElements.prototype, \"colors\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._colors)\n                this.setColors(this._colors);\n            return this._colors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LineElements.prototype.getBoxBounds = function (target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.getSphereBounds = function (center, target) {\n        if (target === void 0) { target = null; }\n        //TODO bounding calculations for lines\n        return target;\n    };\n    LineElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var positions = new Float32Array(values.length * 4);\n            var indices = new Uint16Array(values.length);\n            while (i < values.length) {\n                if (index / 6 & 1) {\n                    positions[index] = values[i + 3];\n                    positions[index + 1] = values[i + 4];\n                    positions[index + 2] = values[i + 5];\n                    positions[index + 3] = values[i];\n                    positions[index + 4] = values[i + 1];\n                    positions[index + 5] = values[i + 2];\n                }\n                else {\n                    positions[index] = values[i];\n                    positions[index + 1] = values[i + 1];\n                    positions[index + 2] = values[i + 2];\n                    positions[index + 3] = values[i + 3];\n                    positions[index + 4] = values[i + 4];\n                    positions[index + 5] = values[i + 5];\n                }\n                index += 6;\n                if (++j == 4) {\n                    var o = index / 6 - 4;\n                    indices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n                    j = 0;\n                    i += 6;\n                }\n            }\n            this._positions.set(positions, offset * 4);\n            this.setIndices(indices, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new AttributesView_1.AttributesView(Float32Array, 6, this._concatenatedBuffer);\n        }\n        this._numVertices = this._positions.count;\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    LineElements.prototype.setThickness = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values instanceof Float1Attributes_1.Float1Attributes) {\n            this._thickness = values;\n        }\n        else if (values) {\n            if (!this._thickness)\n                this._thickness = new Float1Attributes_1.Float1Attributes(this._concatenatedBuffer);\n            var i = 0;\n            var j = 0;\n            var index = 0;\n            var thickness = new Float32Array(values.length * 4);\n            while (i < values.length) {\n                thickness[index] = (Math.floor(0.5 * index + 0.5) & 1) ? -values[i] : values[i];\n                if (++j == 4) {\n                    j = 0;\n                    i++;\n                }\n                index++;\n            }\n            this._thickness.set(thickness, offset * 4);\n        }\n        else if (this._thickness) {\n            this._thickness.dispose();\n            this._thickness = null;\n        }\n        this.invalidateVertices(this._thickness);\n        this._verticesDirty[this._thickness.id] = false;\n    };\n    LineElements.prototype.setColors = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values) {\n            if (values == this._colors)\n                return;\n            if (values instanceof Byte4Attributes_1.Byte4Attributes) {\n                this.clearVertices(this._colors);\n                this._colors = values;\n            }\n            else {\n                if (!this._colors)\n                    this._colors = new Byte4Attributes_1.Byte4Attributes(this._concatenatedBuffer);\n                var i = 0;\n                var j = 0;\n                var index = 0;\n                var colors = new Uint8Array(values.length * 4);\n                while (i < values.length) {\n                    if (index / 4 & 1) {\n                        colors[index] = values[i + 4];\n                        colors[index + 1] = values[i + 5];\n                        colors[index + 2] = values[i + 6];\n                        colors[index + 3] = values[i + 7];\n                    }\n                    else {\n                        colors[index] = values[i];\n                        colors[index + 1] = values[i + 1];\n                        colors[index + 2] = values[i + 2];\n                        colors[index + 3] = values[i + 3];\n                    }\n                    if (++j == 4) {\n                        j = 0;\n                        i += 8;\n                    }\n                    index += 4;\n                }\n                this._colors.set(colors, offset * 4);\n            }\n        }\n        else {\n            //auto-derive colors\n            this._colors = ElementsUtils_1.ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n        }\n        this.invalidateVertices(this._colors);\n        this._verticesDirty[this._colors.id] = false;\n    };\n    /**\n     *\n     */\n    LineElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._positions.dispose();\n        this._positions = null;\n        this._thickness.dispose();\n        this._thickness = null;\n        this._colors.dispose();\n        this._colors = null;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    LineElements.prototype.clone = function () {\n        var clone = new LineElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        clone.setIndices(this.indices.clone());\n        clone.setPositions(this._positions.clone());\n        clone.setThickness(this._thickness.clone());\n        clone.setColors(this._colors.clone());\n        return clone;\n    };\n    LineElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\n    };\n    LineElements.assetType = \"[asset LineElements]\";\n    return LineElements;\n}(ElementsBase_1.ElementsBase));\nexports.LineElements = LineElements;\n\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float1Attributes\":undefined}],\"awayjs-display/lib/graphics/TriangleElements\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\n/**\n * @class away.base.TriangleElements\n */\nvar TriangleElements = (function (_super) {\n    __extends(TriangleElements, _super);\n    function TriangleElements() {\n        _super.apply(this, arguments);\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        this._autoDeriveNormals = true;\n        this._autoDeriveTangents = true;\n        //used for hittesting geometry\n        this.hitTestCache = new Object();\n    }\n    Object.defineProperty(TriangleElements.prototype, \"assetType\", {\n        get: function () {\n            return TriangleElements.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"useCondensedIndices\", {\n        /**\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n         * by condensing the number of joint index values required per sprite. Only applicable to\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\n         */\n        get: function () {\n            return this._useCondensedIndices;\n        },\n        set: function (value) {\n            if (this._useCondensedIndices == value)\n                return;\n            this._useCondensedIndices = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointsPerVertex\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointsPerVertex;\n        },\n        set: function (value) {\n            if (this._jointsPerVertex == value)\n                return;\n            this._jointsPerVertex = value;\n            if (this._jointIndices)\n                this._jointIndices.dimensions = this._jointsPerVertex;\n            if (this._jointWeights)\n                this._jointWeights.dimensions = this._jointsPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveNormals\", {\n        /**\n         * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveNormals;\n        },\n        set: function (value) {\n            if (this._autoDeriveNormals == value)\n                return;\n            this._autoDeriveNormals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveTangents\", {\n        /**\n         * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n         * explicitly.\n         */\n        get: function () {\n            return this._autoDeriveTangents;\n        },\n        set: function (value) {\n            if (this._autoDeriveTangents == value)\n                return;\n            this._autoDeriveTangents = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"positions\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._positions)\n                this.setPositions(new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer));\n            return this._positions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"normals\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._normals || this._verticesDirty[this._normals.id])\n                this.setNormals(this._normals);\n            return this._normals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"tangents\", {\n        /**\n         *\n         */\n        get: function () {\n            if (!this._tangents || this._verticesDirty[this._tangents.id])\n                this.setTangents(this._tangents);\n            return this._tangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceNormals\", {\n        /**\n         * The raw data of the face normals, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceNormalsDirty)\n                this.updateFaceNormals();\n            return this._faceNormals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"faceTangents\", {\n        /**\n         * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n         */\n        get: function () {\n            if (this._faceTangentsDirty)\n                this.updateFaceTangents();\n            return this._faceTangents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"uvs\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._uvs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointIndices\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"jointWeights\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._jointWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TriangleElements.prototype, \"condensedIndexLookUp\", {\n        get: function () {\n            return this._condensedIndexLookUp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TriangleElements.prototype.getBoxBounds = function (target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.getSphereBounds = function (center, target, count, offset) {\n        if (target === void 0) { target = null; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return ElementsUtils_1.ElementsUtils.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.setPositions = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._positions)\n            return;\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._positions);\n            this._positions = values;\n        }\n        else if (values) {\n            if (!this._positions)\n                this._positions = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\n            this._positions.set(values, offset);\n        }\n        else {\n            this.clearVertices(this._positions);\n            this._positions = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n        }\n        this._numVertices = this._positions.count;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n        this.invalidateVertices(this._positions);\n        this._verticesDirty[this._positions.id] = false;\n    };\n    TriangleElements.prototype.setNormals = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveNormals) {\n            if (values == this._normals)\n                return;\n            if (values instanceof Float3Attributes_1.Float3Attributes) {\n                this.clearVertices(this._normals);\n                this._normals = values;\n            }\n            else if (values) {\n                if (!this._normals)\n                    this._normals = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\n                this._normals.set(values, offset);\n            }\n            else if (this._normals) {\n                this.clearVertices(this._normals);\n                this._normals = null;\n                return;\n            }\n        }\n        else {\n            this._normals = ElementsUtils_1.ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._normals);\n        this._verticesDirty[this._normals.id] = false;\n    };\n    TriangleElements.prototype.setTangents = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (!this._autoDeriveTangents) {\n            if (values == this._tangents)\n                return;\n            if (values instanceof Float3Attributes_1.Float3Attributes) {\n                this.clearVertices(this._tangents);\n                this._tangents = values;\n            }\n            else if (values) {\n                if (!this._tangents)\n                    this._tangents = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\n                this._tangents.set(values, offset);\n            }\n            else if (this._tangents) {\n                this.clearVertices(this._tangents);\n                this._tangents = null;\n                return;\n            }\n        }\n        else {\n            this._tangents = ElementsUtils_1.ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n        }\n        this.invalidateVertices(this._tangents);\n        this._verticesDirty[this._tangents.id] = false;\n    };\n    TriangleElements.prototype.setUVs = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._uvs)\n            return;\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._uvs);\n            this._uvs = values;\n        }\n        else if (values) {\n            if (!this._uvs)\n                this._uvs = new Float2Attributes_1.Float2Attributes(this._concatenatedBuffer);\n            this._uvs.set(values, offset);\n        }\n        else if (this._uvs) {\n            this.clearVertices(this._uvs);\n            this._uvs = null;\n            return;\n        }\n        this.invalidateVertices(this._uvs);\n        this._verticesDirty[this._uvs.id] = false;\n    };\n    TriangleElements.prototype.setJointIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointIndices)\n            return;\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = values;\n        }\n        else if (values) {\n            if (!this._jointIndices)\n                this._jointIndices = new AttributesView_1.AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            if (this._useCondensedIndices) {\n                var i = 0;\n                var oldIndex;\n                var newIndex = 0;\n                var dic = new Object();\n                this._condensedIndexLookUp = new Array();\n                while (i < values.length) {\n                    oldIndex = values[i];\n                    // if we encounter a new index, assign it a new condensed index\n                    if (dic[oldIndex] == undefined) {\n                        dic[oldIndex] = newIndex;\n                        this._condensedIndexLookUp[newIndex++] = oldIndex;\n                    }\n                    //reset value to dictionary lookup\n                    values[i++] = dic[oldIndex];\n                }\n            }\n            this._jointIndices.set(values, offset);\n        }\n        else if (this._jointIndices) {\n            this.clearVertices(this._jointIndices);\n            this._jointIndices = null;\n            return;\n        }\n        this.invalidateVertices(this._jointIndices);\n        this._verticesDirty[this._jointIndices.id] = false;\n    };\n    TriangleElements.prototype.setJointWeights = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (values == this._jointWeights)\n            return;\n        if (values instanceof AttributesView_1.AttributesView) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = values;\n        }\n        else if (values) {\n            if (!this._jointWeights)\n                this._jointWeights = new AttributesView_1.AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n            this._jointWeights.set(values, offset);\n        }\n        else if (this._jointWeights) {\n            this.clearVertices(this._jointWeights);\n            this._jointWeights = null;\n            return;\n        }\n        this.invalidateVertices(this._jointWeights);\n        this._verticesDirty[this._jointWeights.id] = false;\n    };\n    /**\n     *\n     */\n    TriangleElements.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._positions) {\n            this._positions.dispose();\n            this._positions = null;\n        }\n        if (this._normals) {\n            this._normals.dispose();\n            this._normals = null;\n        }\n        if (this._tangents) {\n            this._tangents.dispose();\n            this._tangents = null;\n        }\n        if (this._uvs) {\n            this._uvs.dispose();\n            this._uvs = null;\n        }\n        if (this._jointIndices) {\n            this._jointIndices.dispose();\n            this._jointIndices = null;\n        }\n        if (this._jointWeights) {\n            this._jointWeights.dispose();\n            this._jointWeights = null;\n        }\n        if (this._faceNormals) {\n            this._faceNormals.dispose();\n            this._faceNormals = null;\n        }\n        if (this._faceTangents) {\n            this._faceTangents.dispose();\n            this._faceTangents = null;\n        }\n    };\n    TriangleElements.prototype.setIndices = function (values, offset) {\n        if (offset === void 0) { offset = 0; }\n        _super.prototype.setIndices.call(this, values, offset);\n        this._faceNormalsDirty = true;\n        this._faceTangentsDirty = true;\n        if (this._autoDeriveNormals)\n            this.invalidateVertices(this._normals);\n        if (this._autoDeriveTangents)\n            this.invalidateVertices(this._tangents);\n    };\n    TriangleElements.prototype.copyTo = function (elements) {\n        _super.prototype.copyTo.call(this, elements);\n        //temp disable auto derives\n        var autoDeriveNormals = this._autoDeriveNormals;\n        var autoDeriveTangents = this._autoDeriveTangents;\n        elements.autoDeriveNormals = this._autoDeriveNormals = false;\n        elements.autoDeriveTangents = this._autoDeriveTangents = false;\n        elements.setPositions(this.positions.clone());\n        if (this.normals)\n            elements.setNormals(this.normals.clone());\n        if (this.tangents)\n            elements.setTangents(this.tangents.clone());\n        if (this.uvs)\n            elements.setUVs(this.uvs.clone());\n        elements.jointsPerVertex = this._jointsPerVertex;\n        if (this.jointIndices)\n            elements.setJointIndices(this.jointIndices.clone());\n        if (this.jointWeights)\n            elements.setJointWeights(this.jointWeights.clone());\n        //return auto derives to cloned values\n        elements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\n        elements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\n    };\n    /**\n     * Clones the current object\n     * @return An exact duplicate of the current object.\n     */\n    TriangleElements.prototype.clone = function () {\n        var clone = new TriangleElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\n        this.copyTo(clone);\n        return clone;\n    };\n    TriangleElements.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\n        if (scaleU === void 0) { scaleU = 1; }\n        if (scaleV === void 0) { scaleV = 1; }\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        if (this.uvs)\n            ElementsUtils_1.ElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, count || this._numVertices, offset);\n    };\n    /**\n     * Scales the geometry.\n     * @param scale The amount by which to scale.\n     */\n    TriangleElements.prototype.scale = function (scale, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        ElementsUtils_1.ElementsUtils.scale(scale, this.positions, count || this._numVertices, offset);\n    };\n    TriangleElements.prototype.applyTransformation = function (transform, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        ElementsUtils_1.ElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\n    };\n    /**\n     * Updates the tangents for each face.\n     */\n    TriangleElements.prototype.updateFaceTangents = function () {\n        this._faceTangents = ElementsUtils_1.ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n        this._faceTangentsDirty = false;\n    };\n    /**\n     * Updates the normals for each face.\n     */\n    TriangleElements.prototype.updateFaceNormals = function () {\n        this._faceNormals = ElementsUtils_1.ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n        this._faceNormalsDirty = false;\n    };\n    TriangleElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\n        if (count === void 0) { count = 0; }\n        if (offset === void 0) { offset = 0; }\n        return pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\n    };\n    TriangleElements.assetType = \"[asset TriangleElements]\";\n    return TriangleElements;\n}(ElementsBase_1.ElementsBase));\nexports.TriangleElements = TriangleElements;\n\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined}],\"awayjs-display/lib/graphics\":[function(require,module,exports){\n\"use strict\";\nvar ElementsBase_1 = require(\"./graphics/ElementsBase\");\nexports.ElementsBase = ElementsBase_1.ElementsBase;\nvar ElementsType_1 = require(\"./graphics/ElementsType\");\nexports.ElementsType = ElementsType_1.ElementsType;\nvar Graphic_1 = require(\"./graphics/Graphic\");\nexports.Graphic = Graphic_1.Graphic;\nvar Graphics_1 = require(\"./graphics/Graphics\");\nexports.Graphics = Graphics_1.Graphics;\nvar LineElements_1 = require(\"./graphics/LineElements\");\nexports.LineElements = LineElements_1.LineElements;\nvar TriangleElements_1 = require(\"./graphics/TriangleElements\");\nexports.TriangleElements = TriangleElements_1.TriangleElements;\n\n},{\"./graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"./graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"./graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"./graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"./graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"./graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\"}],\"awayjs-display/lib/managers/DefaultMaterialManager\":[function(require,module,exports){\n\"use strict\";\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nvar LineElements_1 = require(\"../graphics/LineElements\");\nvar Skybox_1 = require(\"../display/Skybox\");\nvar BasicMaterial_1 = require(\"../materials/BasicMaterial\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\nvar Graphic_1 = require(\"../graphics/Graphic\");\nvar DefaultMaterialManager = (function () {\n    function DefaultMaterialManager() {\n    }\n    DefaultMaterialManager.getDefaultMaterial = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Graphic_1.Graphic) && renderable.elements.isAsset(LineElements_1.LineElements)) {\n            if (!DefaultMaterialManager._defaultColorMaterial)\n                DefaultMaterialManager.createDefaultColorMaterial();\n            return DefaultMaterialManager._defaultColorMaterial;\n        }\n        if (renderable != null && renderable.isAsset(Skybox_1.Skybox)) {\n            if (!DefaultMaterialManager._defaultCubeTextureMaterial)\n                DefaultMaterialManager.createDefaultCubeTextureMaterial();\n            return DefaultMaterialManager._defaultCubeTextureMaterial;\n        }\n        if (!DefaultMaterialManager._defaultTextureMaterial)\n            DefaultMaterialManager.createDefaultTextureMaterial();\n        return DefaultMaterialManager._defaultTextureMaterial;\n    };\n    DefaultMaterialManager.getDefaultTexture = function (renderable) {\n        if (renderable === void 0) { renderable = null; }\n        if (renderable != null && renderable.isAsset(Skybox_1.Skybox)) {\n            if (!DefaultMaterialManager._defaultCubeTexture)\n                DefaultMaterialManager.createDefaultCubeTexture();\n            return DefaultMaterialManager._defaultCubeTexture;\n        }\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        return DefaultMaterialManager._defaultTexture;\n    };\n    DefaultMaterialManager.getDefaultImage2D = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        return DefaultMaterialManager._defaultBitmapImage2D;\n    };\n    DefaultMaterialManager.getDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImageCube)\n            DefaultMaterialManager.createDefaultImageCube();\n        return DefaultMaterialManager._defaultBitmapImageCube;\n    };\n    DefaultMaterialManager.getDefaultSampler = function () {\n        if (!DefaultMaterialManager._defaultSampler2D)\n            DefaultMaterialManager.createDefaultSampler2D();\n        return DefaultMaterialManager._defaultSampler2D;\n    };\n    DefaultMaterialManager.createDefaultTexture = function () {\n        DefaultMaterialManager._defaultTexture = new Single2DTexture_1.Single2DTexture();\n        DefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n    };\n    DefaultMaterialManager.createDefaultCubeTexture = function () {\n        DefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture_1.SingleCubeTexture();\n        DefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n    };\n    DefaultMaterialManager.createDefaultImageCube = function () {\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\n            DefaultMaterialManager.createDefaultImage2D();\n        var b = new BitmapImageCube_1.BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n        for (var i = 0; i < 6; i++)\n            b.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n        DefaultMaterialManager._defaultBitmapImageCube = b;\n    };\n    DefaultMaterialManager.createDefaultImage2D = function () {\n        var b = new BitmapImage2D_1.BitmapImage2D(8, 8, false, 0x000000);\n        //create chekerboard\n        var i, j;\n        for (i = 0; i < 8; i++)\n            for (j = 0; j < 8; j++)\n                if ((j & 1) ^ (i & 1))\n                    b.setPixel(i, j, 0XFFFFFF);\n        DefaultMaterialManager._defaultBitmapImage2D = b;\n    };\n    DefaultMaterialManager.createDefaultTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultTexture)\n            DefaultMaterialManager.createDefaultTexture();\n        DefaultMaterialManager._defaultTextureMaterial = new BasicMaterial_1.BasicMaterial();\n        DefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n        DefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultCubeTextureMaterial = function () {\n        if (!DefaultMaterialManager._defaultCubeTexture)\n            DefaultMaterialManager.createDefaultCubeTexture();\n        DefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial_1.BasicMaterial();\n        DefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n        DefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n    };\n    DefaultMaterialManager.createDefaultColorMaterial = function () {\n        DefaultMaterialManager._defaultColorMaterial = new BasicMaterial_1.BasicMaterial(0xFFFFFF);\n        DefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n    };\n    DefaultMaterialManager.createDefaultSampler2D = function () {\n        DefaultMaterialManager._defaultSampler2D = new Sampler2D_1.Sampler2D();\n    };\n    return DefaultMaterialManager;\n}());\nexports.DefaultMaterialManager = DefaultMaterialManager;\n\n},{\"../display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/image/BitmapImageCube\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/managers/FrameScriptManager\":[function(require,module,exports){\n\"use strict\";\nvar FrameScriptManager = (function () {\n    function FrameScriptManager() {\n    }\n    FrameScriptManager.setInterval = function (func) {\n        this._intervalID++;\n        this._active_intervals[this._intervalID] = func;\n        return this._intervalID;\n    };\n    FrameScriptManager.clearInterval = function (id) {\n        delete this._active_intervals[id];\n    };\n    FrameScriptManager.execute_intervals = function () {\n        for (var key in this._active_intervals) {\n            this._active_intervals[key].call();\n        }\n    };\n    FrameScriptManager.add_child_to_dispose = function (child) {\n        this._queued_dispose.push(child);\n    };\n    FrameScriptManager.add_script_to_queue = function (mc, script) {\n        // whenever we queue scripts of new objects, we first inject the lists of pass2\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        this._queued_mcs.push(mc);\n        this._queued_scripts.push(script);\n    };\n    FrameScriptManager.add_script_to_queue_pass2 = function (mc, script) {\n        this._queued_mcs_pass2.push(mc);\n        this._queued_scripts_pass2.push(script);\n    };\n    FrameScriptManager.execute_queue = function () {\n        if (this._queued_mcs.length == 0 && this._queued_mcs_pass2.length == 0)\n            return;\n        var i = this._queued_mcs_pass2.length;\n        while (i--) {\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\n        }\n        this._queued_mcs_pass2.length = 0;\n        this._queued_scripts_pass2.length = 0;\n        var mc;\n        for (i = 0; i < this._queued_mcs.length; i++) {\n            // during the loop we might add more scripts to the queue\n            mc = this._queued_mcs[i];\n            if (mc.scene != null) {\n                var caller = mc.adapter ? mc.adapter : mc;\n                //\ttry {\n                this._queued_scripts[i].call(caller);\n            }\n        }\n        // all scripts executed. clear all\n        this._queued_mcs.length = 0;\n        this._queued_scripts.length = 0;\n    };\n    FrameScriptManager.execute_dispose = function () {\n        var len = this._queued_dispose.length;\n        for (var i = 0; i < len; i++)\n            this._queued_dispose[i].dispose();\n        this._queued_dispose.length = 0;\n    };\n    // FrameScript debugging:\n    // the first line of a FrameScript should be a comment that represents the functions unique name\n    // the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n    // this object can be set as \"frameScriptDebug\" in order to enable debug mode\n    FrameScriptManager.frameScriptDebug = undefined;\n    //queue of objects for disposal\n    FrameScriptManager._queued_dispose = new Array();\n    // queues pass1 of scripts.\n    FrameScriptManager._queued_mcs = [];\n    FrameScriptManager._queued_scripts = [];\n    // queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n    FrameScriptManager._queued_mcs_pass2 = [];\n    FrameScriptManager._queued_scripts_pass2 = [];\n    FrameScriptManager._active_intervals = new Object(); // maps id to function\n    FrameScriptManager._intervalID = 0;\n    return FrameScriptManager;\n}());\nexports.FrameScriptManager = FrameScriptManager;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FrameScriptManager;\n\n},{}],\"awayjs-display/lib/managers/MouseManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchPoint_1 = require(\"../base/TouchPoint\");\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nvar MouseManager = (function () {\n    /**\n     * Creates a new <code>MouseManager</code> object.\n     */\n    function MouseManager() {\n        var _this = this;\n        this._viewLookup = new Array();\n        this._nullVector = new Vector3D_1.Vector3D();\n        this._queuedEvents = new Array();\n        this._mouseUp = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_UP);\n        this._mouseClick = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.CLICK);\n        this._mouseOut = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_OUT);\n        this._mouseDown = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_DOWN);\n        this._mouseMove = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_MOVE);\n        this._mouseOver = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_OVER);\n        this._mouseWheel = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_WHEEL);\n        this._mouseDoubleClick = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.DOUBLE_CLICK);\n        this.onClickDelegate = function (event) { return _this.onClick(event); };\n        this.onDoubleClickDelegate = function (event) { return _this.onDoubleClick(event); };\n        this.onMouseDownDelegate = function (event) { return _this.onMouseDown(event); };\n        this.onMouseMoveDelegate = function (event) { return _this.onMouseMove(event); };\n        this.onMouseUpDelegate = function (event) { return _this.onMouseUp(event); };\n        this.onMouseWheelDelegate = function (event) { return _this.onMouseWheel(event); };\n        this.onMouseOverDelegate = function (event) { return _this.onMouseOver(event); };\n        this.onMouseOutDelegate = function (event) { return _this.onMouseOut(event); };\n    }\n    MouseManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new MouseManager());\n    };\n    MouseManager.prototype.fireMouseEvents = function (forceMouseMove) {\n        // If colliding object has changed, queue over/out events.\n        if (this._iCollision != this._previousCollidingObject) {\n            if (this._previousCollidingObject)\n                this.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n            if (this._iCollision)\n                this.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n        }\n        // Fire mouse move events here if forceMouseMove is on.\n        if (forceMouseMove && this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent);\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (var i = 0; i < len; ++i) {\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            // bubble event up the heirarchy until the top level parent is reached\n            while (dispatcher) {\n                if (dispatcher._iIsMouseEnabled())\n                    dispatcher.dispatchEvent(event);\n                dispatcher = dispatcher.parent;\n            }\n            // not totally sure, but i think just calling it is easier and cheaper than any options for that\n            // if nothing is queued, the function will return directly anyway\n            FrameScriptManager_1.FrameScriptManager.execute_queue();\n        }\n        this._queuedEvents.length = 0;\n        this._previousCollidingObject = this._iCollision;\n        this._iUpdateDirty = false;\n    };\n    //\t\tpublic addViewLayer(view:View)\n    //\t\t{\n    //\t\t\tvar stg:Stage = view.stage;\n    //\n    //\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n    //\t\t\tif (!view.stageGL.mouse3DManager)\n    //\t\t\t\tview.stageGL.mouse3DManager = this;\n    //\n    //\t\t\tif (!hasKey(view))\n    //\t\t\t\t_view3Ds[view] = 0;\n    //\n    //\t\t\t_childDepth = 0;\n    //\t\t\ttraverseDisplayObjects(stg);\n    //\t\t\t_viewCount = _childDepth;\n    //\t\t}\n    MouseManager.prototype.registerView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.push(view);\n        }\n    };\n    MouseManager.prototype.unregisterView = function (view) {\n        if (view && view.htmlElement) {\n            view.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n            view.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n            view.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n            view.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n            view.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n            view.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n            view.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n            view.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n            this._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.queueDispatch = function (event, sourceEvent, collision) {\n        if (collision === void 0) { collision = null; }\n        // 2D properties.\n        if (sourceEvent) {\n            event.ctrlKey = sourceEvent.ctrlKey;\n            event.altKey = sourceEvent.altKey;\n            event.shiftKey = sourceEvent.shiftKey;\n            event.screenX = (sourceEvent.clientX != null) ? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n            event.screenY = (sourceEvent.clientY != null) ? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n        }\n        if (collision == null)\n            collision = this._iCollision;\n        // 3D properties.\n        if (collision) {\n            // Object.\n            event.entity = collision.entity;\n            event.renderable = collision.renderable;\n            // UV.\n            event.uv = collision.uv;\n            // Position.\n            event.position = collision.position ? collision.position.clone() : null;\n            // Normal.\n            event.normal = collision.normal ? collision.normal.clone() : null;\n            // Face index.\n            event.elementIndex = collision.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Listeners.\n    // ---------------------------------------------------------------------\n    MouseManager.prototype.onMouseMove = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n    };\n    MouseManager.prototype.onMouseOut = function (event) {\n        this._iActiveDiv = null;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOut, event);\n    };\n    MouseManager.prototype.onMouseOver = function (event) {\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseOver, event);\n    };\n    MouseManager.prototype.onClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseClick, event);\n    };\n    MouseManager.prototype.onDoubleClick = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDoubleClick, event);\n    };\n    MouseManager.prototype.onMouseDown = function (event) {\n        event.preventDefault();\n        this._iActiveDiv = event.target;\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseDown, event);\n    };\n    MouseManager.prototype.onMouseUp = function (event) {\n        event.preventDefault();\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseUp, event);\n    };\n    MouseManager.prototype.onMouseWheel = function (event) {\n        this.updateColliders(event);\n        if (this._iCollision)\n            this.queueDispatch(this._mouseWheel, event);\n    };\n    MouseManager.prototype.updateColliders = function (event) {\n        var view;\n        var bounds;\n        var mouseX = (event.clientX != null) ? event.clientX : event.changedTouches[0].clientX;\n        var mouseY = (event.clientY != null) ? event.clientY : event.changedTouches[0].clientY;\n        var len = this._viewLookup.length;\n        for (var i = 0; i < len; i++) {\n            view = this._viewLookup[i];\n            view._pTouchPoints.length = 0;\n            bounds = view.htmlElement.getBoundingClientRect();\n            if (event.touches) {\n                var touch;\n                var len = event.touches.length;\n                for (var i = 0; i < len; i++) {\n                    touch = event.touches[i];\n                    view._pTouchPoints.push(new TouchPoint_1.TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n                }\n            }\n            if (this._iUpdateDirty)\n                continue;\n            if (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n                view._pMouseX = null;\n                view._pMouseY = null;\n            }\n            else {\n                view._pMouseX = mouseX + bounds.left;\n                view._pMouseY = mouseY + bounds.top;\n                view.updateCollider();\n                if (view.layeredView && this._iCollision)\n                    break;\n            }\n        }\n        this._iUpdateDirty = true;\n    };\n    return MouseManager;\n}());\nexports.MouseManager = MouseManager;\n\n},{\"../base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers/TouchManager\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar TouchEvent_1 = require(\"../events/TouchEvent\");\nvar TouchManager = (function () {\n    function TouchManager() {\n        var _this = this;\n        this._updateDirty = true;\n        this._nullVector = new Vector3D_1.Vector3D();\n        this._queuedEvents = new Array();\n        this._touchOut = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_OUT);\n        this._touchBegin = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_BEGIN);\n        this._touchMove = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_MOVE);\n        this._touchEnd = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_END);\n        this._touchOver = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_OVER);\n        this._touchPoints = new Array();\n        this._touchPointFromId = new Object();\n        TouchManager._iCollisionFromTouchId = new Object();\n        TouchManager._previousCollidingObjectFromTouchId = new Object();\n        this.onTouchBeginDelegate = function (event) { return _this.onTouchBegin(event); };\n        this.onTouchMoveDelegate = function (event) { return _this.onTouchMove(event); };\n        this.onTouchEndDelegate = function (event) { return _this.onTouchEnd(event); };\n    }\n    TouchManager.getInstance = function () {\n        if (this._instance)\n            return this._instance;\n        return (this._instance = new TouchManager());\n    };\n    // ---------------------------------------------------------------------\n    // Interface.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.updateCollider = function (forceTouchMove) {\n        //if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n        //\tfor (var i:number; i < this._numTouchPoints; ++i) {\n        //\t\tthis._touchPoint = this._touchPoints[ i ];\n        //\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n        //\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n        //\t}\n        //}\n    };\n    TouchManager.prototype.fireTouchEvents = function (forceTouchMove) {\n        var i;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            // If colliding object has changed, queue over/out events.\n            this._iCollision = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n            this._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id];\n            if (this._iCollision != this._previousCollidingObject) {\n                if (this._previousCollidingObject)\n                    this.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n                if (this._iCollision)\n                    this.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n            }\n            // Fire Touch move events here if forceTouchMove is on.\n            if (forceTouchMove && this._iCollision)\n                this.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n        }\n        var event;\n        var dispatcher;\n        // Dispatch all queued events.\n        var len = this._queuedEvents.length;\n        for (i = 0; i < len; ++i) {\n            // Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n            event = this._queuedEvents[i];\n            dispatcher = event.entity;\n            while (dispatcher && !dispatcher._iIsMouseEnabled())\n                dispatcher = dispatcher.parent;\n            if (dispatcher)\n                dispatcher.dispatchEvent(event);\n        }\n        this._queuedEvents.length = 0;\n        this._updateDirty = false;\n        for (i = 0; i < this._numTouchPoints; ++i) {\n            this._touchPoint = this._touchPoints[i];\n            TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id] = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\n        }\n    };\n    TouchManager.prototype.registerView = function (view) {\n        view.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    TouchManager.prototype.unregisterView = function (view) {\n        view.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n        view.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n        view.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n    };\n    // ---------------------------------------------------------------------\n    // Private.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.queueDispatch = function (event, sourceEvent, collider, touch) {\n        // 2D properties.\n        event.ctrlKey = sourceEvent.ctrlKey;\n        event.altKey = sourceEvent.altKey;\n        event.shiftKey = sourceEvent.shiftKey;\n        event.screenX = touch.x;\n        event.screenY = touch.y;\n        event.touchPointID = touch.id;\n        // 3D properties.\n        if (collider) {\n            // Object.\n            event.entity = collider.entity;\n            event.renderable = collider.renderable;\n            // UV.\n            event.uv = collider.uv;\n            // Position.\n            event.position = collider.position ? collider.position.clone() : null;\n            // Normal.\n            event.normal = collider.normal ? collider.normal.clone() : null;\n            // ElementsIndex.\n            event.elementIndex = collider.elementIndex;\n        }\n        else {\n            // Set all to null.\n            event.uv = null;\n            event.entity = null;\n            event.position = this._nullVector;\n            event.normal = this._nullVector;\n            event.elementIndex = 0;\n        }\n        // Store event to be dispatched later.\n        this._queuedEvents.push(event);\n    };\n    // ---------------------------------------------------------------------\n    // Event handlers.\n    // ---------------------------------------------------------------------\n    TouchManager.prototype.onTouchBegin = function (event) {\n        var touch = new TouchPoint();\n        //touch.id = event.touchPointID;\n        //touch.x = event.stageX;\n        //touch.y = event.stageY;\n        this._numTouchPoints++;\n        this._touchPoints.push(touch);\n        this._touchPointFromId[touch.id] = touch;\n        //this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n        this._iCollision = TouchManager._iCollisionFromTouchId[touch.id];\n        if (this._iCollision)\n            this.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n        this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchMove = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        ////touch.x = event.stageX;\n        ////touch.y = event.stageY;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n        //\n        //this._updateDirty = true;\n    };\n    TouchManager.prototype.onTouchEnd = function (event) {\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n        //\n        //if (!touch) return;\n        //\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n        //if (this._iCollision)\n        //\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n        //\n        //this._touchPointFromId[ touch.id ] = null;\n        //this._numTouchPoints--;\n        //this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n        //\n        //this._updateDirty = true;\n    };\n    return TouchManager;\n}());\nexports.TouchManager = TouchManager;\nvar TouchPoint = (function () {\n    function TouchPoint() {\n    }\n    return TouchPoint;\n}());\n\n},{\"../events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar DefaultMaterialManager_1 = require(\"./managers/DefaultMaterialManager\");\nexports.DefaultMaterialManager = DefaultMaterialManager_1.DefaultMaterialManager;\nvar FrameScriptManager_1 = require(\"./managers/FrameScriptManager\");\nexports.FrameScriptManager = FrameScriptManager_1.FrameScriptManager;\nvar MouseManager_1 = require(\"./managers/MouseManager\");\nexports.MouseManager = MouseManager_1.MouseManager;\nvar TouchManager_1 = require(\"./managers/TouchManager\");\nexports.TouchManager = TouchManager_1.TouchManager;\n\n},{\"./managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"./managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./managers/TouchManager\":\"awayjs-display/lib/managers/TouchManager\"}],\"awayjs-display/lib/materials/BasicMaterial\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar MaterialBase_1 = require(\"../materials/MaterialBase\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nvar BasicMaterial = (function (_super) {\n    __extends(BasicMaterial, _super);\n    function BasicMaterial(imageColor, alpha) {\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this, imageColor, alpha);\n        this._preserveAlpha = false;\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D_1.Image2D)\n            this.texture = new Single2DTexture_1.Single2DTexture();\n    }\n    Object.defineProperty(BasicMaterial.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return BasicMaterial.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"preserveAlpha\", {\n        /**\n         * Indicates whether alpha should be preserved - defaults to false\n         */\n        get: function () {\n            return this._preserveAlpha;\n        },\n        set: function (value) {\n            if (this._preserveAlpha == value)\n                return;\n            this._preserveAlpha = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BasicMaterial.prototype, \"texture\", {\n        /**\n         * The texture object to use for the albedo colour.\n         */\n        get: function () {\n            return this._texture;\n        },\n        set: function (value) {\n            if (this._texture == value)\n                return;\n            if (this._texture)\n                this.removeTexture(this._texture);\n            this._texture = value;\n            if (this._texture)\n                this.addTexture(this._texture);\n            this.invalidateTexture();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BasicMaterial.assetType = \"[materials BasicMaterial]\";\n    return BasicMaterial;\n}(MaterialBase_1.MaterialBase));\nexports.BasicMaterial = BasicMaterial;\n\n},{\"../materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined}],\"awayjs-display/lib/materials/LightSources\":[function(require,module,exports){\n\"use strict\";\n/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nvar LightSources = (function () {\n    function LightSources() {\n    }\n    /**\n     * Defines normal lights are to be used as the source for the lighting\n     * component.\n     */\n    LightSources.LIGHTS = 0x01;\n    /**\n     * Defines that global lighting probes are to be used as the source for the\n     * lighting component.\n     */\n    LightSources.PROBES = 0x02;\n    /**\n     * Defines that both normal and global lighting probes  are to be used as the\n     * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n     */\n    LightSources.ALL = 0x03;\n    return LightSources;\n}());\nexports.LightSources = LightSources;\n\n},{}],\"awayjs-display/lib/materials/MaterialBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\nvar Style_1 = require(\"../base/Style\");\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nvar MaterialBase = (function (_super) {\n    __extends(MaterialBase, _super);\n    function MaterialBase(imageColor, alpha) {\n        var _this = this;\n        if (imageColor === void 0) { imageColor = null; }\n        if (alpha === void 0) { alpha = 1; }\n        _super.call(this);\n        this._textures = new Array();\n        this._pUseColorTransform = false;\n        this._alphaBlending = false;\n        this._alpha = 1;\n        this._pAlphaThreshold = 0;\n        this._pAnimateUVs = false;\n        this._enableLightFallOff = true;\n        this._specularLightSources = 0x01;\n        this._diffuseLightSources = 0x03;\n        this._style = new Style_1.Style();\n        this._iBaseScreenPassIndex = 0;\n        this._bothSides = false; // update\n        /**\n         * A list of material owners, renderables or custom Entities.\n         */\n        this._owners = new Array();\n        this._pBlendMode = BlendMode_1.BlendMode.NORMAL;\n        this._imageRect = false;\n        this._curves = false;\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\n        this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n        if (imageColor instanceof ImageBase_1.ImageBase)\n            this._style.image = imageColor;\n        else if (imageColor)\n            this._style.color = Number(imageColor);\n        this.alpha = alpha;\n        this._onLightChangeDelegate = function (event) { return _this.onLightsChange(event); };\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\n        this.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n    }\n    Object.defineProperty(MaterialBase.prototype, \"alpha\", {\n        /**\n         * The alpha of the surface.\n         */\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            if (this._alpha == value)\n                return;\n            this._alpha = value;\n            if (this._colorTransform == null)\n                this._colorTransform = new ColorTransform_1.ColorTransform();\n            this._colorTransform.alphaMultiplier = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"colorTransform\", {\n        /**\n         * The ColorTransform object to transform the colour of the material with. Defaults to null.\n         */\n        get: function () {\n            return this._colorTransform;\n        },\n        set: function (value) {\n            this._colorTransform = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaBlending\", {\n        /**\n         * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n         * example when using textures of foliage, consider using alphaThreshold instead.\n         */\n        get: function () {\n            return this._alphaBlending;\n        },\n        set: function (value) {\n            if (this._alphaBlending == value)\n                return;\n            this._alphaBlending = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animationSet\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._animationSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"lightPicker\", {\n        /**\n         * The light picker used by the material to provide lights to the material if it supports lighting.\n         *\n         * @see LightPickerBase\n         * @see StaticLightPicker\n         */\n        get: function () {\n            return this._pLightPicker;\n        },\n        set: function (value) {\n            if (this._pLightPicker == value)\n                return;\n            if (this._pLightPicker)\n                this._pLightPicker.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n            this._pLightPicker = value;\n            if (this._pLightPicker)\n                this._pLightPicker.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"curves\", {\n        /**\n         * Indicates whether material should use curves. Defaults to false.\n         */\n        get: function () {\n            return this._curves;\n        },\n        set: function (value) {\n            if (this._curves == value)\n                return;\n            this._curves = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"imageRect\", {\n        /**\n         * Indicates whether or not any used textures should use an atlas. Defaults to false.\n         */\n        get: function () {\n            return this._imageRect;\n        },\n        set: function (value) {\n            if (this._imageRect == value)\n                return;\n            this._imageRect = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"style\", {\n        /**\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            if (this._style == value)\n                return;\n            if (this._style)\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this._style = value;\n            if (this._style)\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"animateUVs\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pAnimateUVs;\n        },\n        set: function (value) {\n            if (this._pAnimateUVs == value)\n                return;\n            this._pAnimateUVs = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"useColorTransform\", {\n        /**\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n         */\n        get: function () {\n            return this._pUseColorTransform;\n        },\n        set: function (value) {\n            if (this._pUseColorTransform == value)\n                return;\n            this._pUseColorTransform = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"enableLightFallOff\", {\n        /**\n         * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n         * compatibility for constrained mode.\n         */\n        get: function () {\n            return this._enableLightFallOff;\n        },\n        set: function (value) {\n            if (this._enableLightFallOff == value)\n                return;\n            this._enableLightFallOff = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"diffuseLightSources\", {\n        /**\n         * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n         * and/or light probes for diffuse reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._diffuseLightSources;\n        },\n        set: function (value) {\n            if (this._diffuseLightSources == value)\n                return;\n            this._diffuseLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"specularLightSources\", {\n        /**\n         * Define which light source types to use for specular reflections. This allows choosing between regular lights\n         * and/or light probes for specular reflections.\n         *\n         * @see away3d.materials.LightSources\n         */\n        get: function () {\n            return this._specularLightSources;\n        },\n        set: function (value) {\n            if (this._specularLightSources == value)\n                return;\n            this._specularLightSources = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"bothSides\", {\n        /**\n         * Defines whether or not the material should cull triangles facing away from the camera.\n         */\n        get: function () {\n            return this._bothSides;\n        },\n        set: function (value) {\n            if (this._bothSides = value)\n                return;\n            this._bothSides = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"blendMode\", {\n        /**\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\n         * <ul>\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n         * <li>BlendMode.MULTIPLY</li>\n         * <li>BlendMode.ADD</li>\n         * <li>BlendMode.ALPHA</li>\n         * </ul>\n         */\n        get: function () {\n            return this._pBlendMode;\n        },\n        set: function (value) {\n            if (this._pBlendMode == value)\n                return;\n            this._pBlendMode = value;\n            this.invalidate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaPremultiplied\", {\n        /**\n         * Indicates whether visible textures (or other pixels) used by this material have\n         * already been premultiplied. Toggle this if you are seeing black halos around your\n         * blended alpha edges.\n         */\n        get: function () {\n            return this._alphaPremultiplied;\n        },\n        set: function (value) {\n            if (this._alphaPremultiplied == value)\n                return;\n            this._alphaPremultiplied = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MaterialBase.prototype, \"alphaThreshold\", {\n        /**\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n         * invisible or entirely opaque, often used with textures for foliage, etc.\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n         */\n        get: function () {\n            return this._pAlphaThreshold;\n        },\n        set: function (value) {\n            if (value < 0)\n                value = 0;\n            else if (value > 1)\n                value = 1;\n            if (this._pAlphaThreshold == value)\n                return;\n            this._pAlphaThreshold = value;\n            this.invalidatePasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //\n    // MATERIAL MANAGEMENT\n    //\n    /**\n     * Mark an IRenderable as owner of this material.\n     * Assures we're not using the same material across renderables with different animations, since the\n     * Programs depend on animation. This method needs to be called when a material is assigned.\n     *\n     * @param owner The IRenderable that had this material assigned\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iAddOwner = function (owner) {\n        this._owners.push(owner);\n        var animationSet;\n        var animator = owner.animator;\n        if (animator)\n            animationSet = animator.animationSet;\n        if (owner.animator) {\n            if (this._animationSet && animationSet != this._animationSet) {\n                throw new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n            }\n            else {\n                if (this._animationSet != animationSet) {\n                    this._animationSet = animationSet;\n                    this.invalidateAnimation();\n                }\n            }\n        }\n        owner.invalidateSurface();\n    };\n    /**\n     * Removes an IRenderable as owner.\n     * @param owner\n     *\n     * @internal\n     */\n    MaterialBase.prototype.iRemoveOwner = function (owner) {\n        this._owners.splice(this._owners.indexOf(owner), 1);\n        if (this._owners.length == 0) {\n            this._animationSet = null;\n            this.invalidateAnimation();\n        }\n        owner.invalidateSurface();\n    };\n    Object.defineProperty(MaterialBase.prototype, \"iOwners\", {\n        /**\n         * A list of the IRenderables that use this material\n         *\n         * @private\n         */\n        get: function () {\n            return this._owners;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MaterialBase.prototype.getNumTextures = function () {\n        return this._textures.length;\n    };\n    MaterialBase.prototype.getTextureAt = function (index) {\n        return this._textures[index];\n    };\n    /**\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n     *\n     * @private\n     */\n    MaterialBase.prototype.invalidatePasses = function () {\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_PASSES, this));\n    };\n    MaterialBase.prototype.invalidateAnimation = function () {\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_ANIMATION, this));\n    };\n    MaterialBase.prototype.invalidateSurfaces = function () {\n        var len = this._owners.length;\n        for (var i = 0; i < len; i++)\n            this._owners[i].invalidateSurface();\n    };\n    /**\n     * Called when the light picker's configuration changed.\n     */\n    MaterialBase.prototype.onLightsChange = function (event) {\n        this.invalidate();\n    };\n    MaterialBase.prototype.invalidateTexture = function () {\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this));\n    };\n    MaterialBase.prototype.addTextureAt = function (texture, index) {\n        var i = this._textures.indexOf(texture);\n        if (i == index)\n            return;\n        else if (i != -1)\n            this._textures.splice(i, 1);\n        this._textures.splice(index, 0, texture);\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.addTexture = function (texture) {\n        if (this._textures.indexOf(texture) != -1)\n            return;\n        this._textures.push(texture);\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.removeTexture = function (texture) {\n        this._textures.splice(this._textures.indexOf(texture), 1);\n        texture.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n        this.onTextureInvalidate();\n    };\n    MaterialBase.prototype.onTextureInvalidate = function (event) {\n        if (event === void 0) { event = null; }\n        this.invalidatePasses();\n        //invalidate renderables for number of images getter (in case it has changed)\n        this.invalidateSurfaces();\n    };\n    MaterialBase.prototype._onInvalidateProperties = function (event) {\n        this.invalidatePasses();\n    };\n    return MaterialBase;\n}(AssetBase_1.AssetBase));\nexports.MaterialBase = MaterialBase;\n\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-core/lib/image/ImageBase\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nvar LightPickerBase = (function (_super) {\n    __extends(LightPickerBase, _super);\n    /**\n     * Creates a new LightPickerBase object.\n     */\n    function LightPickerBase() {\n        _super.call(this);\n        this._pNumPointLights = 0;\n        this._pNumDirectionalLights = 0;\n        this._pNumCastingPointLights = 0;\n        this._pNumCastingDirectionalLights = 0;\n        this._pNumLightProbes = 0;\n    }\n    /**\n     * Disposes resources used by the light picker.\n     */\n    LightPickerBase.prototype.dispose = function () {\n    };\n    Object.defineProperty(LightPickerBase.prototype, \"assetType\", {\n        /**\n         * @inheritDoc\n         */\n        get: function () {\n            return LightPickerBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that will be provided.\n         */\n        get: function () {\n            return this._pNumDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numPointLights\", {\n        /**\n         * The maximum amount of point lights that will be provided.\n         */\n        get: function () {\n            return this._pNumPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingDirectionalLights\", {\n        /**\n         * The maximum amount of directional lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingPointLights\", {\n        /**\n         * The amount of point lights that cast shadows.\n         */\n        get: function () {\n            return this._pNumCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"numLightProbes\", {\n        /**\n         * The maximum amount of light probes that will be provided.\n         */\n        get: function () {\n            return this._pNumLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"pointLights\", {\n        /**\n         * The collected point lights to be used for shading.\n         */\n        get: function () {\n            return this._pPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"directionalLights\", {\n        /**\n         * The collected directional lights to be used for shading.\n         */\n        get: function () {\n            return this._pDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingPointLights\", {\n        /**\n         * The collected point lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingPointLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"castingDirectionalLights\", {\n        /**\n         * The collected directional lights that cast shadows to be used for shading.\n         */\n        get: function () {\n            return this._pCastingDirectionalLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbes\", {\n        /**\n         * The collected light probes to be used for shading.\n         */\n        get: function () {\n            return this._pLightProbes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbeWeights\", {\n        /**\n         * The weights for each light probe, defining their influence on the object.\n         */\n        get: function () {\n            return this._pLightProbeWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LightPickerBase.prototype, \"allPickedLights\", {\n        /**\n         * A collection of all the collected lights.\n         */\n        get: function () {\n            return this._pAllPickedLights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n     */\n    LightPickerBase.prototype.collectLights = function (entity) {\n        this.updateProbeWeights(entity);\n    };\n    /**\n     * Updates the weights for the light probes, based on the renderable's position relative to them.\n     * @param renderable The renderble for which to calculate the light probes' influence.\n     */\n    LightPickerBase.prototype.updateProbeWeights = function (entity) {\n        // todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n        var objectPos = entity.scenePosition;\n        var lightPos;\n        var rx = objectPos.x, ry = objectPos.y, rz = objectPos.z;\n        var dx, dy, dz;\n        var w, total = 0;\n        var i;\n        // calculates weights for probes\n        for (i = 0; i < this._pNumLightProbes; ++i) {\n            lightPos = this._pLightProbes[i].scenePosition;\n            dx = rx - lightPos.x;\n            dy = ry - lightPos.y;\n            dz = rz - lightPos.z;\n            // weight is inversely proportional to square of distance\n            w = dx * dx + dy * dy + dz * dz;\n            // just... huge if at the same spot\n            w = w > .00001 ? 1 / w : 50000000;\n            this._pLightProbeWeights[i] = w;\n            total += w;\n        }\n        // normalize\n        total = 1 / total;\n        for (i = 0; i < this._pNumLightProbes; ++i)\n            this._pLightProbeWeights[i] *= total;\n    };\n    LightPickerBase.assetType = \"[asset LightPicker]\";\n    return LightPickerBase;\n}(AssetBase_1.AssetBase));\nexports.LightPickerBase = LightPickerBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar DirectionalLight_1 = require(\"../../display/DirectionalLight\");\nvar LightProbe_1 = require(\"../../display/LightProbe\");\nvar PointLight_1 = require(\"../../display/PointLight\");\nvar LightEvent_1 = require(\"../../events/LightEvent\");\nvar LightPickerBase_1 = require(\"../../materials/lightpickers/LightPickerBase\");\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nvar StaticLightPicker = (function (_super) {\n    __extends(StaticLightPicker, _super);\n    /**\n     * Creates a new StaticLightPicker object.\n     * @param lights The lights to be used for shading.\n     */\n    function StaticLightPicker(lights) {\n        var _this = this;\n        _super.call(this);\n        this._onCastShadowChangeDelegate = function (event) { return _this.onCastShadowChange(event); };\n        this.lights = lights;\n    }\n    Object.defineProperty(StaticLightPicker.prototype, \"lights\", {\n        /**\n         * The lights used for shading.\n         */\n        get: function () {\n            return this._lights;\n        },\n        set: function (value) {\n            var numPointLights = 0;\n            var numDirectionalLights = 0;\n            var numCastingPointLights = 0;\n            var numCastingDirectionalLights = 0;\n            var numLightProbes = 0;\n            var light;\n            if (this._lights)\n                this.clearListeners();\n            this._lights = value;\n            this._pAllPickedLights = value;\n            this._pPointLights = new Array();\n            this._pCastingPointLights = new Array();\n            this._pDirectionalLights = new Array();\n            this._pCastingDirectionalLights = new Array();\n            this._pLightProbes = new Array();\n            var len = value.length;\n            for (var i = 0; i < len; ++i) {\n                light = value[i];\n                light.addEventListener(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n                if (light instanceof PointLight_1.PointLight) {\n                    if (light.shadowsEnabled)\n                        this._pCastingPointLights[numCastingPointLights++] = light;\n                    else\n                        this._pPointLights[numPointLights++] = light;\n                }\n                else if (light instanceof DirectionalLight_1.DirectionalLight) {\n                    if (light.shadowsEnabled)\n                        this._pCastingDirectionalLights[numCastingDirectionalLights++] = light;\n                    else\n                        this._pDirectionalLights[numDirectionalLights++] = light;\n                }\n                else if (light instanceof LightProbe_1.LightProbe) {\n                    this._pLightProbes[numLightProbes++] = light;\n                }\n            }\n            if (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n                return;\n            this._pNumDirectionalLights = numDirectionalLights;\n            this._pNumCastingDirectionalLights = numCastingDirectionalLights;\n            this._pNumPointLights = numPointLights;\n            this._pNumCastingPointLights = numCastingPointLights;\n            this._pNumLightProbes = numLightProbes;\n            // MUST HAVE MULTIPLE OF 4 ELEMENTS!\n            this._pLightProbeWeights = new Array(Math.ceil(numLightProbes / 4) * 4);\n            // notify material lights have changed\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove configuration change listeners on the lights.\n     */\n    StaticLightPicker.prototype.clearListeners = function () {\n        var len = this._lights.length;\n        for (var i = 0; i < len; ++i)\n            this._lights[i].removeEventListener(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n    };\n    /**\n     * Notifies the material of a configuration change.\n     */\n    StaticLightPicker.prototype.onCastShadowChange = function (event) {\n        // TODO: Assign to special caster collections, just append it to the lights in SinglePass\n        // But keep seperated in multipass\n        var light = event.target;\n        if (light instanceof PointLight_1.PointLight)\n            this.updatePointCasting(light);\n        else if (light instanceof DirectionalLight_1.DirectionalLight)\n            this.updateDirectionalCasting(light);\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\n    };\n    /**\n     * Called when a directional light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updateDirectionalCasting = function (light) {\n        var dl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumDirectionalLights;\n            ++this._pNumCastingDirectionalLights;\n            this._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n            this._pCastingDirectionalLights.push(light);\n        }\n        else {\n            ++this._pNumDirectionalLights;\n            --this._pNumCastingDirectionalLights;\n            this._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n            this._pDirectionalLights.push(light);\n        }\n    };\n    /**\n     * Called when a point light's shadow casting configuration changes.\n     */\n    StaticLightPicker.prototype.updatePointCasting = function (light) {\n        var pl = light;\n        if (light.shadowsEnabled) {\n            --this._pNumPointLights;\n            ++this._pNumCastingPointLights;\n            this._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n            this._pCastingPointLights.push(light);\n        }\n        else {\n            ++this._pNumPointLights;\n            --this._pNumCastingPointLights;\n            this._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n            this._pPointLights.push(light);\n        }\n    };\n    return StaticLightPicker;\n}(LightPickerBase_1.LightPickerBase));\nexports.StaticLightPicker = StaticLightPicker;\n\n},{\"../../display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"../../display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"../../display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"../../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"../../materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\nvar CascadeShadowMapper = (function (_super) {\n    __extends(CascadeShadowMapper, _super);\n    function CascadeShadowMapper(numCascades) {\n        if (numCascades === void 0) { numCascades = 3; }\n        _super.call(this);\n        this._pScissorRectsInvalid = true;\n        if (numCascades < 1 || numCascades > 4)\n            throw new Error(\"numCascades must be an integer between 1 and 4\");\n        this._numCascades = numCascades;\n        this.init();\n    }\n    CascadeShadowMapper.prototype.getSplitRatio = function (index /*uint*/) {\n        return this._splitRatios[index];\n    };\n    CascadeShadowMapper.prototype.setSplitRatio = function (index /*uint*/, value) {\n        if (value < 0)\n            value = 0;\n        else if (value > 1)\n            value = 1;\n        if (index >= this._numCascades)\n            throw new Error(\"index must be smaller than the number of cascades!\");\n        this._splitRatios[index] = value;\n    };\n    CascadeShadowMapper.prototype.getDepthProjections = function (partition /*uint*/) {\n        return this._depthCameras[partition].viewProjection;\n    };\n    CascadeShadowMapper.prototype.init = function () {\n        this._splitRatios = new Array(this._numCascades);\n        this._nearPlaneDistances = new Array(this._numCascades);\n        var s = 1;\n        for (var i = this._numCascades - 1; i >= 0; --i) {\n            this._splitRatios[i] = s;\n            s *= .4;\n        }\n        this._texOffsetsX = Array(-1, 1, -1, 1);\n        this._texOffsetsY = Array(1, 1, -1, -1);\n        this._pScissorRects = new Array(4);\n        this._depthLenses = new Array();\n        this._depthCameras = new Array();\n        for (i = 0; i < this._numCascades; ++i) {\n            this._depthLenses[i] = new FreeMatrixProjection_1.FreeMatrixProjection();\n            this._depthCameras[i] = new Camera_1.Camera(this._depthLenses[i]);\n        }\n    };\n    CascadeShadowMapper.prototype._pSetDepthMapSize = function (value /*uint*/) {\n        _super.prototype._pSetDepthMapSize.call(this, value);\n        this.invalidateScissorRects();\n    };\n    CascadeShadowMapper.prototype.invalidateScissorRects = function () {\n        this._pScissorRectsInvalid = true;\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"numCascades\", {\n        get: function () {\n            return this._numCascades;\n        },\n        set: function (value /*int*/) {\n            if (value == this._numCascades)\n                return;\n            if (value < 1 || value > 4)\n                throw new Error(\"numCascades must be an integer between 1 and 4\");\n            this._numCascades = value;\n            this.invalidateScissorRects();\n            this.init();\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CascadeShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        if (this._pScissorRectsInvalid)\n            this.updateScissorRects();\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n    };\n    CascadeShadowMapper.prototype.updateScissorRects = function () {\n        var half = this._pDepthMapSize * .5;\n        this._pScissorRects[0] = new Rectangle_1.Rectangle(0, 0, half, half);\n        this._pScissorRects[1] = new Rectangle_1.Rectangle(half, 0, half, half);\n        this._pScissorRects[2] = new Rectangle_1.Rectangle(0, half, half, half);\n        this._pScissorRects[3] = new Rectangle_1.Rectangle(half, half, half, half);\n        this._pScissorRectsInvalid = false;\n    };\n    CascadeShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var matrix;\n        var projection = camera.projection;\n        var projectionNear = projection.near;\n        var projectionRange = projection.far - projectionNear;\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pMatrix.appendScale(.96, .96, 1);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n        for (var i = 0; i < this._numCascades; ++i) {\n            matrix = this._depthLenses[i].matrix;\n            this._nearPlaneDistances[i] = projectionNear + this._splitRatios[i] * projectionRange;\n            this._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n            this.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n            this._depthLenses[i].matrix = matrix;\n        }\n    };\n    CascadeShadowMapper.prototype.updateProjectionPartition = function (matrix, splitRatio, texOffsetX, texOffsetY) {\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var xN, yN, zN;\n        var xF, yF, zF;\n        var minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, minZ;\n        var maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY, maxZ = Number.NEGATIVE_INFINITY;\n        var i = 0;\n        while (i < 12) {\n            xN = this._pLocalFrustum[i];\n            yN = this._pLocalFrustum[i + 1];\n            zN = this._pLocalFrustum[i + 2];\n            xF = xN + (this._pLocalFrustum[i + 12] - xN) * splitRatio;\n            yF = yN + (this._pLocalFrustum[i + 13] - yN) * splitRatio;\n            zF = zN + (this._pLocalFrustum[i + 14] - zN) * splitRatio;\n            if (xN < minX)\n                minX = xN;\n            if (xN > maxX)\n                maxX = xN;\n            if (yN < minY)\n                minY = yN;\n            if (yN > maxY)\n                maxY = yN;\n            if (zN > maxZ)\n                maxZ = zN;\n            if (xF < minX)\n                minX = xF;\n            if (xF > maxX)\n                maxX = xF;\n            if (yF < minY)\n                minY = yF;\n            if (yF > maxY)\n                maxY = yF;\n            if (zF > maxZ)\n                maxZ = zF;\n            i += 3;\n        }\n        minZ = 1;\n        var w = (maxX - minX);\n        var h = (maxY - minY);\n        var d = 1 / (maxZ - minZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 1) * snap2;\n        h = Math.floor(h / snap2 + 1) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -minZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n        matrix.appendScale(.96, .96, 1);\n        matrix.appendTranslation(texOffsetX, texOffsetY, 0);\n        matrix.appendScale(.5, .5, 1);\n    };\n    Object.defineProperty(CascadeShadowMapper.prototype, \"_iNearPlaneDistances\", {\n        get: function () {\n            return this._nearPlaneDistances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CascadeShadowMapper;\n}(DirectionalShadowMapper_1.DirectionalShadowMapper));\nexports.CascadeShadowMapper = CascadeShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\nvar SingleCubeTexture_1 = require(\"../../textures/SingleCubeTexture\");\nvar CubeMapShadowMapper = (function (_super) {\n    __extends(CubeMapShadowMapper, _super);\n    function CubeMapShadowMapper() {\n        _super.call(this);\n        this._pDepthMapSize = 512;\n        this._needsRender = new Array();\n        this.initCameras();\n    }\n    CubeMapShadowMapper.prototype.initCameras = function () {\n        this._depthCameras = new Array();\n        this._projections = new Array();\n        // posX, negX, posY, negY, posZ, negZ\n        this.addCamera(0, 90, 0);\n        this.addCamera(0, -90, 0);\n        this.addCamera(-90, 0, 0);\n        this.addCamera(90, 0, 0);\n        this.addCamera(0, 0, 0);\n        this.addCamera(0, 180, 0);\n    };\n    CubeMapShadowMapper.prototype.addCamera = function (rotationX, rotationY, rotationZ) {\n        var cam = new Camera_1.Camera();\n        cam.rotationX = rotationX;\n        cam.rotationY = rotationY;\n        cam.rotationZ = rotationZ;\n        cam.projection.near = .01;\n        var projection = cam.projection;\n        projection.fieldOfView = 90;\n        this._projections.push(projection);\n        cam.projection._iAspectRatio = 1;\n        this._depthCameras.push(cam);\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new SingleCubeTexture_1.SingleCubeTexture(new ImageCube_1.ImageCube(this._pDepthMapSize));\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var light = (this._pLight);\n        var maxDistance = light._pFallOff;\n        var pos = this._pLight.scenePosition;\n        // todo: faces outside frustum which are pointing away from camera need not be rendered!\n        for (var i = 0; i < 6; ++i) {\n            this._projections[i].far = maxDistance;\n            this._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n            this._needsRender[i] = true;\n        }\n    };\n    //@override\n    CubeMapShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        for (var i = 0; i < 6; ++i)\n            if (this._needsRender[i])\n                renderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i);\n    };\n    return CubeMapShadowMapper;\n}(ShadowMapperBase_1.ShadowMapperBase));\nexports.CubeMapShadowMapper = CubeMapShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/ImageCube\":undefined}],\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nvar Camera_1 = require(\"../../display/Camera\");\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\nvar Single2DTexture_1 = require(\"../../textures/Single2DTexture\");\nvar DirectionalShadowMapper = (function (_super) {\n    __extends(DirectionalShadowMapper, _super);\n    function DirectionalShadowMapper() {\n        _super.call(this);\n        this._pLightOffset = 10000;\n        this._pSnap = 64;\n        this._pCullPlanes = [];\n        this._pOverallDepthProjection = new FreeMatrixProjection_1.FreeMatrixProjection();\n        this._pOverallDepthCamera = new Camera_1.Camera(this._pOverallDepthProjection);\n        this._pLocalFrustum = [];\n        this._pMatrix = new Matrix3D_1.Matrix3D();\n    }\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"snap\", {\n        get: function () {\n            return this._pSnap;\n        },\n        set: function (value) {\n            this._pSnap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"lightOffset\", {\n        get: function () {\n            return this._pLightOffset;\n        },\n        set: function (value) {\n            this._pLightOffset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"iDepthProjection\", {\n        //@arcane\n        get: function () {\n            return this._pOverallDepthCamera.viewProjection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"depth\", {\n        //@arcane\n        get: function () {\n            return this._pMaxZ - this._pMinZ;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DirectionalShadowMapper.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap == depthMap)\n            return;\n        _super.prototype.iSetDepthMap.call(this, depthMap);\n        if (this._depthMap) {\n            this._explicitDepthMap = true;\n            this._pDepthMapSize = depthMap.image2D.rect.width;\n        }\n        else {\n            this._explicitDepthMap = false;\n        }\n    };\n    DirectionalShadowMapper.prototype.pCreateDepthTexture = function () {\n        return new Single2DTexture_1.Single2DTexture(new Image2D_1.Image2D(this._pDepthMapSize, this._pDepthMapSize));\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        renderer.cullPlanes = this._pCullPlanes;\n        renderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n    };\n    //@protected\n    DirectionalShadowMapper.prototype.pUpdateCullPlanes = function (camera) {\n        var lightFrustumPlanes = this._pOverallDepthCamera.frustumPlanes;\n        var viewFrustumPlanes = camera.frustumPlanes;\n        this._pCullPlanes.length = 4;\n        this._pCullPlanes[0] = lightFrustumPlanes[0];\n        this._pCullPlanes[1] = lightFrustumPlanes[1];\n        this._pCullPlanes[2] = lightFrustumPlanes[2];\n        this._pCullPlanes[3] = lightFrustumPlanes[3];\n        var light = this._pLight;\n        var dir = light.sceneDirection;\n        var dirX = dir.x;\n        var dirY = dir.y;\n        var dirZ = dir.z;\n        var j = 4;\n        for (var i = 0; i < 6; ++i) {\n            var plane = viewFrustumPlanes[i];\n            if (plane.a * dirX + plane.b * dirY + plane.c * dirZ < 0)\n                this._pCullPlanes[j++] = plane;\n        }\n    };\n    //@override\n    DirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n        this.pUpdateCullPlanes(camera);\n    };\n    DirectionalShadowMapper.prototype.pUpdateProjectionFromFrustumCorners = function (camera, corners, matrix) {\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\n        var dir;\n        var x, y, z;\n        var minX, minY;\n        var maxX, maxY;\n        var i;\n        var light = this._pLight;\n        dir = light.sceneDirection;\n        this._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n        x = Math.floor((camera.x - dir.x * this._pLightOffset) / this._pSnap) * this._pSnap;\n        y = Math.floor((camera.y - dir.y * this._pLightOffset) / this._pSnap) * this._pSnap;\n        z = Math.floor((camera.z - dir.z * this._pLightOffset) / this._pSnap) * this._pSnap;\n        this._pOverallDepthCamera.x = x;\n        this._pOverallDepthCamera.y = y;\n        this._pOverallDepthCamera.z = z;\n        this._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n        this._pMatrix.prepend(camera.sceneTransform);\n        this._pMatrix.transformVectors(corners, this._pLocalFrustum);\n        minX = maxX = this._pLocalFrustum[0];\n        minY = maxY = this._pLocalFrustum[1];\n        this._pMaxZ = this._pLocalFrustum[2];\n        i = 3;\n        while (i < 24) {\n            x = this._pLocalFrustum[i];\n            y = this._pLocalFrustum[i + 1];\n            z = this._pLocalFrustum[i + 2];\n            if (x < minX)\n                minX = x;\n            if (x > maxX)\n                maxX = x;\n            if (y < minY)\n                minY = y;\n            if (y > maxY)\n                maxY = y;\n            if (z > this._pMaxZ)\n                this._pMaxZ = z;\n            i += 3;\n        }\n        this._pMinZ = 1;\n        var w = maxX - minX;\n        var h = maxY - minY;\n        var d = 1 / (this._pMaxZ - this._pMinZ);\n        if (minX < 0)\n            minX -= this._pSnap; // because int() rounds up for < 0\n        if (minY < 0)\n            minY -= this._pSnap;\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\n        var snap2 = 2 * this._pSnap;\n        w = Math.floor(w / snap2 + 2) * snap2;\n        h = Math.floor(h / snap2 + 2) * snap2;\n        maxX = minX + w;\n        maxY = minY + h;\n        w = 1 / w;\n        h = 1 / h;\n        raw[0] = 2 * w;\n        raw[5] = 2 * h;\n        raw[10] = d;\n        raw[12] = -(maxX + minX) * w;\n        raw[13] = -(maxY + minY) * h;\n        raw[14] = -this._pMinZ * d;\n        raw[15] = 1;\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n        matrix.copyRawDataFrom(raw);\n    };\n    return DirectionalShadowMapper;\n}(ShadowMapperBase_1.ShadowMapperBase));\nexports.DirectionalShadowMapper = DirectionalShadowMapper;\n\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\nvar NearDirectionalShadowMapper = (function (_super) {\n    __extends(NearDirectionalShadowMapper, _super);\n    function NearDirectionalShadowMapper(coverageRatio) {\n        if (coverageRatio === void 0) { coverageRatio = .5; }\n        _super.call(this);\n        this.coverageRatio = coverageRatio;\n    }\n    Object.defineProperty(NearDirectionalShadowMapper.prototype, \"coverageRatio\", {\n        /**\n         * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n         */\n        get: function () {\n            return this._coverageRatio;\n        },\n        set: function (value) {\n            if (value > 1)\n                value = 1;\n            else if (value < 0)\n                value = 0;\n            this._coverageRatio = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NearDirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\n        var corners = camera.projection.frustumCorners;\n        for (var i = 0; i < 12; ++i) {\n            var v = corners[i];\n            this._pLocalFrustum[i] = v;\n            this._pLocalFrustum[i + 12] = v + (corners[i + 12] - v) * this._coverageRatio;\n        }\n        this.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n        this._pOverallDepthProjection.matrix = this._pMatrix;\n    };\n    return NearDirectionalShadowMapper;\n}(DirectionalShadowMapper_1.DirectionalShadowMapper));\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper;\n\n},{\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar ShadowMapperBase = (function (_super) {\n    __extends(ShadowMapperBase, _super);\n    function ShadowMapperBase() {\n        _super.apply(this, arguments);\n        this._pDepthMapSize = 2048;\n        this._autoUpdateShadows = true;\n    }\n    Object.defineProperty(ShadowMapperBase.prototype, \"autoUpdateShadows\", {\n        get: function () {\n            return this._autoUpdateShadows;\n        },\n        set: function (value) {\n            this._autoUpdateShadows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.updateShadows = function () {\n        this._iShadowsInvalid = true;\n    };\n    ShadowMapperBase.prototype.iSetDepthMap = function (depthMap) {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = depthMap;\n    };\n    Object.defineProperty(ShadowMapperBase.prototype, \"light\", {\n        get: function () {\n            return this._pLight;\n        },\n        set: function (value) {\n            this._pLight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMap\", {\n        get: function () {\n            if (!this._depthMap)\n                this._depthMap = this.pCreateDepthTexture();\n            return this._depthMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMapSize\", {\n        get: function () {\n            return this._pDepthMapSize;\n        },\n        set: function (value) {\n            if (value == this._pDepthMapSize)\n                return;\n            this._pSetDepthMapSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowMapperBase.prototype.dispose = function () {\n        if (this._depthMap && !this._explicitDepthMap)\n            this._depthMap.dispose();\n        this._depthMap = null;\n    };\n    ShadowMapperBase.prototype.pCreateDepthTexture = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ShadowMapperBase.prototype.iRenderDepthMap = function (camera, scene, renderer) {\n        this._iShadowsInvalid = false;\n        this.pUpdateDepthProjection(camera);\n        if (!this._depthMap)\n            this._depthMap = this.pCreateDepthTexture();\n        this.pDrawDepthMap(scene, this._depthMap, renderer);\n    };\n    ShadowMapperBase.prototype.pUpdateDepthProjection = function (camera) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ShadowMapperBase.prototype.pDrawDepthMap = function (scene, target, renderer) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    ShadowMapperBase.prototype._pSetDepthMapSize = function (value) {\n        this._pDepthMapSize = value;\n        if (this._explicitDepthMap) {\n            throw Error(\"Cannot set depth map size for the current renderer.\");\n        }\n        else if (this._depthMap) {\n            this._depthMap.dispose();\n            this._depthMap = null;\n        }\n    };\n    return ShadowMapperBase;\n}(AssetBase_1.AssetBase));\nexports.ShadowMapperBase = ShadowMapperBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials\":[function(require,module,exports){\n\"use strict\";\nvar LightPickerBase_1 = require(\"./materials/lightpickers/LightPickerBase\");\nexports.LightPickerBase = LightPickerBase_1.LightPickerBase;\nvar StaticLightPicker_1 = require(\"./materials/lightpickers/StaticLightPicker\");\nexports.StaticLightPicker = StaticLightPicker_1.StaticLightPicker;\nvar CascadeShadowMapper_1 = require(\"./materials/shadowmappers/CascadeShadowMapper\");\nexports.CascadeShadowMapper = CascadeShadowMapper_1.CascadeShadowMapper;\nvar CubeMapShadowMapper_1 = require(\"./materials/shadowmappers/CubeMapShadowMapper\");\nexports.CubeMapShadowMapper = CubeMapShadowMapper_1.CubeMapShadowMapper;\nvar DirectionalShadowMapper_1 = require(\"./materials/shadowmappers/DirectionalShadowMapper\");\nexports.DirectionalShadowMapper = DirectionalShadowMapper_1.DirectionalShadowMapper;\nvar NearDirectionalShadowMapper_1 = require(\"./materials/shadowmappers/NearDirectionalShadowMapper\");\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper_1.NearDirectionalShadowMapper;\nvar ShadowMapperBase_1 = require(\"./materials/shadowmappers/ShadowMapperBase\");\nexports.ShadowMapperBase = ShadowMapperBase_1.ShadowMapperBase;\nvar BasicMaterial_1 = require(\"./materials/BasicMaterial\");\nexports.BasicMaterial = BasicMaterial_1.BasicMaterial;\nvar LightSources_1 = require(\"./materials/LightSources\");\nexports.LightSources = LightSources_1.LightSources;\nvar MaterialBase_1 = require(\"./materials/MaterialBase\");\nexports.MaterialBase = MaterialBase_1.MaterialBase;\n\n},{\"./materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"./materials/LightSources\":\"awayjs-display/lib/materials/LightSources\",\"./materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"./materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"./materials/lightpickers/StaticLightPicker\":\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\",\"./materials/shadowmappers/CascadeShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\",\"./materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"./materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"./materials/shadowmappers/NearDirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\",\"./materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\"}],\"awayjs-display/lib/partition/BasicPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar NodeBase_1 = require(\"../partition/NodeBase\");\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar BasicPartition = (function (_super) {\n    __extends(BasicPartition, _super);\n    function BasicPartition() {\n        _super.call(this);\n        this._rootNode = new NodeBase_1.NodeBase();\n    }\n    return BasicPartition;\n}(PartitionBase_1.PartitionBase));\nexports.BasicPartition = BasicPartition;\n\n},{\"../partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\"}],\"awayjs-display/lib/partition/CameraNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.CameraNode\n */\nvar CameraNode = (function (_super) {\n    __extends(CameraNode, _super);\n    function CameraNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    CameraNode.prototype.acceptTraverser = function (traverser) {\n        // todo: dead end for now, if it has a debug sprite, then sure accept that\n    };\n    return CameraNode;\n}(EntityNode_1.EntityNode));\nexports.CameraNode = CameraNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DirectionalLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.DirectionalLightNode\n */\nvar DirectionalLightNode = (function (_super) {\n    __extends(DirectionalLightNode, _super);\n    function DirectionalLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    DirectionalLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyDirectionalLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DirectionalLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return DirectionalLightNode;\n}(EntityNode_1.EntityNode));\nexports.DirectionalLightNode = DirectionalLightNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\nvar AxisAlignedBoundingBox_1 = require(\"../bounds/AxisAlignedBoundingBox\");\nvar BoundingSphere_1 = require(\"../bounds/BoundingSphere\");\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\n/**\n * @class away.partition.EntityNode\n */\nvar DisplayObjectNode = (function (_super) {\n    __extends(DisplayObjectNode, _super);\n    function DisplayObjectNode(displayObject, pool) {\n        var _this = this;\n        _super.call(this, displayObject, pool);\n        this.numEntities = 0;\n        this.isSceneGraphNode = false;\n        this._boundsDirty = true;\n        this._onInvalidatePartitionBoundsDelegate = function (event) { return _this._onInvalidatePartitionBounds(event); };\n        this._displayObject = displayObject;\n        this._displayObject.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._boundsType = this._displayObject.boundsType;\n    }\n    Object.defineProperty(DisplayObjectNode.prototype, \"debugVisible\", {\n        get: function () {\n            return this._displayObject.debugVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DisplayObjectNode.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            if (this._boundsDirty)\n                this._updateBounds();\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isCastingShadow = function () {\n        return this._displayObject.castsShadows;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isMask = function () {\n        return this._displayObject.maskMode;\n    };\n    DisplayObjectNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._displayObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n        this._displayObject = null;\n        if (this._bounds)\n            this._bounds.dispose();\n        this._bounds = null;\n    };\n    DisplayObjectNode.prototype.onInvalidate = function (event) {\n        _super.prototype.onInvalidate.call(this, event);\n        if (this._boundsType != this._displayObject.boundsType) {\n            this._boundsType = this._displayObject.boundsType;\n            this._boundsDirty = true;\n        }\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    DisplayObjectNode.prototype.isRenderable = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    DisplayObjectNode.prototype.acceptTraverser = function (traverser) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._onInvalidatePartitionBounds = function (event) {\n        // do nothing here\n    };\n    DisplayObjectNode.prototype._updateBounds = function () {\n        if (this._bounds)\n            this._bounds.dispose();\n        if (this._boundsType == BoundsType_1.BoundsType.AXIS_ALIGNED_BOX)\n            this._bounds = new AxisAlignedBoundingBox_1.AxisAlignedBoundingBox(this._displayObject);\n        else if (this._boundsType == BoundsType_1.BoundsType.SPHERE)\n            this._bounds = new BoundingSphere_1.BoundingSphere(this._displayObject);\n        else if (this._boundsType == BoundsType_1.BoundsType.NULL)\n            this._bounds = new NullBounds_1.NullBounds();\n        this._boundsDirty = false;\n    };\n    return DisplayObjectNode;\n}(AbstractionBase_1.AbstractionBase));\nexports.DisplayObjectNode = DisplayObjectNode;\n\n},{\"../bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"../bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-display/lib/partition/EntityNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\n/**\n * @class away.partition.EntityNode\n */\nvar EntityNode = (function (_super) {\n    __extends(EntityNode, _super);\n    function EntityNode(displayObject, partition) {\n        _super.call(this, displayObject, partition);\n        this.numEntities = 1;\n        this._maskPosition = new Vector3D_1.Vector3D();\n        this._partition = partition;\n    }\n    EntityNode.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._partition = null;\n    };\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    EntityNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible())\n            return false;\n        return true; // todo: hack for 2d. attention. might break stuff in 3d.\n        //return this._bounds.isInFrustum(planes, numPlanes);\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.isIntersectingRay = function (globalRayPosition, globalRayDirection) {\n        if (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n            return false;\n        var pickingCollision = this._displayObject._iPickingCollision;\n        pickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n        pickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n        if (!pickingCollision.normal)\n            pickingCollision.normal = new Vector3D_1.Vector3D();\n        var rayEntryDistance = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n        if (rayEntryDistance < 0)\n            return false;\n        pickingCollision.rayEntryDistance = rayEntryDistance;\n        pickingCollision.globalRayPosition = globalRayPosition;\n        pickingCollision.globalRayDirection = globalRayDirection;\n        pickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    EntityNode.prototype.isRenderable = function () {\n        return this._displayObject._iAssignedColorTransform()._isRenderable();\n    };\n    /**\n     * @inheritDoc\n     */\n    EntityNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyEntity(this._displayObject);\n    };\n    EntityNode.prototype._onInvalidatePartitionBounds = function (event) {\n        this.bounds.invalidate();\n        this._partition.iMarkForUpdate(this);\n    };\n    EntityNode.prototype.isIntersectingMasks = function (globalRayPosition, globalRayDirection, masks) {\n        //horrible hack for 2d masks\n        if (masks != null) {\n            this._maskPosition.x = globalRayPosition.x + globalRayDirection.x * 1000;\n            this._maskPosition.y = globalRayPosition.y + globalRayDirection.y * 1000;\n            var numLayers = masks.length;\n            var children;\n            var numChildren;\n            var layerHit;\n            for (var i = 0; i < numLayers; i++) {\n                children = masks[i];\n                numChildren = children.length;\n                layerHit = false;\n                for (var j = 0; j < numChildren; j++) {\n                    if (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n                        layerHit = true;\n                        break;\n                    }\n                }\n                if (!layerHit)\n                    return false;\n            }\n        }\n        return true;\n    };\n    return EntityNode;\n}(DisplayObjectNode_1.DisplayObjectNode));\nexports.EntityNode = EntityNode;\n\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/partition/IContainerNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IDisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/IEntityNodeClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/INode\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/partition/LightProbeNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.LightProbeNode\n */\nvar LightProbeNode = (function (_super) {\n    __extends(LightProbeNode, _super);\n    function LightProbeNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    LightProbeNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyLightProbe(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    LightProbeNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return LightProbeNode;\n}(EntityNode_1.EntityNode));\nexports.LightProbeNode = LightProbeNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/NodeBase\":[function(require,module,exports){\n\"use strict\";\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\n/**\n * @class away.partition.NodeBase\n */\nvar NodeBase = (function () {\n    /**\n     *\n     */\n    function NodeBase() {\n        this._bounds = new NullBounds_1.NullBounds();\n        this._pChildNodes = new Array();\n        this._pNumChildNodes = 0;\n        this.numEntities = 0;\n    }\n    Object.defineProperty(NodeBase.prototype, \"debugVisible\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NodeBase.prototype, \"bounds\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._bounds; //TODO\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     * @internal\n     */\n    NodeBase.prototype.isInFrustum = function (planes, numPlanes) {\n        return true;\n    };\n    /**\n     *\n     * @param rayPosition\n     * @param rayDirection\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isRenderable = function () {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isCastingShadow = function () {\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    NodeBase.prototype.isMask = function () {\n        return false;\n    };\n    NodeBase.prototype.dispose = function () {\n        this.parent = null;\n        this._pChildNodes = null;\n    };\n    /**\n     *\n     * @param traverser\n     */\n    NodeBase.prototype.acceptTraverser = function (traverser) {\n        if (this.numEntities == 0)\n            return;\n        if (traverser.enterNode(this)) {\n            for (var i = 0; i < this._pNumChildNodes; i++)\n                this._pChildNodes[i].acceptTraverser(traverser);\n        }\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iAddNode = function (node) {\n        node.parent = this;\n        this.numEntities += node.numEntities;\n        this._pChildNodes[this._pNumChildNodes++] = node;\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    NodeBase.prototype.iRemoveNode = function (node) {\n        var index = this._pChildNodes.indexOf(node);\n        this._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n        this._pChildNodes.pop();\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return NodeBase;\n}());\nexports.NodeBase = NodeBase;\n\n},{\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/partition/PartitionBase\":[function(require,module,exports){\n\"use strict\";\n/**\n * @class away.partition.Partition\n */\nvar PartitionBase = (function () {\n    function PartitionBase() {\n        this._abstractionPool = new Object();\n        this._updatesMade = false;\n    }\n    PartitionBase.prototype.getAbstraction = function (displayObject) {\n        return (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new PartitionBase._abstractionClassPool[displayObject.assetType](displayObject, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    PartitionBase.prototype.clearAbstraction = function (displayObject) {\n        this._abstractionPool[displayObject.id] = null;\n    };\n    PartitionBase.prototype.traverse = function (traverser) {\n        if (this._updatesMade)\n            this.updateEntities();\n        if (this._rootNode) {\n            this._rootNode.acceptTraverser(traverser);\n        }\n    };\n    PartitionBase.prototype.iMarkForUpdate = function (node) {\n        var t = this._updateQueue;\n        while (t) {\n            if (node == t)\n                return;\n            t = t._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = this._updateQueue;\n        this._updateQueue = node;\n        this._updatesMade = true;\n    };\n    PartitionBase.prototype.iRemoveEntity = function (node) {\n        var t;\n        if (node.parent) {\n            node.parent.iRemoveNode(node);\n            node.parent = null;\n        }\n        if (node == this._updateQueue) {\n            this._updateQueue = node._iUpdateQueueNext;\n        }\n        else {\n            t = this._updateQueue;\n            while (t && t._iUpdateQueueNext != node)\n                t = t._iUpdateQueueNext;\n            if (t)\n                t._iUpdateQueueNext = node._iUpdateQueueNext;\n        }\n        node._iUpdateQueueNext = null;\n        if (!this._updateQueue)\n            this._updatesMade = false;\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    PartitionBase.prototype.findParentForNode = function (node) {\n        return this._rootNode;\n    };\n    PartitionBase.prototype.updateEntities = function () {\n        var node = this._updateQueue;\n        while (node) {\n            //required for controllers with autoUpdate set to true and queued events\n            node._displayObject._iInternalUpdate();\n            node = node._iUpdateQueueNext;\n        }\n        //reset head\n        node = this._updateQueue;\n        var targetNode;\n        var t;\n        this._updateQueue = null;\n        this._updatesMade = false;\n        do {\n            targetNode = this.findParentForNode(node);\n            if (node.parent != targetNode) {\n                if (node.parent)\n                    node.parent.iRemoveNode(node);\n                targetNode.iAddNode(node);\n            }\n            t = node._iUpdateQueueNext;\n            node._iUpdateQueueNext = null;\n        } while ((node = t) != null);\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iRegisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iMarkForUpdate(this.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    PartitionBase.prototype._iUnregisterEntity = function (displayObject) {\n        if (displayObject.isEntity)\n            this.iRemoveEntity(this.getAbstraction(displayObject));\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    PartitionBase.registerAbstraction = function (entityNodeClass, assetClass) {\n        PartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n    };\n    PartitionBase._abstractionClassPool = new Object();\n    return PartitionBase;\n}());\nexports.PartitionBase = PartitionBase;\n\n},{}],\"awayjs-display/lib/partition/PointLightNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * @class away.partition.PointLightNode\n */\nvar PointLightNode = (function (_super) {\n    __extends(PointLightNode, _super);\n    function PointLightNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * @inheritDoc\n     */\n    PointLightNode.prototype.acceptTraverser = function (traverser) {\n        if (traverser.enterNode(this))\n            traverser.applyPointLight(this._displayObject);\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    PointLightNode.prototype.isCastingShadow = function () {\n        return false;\n    };\n    return PointLightNode;\n}(EntityNode_1.EntityNode));\nexports.PointLightNode = PointLightNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/SceneGraphNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nvar SceneGraphNode = (function (_super) {\n    __extends(SceneGraphNode, _super);\n    function SceneGraphNode() {\n        _super.apply(this, arguments);\n        this.isSceneGraphNode = true;\n        this._numNodes = 0;\n        this._pChildNodes = new Array();\n        this._childDepths = new Array();\n        this._numMasks = 0;\n        this._childMasks = new Array();\n    }\n    /**\n     *\n     * @param traverser\n     */\n    SceneGraphNode.prototype.acceptTraverser = function (traverser) {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n        var i;\n        for (i = 0; i < this._numNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n        for (i = 0; i < this._numMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iAddNode = function (node) {\n        node.parent = this;\n        if (node._displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numMasks++;\n        }\n        else {\n            var depth = node._displayObject._depthID;\n            var len = this._childDepths.length;\n            var index = len;\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n            index++;\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            }\n            else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._numNodes++;\n        }\n        var numEntities = node.isSceneGraphNode ? node.numEntities : 1;\n        node = this;\n        do {\n            node.numEntities += numEntities;\n        } while ((node = node.parent) != null);\n    };\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    SceneGraphNode.prototype.iRemoveNode = function (node) {\n        if (node._displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numMasks--;\n        }\n        else {\n            var index = this._pChildNodes.indexOf(node);\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n            this._numNodes--;\n        }\n        var numEntities = node.numEntities;\n        node = this;\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = node.parent) != null);\n    };\n    return SceneGraphNode;\n}(DisplayObjectNode_1.DisplayObjectNode));\nexports.SceneGraphNode = SceneGraphNode;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SceneGraphNode;\n\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\"}],\"awayjs-display/lib/partition/SceneGraphPartition\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SceneGraphNode_1 = require(\"../partition/SceneGraphNode\");\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\n/**\n * @class away.partition.Partition\n */\nvar SceneGraphPartition = (function (_super) {\n    __extends(SceneGraphPartition, _super);\n    function SceneGraphPartition() {\n        _super.call(this);\n        this._sceneGraphNodePool = new SceneGraphNodePool();\n    }\n    SceneGraphPartition.prototype.traverse = function (traverser) {\n        _super.prototype.traverse.call(this, traverser);\n    };\n    /**\n     *\n     * @param entity\n     * @returns {away.partition.NodeBase}\n     */\n    SceneGraphPartition.prototype.findParentForNode = function (node) {\n        if (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n            this._rootNode = node;\n            return null;\n        }\n        if (!node.isSceneGraphNode && node._displayObject.isContainer)\n            return this._sceneGraphNodePool.getAbstraction(node._displayObject);\n        return this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iRegisterEntity = function (displayObject) {\n        _super.prototype._iRegisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    /**\n     * @internal\n     */\n    SceneGraphPartition.prototype._iUnregisterEntity = function (displayObject) {\n        _super.prototype._iUnregisterEntity.call(this, displayObject);\n        if (displayObject.isContainer)\n            this.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(displayObject));\n    };\n    return SceneGraphPartition;\n}(PartitionBase_1.PartitionBase));\nexports.SceneGraphPartition = SceneGraphPartition;\n/**\n * @class away.pool.SceneGraphNodePool\n */\nvar SceneGraphNodePool = (function () {\n    function SceneGraphNodePool() {\n        this._abstractionPool = new Object();\n    }\n    /**\n     * //TODO\n     *\n     * @param entity\n     * @returns EntityNode\n     */\n    SceneGraphNodePool.prototype.getAbstraction = function (displayObjectContainer) {\n        return (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode_1.SceneGraphNode(displayObjectContainer, this)));\n    };\n    /**\n     * //TODO\n     *\n     * @param entity\n     */\n    SceneGraphNodePool.prototype.clearAbstraction = function (displayObjectContainer) {\n        delete this._abstractionPool[displayObjectContainer.id];\n    };\n    return SceneGraphNodePool;\n}());\nexports.SceneGraphNodePool = SceneGraphNodePool;\n\n},{\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"../partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\"}],\"awayjs-display/lib/partition/SkyboxNode\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EntityNode_1 = require(\"../partition/EntityNode\");\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nvar SkyboxNode = (function (_super) {\n    __extends(SkyboxNode, _super);\n    function SkyboxNode() {\n        _super.apply(this, arguments);\n    }\n    /**\n     *\n     * @param planes\n     * @param numPlanes\n     * @returns {boolean}\n     */\n    SkyboxNode.prototype.isInFrustum = function (planes, numPlanes) {\n        if (!this._displayObject._iIsVisible)\n            return false;\n        //a skybox is always in view unless its visibility is set to false\n        return true;\n    };\n    /**\n     *\n     * @returns {boolean}\n     */\n    SkyboxNode.prototype.isCastingShadow = function () {\n        return false; //skybox never casts shadows\n    };\n    return SkyboxNode;\n}(EntityNode_1.EntityNode));\nexports.SkyboxNode = SkyboxNode;\n\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition\":[function(require,module,exports){\n\"use strict\";\nvar BasicPartition_1 = require(\"./partition/BasicPartition\");\nexports.BasicPartition = BasicPartition_1.BasicPartition;\nvar CameraNode_1 = require(\"./partition/CameraNode\");\nexports.CameraNode = CameraNode_1.CameraNode;\nvar DirectionalLightNode_1 = require(\"./partition/DirectionalLightNode\");\nexports.DirectionalLightNode = DirectionalLightNode_1.DirectionalLightNode;\nvar DisplayObjectNode_1 = require(\"./partition/DisplayObjectNode\");\nexports.DisplayObjectNode = DisplayObjectNode_1.DisplayObjectNode;\nvar EntityNode_1 = require(\"./partition/EntityNode\");\nexports.EntityNode = EntityNode_1.EntityNode;\nvar LightProbeNode_1 = require(\"./partition/LightProbeNode\");\nexports.LightProbeNode = LightProbeNode_1.LightProbeNode;\nvar NodeBase_1 = require(\"./partition/NodeBase\");\nexports.NodeBase = NodeBase_1.NodeBase;\nvar PartitionBase_1 = require(\"./partition/PartitionBase\");\nexports.PartitionBase = PartitionBase_1.PartitionBase;\nvar PointLightNode_1 = require(\"./partition/PointLightNode\");\nexports.PointLightNode = PointLightNode_1.PointLightNode;\nvar SceneGraphNode_1 = require(\"./partition/SceneGraphNode\");\nexports.SceneGraphNode = SceneGraphNode_1.SceneGraphNode;\nvar SceneGraphPartition_1 = require(\"./partition/SceneGraphPartition\");\nexports.SceneGraphPartition = SceneGraphPartition_1.SceneGraphPartition;\nvar SkyboxNode_1 = require(\"./partition/SkyboxNode\");\nexports.SkyboxNode = SkyboxNode_1.SkyboxNode;\n\n},{\"./partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\",\"./partition/CameraNode\":\"awayjs-display/lib/partition/CameraNode\",\"./partition/DirectionalLightNode\":\"awayjs-display/lib/partition/DirectionalLightNode\",\"./partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"./partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\",\"./partition/LightProbeNode\":\"awayjs-display/lib/partition/LightProbeNode\",\"./partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"./partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"./partition/PointLightNode\":\"awayjs-display/lib/partition/PointLightNode\",\"./partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\",\"./partition/SceneGraphPartition\":\"awayjs-display/lib/partition/SceneGraphPartition\",\"./partition/SkyboxNode\":\"awayjs-display/lib/partition/SkyboxNode\"}],\"awayjs-display/lib/pick/IPicker\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/IPickingCollider\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-display/lib/pick/JSPickingCollider\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nvar JSPickingCollider = (function () {\n    /**\n     * Creates a new <code>JSPickingCollider</code> object.\n     *\n     * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n     */\n    function JSPickingCollider(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Tests a <code>Billboard</code> object for a collision with the picking ray.\n     *\n     * @param billboard The billboard instance to be tested.\n     * @param pickingCollision The collision object used to store the collision results\n     * @param findClosest\n     */\n    JSPickingCollider.prototype.testBillboardCollision = function (billboard, material, pickingCollision) {\n        pickingCollision.renderable = null;\n        //if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n        //\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n        //\n        //\tpickingCollision.renderable = billboard;\n        //\n        //\treturn true;\n        //}\n        return false;\n    };\n    /**\n     * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testTriangleCollision = function (triangleElements, material, pickingCollision, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var rayPosition = pickingCollision.rayPosition;\n        var rayDirection = pickingCollision.rayDirection;\n        var t;\n        var i0, i1, i2;\n        var rx, ry, rz;\n        var nx, ny, nz;\n        var cx, cy, cz;\n        var coeff, u, v, w;\n        var p0x, p0y, p0z;\n        var p1x, p1y, p1z;\n        var p2x, p2y, p2z;\n        var s0x, s0y, s0z;\n        var s1x, s1y, s1z;\n        var nl, nDotV, D, disToPlane;\n        var Q1Q2, Q1Q1, Q2Q2, RQ1, RQ2;\n        var collisionTriangleIndex = -1;\n        var bothSides = material.bothSides;\n        var positions = triangleElements.positions.get(count, offset);\n        var posDim = triangleElements.positions.dimensions;\n        var indices;\n        if (triangleElements.indices) {\n            indices = triangleElements.indices.get(triangleElements.numElements);\n            count = indices.length;\n        }\n        for (var index = 0; index < count; index += 3) {\n            // evaluate triangle indices\n            if (indices) {\n                i0 = indices[index] * posDim;\n                i1 = indices[index + 1] * posDim;\n                i2 = indices[index + 2] * posDim;\n            }\n            else {\n                i0 = index * posDim;\n                i1 = (index + 1) * posDim;\n                i2 = (index + 2) * posDim;\n            }\n            // evaluate triangle positions\n            p0x = positions[i0];\n            p1x = positions[i1];\n            p2x = positions[i2];\n            s0x = p1x - p0x; // s0 = p1 - p0\n            s1x = p2x - p0x; // s1 = p2 - p0\n            p0y = positions[i0 + 1];\n            p1y = positions[i1 + 1];\n            p2y = positions[i2 + 1];\n            s0y = p1y - p0y;\n            s1y = p2y - p0y;\n            if (posDim == 3) {\n                p0z = positions[i0 + 2];\n                p1z = positions[i1 + 2];\n                p2z = positions[i2 + 2];\n                s0z = p1z - p0z;\n                s1z = p2z - p0z;\n                // evaluate sides and triangle normal\n                nx = s0y * s1z - s0z * s1y; // n = s0 x s1\n                ny = s0z * s1x - s0x * s1z;\n                nz = s0x * s1y - s0y * s1x;\n                nl = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz); // normalize n\n                nx *= nl;\n                ny *= nl;\n                nz *= nl;\n            }\n            else {\n                nx = 0;\n                ny = 0;\n                nz = 1;\n            }\n            // -- plane intersection test --\n            nDotV = nx * rayDirection.x + ny * +rayDirection.y + nz * rayDirection.z; // rayDirection . normal\n            if ((!bothSides && nDotV < 0.0) || (bothSides && nDotV != 0.0)) {\n                // find collision t\n                D = -(nx * p0x + ny * p0y + nz * p0z);\n                disToPlane = -(nx * rayPosition.x + ny * rayPosition.y + nz * rayPosition.z + D);\n                t = disToPlane / nDotV;\n                // find collision point\n                cx = rayPosition.x + t * rayDirection.x;\n                cy = rayPosition.y + t * rayDirection.y;\n                cz = rayPosition.z + t * rayDirection.z;\n                // collision point inside triangle? ( using barycentric coordinates )\n                Q1Q2 = s0x * s1x + s0y * s1y + s0z * s1z;\n                Q1Q1 = s0x * s0x + s0y * s0y + s0z * s0z;\n                Q2Q2 = s1x * s1x + s1y * s1y + s1z * s1z;\n                rx = cx - p0x;\n                ry = cy - p0y;\n                rz = cz - p0z;\n                RQ1 = rx * s0x + ry * s0y + rz * s0z;\n                RQ2 = rx * s1x + ry * s1y + rz * s1z;\n                coeff = 1 / (Q1Q1 * Q2Q2 - Q1Q2 * Q1Q2);\n                v = coeff * (Q2Q2 * RQ1 - Q1Q2 * RQ2);\n                w = coeff * (-Q1Q2 * RQ1 + Q1Q1 * RQ2);\n                if (v < 0)\n                    continue;\n                if (w < 0)\n                    continue;\n                u = 1 - v - w;\n                if (!(u < 0) && t > 0 && t < pickingCollision.rayEntryDistance) {\n                    collisionTriangleIndex = index / 3;\n                    pickingCollision.rayEntryDistance = t;\n                    pickingCollision.position = new Vector3D_1.Vector3D(cx, cy, cz);\n                    pickingCollision.normal = new Vector3D_1.Vector3D(nx, ny, nz);\n                    if (triangleElements.uvs) {\n                        var uvs = triangleElements.uvs.get(triangleElements.numVertices);\n                        var uvDim = triangleElements.uvs.dimensions;\n                        var uIndex = indices[index] * uvDim;\n                        var uv0 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 1] * uvDim;\n                        var uv1 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n                        uIndex = indices[index + 2] * uvDim;\n                        var uv2 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n                        pickingCollision.uv = new Point_1.Point(u * uv0.x + v * uv1.x + w * uv2.x, u * uv0.y + v * uv1.y + w * uv2.y);\n                    }\n                    pickingCollision.elementIndex = collisionTriangleIndex;\n                    // if not looking for best hit, first found will do...\n                    if (!this._findClosestCollision)\n                        return true;\n                }\n            }\n        }\n        if (collisionTriangleIndex >= 0)\n            return true;\n        return false;\n    };\n    //\n    ///**\n    // * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n    // *\n    // * @param triangleElements\n    // * @param material\n    // * @param pickingCollision\n    // * @returns {boolean}\n    // */\n    //public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n    //{\n    //\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n    //\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n    //\n    //\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n    //\t//this will only work while all points lie on the x/y plane\n    //\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n    //\n    //\tvar result:Vector3D = new Vector3D();\n    //\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n    //\tresult.x = rayPosition.x - ( plane.x*distance);\n    //\tresult.y = rayPosition.y - ( plane.y*distance);\n    //\tresult.z = rayPosition.z - ( plane.z*distance);\n    //\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n    //\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n    //\trayDirection.scaleBy(t);\n    //\tvar p:Vector3D = rayPosition.add(rayDirection);\n    //\n    //\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n    //\tvar collisionCurveIndex:number = -1;\n    //\tvar bothSides:boolean = material.bothSides;\n    //\n    //\n    //\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n    //\tvar posDim:number = curveElements.positions.dimensions;\n    //\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n    //\tvar curveDim:number = curveElements.curves.dimensions;\n    //\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n    //\tvar uvDim:number = curveElements.uvs.dimensions;\n    //\tvar numIndices:number = indices.length;\n    //\n    //\n    //\tfor(var index:number = 0; index < numIndices; index+=3)\n    //\t{\n    //\t\tvar id0:number = indices[index];\n    //\t\tvar id1:number = indices[index + 1] * posDim;\n    //\t\tvar id2:number = indices[index + 2] * posDim;\n    //\n    //\t\tvar ax:number = positions[id0 * posDim];\n    //\t\tvar ay:number = positions[id0 * posDim + 1];\n    //\t\tvar bx:number = positions[id1];\n    //\t\tvar by:number = positions[id1 + 1];\n    //\t\tvar cx:number = positions[id2];\n    //\t\tvar cy:number = positions[id2 + 1];\n    //\n    //\t\tvar curvex:number = curves[id0 * curveDim];\n    //\t\tvar az:number = positions[id0 * posDim + 2];\n    //\n    //\t\t//console.log(ax, ay, bx, by, cx, cy);\n    //\n    //\t\t//from a to p\n    //\t\tvar dx:number = ax - p.x;\n    //\t\tvar dy:number = ay - p.y;\n    //\n    //\t\t//edge normal (a-b)\n    //\t\tvar nx:number = by - ay;\n    //\t\tvar ny:number = -(bx - ax);\n    //\n    //\t\t//console.log(ax,ay,bx,by,cx,cy);\n    //\n    //\t\tvar dot:number = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot a\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = bx - p.x;\n    //\t\tdy = by - p.y;\n    //\t\tnx = cy - by;\n    //\t\tny = -(cx - bx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot b\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\tdx = cx - p.x;\n    //\t\tdy = cy - p.y;\n    //\t\tnx = ay - cy;\n    //\t\tny = -(ax - cx);\n    //\n    //\t\tdot = (dx * nx) + (dy * ny);\n    //\t\t//console.log(\"dot c\",dot);\n    //\t\tif (dot > 0)\n    //\t\t\tcontinue;\n    //\n    //\t\t//check if not solid\n    //\t\tif (curvex != 2) {\n    //\n    //\t\t\tvar v0x:number = bx - ax;\n    //\t\t\tvar v0y:number = by - ay;\n    //\t\t\tvar v1x:number = cx - ax;\n    //\t\t\tvar v1y:number = cy - ay;\n    //\t\t\tvar v2x:number = p.x - ax;\n    //\t\t\tvar v2y:number = p.y - ay;\n    //\n    //\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n    //\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n    //\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n    //\t\t\tvar u:number = 1 - v - w;\n    //\n    //\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n    //\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n    //\n    //\t\t\tvar d:number = uu * uu - vv;\n    //\n    //\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n    //\t\t\t\tcontinue;\n    //\t\t}\n    //\t\t//TODO optimize away this pointless check as the distance is always the same\n    //\t\t//also this stuff should only be calculated right before the return and not for each hit\n    //\t\tif (distance < shortestCollisionDistance) {\n    //\t\t\tshortestCollisionDistance = distance;\n    //\t\t\tcollisionCurveIndex = index/3;\n    //\t\t\tpickingCollision.rayEntryDistance = distance;\n    //\t\t\tpickingCollision.localPosition = p;\n    //\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n    //\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n    //\t\t\tpickingCollision.index = index;\n    //\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n    //\n    //\t\t\t// if not looking for best hit, first found will do...\n    //\t\t\tif (!this._findClosestCollision)\n    //\t\t\t\treturn true;\n    //\t\t}\n    //\t}\n    //\n    //\tif (collisionCurveIndex >= 0)\n    //\t\treturn true;\n    //\n    //\treturn false;\n    //}\n    /**\n     * Tests a <code>LineElements</code> object for a collision with the picking ray.\n     *\n     * @param triangleElements\n     * @param material\n     * @param pickingCollision\n     * @returns {boolean}\n     */\n    JSPickingCollider.prototype.testLineCollision = function (lineElements, material, pickingCollision, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        return false;\n    };\n    return JSPickingCollider;\n}());\nexports.JSPickingCollider = JSPickingCollider;\n\n},{\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick/PickingCollision\":[function(require,module,exports){\n\"use strict\";\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nvar PickingCollision = (function () {\n    /**\n     * Creates a new <code>PickingCollision</code> object.\n     *\n     * @param entity The entity to which this collision object belongs.\n     */\n    function PickingCollision(entity) {\n        this.entity = entity;\n    }\n    return PickingCollision;\n}());\nexports.PickingCollision = PickingCollision;\n\n},{}],\"awayjs-display/lib/pick/RaycastPicker\":[function(require,module,exports){\n\"use strict\";\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nvar RaycastPicker = (function () {\n    /**\n     * Creates a new <code>RaycastPicker</code> object.\n     *\n     * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n     * or simply returns the first collision encountered. Defaults to false.\n     */\n    function RaycastPicker(findClosestCollision) {\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\n        this._entities = new Array();\n        /**\n         * @inheritDoc\n         */\n        this.onlyMouseEnabled = true;\n        this._findClosestCollision = findClosestCollision;\n    }\n    /**\n     * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n     *\n     * @param node The Partition3DNode object to frustum-test.\n     */\n    RaycastPicker.prototype.enterNode = function (node) {\n        return node.isIntersectingRay(this._rayPosition, this._rayDirection) && !node.isMask();\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getViewCollision = function (x, y, view) {\n        this._x = x;\n        this._y = y;\n        this._view = view;\n        //update ray\n        var rayPosition = view.unproject(x, y, 0);\n        var rayDirection = view.unproject(x, y, 1).subtract(rayPosition);\n        return this.getSceneCollision(rayPosition, rayDirection, view.scene);\n    };\n    /**\n     * @inheritDoc\n     */\n    RaycastPicker.prototype.getSceneCollision = function (rayPosition, rayDirection, scene) {\n        this._rayPosition = rayPosition;\n        this._rayDirection = rayDirection;\n        // collect entities to test\n        scene.traversePartitions(this);\n        //early out if no collisions detected\n        if (!this._entities.length)\n            return null;\n        var collision = this.getPickingCollision();\n        //discard entities\n        this._entities.length = 0;\n        return collision;\n    };\n    //\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n    //\t\t{\n    //\t\t\tthis._numRenderables = 0;\n    //\n    //\t\t\tvar renderable:IEntity;\n    //\t\t\tvar l:number = entities.length;\n    //\n    //\t\t\tfor (var c:number = 0; c < l; c++) {\n    //\t\t\t\trenderable = entities[c];\n    //\n    //\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n    //\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n    //\t\t\t}\n    //\n    //\t\t\treturn this.getPickingCollision(this._raycastCollector);\n    //\t\t}\n    RaycastPicker.prototype.setIgnoreList = function (entities) {\n        this._ignoredEntities = entities;\n    };\n    RaycastPicker.prototype.isIgnored = function (entity) {\n        if (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n            return true;\n        if (this._ignoredEntities) {\n            var len = this._ignoredEntities.length;\n            for (var i = 0; i < len; i++)\n                if (this._ignoredEntities[i] == entity)\n                    return true;\n        }\n        return false;\n    };\n    RaycastPicker.prototype.sortOnNearT = function (entity1, entity2) {\n        return entity2._iPickingCollision.rayEntryDistance - entity1._iPickingCollision.rayEntryDistance;\n    };\n    RaycastPicker.prototype.getPickingCollision = function () {\n        // Sort entities from closest to furthest to reduce tests.\n        this._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n        // ---------------------------------------------------------------------\n        // Evaluate triangle collisions when needed.\n        // Replaces collision data provided by bounds collider with more precise data.\n        // ---------------------------------------------------------------------\n        this._bestCollision = null;\n        var entity;\n        var len = this._entities.length;\n        for (var i = len - 1; i >= 0; i--) {\n            entity = this._entities[i];\n            this._testCollision = entity._iPickingCollision;\n            if (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n                this._testCollider = entity.pickingCollider;\n                if (this._testCollider) {\n                    this._testCollision.rayEntryDistance = Number.MAX_VALUE;\n                    entity._acceptTraverser(this);\n                    // If a collision exists, update the collision data and stop all checks.\n                    if (this._bestCollision && !this._findClosestCollision)\n                        break;\n                }\n                else if (!this._testCollision.rayOriginIsInsideBounds) {\n                    // A bounds collision with no picking collider stops all checks.\n                    // Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n                    // to enable the detection of a corresponsding triangle collision.\n                    // Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n                    // if it has been established that there is NO triangle collider to test\n                    this._bestCollision = this._testCollision;\n                    break;\n                }\n            }\n        }\n        if (this._bestCollision)\n            this.updatePosition(this._bestCollision);\n        return this._bestCollision;\n    };\n    RaycastPicker.prototype.updatePosition = function (pickingCollision) {\n        var collisionPos = pickingCollision.position || (pickingCollision.position = new Vector3D_1.Vector3D());\n        var rayDir = pickingCollision.rayDirection;\n        var rayPos = pickingCollision.rayPosition;\n        var t = pickingCollision.rayEntryDistance;\n        collisionPos.x = rayPos.x + t * rayDir.x;\n        collisionPos.y = rayPos.y + t * rayDir.y;\n        collisionPos.z = rayPos.z + t * rayDir.z;\n    };\n    RaycastPicker.prototype.dispose = function () {\n        //TODO\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyEntity = function (entity) {\n        if (!this.isIgnored(entity))\n            this._entities.push(entity);\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyRenderable = function (renderable) {\n        if (renderable._iTestCollision(this._testCollision, this._testCollider))\n            this._bestCollision = this._testCollision;\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyDirectionalLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyLightProbe = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applyPointLight = function (entity) {\n        //don't do anything here\n    };\n    /**\n     *\n     * @param entity\n     */\n    RaycastPicker.prototype.applySkybox = function (entity) {\n        //don't do anything here\n    };\n    return RaycastPicker;\n}());\nexports.RaycastPicker = RaycastPicker;\n\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick\":[function(require,module,exports){\n\"use strict\";\nvar JSPickingCollider_1 = require(\"./pick/JSPickingCollider\");\nexports.JSPickingCollider = JSPickingCollider_1.JSPickingCollider;\nvar PickingCollision_1 = require(\"./pick/PickingCollision\");\nexports.PickingCollision = PickingCollision_1.PickingCollision;\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\nexports.RaycastPicker = RaycastPicker_1.RaycastPicker;\n\n},{\"./pick/JSPickingCollider\":\"awayjs-display/lib/pick/JSPickingCollider\",\"./pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\"}],\"awayjs-display/lib/prefabs/PrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nvar PrefabBase = (function (_super) {\n    __extends(PrefabBase, _super);\n    //\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n    /**\n     * Creates a new PrefabBase object.\n     */\n    function PrefabBase() {\n        _super.call(this);\n        this._pObjects = new Array();\n    }\n    /**\n     * Returns a display object generated from this prefab\n     */\n    PrefabBase.prototype.getNewObject = function () {\n        var object = this._pCreateObject();\n        this._pObjects.push(object);\n        return object;\n    };\n    //\t\tpublic getNewBatchObject():BatchObject\n    //\t\t{\n    //\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n    //\n    //\t\t\tthis._pBatchObjects.push(object);\n    //\n    //\t\t\treturn object;\n    //\t\t}\n    PrefabBase.prototype._pCreateObject = function () {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    PrefabBase.prototype._iValidate = function () {\n        // To be overridden when necessary\n    };\n    return PrefabBase;\n}(AssetBase_1.AssetBase));\nexports.PrefabBase = PrefabBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Capsule primitive sprite.\n */\nvar PrimitiveCapsulePrefab = (function (_super) {\n    __extends(PrimitiveCapsulePrefab, _super);\n    /**\n     * Creates a new Capsule object.\n     * @param radius The radius of the capsule.\n     * @param height The height of the capsule.\n     * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n     * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCapsulePrefab(material, elementsType, radius, height, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 15; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._height = height;\n        this._segmentsW = segmentsW;\n        this._segmentsH = (segmentsH % 2 == 0) ? segmentsH + 1 : segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the capsule.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"height\", {\n        /**\n         * The height of the capsule.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = (value % 2 == 0) ? value + 1 : value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var triIndex = 0;\n        var index = 0;\n        var startIndex;\n        var comp1, comp2, t1, t2;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsH + 1) * (this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n            numIndices = (this._segmentsH - 1) * this._segmentsW * 6; // each level has segmentH quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                startIndex = index;\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var offset = j > this._segmentsH / 2 ? this._height / 2 : -this._height / 2;\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[index] = positions[startIndex];\n                        positions[index + 1] = positions[startIndex + 1];\n                        positions[index + 2] = positions[startIndex + 2];\n                        normals[index] = (normals[startIndex] + (x * normLen)) * .5;\n                        normals[index + 1] = (normals[startIndex + 1] + (comp1 * normLen)) * .5;\n                        normals[index + 2] = (normals[startIndex + 2] + (comp2 * normLen)) * .5;\n                        tangents[index] = (tangents[startIndex] + (tanLen > .007 ? -y / tanLen : 1)) * .5;\n                        tangents[index + 1] = (tangents[startIndex + 1] + t1) * .5;\n                        tangents[index + 2] = (tangents[startIndex + 2] + t2) * .5;\n                    }\n                    else {\n                        // vertex\n                        positions[index] = x;\n                        positions[index + 1] = (this._yUp) ? comp1 - offset : comp1;\n                        positions[index + 2] = (this._yUp) ? comp2 : comp2 + offset;\n                        // normal\n                        normals[index] = x * normLen;\n                        normals[index + 1] = comp1 * normLen;\n                        normals[index + 2] = comp2 * normLen;\n                        // tangent\n                        tangents[index] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[index + 1] = t1;\n                        tangents[index + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[index] = positions[startIndex];\n                            positions[index + 1] = positions[startIndex + 1];\n                            positions[index + 2] = positions[startIndex + 2];\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                        }\n                        else {\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = b;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = a;\n                            indices[triIndex++] = c;\n                            indices[triIndex++] = d;\n                        }\n                    }\n                    index += 3;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCapsulePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitiveCapsulePrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveConePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV Cone primitive sprite.\n */\nvar PrimitiveConePrefab = (function (_super) {\n    __extends(PrimitiveConePrefab, _super);\n    /**\n     * Creates a new Cone object.\n     * @param radius The radius of the bottom end of the cone\n     * @param height The height of the cone\n     * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveConePrefab(material, elementsType, radius, height, segmentsW, segmentsH, closed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (closed === void 0) { closed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n    }\n    Object.defineProperty(PrimitiveConePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the bottom end of the cone.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitiveConePrefab;\n}(PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab));\nexports.PrimitiveConePrefab = PrimitiveConePrefab;\n\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Cube primitive prefab.\n */\nvar PrimitiveCubePrefab = (function (_super) {\n    __extends(PrimitiveCubePrefab, _super);\n    /**\n     * Creates a new Cube object.\n     * @param width The size of the cube along its X-axis.\n     * @param height The size of the cube along its Y-axis.\n     * @param depth The size of the cube along its Z-axis.\n     * @param segmentsW The number of segments that make up the cube along the X-axis.\n     * @param segmentsH The number of segments that make up the cube along the Y-axis.\n     * @param segmentsD The number of segments that make up the cube along the Z-axis.\n     * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n     */\n    function PrimitiveCubePrefab(material, elementsType, width, height, depth, segmentsW, segmentsH, segmentsD, tile6) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (depth === void 0) { depth = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (segmentsD === void 0) { segmentsD = 1; }\n        if (tile6 === void 0) { tile6 = true; }\n        _super.call(this, material, elementsType);\n        this._width = width;\n        this._height = height;\n        this._depth = depth;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._segmentsD = segmentsD;\n        this._tile6 = tile6;\n    }\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"width\", {\n        /**\n         * The size of the cube along its X-axis.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"height\", {\n        /**\n         * The size of the cube along its Y-axis.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"depth\", {\n        /**\n         * The size of the cube along its Z-axis.\n         */\n        get: function () {\n            return this._depth;\n        },\n        set: function (value) {\n            this._depth = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"tile6\", {\n        /**\n         * The type of uv mapping to use. When false, the entire image is mapped on each face.\n         * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n         * Reading the tiles from left to right, top to bottom they represent the faces of the\n         * cube in the following order: bottom, top, back, left, front, right. This creates\n         * several shared edges (between the top, front, left and right faces) which simplifies\n         * texture painting.\n         */\n        get: function () {\n            return this._tile6;\n        },\n        set: function (value) {\n            this._tile6 = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the cube along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsD\", {\n        /**\n         * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsD;\n        },\n        set: function (value) {\n            this._segmentsD = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var tl, tr, bl, br;\n        var i, j, inc = 0;\n        var vidx, fidx; // indices\n        var hw, hh, hd; // halves\n        var dw, dh, dd; // deltas\n        var outer_pos;\n        // half cube dimensions\n        hw = this._width / 2;\n        hh = this._height / 2;\n        hd = this._depth / 2;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var numIndices = ((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // Segment dimensions\n            dw = this._width / this._segmentsW;\n            dh = this._height / this._segmentsH;\n            dd = this._depth / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // front\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = -hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = -1;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // back\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = hd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 1;\n                    tangents[vidx] = -1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsH + 1);\n            for (i = 0; i <= this._segmentsW; i++) {\n                outer_pos = -hw + i * dw;\n                for (j = 0; j <= this._segmentsD; j++) {\n                    // top\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = 1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // bottom\n                    positions[vidx] = outer_pos;\n                    positions[vidx + 1] = -hh;\n                    positions[vidx + 2] = -hd + j * dd;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = -1;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsD + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsD + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsD + 1);\n            for (i = 0; i <= this._segmentsD; i++) {\n                outer_pos = hd - i * dd;\n                for (j = 0; j <= this._segmentsH; j++) {\n                    // left\n                    positions[vidx] = -hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = -1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = -1;\n                    vidx += 3;\n                    // right\n                    positions[vidx] = hw;\n                    positions[vidx + 1] = -hh + j * dh;\n                    positions[vidx + 2] = outer_pos;\n                    normals[vidx] = 1;\n                    normals[vidx + 1] = 0;\n                    normals[vidx + 2] = 0;\n                    tangents[vidx] = 0;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 1;\n                    vidx += 3;\n                    if (i && j) {\n                        tl = inc + 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\n                        tr = inc + 2 * (i * (this._segmentsH + 1) + (j - 1));\n                        bl = tl + 2;\n                        br = tr + 2;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = bl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tl;\n                        indices[fidx++] = br;\n                        indices[fidx++] = tr;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = br + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tr + 1;\n                        indices[fidx++] = bl + 1;\n                        indices[fidx++] = tl + 1;\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * 4 + this._segmentsW * 4 + this._segmentsD * 4;\n            var thickness;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            //front/back face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            //left/right face\n            for (i = 0; i < this._segmentsH; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = -hw;\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n            }\n            //top/bottom face\n            for (i = 0; i < this._segmentsD; ++i) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                positions[vidx++] = hw;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\n                thickness[fidx++] = 1;\n                positions[vidx++] = -hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                positions[vidx++] = hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\n                thickness[fidx++] = 1;\n            }\n            for (i = 0; i < this._segmentsW; ++i) {\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\n                positions[vidx++] = -hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = -hd;\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\n                positions[vidx++] = hh;\n                positions[vidx++] = hd;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCubePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j, index;\n        var uvs;\n        var u_tile_dim, v_tile_dim;\n        var u_tile_step, v_tile_step;\n        var tl0u, tl0v;\n        var tl1u, tl1v;\n        var du, dv;\n        var numVertices;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            if (this._tile6) {\n                u_tile_dim = u_tile_step = 1 / 3;\n                v_tile_dim = v_tile_step = 1 / 2;\n            }\n            else {\n                u_tile_dim = v_tile_dim = 1;\n                u_tile_step = v_tile_step = 0;\n            }\n            // Create planes two and two, the same way that they were\n            // constructed in the buildGraphics() function. First calculate\n            // the top-left UV coordinate for both planes, and then loop\n            // over the points, calculating the UVs from these numbers.\n            // When tile6 is true, the layout is as follows:\n            //       .-----.-----.-----. (1,1)\n            //       | Bot |  T  | Bak |\n            //       |-----+-----+-----|\n            //       |  L  |  F  |  R  |\n            // (0,0)'-----'-----'-----'\n            index = 0;\n            // FRONT / BACK\n            tl0u = 1 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            // TOP / BOTTOM\n            tl0u = 1 * u_tile_step;\n            tl0v = 0 * v_tile_step;\n            tl1u = 0 * u_tile_step;\n            tl1v = 0 * v_tile_step;\n            du = u_tile_dim / this._segmentsW;\n            dv = v_tile_dim / this._segmentsD;\n            for (i = 0; i <= this._segmentsW; i++) {\n                for (j = 0; j <= this._segmentsD; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + i * du) * this._scaleU;\n                    uvs[index++] = (tl1v + j * dv) * this._scaleV;\n                }\n            }\n            // LEFT / RIGHT\n            tl0u = 0 * u_tile_step;\n            tl0v = 1 * v_tile_step;\n            tl1u = 2 * u_tile_step;\n            tl1v = 1 * v_tile_step;\n            du = u_tile_dim / this._segmentsD;\n            dv = v_tile_dim / this._segmentsH;\n            for (i = 0; i <= this._segmentsD; i++) {\n                for (j = 0; j <= this._segmentsH; j++) {\n                    uvs[index++] = (tl0u + i * du) * this._scaleU;\n                    uvs[index++] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\n                    uvs[index++] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\n                    uvs[index++] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitiveCubePrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Cylinder primitive sprite.\n */\nvar PrimitiveCylinderPrefab = (function (_super) {\n    __extends(PrimitiveCylinderPrefab, _super);\n    /**\n     * Creates a new Cylinder object.\n     * @param topRadius The radius of the top end of the cylinder.\n     * @param bottomRadius The radius of the bottom end of the cylinder\n     * @param height The radius of the bottom end of the cylinder\n     * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n     * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n     * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n     * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveCylinderPrefab(material, elementsType, topRadius, bottomRadius, height, segmentsW, segmentsH, topClosed, bottomClosed, surfaceClosed, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (topRadius === void 0) { topRadius = 50; }\n        if (bottomRadius === void 0) { bottomRadius = 50; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (topClosed === void 0) { topClosed = true; }\n        if (bottomClosed === void 0) { bottomClosed = true; }\n        if (surfaceClosed === void 0) { surfaceClosed = true; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._topRadius = topRadius;\n        this._pBottomRadius = bottomRadius;\n        this._height = height;\n        this._pSegmentsW = segmentsW;\n        this._pSegmentsH = segmentsH;\n        this._topClosed = topClosed;\n        this._bottomClosed = bottomClosed;\n        this._surfaceClosed = surfaceClosed;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topRadius\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._topRadius;\n        },\n        set: function (value) {\n            this._topRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomRadius\", {\n        /**\n         * The radius of the bottom end of the cylinder.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"height\", {\n        /**\n         * The radius of the top end of the cylinder.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsW = function (value) {\n        this._pSegmentsW = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PrimitiveCylinderPrefab.prototype.setSegmentsH = function (value) {\n        this._pSegmentsH = value;\n        this._pInvalidatePrimitive();\n        this._pInvalidateUVs();\n    };\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topClosed\", {\n        /**\n         * Defines whether the top end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._topClosed;\n        },\n        set: function (value) {\n            this._topClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomClosed\", {\n        /**\n         * Defines whether the bottom end of the cylinder is closed (true) or open.\n         */\n        get: function () {\n            return this._bottomClosed;\n        },\n        set: function (value) {\n            this._bottomClosed = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var x;\n        var y;\n        var z;\n        var vidx;\n        var fidx;\n        var radius;\n        var revolutionAngle;\n        var dr;\n        var latNormElev;\n        var latNormBase;\n        var numIndices = 0;\n        var comp1;\n        var comp2;\n        var startIndex = 0;\n        var nextVertexIndex = 0;\n        var centerVertexIndex = 0;\n        var t1;\n        var t2;\n        // reset utility variables\n        this._numVertices = 0;\n        // evaluate revolution steps\n        var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            if (this._surfaceClosed) {\n                this._numVertices += (this._pSegmentsH + 1) * (this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n                numIndices += this._pSegmentsH * this._pSegmentsW * 6; // each level has segmentW quads, each of 2 triangles\n            }\n            if (this._topClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n                numIndices += this._pSegmentsW * 3; // one triangle for each segment\n            }\n            if (this._bottomClosed) {\n                this._numVertices += 2 * (this._pSegmentsW + 1);\n                numIndices += this._pSegmentsW * 3;\n            }\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // top\n            if (this._topClosed && this._topRadius > 0) {\n                z = -0.5 * this._height;\n                // central vertex\n                if (this._yUp) {\n                    t1 = 1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = -1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                positions[vidx] = 0;\n                positions[vidx + 1] = comp1;\n                positions[vidx + 2] = comp2;\n                normals[vidx] = 0;\n                normals[vidx + 1] = t1;\n                normals[vidx + 2] = t2;\n                tangents[vidx] = 1;\n                tangents[vidx + 1] = 0;\n                tangents[vidx + 2] = 0;\n                vidx += 3;\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._topRadius * Math.cos(revolutionAngle);\n                    y = this._topRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = centerVertexIndex;\n                        indices[fidx++] = nextVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // bottom\n            if (this._bottomClosed && this._pBottomRadius > 0) {\n                z = 0.5 * this._height;\n                startIndex = nextVertexIndex * 3;\n                centerVertexIndex = nextVertexIndex;\n                // central vertex\n                if (this._yUp) {\n                    t1 = -1;\n                    t2 = 0;\n                    comp1 = -z;\n                    comp2 = 0;\n                }\n                else {\n                    t1 = 0;\n                    t2 = 1;\n                    comp1 = 0;\n                    comp2 = z;\n                }\n                if (i > 0) {\n                    positions[vidx] = 0;\n                    positions[vidx + 1] = comp1;\n                    positions[vidx + 2] = comp2;\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                }\n                nextVertexIndex += 1;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = this._pBottomRadius * Math.cos(revolutionAngle);\n                    y = this._pBottomRadius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._pSegmentsW) {\n                        positions[vidx] = positions[startIndex + 3];\n                        positions[vidx + 1] = positions[startIndex + 4];\n                        positions[vidx + 2] = positions[startIndex + 5];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = 0;\n                    normals[vidx + 1] = t1;\n                    normals[vidx + 2] = t2;\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    if (i > 0) {\n                        // add triangle\n                        indices[fidx++] = nextVertexIndex - 1;\n                        indices[fidx++] = nextVertexIndex;\n                        indices[fidx++] = centerVertexIndex;\n                    }\n                    nextVertexIndex += 1;\n                }\n            }\n            // The normals on the lateral surface all have the same incline, i.e.\n            // the \"elevation\" component (Y or Z depending on yUp) is constant.\n            // Same principle goes for the \"base\" of these vectors, which will be\n            // calculated such that a vector [base,elev] will be a unit vector.\n            dr = (this._pBottomRadius - this._topRadius);\n            latNormElev = dr / this._height;\n            latNormBase = (latNormElev == 0) ? 1 : this._height / dr;\n            // lateral surface\n            if (this._surfaceClosed) {\n                var a;\n                var b;\n                var c;\n                var d;\n                var na0, na1, naComp1, naComp2;\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                    z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                    startIndex = nextVertexIndex * 3;\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        revolutionAngle = i * revolutionAngleDelta;\n                        x = radius * Math.cos(revolutionAngle);\n                        y = radius * Math.sin(revolutionAngle);\n                        na0 = latNormBase * Math.cos(revolutionAngle);\n                        na1 = latNormBase * Math.sin(revolutionAngle);\n                        if (this._yUp) {\n                            t1 = 0;\n                            t2 = -na0;\n                            comp1 = -z;\n                            comp2 = y;\n                            naComp1 = latNormElev;\n                            naComp2 = na1;\n                        }\n                        else {\n                            t1 = -na0;\n                            t2 = 0;\n                            comp1 = y;\n                            comp2 = z;\n                            naComp1 = na1;\n                            naComp2 = latNormElev;\n                        }\n                        if (i == this._pSegmentsW) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = latNormElev;\n                            normals[vidx + 2] = na1;\n                            tangents[vidx] = na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        else {\n                            positions[vidx] = x;\n                            positions[vidx + 1] = comp1;\n                            positions[vidx + 2] = comp2;\n                            normals[vidx] = na0;\n                            normals[vidx + 1] = naComp1;\n                            normals[vidx + 2] = naComp2;\n                            tangents[vidx] = -na1;\n                            tangents[vidx + 1] = t1;\n                            tangents[vidx + 2] = t2;\n                        }\n                        vidx += 3;\n                        // close triangle\n                        if (i > 0 && j > 0) {\n                            a = nextVertexIndex; // current\n                            b = nextVertexIndex - 1; // previous\n                            c = b - this._pSegmentsW - 1; // previous of last level\n                            d = a - this._pSegmentsW - 1; // current of last level\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        nextVertexIndex++;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._pSegmentsH * this._pSegmentsW * 2 + this._pSegmentsW;\n            positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            var _radius = 50;\n            for (j = 0; j <= this._pSegmentsH; ++j) {\n                radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\n                z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    // revolution vertex\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = radius * Math.cos(revolutionAngle);\n                    y = radius * Math.sin(revolutionAngle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._pSegmentsW - i) + 12 * i) : 3 - this._pSegmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._pSegmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveCylinderPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i;\n        var j;\n        var x;\n        var y;\n        var revolutionAngle;\n        var uvs;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // evaluate revolution steps\n            var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\n            // current uv component index\n            var index = 0;\n            // top\n            if (this._topClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * -Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // bottom\n            if (this._bottomClosed) {\n                uvs[index++] = 0.5 * this._scaleU; // central vertex\n                uvs[index++] = 0.5 * this._scaleV;\n                for (i = 0; i <= this._pSegmentsW; ++i) {\n                    revolutionAngle = i * revolutionAngleDelta;\n                    x = 0.5 + 0.5 * Math.cos(revolutionAngle);\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\n                    uvs[index++] = x * this._scaleU; // revolution vertex\n                    uvs[index++] = y * this._scaleV;\n                }\n            }\n            // lateral surface\n            if (this._surfaceClosed) {\n                for (j = 0; j <= this._pSegmentsH; ++j) {\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\n                        // revolution vertex\n                        uvs[index++] = (i / this._pSegmentsW) * this._scaleU;\n                        uvs[index++] = (j / this._pSegmentsH) * this._scaleV;\n                    }\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitiveCylinderPrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A Plane primitive sprite.\n */\nvar PrimitivePlanePrefab = (function (_super) {\n    __extends(PrimitivePlanePrefab, _super);\n    /**\n     * Creates a new Plane object.\n     * @param width The width of the plane.\n     * @param height The height of the plane.\n     * @param segmentsW The number of segments that make up the plane along the X-axis.\n     * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n     * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n     * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n     */\n    function PrimitivePlanePrefab(material, elementsType, width, height, segmentsW, segmentsH, yUp, doubleSided) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (width === void 0) { width = 100; }\n        if (height === void 0) { height = 100; }\n        if (segmentsW === void 0) { segmentsW = 1; }\n        if (segmentsH === void 0) { segmentsH = 1; }\n        if (yUp === void 0) { yUp = true; }\n        if (doubleSided === void 0) { doubleSided = false; }\n        _super.call(this, material, elementsType);\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n        this._width = width;\n        this._height = height;\n        this._doubleSided = doubleSided;\n    }\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsW\", {\n        /**\n         * The number of segments that make up the plane along the X-axis. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsH\", {\n        /**\n         * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n         * false, respectively. Defaults to 1.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"yUp\", {\n        /**\n         *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"doubleSided\", {\n        /**\n         * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n         */\n        get: function () {\n            return this._doubleSided;\n        },\n        set: function (value) {\n            this._doubleSided = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"width\", {\n        /**\n         * The width of the plane.\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"height\", {\n        /**\n         * The height of the plane.\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var x, y;\n        var numIndices;\n        var base;\n        var tw = this._segmentsW + 1;\n        var vidx, fidx; // indices\n        var xi;\n        var yi;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            var numVertices = (this._segmentsH + 1) * tw;\n            var positions;\n            var normals;\n            var tangents;\n            if (this._doubleSided)\n                numVertices *= 2;\n            numIndices = this._segmentsH * this._segmentsW * 6;\n            if (this._doubleSided)\n                numIndices *= 2;\n            if (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                this._pInvalidateUVs();\n            }\n            if (numVertices == triangleGraphics.numVertices) {\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                for (xi = 0; xi <= this._segmentsW; ++xi) {\n                    x = (xi / this._segmentsW - .5) * this._width;\n                    y = (yi / this._segmentsH - .5) * this._height;\n                    positions[vidx] = x;\n                    if (this._yUp) {\n                        positions[vidx + 1] = 0;\n                        positions[vidx + 2] = y;\n                    }\n                    else {\n                        positions[vidx + 1] = y;\n                        positions[vidx + 2] = 0;\n                    }\n                    normals[vidx] = 0;\n                    if (this._yUp) {\n                        normals[vidx + 1] = 1;\n                        normals[vidx + 2] = 0;\n                    }\n                    else {\n                        normals[vidx + 1] = 0;\n                        normals[vidx + 2] = -1;\n                    }\n                    tangents[vidx] = 1;\n                    tangents[vidx + 1] = 0;\n                    tangents[vidx + 2] = 0;\n                    vidx += 3;\n                    // add vertex with same position, but with inverted normal & tangent\n                    if (this._doubleSided) {\n                        for (var i = vidx; i < vidx + 3; ++i) {\n                            positions[i] = positions[i - 3];\n                            normals[i] = -normals[i - 3];\n                            tangents[i] = -tangents[i - 3];\n                        }\n                        vidx += 3;\n                    }\n                    if (xi != this._segmentsW && yi != this._segmentsH) {\n                        base = xi + yi * tw;\n                        var mult = this._doubleSided ? 2 : 1;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw) * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = base * mult;\n                        indices[fidx++] = (base + tw + 1) * mult;\n                        indices[fidx++] = (base + 1) * mult;\n                        if (this._doubleSided) {\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = (base + tw) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                            indices[fidx++] = (base + 1) * mult + 1;\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\n                            indices[fidx++] = base * mult + 1;\n                        }\n                    }\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n            var lineGraphics = target;\n            var numSegments = (this._segmentsH + 1) + tw;\n            var positions;\n            var thickness;\n            var hw = this._width / 2;\n            var hh = this._height / 2;\n            positions = new Float32Array(numSegments * 6);\n            thickness = new Float32Array(numSegments);\n            fidx = 0;\n            vidx = 0;\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\n                positions[vidx++] = -hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                positions[vidx++] = hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = yi * this._height - hh;\n                thickness[fidx++] = 1;\n            }\n            for (xi = 0; xi <= this._segmentsW; ++xi) {\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = -hh;\n                positions[vidx++] = xi * this._width - hw;\n                positions[vidx++] = 0;\n                positions[vidx++] = hh;\n                thickness[fidx++] = 1;\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitivePlanePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var uvs;\n        var numVertices;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (this._doubleSided)\n                numVertices *= 2;\n            var triangleGraphics = target;\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n                this._pInvalidatePrimitive();\n            }\n            var index = 0;\n            for (var yi = 0; yi <= this._segmentsH; ++yi) {\n                for (var xi = 0; xi <= this._segmentsW; ++xi) {\n                    uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                    uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                    index += 2;\n                    if (this._doubleSided) {\n                        uvs[index] = (xi / this._segmentsW) * this._scaleU;\n                        uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\n                        index += 2;\n                    }\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitivePlanePrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\n/**\n * A UV RegularPolygon primitive sprite.\n */\nvar PrimitivePolygonPrefab = (function (_super) {\n    __extends(PrimitivePolygonPrefab, _super);\n    /**\n     * Creates a new RegularPolygon disc object.\n     * @param radius The radius of the regular polygon\n     * @param sides Defines the number of sides of the regular polygon.\n     * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitivePolygonPrefab(material, elementsType, radius, sides, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 100; }\n        if (sides === void 0) { sides = 16; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n    }\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the regular polygon.\n         */\n        get: function () {\n            return this._pBottomRadius;\n        },\n        set: function (value) {\n            this._pBottomRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"sides\", {\n        /**\n         * The number of sides of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsW;\n        },\n        set: function (value) {\n            this.setSegmentsW(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"subdivisions\", {\n        /**\n         * The number of subdivisions from the edge to the center of the regular polygon.\n         */\n        get: function () {\n            return this._pSegmentsH;\n        },\n        set: function (value) {\n            this.setSegmentsH(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PrimitivePolygonPrefab;\n}(PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab));\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab;\n\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\nvar LineElements_1 = require(\"../graphics/LineElements\");\nvar Sprite_1 = require(\"../display/Sprite\");\nvar PrefabBase_1 = require(\"../prefabs/PrefabBase\");\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nvar PrimitivePrefabBase = (function (_super) {\n    __extends(PrimitivePrefabBase, _super);\n    /**\n     * Creates a new PrimitivePrefabBase object.\n     *\n     * @param material The material with which to render the object\n     */\n    function PrimitivePrefabBase(material, elementsType) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        _super.call(this);\n        this._primitiveDirty = true;\n        this._uvDirty = true;\n        this._scaleU = 1;\n        this._scaleV = 1;\n        this._material = material;\n        this._elementsType = elementsType;\n        if (this._elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleElements = new TriangleElements_1.TriangleElements(new AttributesBuffer_1.AttributesBuffer());\n            triangleElements.autoDeriveNormals = false;\n            triangleElements.autoDeriveTangents = false;\n            this._elements = triangleElements;\n        }\n        else if (this._elementsType == ElementsType_1.ElementsType.LINE) {\n            this._elements = new LineElements_1.LineElements(new AttributesBuffer_1.AttributesBuffer());\n        }\n    }\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return PrimitivePrefabBase.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"elementsType\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._elementsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"material\", {\n        /**\n         * The material with which to render the primitive.\n         */\n        get: function () {\n            return this._material;\n        },\n        set: function (value) {\n            if (value == this._material)\n                return;\n            this._material = value;\n            var len = this._pObjects.length;\n            for (var i = 0; i < len; i++)\n                this._pObjects[i].material = this._material;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleU\", {\n        get: function () {\n            return this._scaleU;\n        },\n        set: function (value) {\n            if (this._scaleU = value)\n                return;\n            this._scaleU = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleV\", {\n        get: function () {\n            return this._scaleV;\n        },\n        set: function (value) {\n            if (this._scaleV = value)\n                return;\n            this._scaleV = value;\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n     * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n     */\n    PrimitivePrefabBase.prototype._pBuildGraphics = function (target, elementsType) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n     * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n     */\n    PrimitivePrefabBase.prototype._pBuildUVs = function (target, elementsType) {\n        throw new AbstractMethodError_1.AbstractMethodError();\n    };\n    /**\n     * Invalidates the primitive, causing it to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidatePrimitive = function () {\n        this._primitiveDirty = true;\n    };\n    /**\n     * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n     */\n    PrimitivePrefabBase.prototype._pInvalidateUVs = function () {\n        this._uvDirty = true;\n    };\n    /**\n     * Updates the geometry when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateGraphics = function () {\n        this._pBuildGraphics(this._elements, this._elementsType);\n        this._primitiveDirty = false;\n    };\n    /**\n     * Updates the uv coordinates when invalid.\n     */\n    PrimitivePrefabBase.prototype.updateUVs = function () {\n        this._pBuildUVs(this._elements, this._elementsType);\n        this._uvDirty = false;\n    };\n    PrimitivePrefabBase.prototype._iValidate = function () {\n        if (this._primitiveDirty)\n            this.updateGraphics();\n        if (this._uvDirty)\n            this.updateUVs();\n    };\n    PrimitivePrefabBase.prototype._pCreateObject = function () {\n        var sprite = new Sprite_1.Sprite(this._material);\n        sprite.graphics.addGraphic(this._elements);\n        sprite._iSourcePrefab = this;\n        return sprite;\n    };\n    PrimitivePrefabBase.assetType = \"[asset PrimitivePrefab]\";\n    return PrimitivePrefabBase;\n}(PrefabBase_1.PrefabBase));\nexports.PrimitivePrefabBase = PrimitivePrefabBase;\n\n},{\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A UV Sphere primitive sprite.\n */\nvar PrimitiveSpherePrefab = (function (_super) {\n    __extends(PrimitiveSpherePrefab, _super);\n    /**\n     * Creates a new Sphere object.\n     *\n     * @param radius The radius of the sphere.\n     * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n     * @param segmentsH Defines the number of vertical segments that make up the sphere.\n     * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveSpherePrefab(material, elementsType, radius, segmentsW, segmentsH, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (segmentsW === void 0) { segmentsW = 16; }\n        if (segmentsH === void 0) { segmentsH = 12; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._radius = radius;\n        this._segmentsW = segmentsW;\n        this._segmentsH = segmentsH;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"radius\", {\n        /**\n         * The radius of the sphere.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsW\", {\n        /**\n         * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsW;\n        },\n        set: function (value) {\n            this._segmentsW = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsH\", {\n        /**\n         * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n         */\n        get: function () {\n            return this._segmentsH;\n        },\n        set: function (value) {\n            this._segmentsH = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i;\n        var j;\n        var vidx, fidx; // indices\n        var comp1;\n        var comp2;\n        var numVertices;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(numVertices);\n                normals = triangleGraphics.normals.get(numVertices);\n                tangents = triangleGraphics.tangents.get(numVertices);\n            }\n            else {\n                indices = new Uint16Array((this._segmentsH - 1) * this._segmentsW * 6);\n                positions = new Float32Array(numVertices * 3);\n                normals = new Float32Array(numVertices * 3);\n                tangents = new Float32Array(numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            var startIndex;\n            var t1;\n            var t2;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                startIndex = vidx;\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\n                    var tanLen = Math.sqrt(y * y + x * x);\n                    if (this._yUp) {\n                        t1 = 0;\n                        t2 = tanLen > .007 ? x / tanLen : 0;\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        t1 = tanLen > .007 ? x / tanLen : 0;\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsW) {\n                        positions[vidx] = positions[startIndex];\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                        normals[vidx] = normals[startIndex] + (x * normLen) * .5;\n                        normals[vidx + 1] = normals[startIndex + 1] + (comp1 * normLen) * .5;\n                        normals[vidx + 2] = normals[startIndex + 2] + (comp2 * normLen) * .5;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                        normals[vidx] = x * normLen;\n                        normals[vidx + 1] = comp1 * normLen;\n                        normals[vidx + 2] = comp2 * normLen;\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\n                        tangents[vidx + 1] = t1;\n                        tangents[vidx + 2] = t2;\n                    }\n                    if (i > 0 && j > 0) {\n                        var a = (this._segmentsW + 1) * j + i;\n                        var b = (this._segmentsW + 1) * j + i - 1;\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\n                        if (j == this._segmentsH) {\n                            positions[vidx] = positions[startIndex];\n                            positions[vidx + 1] = positions[startIndex + 1];\n                            positions[vidx + 2] = positions[startIndex + 2];\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                        else if (j == 1) {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                        }\n                        else {\n                            indices[fidx++] = a;\n                            indices[fidx++] = b;\n                            indices[fidx++] = c;\n                            indices[fidx++] = a;\n                            indices[fidx++] = c;\n                            indices[fidx++] = d;\n                        }\n                    }\n                    vidx += 3;\n                }\n            }\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n            var lineGraphics = target;\n            var numSegments = this._segmentsH * this._segmentsW * 2 + this._segmentsW;\n            var positions = new Float32Array(numSegments * 6);\n            var thickness = new Float32Array(numSegments);\n            vidx = 0;\n            fidx = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                var horangle = Math.PI * j / this._segmentsH;\n                var z = -this._radius * Math.cos(horangle);\n                var ringradius = this._radius * Math.sin(horangle);\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\n                    var x = ringradius * Math.cos(verangle);\n                    var y = ringradius * Math.sin(verangle);\n                    if (this._yUp) {\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i > 0) {\n                        //horizonal lines\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                        thickness[fidx++] = 1;\n                        //vertical lines\n                        if (j > 0) {\n                            var addx = (j == 1) ? 3 - (6 * (this._segmentsW - i) + 12 * i) : 3 - this._segmentsW * 12;\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx] = positions[vidx++ + addx];\n                            positions[vidx++] = x;\n                            positions[vidx++] = comp1;\n                            positions[vidx++] = comp2;\n                            thickness[fidx++] = 1;\n                        }\n                    }\n                    //horizonal lines\n                    if (i < this._segmentsW) {\n                        positions[vidx++] = x;\n                        positions[vidx++] = comp1;\n                        positions[vidx++] = comp2;\n                    }\n                }\n            }\n            // build real data from raw data\n            lineGraphics.setPositions(positions);\n            lineGraphics.setThickness(thickness);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveSpherePrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n        var uvs;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\n            var triangleGraphics = target;\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n                uvs = triangleGraphics.uvs.get(numVertices);\n            }\n            else {\n                uvs = new Float32Array(numVertices * 2);\n            }\n            var index = 0;\n            for (j = 0; j <= this._segmentsH; ++j) {\n                for (i = 0; i <= this._segmentsW; ++i) {\n                    uvs[index++] = (i / this._segmentsW) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsH) * this._scaleV;\n                }\n            }\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitiveSpherePrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\n/**\n * A UV Cylinder primitive sprite.\n */\nvar PrimitiveTorusPrefab = (function (_super) {\n    __extends(PrimitiveTorusPrefab, _super);\n    /**\n     * Creates a new <code>Torus</code> object.\n     * @param radius The radius of the torus.\n     * @param tuebRadius The radius of the inner tube of the torus.\n     * @param segmentsR Defines the number of horizontal segments that make up the torus.\n     * @param segmentsT Defines the number of vertical segments that make up the torus.\n     * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n     */\n    function PrimitiveTorusPrefab(material, elementsType, radius, tubeRadius, segmentsR, segmentsT, yUp) {\n        if (material === void 0) { material = null; }\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\n        if (radius === void 0) { radius = 50; }\n        if (tubeRadius === void 0) { tubeRadius = 50; }\n        if (segmentsR === void 0) { segmentsR = 16; }\n        if (segmentsT === void 0) { segmentsT = 8; }\n        if (yUp === void 0) { yUp = true; }\n        _super.call(this, material, elementsType);\n        this._numVertices = 0;\n        this._radius = radius;\n        this._tubeRadius = tubeRadius;\n        this._segmentsR = segmentsR;\n        this._segmentsT = segmentsT;\n        this._yUp = yUp;\n    }\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"radius\", {\n        /**\n         * The radius of the torus.\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            this._radius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"tubeRadius\", {\n        /**\n         * The radius of the inner tube of the torus.\n         */\n        get: function () {\n            return this._tubeRadius;\n        },\n        set: function (value) {\n            this._tubeRadius = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsR\", {\n        /**\n         * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n         */\n        get: function () {\n            return this._segmentsR;\n        },\n        set: function (value) {\n            this._segmentsR = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsT\", {\n        /**\n         * Defines the number of vertical segments that make up the torus. Defaults to 8.\n         */\n        get: function () {\n            return this._segmentsT;\n        },\n        set: function (value) {\n            this._segmentsT = value;\n            this._pInvalidatePrimitive();\n            this._pInvalidateUVs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"yUp\", {\n        /**\n         * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n         */\n        get: function () {\n            return this._yUp;\n        },\n        set: function (value) {\n            this._yUp = value;\n            this._pInvalidatePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildGraphics = function (target, elementsType) {\n        var indices;\n        var positions;\n        var normals;\n        var tangents;\n        var i, j;\n        var x, y, z, nx, ny, nz, revolutionAngleR, revolutionAngleT;\n        var vidx;\n        var fidx;\n        var numIndices = 0;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // evaluate target number of vertices, triangles and indices\n            this._numVertices = (this._segmentsT + 1) * (this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n            numIndices = this._segmentsT * this._segmentsR * 6; // each level has segmentR quads, each of 2 triangles\n            // need to initialize raw arrays or can be reused?\n            if (this._numVertices == triangleGraphics.numVertices) {\n                indices = triangleGraphics.indices.get(triangleGraphics.numElements);\n                positions = triangleGraphics.positions.get(this._numVertices);\n                normals = triangleGraphics.normals.get(this._numVertices);\n                tangents = triangleGraphics.tangents.get(this._numVertices);\n            }\n            else {\n                indices = new Uint16Array(numIndices);\n                positions = new Float32Array(this._numVertices * 3);\n                normals = new Float32Array(this._numVertices * 3);\n                tangents = new Float32Array(this._numVertices * 3);\n                this._pInvalidateUVs();\n            }\n            vidx = 0;\n            fidx = 0;\n            // evaluate revolution steps\n            var revolutionAngleDeltaR = 2 * Math.PI / this._segmentsR;\n            var revolutionAngleDeltaT = 2 * Math.PI / this._segmentsT;\n            var comp1, comp2;\n            var t1, t2, n1, n2;\n            var startIndex = 0;\n            var nextVertexIndex = 0;\n            // surface\n            var a, b, c, d, length;\n            for (j = 0; j <= this._segmentsT; ++j) {\n                startIndex = nextVertexIndex * 3;\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    revolutionAngleR = i * revolutionAngleDeltaR;\n                    revolutionAngleT = j * revolutionAngleDeltaT;\n                    length = Math.cos(revolutionAngleT);\n                    nx = length * Math.cos(revolutionAngleR);\n                    ny = length * Math.sin(revolutionAngleR);\n                    nz = Math.sin(revolutionAngleT);\n                    x = this._radius * Math.cos(revolutionAngleR) + this._tubeRadius * nx;\n                    y = this._radius * Math.sin(revolutionAngleR) + this._tubeRadius * ny;\n                    z = (j == this._segmentsT) ? 0 : this._tubeRadius * nz;\n                    if (this._yUp) {\n                        n1 = -nz;\n                        n2 = ny;\n                        t1 = 0;\n                        t2 = (length ? nx / length : x / this._radius);\n                        comp1 = -z;\n                        comp2 = y;\n                    }\n                    else {\n                        n1 = ny;\n                        n2 = nz;\n                        t1 = (length ? nx / length : x / this._radius);\n                        t2 = 0;\n                        comp1 = y;\n                        comp2 = z;\n                    }\n                    if (i == this._segmentsR) {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = positions[startIndex + 1];\n                        positions[vidx + 2] = positions[startIndex + 2];\n                    }\n                    else {\n                        positions[vidx] = x;\n                        positions[vidx + 1] = comp1;\n                        positions[vidx + 2] = comp2;\n                    }\n                    normals[vidx] = nx;\n                    normals[vidx + 1] = n1;\n                    normals[vidx + 2] = n2;\n                    tangents[vidx] = -(length ? ny / length : y / this._radius);\n                    tangents[vidx + 1] = t1;\n                    tangents[vidx + 2] = t2;\n                    vidx += 3;\n                    // close triangle\n                    if (i > 0 && j > 0) {\n                        a = nextVertexIndex; // current\n                        b = nextVertexIndex - 1; // previous\n                        c = b - this._segmentsR - 1; // previous of last level\n                        d = a - this._segmentsR - 1; // current of last level\n                        indices[fidx++] = a;\n                        indices[fidx++] = b;\n                        indices[fidx++] = c;\n                        indices[fidx++] = a;\n                        indices[fidx++] = c;\n                        indices[fidx++] = d;\n                    }\n                    nextVertexIndex++;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setIndices(indices);\n            triangleGraphics.setPositions(positions);\n            triangleGraphics.setNormals(normals);\n            triangleGraphics.setTangents(tangents);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PrimitiveTorusPrefab.prototype._pBuildUVs = function (target, elementsType) {\n        var i, j;\n        var uvs;\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\n            var triangleGraphics = target;\n            // need to initialize raw array or can be reused?\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n                uvs = triangleGraphics.uvs.get(this._numVertices);\n            }\n            else {\n                uvs = new Float32Array(this._numVertices * 2);\n            }\n            // current uv component index\n            var index = 0;\n            // surface\n            for (j = 0; j <= this._segmentsT; ++j) {\n                for (i = 0; i <= this._segmentsR; ++i) {\n                    // revolution vertex\n                    uvs[index++] = (i / this._segmentsR) * this._scaleU;\n                    uvs[index++] = (j / this._segmentsT) * this._scaleV;\n                }\n            }\n            // build real data from raw data\n            triangleGraphics.setUVs(uvs);\n        }\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\n        }\n    };\n    return PrimitiveTorusPrefab;\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab;\n\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs\":[function(require,module,exports){\n\"use strict\";\nvar PrefabBase_1 = require(\"./prefabs/PrefabBase\");\nexports.PrefabBase = PrefabBase_1.PrefabBase;\nvar PrimitiveCapsulePrefab_1 = require(\"./prefabs/PrimitiveCapsulePrefab\");\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab_1.PrimitiveCapsulePrefab;\nvar PrimitiveConePrefab_1 = require(\"./prefabs/PrimitiveConePrefab\");\nexports.PrimitiveConePrefab = PrimitiveConePrefab_1.PrimitiveConePrefab;\nvar PrimitiveCubePrefab_1 = require(\"./prefabs/PrimitiveCubePrefab\");\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab_1.PrimitiveCubePrefab;\nvar PrimitiveCylinderPrefab_1 = require(\"./prefabs/PrimitiveCylinderPrefab\");\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab;\nvar PrimitivePlanePrefab_1 = require(\"./prefabs/PrimitivePlanePrefab\");\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab_1.PrimitivePlanePrefab;\nvar PrimitivePolygonPrefab_1 = require(\"./prefabs/PrimitivePolygonPrefab\");\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab_1.PrimitivePolygonPrefab;\nvar PrimitivePrefabBase_1 = require(\"./prefabs/PrimitivePrefabBase\");\nexports.PrimitivePrefabBase = PrimitivePrefabBase_1.PrimitivePrefabBase;\nvar PrimitiveSpherePrefab_1 = require(\"./prefabs/PrimitiveSpherePrefab\");\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab_1.PrimitiveSpherePrefab;\nvar PrimitiveTorusPrefab_1 = require(\"./prefabs/PrimitiveTorusPrefab\");\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab_1.PrimitiveTorusPrefab;\n\n},{\"./prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"./prefabs/PrimitiveCapsulePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\",\"./prefabs/PrimitiveConePrefab\":\"awayjs-display/lib/prefabs/PrimitiveConePrefab\",\"./prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"./prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\",\"./prefabs/PrimitivePlanePrefab\":\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\",\"./prefabs/PrimitivePolygonPrefab\":\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\",\"./prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\",\"./prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"./prefabs/PrimitiveTorusPrefab\":\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\"}],\"awayjs-display/lib/text/AntiAliasType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nvar AntiAliasType = (function () {\n    function AntiAliasType() {\n    }\n    /**\n     * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n     * allows font faces to be rendered at very high quality at small sizes. It\n     * is best used with applications that have a lot of small text. Advanced\n     * anti-aliasing is not recommended for very large fonts(larger than 48\n     * points). This constant is used for the <code>antiAliasType</code> property\n     * in the TextField class. Use the syntax\n     * <code>AntiAliasType.ADVANCED</code>.\n     */\n    AntiAliasType.ADVANCED = \"advanced\";\n    /**\n     * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n     * earlier. This setting is recommended for applications that do not have a\n     * lot of text. This constant is used for the <code>antiAliasType</code>\n     * property in the TextField class. Use the syntax\n     * <code>AntiAliasType.NORMAL</code>.\n     */\n    AntiAliasType.NORMAL = \"normal\";\n    return AntiAliasType;\n}());\nexports.AntiAliasType = AntiAliasType;\n\n},{}],\"awayjs-display/lib/text/Font\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontTable_1 = require(\"../text/TesselatedFontTable\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar Font = (function (_super) {\n    __extends(Font, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function Font() {\n        _super.call(this);\n        this._font_styles = new Array();\n    }\n    Object.defineProperty(Font.prototype, \"font_styles\", {\n        get: function () {\n            return this._font_styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Font.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return Font.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    Font.prototype.dispose = function () {\n    };\n    /**\n     *Get a font-table for a specific name, or create one if it does not exists.\n     */\n    Font.prototype.get_font_table = function (style_name) {\n        var len = this._font_styles.length;\n        for (var i = 0; i < len; ++i) {\n            if (this._font_styles[i].name == style_name)\n                return this._font_styles[i];\n        }\n        var font_style = new TesselatedFontTable_1.TesselatedFontTable();\n        font_style.name = style_name;\n        this._font_styles.push(font_style);\n        return font_style;\n    };\n    Font.assetType = \"[asset Font]\";\n    return Font;\n}(AssetBase_1.AssetBase));\nexports.Font = Font;\n\n},{\"../text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/GridFitType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nvar GridFitType = (function () {\n    function GridFitType() {\n    }\n    /**\n     * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n     * not forced to the pixel grid. This constant is used in setting the\n     * <code>gridFitType</code> property of the TextField class. This is often a\n     * good setting for animation or for large font sizes. Use the syntax\n     * <code>GridFitType.NONE</code>.\n     */\n    GridFitType.NONE = \"none\";\n    /**\n     * Fits strong horizontal and vertical lines to the pixel grid. This constant\n     * is used in setting the <code>gridFitType</code> property of the TextField\n     * class. This setting only works for left-justified text fields and acts\n     * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n     * setting generally provides the best readability for left-aligned text. Use\n     * the syntax <code>GridFitType.PIXEL</code>.\n     */\n    GridFitType.PIXEL = \"pixel\";\n    /**\n     * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n     * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n     * is often a good setting for right-aligned or center-aligned dynamic text,\n     * and it is sometimes a useful tradeoff for animation vs. text quality. This\n     * constant is used in setting the <code>gridFitType</code> property of the\n     * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n     */\n    GridFitType.SUBPIXEL = \"subpixel\";\n    return GridFitType;\n}());\nexports.GridFitType = GridFitType;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontChar\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TesselatedFontChar = (function () {\n    function TesselatedFontChar(elements) {\n        /**\n         * the char_codes that this geom has kerning set for\n         */\n        this.kerningCharCodes = new Array();\n        /**\n         * the kerning values per char_code\n         */\n        this.kerningValues = new Array();\n        this.elements = elements;\n    }\n    return TesselatedFontChar;\n}());\nexports.TesselatedFontChar = TesselatedFontChar;\n\n},{}],\"awayjs-display/lib/text/TesselatedFontTable\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\nvar TesselatedFontChar_1 = require(\"../text/TesselatedFontChar\");\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nvar TesselatedFontTable = (function (_super) {\n    __extends(TesselatedFontTable, _super);\n    //TODO test shader picking\n    //\t\tpublic get shaderPickingDetails():boolean\n    //\t\t{\n    //\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\n    //\t\t}\n    /**\n     * Creates a new TesselatedFont object\n     */\n    function TesselatedFontTable() {\n        _super.call(this);\n        this._font_chars = new Array();\n        this._font_chars_dic = new Object();\n        this._ascent = 0;\n        this._descent = 0;\n    }\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.dispose = function () {\n    };\n    Object.defineProperty(TesselatedFontTable.prototype, \"ascent\", {\n        get: function () {\n            return this._ascent;\n        },\n        set: function (value) {\n            this._ascent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"descent\", {\n        get: function () {\n            return this._descent;\n        },\n        set: function (value) {\n            this._descent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_x\", {\n        get: function () {\n            return this._offset_x;\n        },\n        set: function (value) {\n            this._offset_x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_y\", {\n        get: function () {\n            return this._offset_y;\n        },\n        set: function (value) {\n            this._offset_y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TesselatedFontTable.prototype.get_font_chars = function () {\n        return this._font_chars;\n    };\n    TesselatedFontTable.prototype.get_font_em_size = function () {\n        return this._font_em_size;\n    };\n    TesselatedFontTable.prototype.set_whitespace_width = function (value) {\n        this._whitespace_width = value;\n    };\n    TesselatedFontTable.prototype.get_whitespace_width = function () {\n        return this._whitespace_width;\n    };\n    TesselatedFontTable.prototype.set_font_em_size = function (font_em_size) {\n        this._font_em_size = font_em_size;\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.getChar = function (name) {\n        return this._font_chars_dic[name];\n    };\n    /**\n     *\n     */\n    TesselatedFontTable.prototype.setChar = function (name, elements, char_width) {\n        var tesselated_font_char = new TesselatedFontChar_1.TesselatedFontChar(elements);\n        tesselated_font_char.char_width = char_width;\n        elements.name = name;\n        this._font_chars.push(tesselated_font_char);\n        this._font_chars_dic[name] = tesselated_font_char;\n    };\n    return TesselatedFontTable;\n}(AssetBase_1.AssetBase));\nexports.TesselatedFontTable = TesselatedFontTable;\n\n},{\"../text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextFieldAutoSize\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nvar TextFieldAutoSize = (function () {\n    function TextFieldAutoSize() {\n    }\n    /**\n     * Specifies that the text is to be treated as center-justified text. Any\n     * resizing of a single line of a text field is equally distributed to both\n     * the right and left sides.\n     */\n    TextFieldAutoSize.CENTER = \"center\";\n    /**\n     * Specifies that the text is to be treated as left-justified text, meaning\n     * that the left side of the text field remains fixed and any resizing of a\n     * single line is on the right side.\n     */\n    TextFieldAutoSize.LEFT = \"left\";\n    /**\n     * Specifies that no resizing is to occur.\n     */\n    TextFieldAutoSize.NONE = \"none\";\n    /**\n     * Specifies that the text is to be treated as right-justified text, meaning\n     * that the right side of the text field remains fixed and any resizing of a\n     * single line is on the left side.\n     */\n    TextFieldAutoSize.RIGHT = \"right\";\n    return TextFieldAutoSize;\n}());\nexports.TextFieldAutoSize = TextFieldAutoSize;\n\n},{}],\"awayjs-display/lib/text/TextFieldType\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nvar TextFieldType = (function () {\n    function TextFieldType() {\n    }\n    /**\n     * Used to specify a <code>dynamic</code> TextField.\n     */\n    TextFieldType.DYNAMIC = \"dynamic\";\n    /**\n     * Used to specify an <code>input</code> TextField.\n     */\n    TextFieldType.INPUT = \"input\";\n    /**\n     * Used to specify an <code>static</code> TextField.\n     */\n    TextFieldType.STATIC = \"input\";\n    return TextFieldType;\n}());\nexports.TextFieldType = TextFieldType;\n\n},{}],\"awayjs-display/lib/text/TextFormatAlign\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nvar TextFormatAlign = (function () {\n    function TextFormatAlign() {\n        /**\n         * Constant; centers the text in the text field. Use the syntax\n         * <code>TextFormatAlign.CENTER</code>.\n         */\n        this.CENTER = \"center\";\n        /**\n         * Constant; justifies text within the text field. Use the syntax\n         * <code>TextFormatAlign.JUSTIFY</code>.\n         */\n        this.JUSTIFY = \"justify\";\n        /**\n         * Constant; aligns text to the left within the text field. Use the syntax\n         * <code>TextFormatAlign.LEFT</code>.\n         */\n        this.LEFT = \"left\";\n        /**\n         * Constant; aligns text to the right within the text field. Use the syntax\n         * <code>TextFormatAlign.RIGHT</code>.\n         */\n        this.RIGHT = \"right\";\n    }\n    return TextFormatAlign;\n}());\nexports.TextFormatAlign = TextFormatAlign;\n\n},{}],\"awayjs-display/lib/text/TextFormat\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nvar TextFormat = (function (_super) {\n    __extends(TextFormat, _super);\n    /**\n     * Creates a TextFormat object with the specified properties. You can then\n     * change the properties of the TextFormat object to change the formatting of\n     * text fields.\n     *\n     * <p>Any parameter may be set to <code>null</code> to indicate that it is\n     * not defined. All of the parameters are optional; any omitted parameters\n     * are treated as <code>null</code>.</p>\n     *\n     * @param font        The name of a font for text as a string.\n     * @param size        An integer that indicates the size in pixels.\n     * @param color       The color of text using this text format. A number\n     *                    containing three 8-bit RGB components; for example,\n     *                    0xFF0000 is red, and 0x00FF00 is green.\n     * @param bold        A Boolean value that indicates whether the text is\n     *                    boldface.\n     * @param italic      A Boolean value that indicates whether the text is\n     *                    italicized.\n     * @param underline   A Boolean value that indicates whether the text is\n     *                    underlined.\n     * @param url         The URL to which the text in this text format\n     *                    hyperlinks. If <code>url</code> is an empty string, the\n     *                    text does not have a hyperlink.\n     * @param target      The target window where the hyperlink is displayed. If\n     *                    the target window is an empty string, the text is\n     *                    displayed in the default target window\n     *                    <code>_self</code>. If the <code>url</code> parameter\n     *                    is set to an empty string or to the value\n     *                    <code>null</code>, you can get or set this property,\n     *                    but the property will have no effect.\n     * @param align       The alignment of the paragraph, as a TextFormatAlign\n     *                    value.\n     * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n     * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n     * @param indent      An integer that indicates the indentation from the left\n     *                    margin to the first character in the paragraph.\n     * @param leading     A number that indicates the amount of leading vertical\n     *                    space between lines.\n     */\n    function TextFormat(font, size, color, bold, italic, underline, url, link_target, align, leftMargin, rightMargin, indent, leading) {\n        if (font === void 0) { font = \"Times New Roman\"; }\n        if (size === void 0) { size = 12; }\n        if (color === void 0) { color = 0x000000; }\n        if (bold === void 0) { bold = false; }\n        if (italic === void 0) { italic = false; }\n        if (underline === void 0) { underline = false; }\n        if (url === void 0) { url = \"\"; }\n        if (link_target === void 0) { link_target = \"\"; }\n        if (align === void 0) { align = \"left\"; }\n        if (leftMargin === void 0) { leftMargin = 0; }\n        if (rightMargin === void 0) { rightMargin = 0; }\n        if (indent === void 0) { indent = 0; }\n        if (leading === void 0) { leading = 0; }\n        _super.call(this);\n        /**\n         * Specifies custom tab stops as an array of non-negative integers. Each tab\n         * stop is specified in pixels. If custom tab stops are not specified\n         * (<code>null</code>), the default tab stop is 4(average character width).\n         */\n        //todo: not used with in tesselated-font-table yet\n        this.tabStops = new Array();\n        this.font_name = font;\n        this.size = size;\n        this.bold = bold;\n        this.italic = italic;\n        this.underline = underline;\n        this.url = url;\n        this.link_target = link_target;\n        this.align = align;\n        this.leftMargin = leftMargin;\n        this.rightMargin = rightMargin;\n        this.indent = indent;\n        this.leading = leading;\n    }\n    Object.defineProperty(TextFormat.prototype, \"assetType\", {\n        /**\n         *\n         */\n        get: function () {\n            return TextFormat.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextFormat.assetType = \"[asset TextFormat]\";\n    return TextFormat;\n}(AssetBase_1.AssetBase));\nexports.TextFormat = TextFormat;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextInteractionMode\":[function(require,module,exports){\n\"use strict\";\n/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nvar TextInteractionMode = (function () {\n    function TextInteractionMode() {\n    }\n    /**\n     * The text field's default interaction mode is NORMAL and it varies across\n     * platform. On Desktop, the normal mode implies that the text field is in\n     * scrollable + selection mode. On Mobile platforms like Android, normal mode\n     * implies that the text field can only be scrolled but the text can not be\n     * selected.\n     */\n    TextInteractionMode.NORMAL = \"normal\";\n    /**\n     * On mobile platforms like Android, the text field starts in normal mode\n     * (which implies scroll and non-selectable mode). The user can switch to\n     * selection mode through the in-built context menu of the text field object.\n     */\n    TextInteractionMode.SELECTION = \"selection\";\n    return TextInteractionMode;\n}());\nexports.TextInteractionMode = TextInteractionMode;\n\n},{}],\"awayjs-display/lib/text/TextLineMetrics\":[function(require,module,exports){\n\"use strict\";\n/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the\n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nvar TextLineMetrics = (function () {\n    /**\n     * Creates a TextLineMetrics object. The TextLineMetrics object contains\n     * information about the text metrics of a line of text in a text field.\n     * Objects of this class are returned by the\n     * away.entities.TextField.getLineMetrics() method.\n     *\n     * @param x           The left position of the first character in pixels.\n     * @param width       The width of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param height      The height of the text of the selected lines (not\n     *                    necessarily the complete text) in pixels.\n     * @param ascent      The length from the baseline to the top of the line\n     *                    height in pixels.\n     * @param descent     The length from the baseline to the bottom depth of\n     *                    the line in pixels.\n     * @param leading     The measurement of the vertical distance between the\n     *                    lines of text.\n     */\n    function TextLineMetrics(x, width, height, ascent, descent, leading) {\n        if (x === void 0) { x = NaN; }\n        if (width === void 0) { width = NaN; }\n        if (height === void 0) { height = NaN; }\n        if (ascent === void 0) { ascent = NaN; }\n        if (descent === void 0) { descent = NaN; }\n        if (leading === void 0) { leading = NaN; }\n    }\n    return TextLineMetrics;\n}());\nexports.TextLineMetrics = TextLineMetrics;\n\n},{}],\"awayjs-display/lib/text\":[function(require,module,exports){\n\"use strict\";\nvar AntiAliasType_1 = require(\"./text/AntiAliasType\");\nexports.AntiAliasType = AntiAliasType_1.AntiAliasType;\nvar Font_1 = require(\"./text/Font\");\nexports.Font = Font_1.Font;\nvar GridFitType_1 = require(\"./text/GridFitType\");\nexports.GridFitType = GridFitType_1.GridFitType;\nvar TesselatedFontChar_1 = require(\"./text/TesselatedFontChar\");\nexports.TesselatedFontChar = TesselatedFontChar_1.TesselatedFontChar;\nvar TesselatedFontTable_1 = require(\"./text/TesselatedFontTable\");\nexports.TesselatedFontTable = TesselatedFontTable_1.TesselatedFontTable;\nvar TextFieldAutoSize_1 = require(\"./text/TextFieldAutoSize\");\nexports.TextFieldAutoSize = TextFieldAutoSize_1.TextFieldAutoSize;\nvar TextFieldType_1 = require(\"./text/TextFieldType\");\nexports.TextFieldType = TextFieldType_1.TextFieldType;\nvar TextFormat_1 = require(\"./text/TextFormat\");\nexports.TextFormat = TextFormat_1.TextFormat;\nvar TextFormatAlign_1 = require(\"./text/TextFormatAlign\");\nexports.TextFormatAlign = TextFormatAlign_1.TextFormatAlign;\nvar TextInteractionMode_1 = require(\"./text/TextInteractionMode\");\nexports.TextInteractionMode = TextInteractionMode_1.TextInteractionMode;\nvar TextLineMetrics_1 = require(\"./text/TextLineMetrics\");\nexports.TextLineMetrics = TextLineMetrics_1.TextLineMetrics;\n\n},{\"./text/AntiAliasType\":\"awayjs-display/lib/text/AntiAliasType\",\"./text/Font\":\"awayjs-display/lib/text/Font\",\"./text/GridFitType\":\"awayjs-display/lib/text/GridFitType\",\"./text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"./text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"./text/TextFieldAutoSize\":\"awayjs-display/lib/text/TextFieldAutoSize\",\"./text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"./text/TextFormat\":\"awayjs-display/lib/text/TextFormat\",\"./text/TextFormatAlign\":\"awayjs-display/lib/text/TextFormatAlign\",\"./text/TextInteractionMode\":\"awayjs-display/lib/text/TextInteractionMode\",\"./text/TextLineMetrics\":\"awayjs-display/lib/text/TextLineMetrics\"}],\"awayjs-display/lib/textures/MappingMode\":[function(require,module,exports){\n\"use strict\";\n/**\n\n\n */\nvar MappingMode = (function () {\n    function MappingMode() {\n    }\n    /**\n     *\n     */\n    MappingMode.NORMAL = \"normal\";\n    /**\n     *\n     */\n    MappingMode.LINEAR_GRADIENT = \"linearGradient\";\n    /**\n     *\n     */\n    MappingMode.RADIAL_GRADIENT = \"radialGradient\";\n    return MappingMode;\n}());\nexports.MappingMode = MappingMode;\n\n},{}],\"awayjs-display/lib/textures/Single2DTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\nvar MappingMode_1 = require(\"../textures/MappingMode\");\nvar TextureBase_1 = require(\"../textures/TextureBase\");\nvar Single2DTexture = (function (_super) {\n    __extends(Single2DTexture, _super);\n    function Single2DTexture(image2D) {\n        if (image2D === void 0) { image2D = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.image2D = image2D;\n        this._mappingMode = MappingMode_1.MappingMode.NORMAL;\n    }\n    Object.defineProperty(Single2DTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return Single2DTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"mappingMode\", {\n        get: function () {\n            return this._mappingMode;\n        },\n        set: function (value) {\n            if (this._mappingMode == value)\n                return;\n            this._mappingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"sampler2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Single2DTexture.prototype, \"image2D\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            if (!ImageUtils_1.ImageUtils.isImage2DValid(value))\n                throw new ErrorBase_1.ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Single2DTexture.assetType = \"[texture Single2DTexture]\";\n    return Single2DTexture;\n}(TextureBase_1.TextureBase));\nexports.Single2DTexture = Single2DTexture;\n\n},{\"../textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-display/lib/textures/SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextureBase_1 = require(\"../textures/TextureBase\");\nvar SingleCubeTexture = (function (_super) {\n    __extends(SingleCubeTexture, _super);\n    function SingleCubeTexture(imageCube) {\n        if (imageCube === void 0) { imageCube = null; }\n        _super.call(this);\n        this.setNumImages(1);\n        this.imageCube = imageCube;\n    }\n    Object.defineProperty(SingleCubeTexture.prototype, \"assetType\", {\n        /**\n         *\n         * @returns {string}\n         */\n        get: function () {\n            return SingleCubeTexture.assetType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"samplerCube\", {\n        /**\n         *\n         * @returns {Image2D}\n         */\n        get: function () {\n            return this._samplers[0];\n        },\n        set: function (value) {\n            if (this._samplers[0] == value)\n                return;\n            this.setSamplerAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SingleCubeTexture.prototype, \"imageCube\", {\n        /**\n         *\n         * @returns {ImageCube}\n         */\n        get: function () {\n            return this._images[0];\n        },\n        set: function (value) {\n            if (this._images[0] == value)\n                return;\n            this.setImageAt(value, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SingleCubeTexture.assetType = \"[texture SingleCubeTexture]\";\n    return SingleCubeTexture;\n}(TextureBase_1.TextureBase));\nexports.SingleCubeTexture = SingleCubeTexture;\n\n},{\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/textures/TextureBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\n/**\n *\n */\nvar TextureBase = (function (_super) {\n    __extends(TextureBase, _super);\n    /**\n     *\n     */\n    function TextureBase() {\n        _super.call(this);\n        this._numImages = 0;\n        this._images = new Array();\n        this._samplers = new Array();\n    }\n    TextureBase.prototype.getNumImages = function () {\n        return this._numImages;\n    };\n    TextureBase.prototype.setNumImages = function (value) {\n        if (this._numImages == value)\n            return;\n        this._numImages = value;\n        this._images.length = value;\n        this._samplers.length = value;\n        this.invalidate();\n    };\n    TextureBase.prototype.getImageAt = function (index) {\n        return this._images[index];\n    };\n    TextureBase.prototype.setImageAt = function (image, index) {\n        this._images[index] = image;\n        this.invalidate();\n    };\n    TextureBase.prototype.getSamplerAt = function (index) {\n        return this._samplers[index];\n    };\n    TextureBase.prototype.setSamplerAt = function (sampler, index) {\n        this._samplers[index] = sampler;\n        this.invalidate();\n    };\n    return TextureBase;\n}(AssetBase_1.AssetBase));\nexports.TextureBase = TextureBase;\n\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/textures\":[function(require,module,exports){\n\"use strict\";\nvar MappingMode_1 = require(\"./textures/MappingMode\");\nexports.MappingMode = MappingMode_1.MappingMode;\nvar Single2DTexture_1 = require(\"./textures/Single2DTexture\");\nexports.Single2DTexture = Single2DTexture_1.Single2DTexture;\nvar SingleCubeTexture_1 = require(\"./textures/SingleCubeTexture\");\nexports.SingleCubeTexture = SingleCubeTexture_1.SingleCubeTexture;\nvar TextureBase_1 = require(\"./textures/TextureBase\");\nexports.TextureBase = TextureBase_1.TextureBase;\n\n},{\"./textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"./textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"./textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"./textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/utils/Cast\":[function(require,module,exports){\n\"use strict\";\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar CastError_1 = require(\"../errors/CastError\");\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\n/**\n * Helper class for casting assets to usable objects\n */\nvar Cast = (function () {\n    function Cast() {\n    }\n    Cast.string = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (typeof (data) == 'string')\n            return data;\n        return data;\n    };\n    Cast.byteArray = function (data) {\n        if (typeof (data) == 'function')\n            data = new data;\n        if (data instanceof ByteArray_1.ByteArray)\n            return data;\n        return data;\n    };\n    //        public static xml(data:any):XML\n    //        {\n    //            if (typeof(data) == 'function')\n    //                data = new data;\n    //\n    //            if (data is XML)\n    //                return data;\n    //\n    //            return XML(data);\n    //        }\n    Cast.isHex = function (str) {\n        var length = str.length;\n        for (var i = 0; i < length; ++i) {\n            if (this._hexChars.indexOf(str.charAt(i)) == -1)\n                return false;\n        }\n        return true;\n    };\n    Cast.tryColor = function (data) {\n        if (typeof (data) == 'number' /*uint*/)\n            return Math.floor(data);\n        if (typeof (data) == 'string') {\n            if (data == \"random\")\n                return Math.floor(Math.random() * 0x1000000);\n            if (this._colorNames == null) {\n                this._colorNames = new Object();\n                this._colorNames[\"steelblue\"] = 0x4682B4;\n                this._colorNames[\"royalblue\"] = 0x041690;\n                this._colorNames[\"cornflowerblue\"] = 0x6495ED;\n                this._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n                this._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n                this._colorNames[\"slateblue\"] = 0x6A5ACD;\n                this._colorNames[\"darkslateblue\"] = 0x483D8B;\n                this._colorNames[\"midnightblue\"] = 0x191970;\n                this._colorNames[\"navy\"] = 0x000080;\n                this._colorNames[\"darkblue\"] = 0x00008B;\n                this._colorNames[\"mediumblue\"] = 0x0000CD;\n                this._colorNames[\"blue\"] = 0x0000FF;\n                this._colorNames[\"dodgerblue\"] = 0x1E90FF;\n                this._colorNames[\"deepskyblue\"] = 0x00BFFF;\n                this._colorNames[\"lightskyblue\"] = 0x87CEFA;\n                this._colorNames[\"skyblue\"] = 0x87CEEB;\n                this._colorNames[\"lightblue\"] = 0xADD8E6;\n                this._colorNames[\"powderblue\"] = 0xB0E0E6;\n                this._colorNames[\"azure\"] = 0xF0FFFF;\n                this._colorNames[\"lightcyan\"] = 0xE0FFFF;\n                this._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n                this._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n                this._colorNames[\"lightseagreen\"] = 0x20B2AA;\n                this._colorNames[\"darkcyan\"] = 0x008B8B;\n                this._colorNames[\"teal\"] = 0x008080;\n                this._colorNames[\"cadetblue\"] = 0x5F9EA0;\n                this._colorNames[\"darkturquoise\"] = 0x00CED1;\n                this._colorNames[\"aqua\"] = 0x00FFFF;\n                this._colorNames[\"cyan\"] = 0x00FFFF;\n                this._colorNames[\"turquoise\"] = 0x40E0D0;\n                this._colorNames[\"aquamarine\"] = 0x7FFFD4;\n                this._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n                this._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n                this._colorNames[\"mediumseagreen\"] = 0x3CB371;\n                this._colorNames[\"seagreen\"] = 0x2E8B57;\n                this._colorNames[\"darkgreen\"] = 0x006400;\n                this._colorNames[\"green\"] = 0x008000;\n                this._colorNames[\"forestgreen\"] = 0x228B22;\n                this._colorNames[\"limegreen\"] = 0x32CD32;\n                this._colorNames[\"lime\"] = 0x00FF00;\n                this._colorNames[\"chartreuse\"] = 0x7FFF00;\n                this._colorNames[\"lawngreen\"] = 0x7CFC00;\n                this._colorNames[\"greenyellow\"] = 0xADFF2F;\n                this._colorNames[\"yellowgreen\"] = 0x9ACD32;\n                this._colorNames[\"palegreen\"] = 0x98FB98;\n                this._colorNames[\"lightgreen\"] = 0x90EE90;\n                this._colorNames[\"springgreen\"] = 0x00FF7F;\n                this._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n                this._colorNames[\"darkolivegreen\"] = 0x556B2F;\n                this._colorNames[\"olivedrab\"] = 0x6B8E23;\n                this._colorNames[\"olive\"] = 0x808000;\n                this._colorNames[\"darkkhaki\"] = 0xBDB76B;\n                this._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n                this._colorNames[\"goldenrod\"] = 0xDAA520;\n                this._colorNames[\"gold\"] = 0xFFD700;\n                this._colorNames[\"yellow\"] = 0xFFFF00;\n                this._colorNames[\"khaki\"] = 0xF0E68C;\n                this._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n                this._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n                this._colorNames[\"moccasin\"] = 0xFFE4B5;\n                this._colorNames[\"wheat\"] = 0xF5DEB3;\n                this._colorNames[\"navajowhite\"] = 0xFFDEAD;\n                this._colorNames[\"burlywood\"] = 0xDEB887;\n                this._colorNames[\"tan\"] = 0xD2B48C;\n                this._colorNames[\"rosybrown\"] = 0xBC8F8F;\n                this._colorNames[\"sienna\"] = 0xA0522D;\n                this._colorNames[\"saddlebrown\"] = 0x8B4513;\n                this._colorNames[\"chocolate\"] = 0xD2691E;\n                this._colorNames[\"peru\"] = 0xCD853F;\n                this._colorNames[\"sandybrown\"] = 0xF4A460;\n                this._colorNames[\"darkred\"] = 0x8B0000;\n                this._colorNames[\"maroon\"] = 0x800000;\n                this._colorNames[\"brown\"] = 0xA52A2A;\n                this._colorNames[\"firebrick\"] = 0xB22222;\n                this._colorNames[\"indianred\"] = 0xCD5C5C;\n                this._colorNames[\"lightcoral\"] = 0xF08080;\n                this._colorNames[\"salmon\"] = 0xFA8072;\n                this._colorNames[\"darksalmon\"] = 0xE9967A;\n                this._colorNames[\"lightsalmon\"] = 0xFFA07A;\n                this._colorNames[\"coral\"] = 0xFF7F50;\n                this._colorNames[\"tomato\"] = 0xFF6347;\n                this._colorNames[\"darkorange\"] = 0xFF8C00;\n                this._colorNames[\"orange\"] = 0xFFA500;\n                this._colorNames[\"orangered\"] = 0xFF4500;\n                this._colorNames[\"crimson\"] = 0xDC143C;\n                this._colorNames[\"red\"] = 0xFF0000;\n                this._colorNames[\"deeppink\"] = 0xFF1493;\n                this._colorNames[\"fuchsia\"] = 0xFF00FF;\n                this._colorNames[\"magenta\"] = 0xFF00FF;\n                this._colorNames[\"hotpink\"] = 0xFF69B4;\n                this._colorNames[\"lightpink\"] = 0xFFB6C1;\n                this._colorNames[\"pink\"] = 0xFFC0CB;\n                this._colorNames[\"palevioletred\"] = 0xDB7093;\n                this._colorNames[\"mediumvioletred\"] = 0xC71585;\n                this._colorNames[\"purple\"] = 0x800080;\n                this._colorNames[\"darkmagenta\"] = 0x8B008B;\n                this._colorNames[\"mediumpurple\"] = 0x9370DB;\n                this._colorNames[\"blueviolet\"] = 0x8A2BE2;\n                this._colorNames[\"indigo\"] = 0x4B0082;\n                this._colorNames[\"darkviolet\"] = 0x9400D3;\n                this._colorNames[\"darkorchid\"] = 0x9932CC;\n                this._colorNames[\"mediumorchid\"] = 0xBA55D3;\n                this._colorNames[\"orchid\"] = 0xDA70D6;\n                this._colorNames[\"violet\"] = 0xEE82EE;\n                this._colorNames[\"plum\"] = 0xDDA0DD;\n                this._colorNames[\"thistle\"] = 0xD8BFD8;\n                this._colorNames[\"lavender\"] = 0xE6E6FA;\n                this._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n                this._colorNames[\"aliceblue\"] = 0xF0F8FF;\n                this._colorNames[\"mintcream\"] = 0xF5FFFA;\n                this._colorNames[\"honeydew\"] = 0xF0FFF0;\n                this._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n                this._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n                this._colorNames[\"cornsilk\"] = 0xFFF8DC;\n                this._colorNames[\"lightyellow\"] = 0xFFFFE0;\n                this._colorNames[\"ivory\"] = 0xFFFFF0;\n                this._colorNames[\"floralwhite\"] = 0xFFFAF0;\n                this._colorNames[\"linen\"] = 0xFAF0E6;\n                this._colorNames[\"oldlace\"] = 0xFDF5E6;\n                this._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n                this._colorNames[\"bisque\"] = 0xFFE4C4;\n                this._colorNames[\"peachpuff\"] = 0xFFDAB9;\n                this._colorNames[\"papayawhip\"] = 0xFFEFD5;\n                this._colorNames[\"beige\"] = 0xF5F5DC;\n                this._colorNames[\"seashell\"] = 0xFFF5EE;\n                this._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n                this._colorNames[\"mistyrose\"] = 0xFFE4E1;\n                this._colorNames[\"snow\"] = 0xFFFAFA;\n                this._colorNames[\"white\"] = 0xFFFFFF;\n                this._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n                this._colorNames[\"gainsboro\"] = 0xDCDCDC;\n                this._colorNames[\"lightgrey\"] = 0xD3D3D3;\n                this._colorNames[\"silver\"] = 0xC0C0C0;\n                this._colorNames[\"darkgrey\"] = 0xA9A9A9;\n                this._colorNames[\"grey\"] = 0x808080;\n                this._colorNames[\"lightslategrey\"] = 0x778899;\n                this._colorNames[\"slategrey\"] = 0x708090;\n                this._colorNames[\"dimgrey\"] = 0x696969;\n                this._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n                this._colorNames[\"black\"] = 0x000000;\n                this._colorNames[\"transparent\"] = 0xFF000000;\n            }\n            if (this._colorNames[data] != null)\n                return this._colorNames[data];\n            if ((data.length == 6) && this.isHex(data))\n                return parseInt(\"0x\" + data);\n        }\n        return null;\n    };\n    Cast.color = function (data) {\n        var result = this.tryColor(data);\n        if (result == null)\n            throw new CastError_1.CastError(\"Can't cast to color: \" + data);\n        return result;\n    };\n    Cast.tryClass = function (name) {\n        if (this._notClasses[name])\n            return name;\n        var result = this._classes[name];\n        if (result != null)\n            return result;\n        try {\n            result = window[name];\n            this._classes[name] = result;\n            return result;\n        }\n        catch (e /*ReferenceError*/) {\n        }\n        this._notClasses[name] = true;\n        return name;\n    };\n    Cast.image2D = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Image2D_1.Image2D)\n            return data;\n        if (data instanceof Single2DTexture_1.Single2DTexture)\n            data = data.image2D;\n        throw new CastError_1.CastError(\"Can't cast to BitmapImage2D: \" + data);\n    };\n    Cast.bitmapTexture = function (data) {\n        if (data == null)\n            return null;\n        if (typeof (data) == 'string')\n            data = this.tryClass(data);\n        if (typeof (data) == 'function') {\n            try {\n                data = new data();\n            }\n            catch (e /*ArgumentError*/) {\n                data = new data(0, 0);\n            }\n        }\n        if (data instanceof Single2DTexture_1.Single2DTexture)\n            return data;\n        try {\n            var bmd = Cast.image2D(data);\n            return new Single2DTexture_1.Single2DTexture(bmd);\n        }\n        catch (e /*CastError*/) {\n        }\n        throw new CastError_1.CastError(\"Can't cast to Single2DTexture: \" + data);\n    };\n    Cast._hexChars = \"0123456789abcdefABCDEF\";\n    Cast._notClasses = new Object();\n    Cast._classes = new Object();\n    return Cast;\n}());\nexports.Cast = Cast;\n\n},{\"../errors/CastError\":\"awayjs-display/lib/errors/CastError\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/utils/ByteArray\":undefined}],\"awayjs-display/lib/utils/ElementsUtils\":[function(require,module,exports){\n\"use strict\";\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\nvar Float4Attributes_1 = require(\"awayjs-core/lib/attributes/Float4Attributes\");\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\nvar HitTestCache_1 = require(\"../graphics/HitTestCache\");\nvar ElementsUtils = (function () {\n    function ElementsUtils() {\n    }\n    ElementsUtils.generateFaceNormals = function (indexAttributes, positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        if (output == null)\n            output = new Float4Attributes_1.Float4Attributes(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var indexDim = indexAttributes.dimensions;\n        var positionDim = positionAttributes.dimensions;\n        var faceNormals = output.get(count, offset);\n        //multiply by dimension to get index length\n        count *= indexDim;\n        var i = 0;\n        var j = 0;\n        var index;\n        var x1, x2, x3;\n        var y1, y2, y3;\n        var z1, z2, z3;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        var d;\n        if (positionDim == 3) {\n            while (i < count) {\n                index = indices[i++] * 3;\n                x1 = positions[index];\n                y1 = positions[index + 1];\n                z1 = positions[index + 2];\n                index = indices[i++] * 3;\n                x2 = positions[index];\n                y2 = positions[index + 1];\n                z2 = positions[index + 2];\n                index = indices[i++] * 3;\n                x3 = positions[index];\n                y3 = positions[index + 1];\n                z3 = positions[index + 2];\n                dx1 = x3 - x1;\n                dy1 = y3 - y1;\n                dz1 = z3 - z1;\n                dx2 = x2 - x1;\n                dy2 = y2 - y1;\n                dz2 = z2 - z1;\n                cx = dz1 * dy2 - dy1 * dz2;\n                cy = dx1 * dz2 - dz1 * dx2;\n                cz = dy1 * dx2 - dx1 * dy2;\n                d = Math.sqrt(cx * cx + cy * cy + cz * cz);\n                // length of cross product = 2*triangle area\n                faceNormals[j++] = cx;\n                faceNormals[j++] = cy;\n                faceNormals[j++] = cz;\n                faceNormals[j++] = d;\n            }\n        }\n        else if (positionDim == 2) {\n            while (i < count) {\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 0;\n                faceNormals[j++] = 1;\n                faceNormals[j++] = 1;\n                i += 3;\n            }\n        }\n        output.set(faceNormals, offset);\n        return output;\n    };\n    ElementsUtils.generateNormals = function (indexAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.Float3Attributes(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var normals = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear normal values\n        while (i < len) {\n            normals[i++] = 0;\n            normals[i++] = 0;\n            normals[i++] = 0;\n        }\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        //collect face normals\n        while (i < len) {\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            index = indices[i++] * outputDim;\n            normals[index] += faceNormals[f1];\n            normals[index + 1] += faceNormals[f2];\n            normals[index + 2] += faceNormals[f3];\n            f1 += 4;\n            f2 += 4;\n            f3 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise normals collections\n        while (i < len) {\n            vx = normals[i];\n            vy = normals[i + 1];\n            vz = normals[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            normals[i++] = vx * d;\n            normals[i++] = vy * d;\n            normals[i++] = vz * d;\n        }\n        output.set(normals);\n        return output;\n    };\n    ElementsUtils.generateFaceTangents = function (indexAttributes, positionAttributes, uvAttributes, output, count, offset, useFaceWeights) {\n        if (offset === void 0) { offset = 0; }\n        if (useFaceWeights === void 0) { useFaceWeights = false; }\n        var indices = indexAttributes.get(count, offset);\n        var positions = positionAttributes.get(positionAttributes.count);\n        var uvs = uvAttributes.get(uvAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.Float3Attributes(count + offset);\n        else if (output.count < count + offset)\n            output.count = count + offset;\n        var positionDim = positionAttributes.dimensions;\n        var uvDim = uvAttributes.dimensions;\n        var indexDim = indexAttributes.dimensions;\n        var faceTangents = output.get(count, offset);\n        var i = 0;\n        var index1;\n        var index2;\n        var index3;\n        var v0;\n        var v1;\n        var v2;\n        var dv1;\n        var dv2;\n        var denom;\n        var x0, y0, z0;\n        var dx1, dy1, dz1;\n        var dx2, dy2, dz2;\n        var cx, cy, cz;\n        //multiply by dimension to get index length\n        count *= indexDim;\n        while (i < count) {\n            index1 = indices[i];\n            index2 = indices[i + 1];\n            index3 = indices[i + 2];\n            v0 = uvs[index1 * uvDim + 1];\n            dv1 = uvs[index2 * uvDim + 1] - v0;\n            dv2 = uvs[index3 * uvDim + 1] - v0;\n            v0 = index1 * positionDim;\n            v1 = index2 * positionDim;\n            v2 = index3 * positionDim;\n            x0 = positions[v0];\n            dx1 = positions[v1] - x0;\n            dx2 = positions[v2] - x0;\n            cx = dv2 * dx1 - dv1 * dx2;\n            y0 = positions[v0 + 1];\n            dy1 = positions[v1 + 1] - y0;\n            dy2 = positions[v2 + 1] - y0;\n            cy = dv2 * dy1 - dv1 * dy2;\n            if (positionDim == 3) {\n                z0 = positions[v0 + 2];\n                dz1 = positions[v1 + 2] - z0;\n                dz2 = positions[v2 + 2] - z0;\n                cz = dv2 * dz1 - dv1 * dz2;\n            }\n            else {\n                cz = 0;\n            }\n            denom = 1 / Math.sqrt(cx * cx + cy * cy + cz * cz);\n            faceTangents[i++] = denom * cx;\n            faceTangents[i++] = denom * cy;\n            faceTangents[i++] = denom * cz;\n        }\n        output.set(faceTangents, offset);\n        return output;\n    };\n    ElementsUtils.generateTangents = function (indexAttributes, faceTangentAttributes, faceNormalAttributes, output, concatenatedBuffer) {\n        var indices = indexAttributes.get(indexAttributes.count);\n        var faceTangents = faceTangentAttributes.get(faceTangentAttributes.count);\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\n        if (output == null)\n            output = new Float3Attributes_1.Float3Attributes(concatenatedBuffer);\n        var indexDim = indexAttributes.dimensions;\n        var outputDim = output.dimensions;\n        var tangents = output.get(output.count);\n        var i = 0;\n        var len = output.count * outputDim;\n        //clear tangent values\n        while (i < len) {\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n            tangents[i++] = 0;\n        }\n        var weight;\n        var index;\n        var f1 = 0;\n        var f2 = 1;\n        var f3 = 2;\n        var f4 = 3;\n        i = 0;\n        len = indexAttributes.count * indexDim;\n        //collect face tangents\n        while (i < len) {\n            weight = faceNormals[f4];\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            index = indices[i++] * outputDim;\n            tangents[index++] += faceTangents[f1] * weight;\n            tangents[index++] += faceTangents[f2] * weight;\n            tangents[index] += faceTangents[f3] * weight;\n            f1 += 3;\n            f2 += 3;\n            f3 += 3;\n            f4 += 4;\n        }\n        i = 0;\n        len = output.count * outputDim;\n        var vx;\n        var vy;\n        var vz;\n        var d;\n        //normalise tangents collections\n        while (i < len) {\n            vx = tangents[i];\n            vy = tangents[i + 1];\n            vz = tangents[i + 2];\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\n            tangents[i++] = vx * d;\n            tangents[i++] = vy * d;\n            tangents[i++] = vz * d;\n        }\n        output.set(tangents);\n        return output;\n    };\n    ElementsUtils.generateColors = function (indexAttributes, output, concatenatedBuffer, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output == null)\n            output = new Byte4Attributes_1.Byte4Attributes(concatenatedBuffer);\n        var index = 0;\n        var colors = new Uint8Array(count * 4);\n        while (index < count * 4) {\n            if (index / 4 & 1) {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            else {\n                colors[index] = 0xFF;\n                colors[index + 1] = 0xFF;\n                colors[index + 2] = 0xFF;\n                colors[index + 3] = 0xFF;\n            }\n            index += 4;\n        }\n        output.set(colors, offset);\n        return output;\n    };\n    ElementsUtils.scaleUVs = function (scaleU, scaleV, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var uvs = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            uvs[i++] *= scaleU;\n            uvs[i++] *= scaleV;\n        }\n        output.set(uvs, offset);\n    };\n    ElementsUtils.scale = function (scale, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        if (output.count < count + offset)\n            output.count = count + offset;\n        var outputDim = output.dimensions;\n        var positions = output.get(count, offset);\n        var i = 0;\n        var j = 0;\n        var len = count * outputDim;\n        while (i < len) {\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n            positions[i++] *= scale;\n        }\n        output.set(positions, offset);\n    };\n    ElementsUtils.applyTransformation = function (transform, positionAttributes, normalAttributes, tangentAttributes, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        //todo: make this compatible with 2-dimensional positions\n        var positions = positionAttributes.get(count, offset);\n        var positionDim = positionAttributes.dimensions;\n        var normals;\n        var normalDim;\n        if (normalAttributes) {\n            normals = normalAttributes.get(count, offset);\n            normalDim = normalAttributes.dimensions;\n        }\n        var tangents;\n        var tangentDim;\n        if (tangentAttributes) {\n            tangents = tangentAttributes.get(count, offset);\n            tangentDim = tangentAttributes.dimensions;\n        }\n        var i;\n        var i1;\n        var i2;\n        var vector = new Vector3D_1.Vector3D();\n        var invTranspose;\n        if (normalAttributes || tangentAttributes) {\n            invTranspose = transform.clone();\n            invTranspose.invert();\n            invTranspose.transpose();\n        }\n        var vi0 = 0;\n        var ni0 = 0;\n        var ti0 = 0;\n        for (i = 0; i < count; ++i) {\n            // bake position\n            i1 = vi0 + 1;\n            i2 = vi0 + 2;\n            vector.x = positions[vi0];\n            vector.y = positions[i1];\n            vector.z = positions[i2];\n            vector = transform.transformVector(vector);\n            positions[vi0] = vector.x;\n            positions[i1] = vector.y;\n            positions[i2] = vector.z;\n            vi0 += positionDim;\n            if (normals) {\n                // bake normal\n                i1 = ni0 + 1;\n                i2 = ni0 + 2;\n                vector.x = normals[ni0];\n                vector.y = normals[i1];\n                vector.z = normals[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                normals[ni0] = vector.x;\n                normals[i1] = vector.y;\n                normals[i2] = vector.z;\n                ni0 += normalDim;\n            }\n            if (tangents) {\n                // bake tangent\n                i1 = ti0 + 1;\n                i2 = ti0 + 2;\n                vector.x = tangents[ti0];\n                vector.y = tangents[i1];\n                vector.z = tangents[i2];\n                vector = invTranspose.deltaTransformVector(vector);\n                vector.normalize();\n                tangents[ti0] = vector.x;\n                tangents[i1] = vector.y;\n                tangents[i2] = vector.z;\n                ti0 += tangentDim;\n            }\n        }\n        positionAttributes.set(positions, offset);\n        if (normalAttributes)\n            normalAttributes.set(normals, offset);\n        if (tangentAttributes)\n            tangentAttributes.set(tangents, offset);\n    };\n    ElementsUtils.getSubIndices = function (indexAttributes, numVertices, indexMappings, indexOffset) {\n        if (indexOffset === void 0) { indexOffset = 0; }\n        var buffer = indexAttributes.buffer;\n        var numIndices = indexAttributes.length;\n        //reset mappings\n        indexMappings.length = 0;\n        //shortcut for those buffers that fit into the maximum buffer sizes\n        if (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n            return buffer;\n        var i;\n        var indices = indexAttributes.get(indexAttributes.count, indexOffset);\n        var splitIndices = new Array();\n        var indexSwap = ElementsUtils._indexSwap;\n        indexSwap.length = numIndices;\n        for (i = 0; i < numIndices; i++)\n            indexSwap[i] = -1;\n        var originalIndex;\n        var splitIndex;\n        var index = 0;\n        var offsetLength = indexOffset * indexAttributes.dimensions;\n        // Loop over all triangles\n        i = 0;\n        while (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n            originalIndex = indices[i];\n            if (indexSwap[originalIndex] >= 0) {\n                splitIndex = indexSwap[originalIndex];\n            }\n            else {\n                // This vertex does not yet exist in the split list and\n                // needs to be copied from the long list.\n                splitIndex = index++;\n                indexSwap[originalIndex] = splitIndex;\n                indexMappings[splitIndex] = originalIndex;\n            }\n            // Store new index, which may have come from the swap look-up,\n            // or from copying a new set of vertex data from the original vector\n            splitIndices[i++] = splitIndex;\n        }\n        buffer = new AttributesBuffer_1.AttributesBuffer(indexAttributes.size * indexAttributes.dimensions, splitIndices.length / indexAttributes.dimensions);\n        indexAttributes = indexAttributes.clone(buffer);\n        indexAttributes.set(splitIndices);\n        return buffer;\n    };\n    ElementsUtils.getSubVertices = function (vertexBuffer, indexMappings) {\n        if (!indexMappings.length)\n            return vertexBuffer;\n        var stride = vertexBuffer.stride;\n        var vertices = vertexBuffer.bufferView;\n        var splitVerts = new Uint8Array(indexMappings.length * stride);\n        var splitIndex;\n        var originalIndex;\n        var i = 0;\n        var j = 0;\n        var len = indexMappings.length;\n        for (i = 0; i < len; i++) {\n            splitIndex = i * stride;\n            originalIndex = indexMappings[i] * stride;\n            for (j = 0; j < stride; j++)\n                splitVerts[splitIndex + j] = vertices[originalIndex + j];\n        }\n        vertexBuffer = new AttributesBuffer_1.AttributesBuffer(stride, len);\n        vertexBuffer.bufferView = splitVerts;\n        return vertexBuffer;\n    };\n    //TODO - generate this dyanamically based on num tris\n    ElementsUtils.hitTestTriangleElements = function (x, y, z, box, triangleElements, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positionAttributes = triangleElements.positions;\n        var curveAttributes = triangleElements.getCustomAtributes(\"curves\");\n        var posDim = positionAttributes.dimensions;\n        var curveDim = curveAttributes.dimensions;\n        var positions = positionAttributes.get(count, offset);\n        var curves = curveAttributes ? curveAttributes.get(count, offset) : null;\n        var id0;\n        var id1;\n        var id2;\n        var ax;\n        var ay;\n        var bx;\n        var by;\n        var cx;\n        var cy;\n        var hitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache_1.HitTestCache());\n        var index = hitTestCache.lastCollisionIndex;\n        if (index != -1 && index < count) {\n            precheck: {\n                id0 = index + 2;\n                id1 = index + 1;\n                id2 = index + 0;\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //console.log(ax, ay, bx, by, cx, cy);\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                //console.log(ax,ay,bx,by,cx,cy);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    break precheck;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128) {\n                            break precheck;\n                            ;\n                        }\n                        else if (d < 0 && az == 127) {\n                            break precheck;\n                            ;\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        //hard coded min vertex count to bother using a grid for\n        if (count > 150) {\n            var cells = hitTestCache.cells;\n            var divisions = cells.length ? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n            var conversionX = divisions / box.width;\n            var conversionY = divisions / box.height;\n            var minx = box.x;\n            var miny = box.y;\n            if (!cells.length) {\n                //now we have bounds start creating grid cells and filling\n                cells.length = divisions * divisions;\n                for (var k = 0; k < count; k += 3) {\n                    id0 = k + 2;\n                    id1 = k + 1;\n                    id2 = k + 0;\n                    ax = positions[id0 * posDim];\n                    ay = positions[id0 * posDim + 1];\n                    bx = positions[id1 * posDim];\n                    by = positions[id1 * posDim + 1];\n                    cx = positions[id2 * posDim];\n                    cy = positions[id2 * posDim + 1];\n                    //subtractions to push into positive space\n                    var min_index_x = Math.floor((Math.min(ax, bx, cx) - minx) * conversionX);\n                    var min_index_y = Math.floor((Math.min(ay, by, cy) - miny) * conversionY);\n                    var max_index_x = Math.floor((Math.max(ax, bx, cx) - minx) * conversionX);\n                    var max_index_y = Math.floor((Math.max(ay, by, cy) - miny) * conversionY);\n                    for (var i = min_index_x; i <= max_index_x; i++) {\n                        for (var j = min_index_y; j <= max_index_y; j++) {\n                            var index = i + j * divisions;\n                            var nodes = cells[index] || (cells[index] = new Array());\n                            //push in the triangle ids\n                            nodes.push(id0, id1, id2);\n                        }\n                    }\n                }\n            }\n            var index_x = Math.floor((x - minx) * conversionX);\n            var index_y = Math.floor((y - miny) * conversionY);\n            if ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n                return false;\n            var nodes = cells[index_x + index_y * divisions];\n            if (nodes == null)\n                return false;\n            var nodeCount = nodes.length;\n            for (var k = 0; k < nodeCount; k += 3) {\n                id2 = nodes[k + 2];\n                if (id2 == index)\n                    continue;\n                id1 = nodes[k + 1];\n                id0 = nodes[k];\n                ax = positions[id0 * posDim];\n                ay = positions[id0 * posDim + 1];\n                bx = positions[id1 * posDim];\n                by = positions[id1 * posDim + 1];\n                cx = positions[id2 * posDim];\n                cy = positions[id2 * posDim + 1];\n                //from a to p\n                var dx = ax - x;\n                var dy = ay - y;\n                //edge normal (a-b)\n                var nx = by - ay;\n                var ny = -(bx - ax);\n                var dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = bx - x;\n                dy = by - y;\n                nx = cy - by;\n                ny = -(cx - bx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                dx = cx - x;\n                dy = cy - y;\n                nx = ay - cy;\n                ny = -(ax - cx);\n                dot = (dx * nx) + (dy * ny);\n                if (dot > 0)\n                    continue;\n                if (curves) {\n                    var curvey0 = curves[id0 * curveDim + 2];\n                    var curvey1 = curves[id1 * curveDim + 2];\n                    var curvey2 = curves[id2 * curveDim + 2];\n                    //check if not solid\n                    if (curvey0 || curvey1 || curvey2) {\n                        var v0x = bx - ax;\n                        var v0y = by - ay;\n                        var v1x = cx - ax;\n                        var v1y = cy - ay;\n                        var v2x = x - ax;\n                        var v2y = y - ay;\n                        var den = v0x * v1y - v1x * v0y;\n                        var v = (v2x * v1y - v1x * v2y) / den;\n                        var w = (v0x * v2y - v2x * v0y) / den;\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\n                        //here be dragons\n                        var uu = 0.5 * v + w;\n                        var vv = w;\n                        var d = uu * uu - vv;\n                        var az = curves[id0 * curveDim];\n                        if (d > 0 && az == -128)\n                            continue;\n                        else if (d < 0 && az == 127)\n                            continue;\n                    }\n                }\n                hitTestCache.lastCollisionIndex = id2;\n                return true;\n            }\n            return false;\n        }\n        //brute force\n        for (var k = 0; k < count; k += 3) {\n            id2 = k + 0;\n            if (id2 == index)\n                continue;\n            id1 = k + 1;\n            id0 = k + 2;\n            ax = positions[id0 * posDim];\n            ay = positions[id0 * posDim + 1];\n            bx = positions[id1 * posDim];\n            by = positions[id1 * posDim + 1];\n            cx = positions[id2 * posDim];\n            cy = positions[id2 * posDim + 1];\n            //console.log(ax, ay, bx, by, cx, cy);\n            //from a to p\n            var dx = ax - x;\n            var dy = ay - y;\n            //edge normal (a-b)\n            var nx = by - ay;\n            var ny = -(bx - ax);\n            //console.log(ax,ay,bx,by,cx,cy);\n            var dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = bx - x;\n            dy = by - y;\n            nx = cy - by;\n            ny = -(cx - bx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            dx = cx - x;\n            dy = cy - y;\n            nx = ay - cy;\n            ny = -(ax - cx);\n            dot = (dx * nx) + (dy * ny);\n            if (dot > 0)\n                continue;\n            if (curves) {\n                var curvey0 = curves[id0 * curveDim + 2];\n                var curvey1 = curves[id1 * curveDim + 2];\n                var curvey2 = curves[id2 * curveDim + 2];\n                //check if not solid\n                if (curvey0 || curvey1 || curvey2) {\n                    var v0x = bx - ax;\n                    var v0y = by - ay;\n                    var v1x = cx - ax;\n                    var v1y = cy - ay;\n                    var v2x = x - ax;\n                    var v2y = y - ay;\n                    var den = v0x * v1y - v1x * v0y;\n                    var v = (v2x * v1y - v1x * v2y) / den;\n                    var w = (v0x * v2y - v2x * v0y) / den;\n                    //var u:number = 1 - v - w;\t//commented out as inlined away\n                    //here be dragons\n                    var uu = 0.5 * v + w;\n                    var vv = w;\n                    var d = uu * uu - vv;\n                    var az = curves[id0 * curveDim];\n                    if (d > 0 && az == -128) {\n                        continue;\n                    }\n                    else if (d < 0 && az == 127) {\n                        continue;\n                    }\n                }\n            }\n            hitTestCache.lastCollisionIndex = id2;\n            return true;\n        }\n        return false;\n    };\n    ElementsUtils.getTriangleGraphicsBoxBounds = function (positionAttributes, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        var pos;\n        var minX = 0, minY = 0, minZ = 0;\n        var maxX = 0, maxY = 0, maxZ = 0;\n        var len = count * posDim;\n        for (var i = 0; i < len; i += posDim) {\n            if (i == 0) {\n                maxX = minX = positions[i];\n                maxY = minY = positions[i + 1];\n                maxZ = minZ = (posDim == 3) ? positions[i + 2] : 0;\n            }\n            else {\n                pos = positions[i];\n                if (pos < minX)\n                    minX = pos;\n                else if (pos > maxX)\n                    maxX = pos;\n                pos = positions[i + 1];\n                if (pos < minY)\n                    minY = pos;\n                else if (pos > maxY)\n                    maxY = pos;\n                if (posDim == 3) {\n                    pos = positions[i + 2];\n                    if (pos < minZ)\n                        minZ = pos;\n                    else if (pos > maxZ)\n                        maxZ = pos;\n                }\n            }\n        }\n        if (output == null)\n            output = new Box_1.Box();\n        output.x = minX;\n        output.y = minY;\n        output.z = minZ;\n        output.right = maxX;\n        output.bottom = maxY;\n        output.back = maxZ;\n        return output;\n    };\n    ElementsUtils.getTriangleGraphicsSphereBounds = function (positionAttributes, center, output, count, offset) {\n        if (offset === void 0) { offset = 0; }\n        var positions = positionAttributes.get(count, offset);\n        var posDim = positionAttributes.dimensions;\n        var maxRadiusSquared = 0;\n        var radiusSquared;\n        var len = count * posDim;\n        var distanceX;\n        var distanceY;\n        var distanceZ;\n        for (var i = 0; i < len; i += posDim) {\n            distanceX = positions[i] - center.x;\n            distanceY = positions[i + 1] - center.y;\n            distanceZ = (posDim == 3) ? positions[i + 2] - center.z : -center.z;\n            radiusSquared = distanceX * distanceX + distanceY * distanceY + distanceZ * distanceZ;\n            if (maxRadiusSquared < radiusSquared)\n                maxRadiusSquared = radiusSquared;\n        }\n        if (output == null)\n            output = new Sphere_1.Sphere();\n        output.x = center.x;\n        output.y = center.y;\n        output.z = center.z;\n        output.radius = Math.sqrt(maxRadiusSquared);\n        return output;\n    };\n    ElementsUtils.tempFloat32x4 = new Float32Array(4);\n    ElementsUtils.LIMIT_VERTS = 0xffff;\n    ElementsUtils.LIMIT_INDICES = 0xffffff;\n    ElementsUtils._indexSwap = new Array();\n    return ElementsUtils;\n}());\nexports.ElementsUtils = ElementsUtils;\n\n},{\"../graphics/HitTestCache\":\"awayjs-display/lib/graphics/HitTestCache\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Float4Attributes\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/utils\":[function(require,module,exports){\n\"use strict\";\nvar Cast_1 = require(\"./utils/Cast\");\nexports.Cast = Cast_1.Cast;\nvar ElementsUtils_1 = require(\"./utils/ElementsUtils\");\nexports.ElementsUtils = ElementsUtils_1.ElementsUtils;\n\n},{\"./utils/Cast\":\"awayjs-display/lib/utils/Cast\",\"./utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}]},{},[1])\n\n",
    "import * as adapters\t\t\t\tfrom \"./lib/adapters\";\nimport * as animators\t\t\t\tfrom \"./lib/animators\";\nimport * as base\t\t\t\t\tfrom \"./lib/base\";\nimport * as bounds\t\t\t\t\tfrom \"./lib/bounds\";\nimport * as controllers\t\t\t\tfrom \"./lib/controllers\";\nimport * as display\t\t\t\t\tfrom \"./lib/display\";\nimport * as draw\t\t\t\t\tfrom \"./lib/draw\";\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as factories\t\t\t\tfrom \"./lib/factories\";\nimport * as graphics\t\t\t\tfrom \"./lib/graphics\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\nimport * as materials\t\t\t\tfrom \"./lib/materials\";\nimport * as partition\t\t\t\tfrom \"./lib/partition\";\nimport * as pick\t\t\t\t\tfrom \"./lib/pick\";\nimport * as prefabs\t\t\t\t\tfrom \"./lib/prefabs\";\nimport * as text\t\t\t\t\tfrom \"./lib/text\";\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\nimport {IRenderer}\t\t\t\t\tfrom \"./lib/IRenderer\";\nimport {ITraverser}\t\t\t\t\tfrom \"./lib/ITraverser\";\nimport {View}\t\t\t\t\t\t\tfrom \"./lib/View\";\n\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\n\nexport {\n\tadapters,\n\tanimators,\n\tbase,\n\tbounds,\n\tcontrollers,\n\tdisplay,\n\tdraw,\n\terrors,\n\tevents,\n\tfactories,\n\tgraphics,\n\tmanagers,\n\tmaterials,\n\tpartition,\n\tpick,\n\tprefabs,\n\ttext,\n\ttextures,\n\tutils,\n\tIRenderer,\n\tITraverser,\n\tView\n}\n\n",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {getTimer}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\n\nimport {IRenderer}\t\t\t\t\tfrom \"./IRenderer\";\nimport {DisplayObject}\t\t\t\tfrom \"./display/DisplayObject\";\nimport {TouchPoint}\t\t\t\t\tfrom \"./base/TouchPoint\";\nimport {Scene}\t\t\t\t\t\tfrom \"./display/Scene\";\nimport {IPicker}\t\t\t\t\t\tfrom \"./pick/IPicker\";\nimport {PickingCollision}\t\t\t\tfrom \"./pick/PickingCollision\";\nimport {RaycastPicker}\t\t\t\tfrom \"./pick/RaycastPicker\";\nimport {Camera}\t\t\t\t\t\tfrom \"./display/Camera\";\nimport {CameraEvent}\t\t\t\t\tfrom \"./events/CameraEvent\";\nimport {DisplayObjectEvent}\t\t\tfrom \"./events/DisplayObjectEvent\";\nimport {RendererEvent}\t\t\t\tfrom \"./events/RendererEvent\";\nimport {MouseManager}\t\t\t\t\tfrom \"./managers/MouseManager\";\n\nexport class View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t ******************clear********************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render():void\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//render the contents of the scene\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent):void\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent):void\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent):void\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent):void\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider():void\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\n\t\t}\n\t}\n}",
    "import {TriangleElements}\t\t\t\tfrom \"../../graphics/TriangleElements\";\n\nexport class ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport default ParticleData",
    "import {AssetBase}\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nexport class AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}",
    "export {ParticleData}\t\t\t\t\tfrom \"./animators/data/ParticleData\";\nexport {AnimationNodeBase}\t\t\t\tfrom \"./animators/nodes/AnimationNodeBase\";\nexport {IAnimationSet}\t\t\t\t\tfrom \"./animators/IAnimationSet\";\nexport {IAnimator}\t\t\t\t\t\tfrom \"./animators/IAnimator\";",
    "/**\n *\n */\nexport class AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}",
    "/**\n *\n */\nexport class HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}",
    "export class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}",
    "import {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport {SamplerBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\n\n/**\n *\n */\nexport class Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0):void\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0):void\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0):void\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0):void\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties():void\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n",
    "import {HierarchicalProperties}\t\t\tfrom \"../base/HierarchicalProperties\";\nimport {MovieClip}\t\t\t\t\t\tfrom \"../display/MovieClip\";\nimport {DisplayObject}\t\t\t\t\tfrom \"../display/DisplayObject\";\nimport {ColorTransform}\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {FrameScriptManager}\t\t\t\tfrom \"../managers/FrameScriptManager\";\n\n\nexport class Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index] == null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number):void\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false):void\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object):void\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip):void\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false):void\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number):void\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number):void\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number):void\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.rawData[0] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[1] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[2] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[3] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[4] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[5] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[6] = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.rawData[7] = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number):void\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number):void\n\t{\n\t\tchild.masks = null;\n\t}\n}",
    "/**\n *\n */\nexport class TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}",
    "import {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {TransformEvent}\t\t\t\tfrom \"../events/TransformEvent\";\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nexport class Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number):void\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number):void\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number):void\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number):void\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number):void\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number):void\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number):void\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number):void\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number):void\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number):void\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number):void\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D():void\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform():void\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents():void\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition():void\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform():void\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D():void\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents():void\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n",
    "export {AlignmentMode}\t\t\t\t\tfrom \"./base/AlignmentMode\";\nexport {HierarchicalProperties}\t\t\tfrom \"./base/HierarchicalProperties\";\nexport {IBitmapDrawable}\t\t\t\t\tfrom \"./base/IBitmapDrawable\";\nexport {IRenderable}\t\t\t\t\t\tfrom \"./base/IRenderable\";\nexport {ISurface}\t\t\t\t\t\tfrom \"./base/ISurface\";\nexport {OrientationMode}\t\t\t\t\tfrom \"./base/OrientationMode\";\nexport {Style}\t\t\t\t\t\t\tfrom \"./base/Style\";\nexport {Timeline}\t\t\t\t\t\tfrom \"./base/Timeline\";\nexport {TouchPoint}\t\t\t\t\t\tfrom \"./base/TouchPoint\";\nexport {Transform}\t\t\t\t\t\tfrom \"./base/Transform\";",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ElementsType}\t\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport {PrimitiveCubePrefab}\t\t\tfrom \"../prefabs/PrimitiveCubePrefab\";\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most sprites.\n */\nexport class AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify():void\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate():void\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ElementsType}\t\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport {PrimitiveSpherePrefab}\t\tfrom \"../prefabs/PrimitiveSpherePrefab\";\n\nexport class BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify():void\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate():void\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Sprite> this._prefab.getNewObject();\n\t}\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\n\nexport class BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Sprite;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify():void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate():void\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate():void\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Sprite\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}",
    "/**\n *\n */\nexport class BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}",
    "import {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\n\n\nexport class NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}",
    "export {AxisAlignedBoundingBox}\t\t\tfrom \"./bounds/AxisAlignedBoundingBox\";\nexport {BoundingSphere}\t\t\t\t\tfrom \"./bounds/BoundingSphere\";\nexport {BoundingVolumeBase}\t\t\t\tfrom \"./bounds/BoundingVolumeBase\";\nexport {BoundsType}\t\t\t\t\t\tfrom \"./bounds/BoundsType\";\nexport {NullBounds}\t\t\t\t\t\tfrom \"./bounds/NullBounds\";",
    "import {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\n\nexport class ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate():void\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController():void\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}",
    "import {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport {ControllerBase}\t\t\tfrom \"../controllers/ControllerBase\";\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nexport class FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number):void\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number):void\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}",
    "import {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\nimport {HoverController}\t\t\tfrom \"../controllers/HoverController\";\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nexport class FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}",
    "import {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\nimport {LookAtController}\t\t\tfrom \"../controllers/LookAtController\";\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nexport class HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}",
    "import {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\nimport {ControllerBase}\t\t\tfrom \"../controllers/ControllerBase\";\nimport {DisplayObjectEvent}\t\tfrom \"../events/DisplayObjectEvent\";\n\nexport class LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent):void\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}",
    "import {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\nimport {LookAtController}\t\t\tfrom \"../controllers/LookAtController\";\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nexport class SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true):void\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tvar position:Vector3D = this._pTargetObject.transform.position.add(this._velocity);\n\t\tthis._pTargetObject.transform.moveTo(position.x, position.y, position.z);\n\n\t\tsuper.update();\n\t}\n}",
    "export {ControllerBase}\t\t\t\t\tfrom \"./controllers/ControllerBase\";\nexport {FirstPersonController}\t\t\tfrom \"./controllers/FirstPersonController\";\nexport {FollowController}\t\t\t\tfrom \"./controllers/FollowController\";\nexport {HoverController}\t\t\t\t\tfrom \"./controllers/HoverController\";\nexport {LookAtController}\t\t\t\tfrom \"./controllers/LookAtController\";\nexport {SpringController}\t\t\t\tfrom \"./controllers/SpringController\";",
    "import {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport {DefaultMaterialManager}\t\tfrom \"../managers/DefaultMaterialManager\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nexport class Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent):void\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser):void\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions():void\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.invalidateElements();\n\t}\n\n\n\tpublic invalidateElements():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\t\n\tpublic invalidateSurface():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null):void\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {ProjectionEvent}\t\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\nimport {IProjection}\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\nimport {IRenderer}\t\t\t\t\tfrom \"../IRenderer\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {CameraEvent}\t\t\t\t\tfrom \"../events/CameraEvent\";\n\n\nexport class Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent):void\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum():void\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer):void\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}",
    "import {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {DirectionalShadowMapper}\t\tfrom \"../materials/shadowmappers/DirectionalShadowMapper\";\n\nexport class DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform():void\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {ArgumentError}\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\nimport {RangeError}\t\t\t\t\tfrom \"awayjs-core/lib/errors/RangeError\";\nimport {Extensions}\t\t\t\t\tfrom \"awayjs-core/lib/utils/Extensions\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nexport class DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>):void\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer):void\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues():void\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth():number\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._invalidateChildren();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number = 0, endIndex:number = 2147483647):void\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number):void\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject):void\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number):void\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setBoundIdentity();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase):void\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth():void\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode():void\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tprivate _invalidateChildren():void\n\t{\n\t\tif (this._pIsContainer != Boolean(this._children.length)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsContainer = Boolean(this._children.length);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n}",
    "import {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {MathConsts}\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport {LoaderInfo}\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\nimport {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {IRenderer}\t\t\t\t\tfrom \"../IRenderer\";\nimport {IDisplayObjectAdapter}\t\tfrom \"../adapters/IDisplayObjectAdapter\";\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\nimport {ControllerBase}\t\t\t\tfrom \"../controllers/ControllerBase\";\nimport {AlignmentMode}\t\t\t\tfrom \"../base/AlignmentMode\";\nimport {OrientationMode}\t\t\t\tfrom \"../base/OrientationMode\";\nimport {IBitmapDrawable}\t\t\t\tfrom \"../base/IBitmapDrawable\";\nimport {Transform}\t\t\t\t\tfrom \"../base/Transform\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport {TransformEvent}\t\t\t\tfrom \"../events/TransformEvent\";\nimport {PrefabBase}\t\t\t\t\tfrom \"../prefabs/PrefabBase\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nexport class DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pickingCollider:IPickingCollider;\n\tprivate _pickingCollision:PickingCollision;\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _boundsType:string;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity():boolean\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer():boolean\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pickingCollider:IPickingCollider;\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject):void\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\t\tnewInstance.castsShadows = this.castsShadows;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues():void\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null):void\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number):void\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void):void\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollision():PickingCollision\n\t{\n\t\tif (!this._pickingCollision)\n\t\t\tthis._pickingCollision = new PickingCollision(this);\n\n\t\treturn this._pickingCollision;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer):void\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase):void\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform():void\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate():void\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:ITraverser):void\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent):void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent):void\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds():void\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds():void\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase):void\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number):void\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number):void\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number):void\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled():void\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible():void\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId():void\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks():void\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform():void\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode():void\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear():void\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds():void\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {DisplayObjectContainer}\tfrom \"../display/DisplayObjectContainer\";\nimport {Camera}\t\t\t\t\tfrom \"../display/Camera\";\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\nimport {LightEvent}\t\t\t\tfrom \"../events/LightEvent\";\nimport {ShadowMapperBase}\t\t\tfrom \"../materials/shadowmappers/ShadowMapperBase\";\n\nexport class LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _shadowsEnabled:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get shadowsEnabled():boolean\n\t{\n\t\treturn this._shadowsEnabled;\n\t}\n\n\tpublic set shadowsEnabled(value:boolean)\n\t{\n\t\tif (this._shadowsEnabled == value)\n\t\t\treturn;\n\n\t\tthis._shadowsEnabled = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient():void\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular():void\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse():void\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}",
    "import {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport {SamplerCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {ErrorBase}\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\n\nexport class LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}",
    "﻿import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * A Line Segment primitive.\n */\nexport class LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds():void\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidateElements():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent):void\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser):void\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}",
    "import {AssetLibraryBundle}\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\nimport {Loader}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\nimport {LoaderContext}\t\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\nimport {URLRequest}\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport {URLLoaderEvent}\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\nimport {LoaderEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\nimport {ParserEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\nimport {ParserBase}\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\n\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nexport class LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (sprites, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close():void\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader():Loader\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader():void\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload():void\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object):void\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>):void\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent):void\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent):void\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent):void\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport {TextField}\t\t\t\t\tfrom \"../display/TextField\";\nimport {MouseEvent}\t\t\t\t\tfrom \"../events/MouseEvent\";\nimport {IMovieClipAdapter}\t\t\tfrom \"../adapters/IMovieClipAdapter\";\nimport {Timeline}\t\t\t\t\t\tfrom \"../base/Timeline\";\nimport {FrameScriptManager}\t\t\tfrom \"../managers/FrameScriptManager\";\n\nexport class MovieClip extends Sprite\n{\n\tprivate static _skipAdvance:boolean;\n\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n\tpublic static assetType:string = \"[asset MovieClip]\";\n\n\tprivate _timeline:Timeline;\n\n\tprivate _isButton:boolean = false;\n\tprivate _onMouseOver:(event:MouseEvent) => void;\n\tprivate _onMouseOut:(event:MouseEvent) => void;\n\tprivate _onMouseDown:(event:MouseEvent) => void;\n\tprivate _onMouseUp:(event:MouseEvent) => void;\n\n\tprivate _time:number = 0;// the current time inside the animation\n\tprivate _currentFrameIndex:number = -1;// the current frame\n\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\n\n\t// not sure if needed\n\tprivate _enterFrame:AssetEvent;\n\tprivate _skipAdvance : boolean;\n\tprivate _isInit:boolean = true;\n\n\tprivate _potentialInstances:Array<DisplayObject> = [];\n\tprivate _depth_sessionIDs:Object = {};\n\tprivate _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n\tconstructor(timeline:Timeline = null)\n\t{\n\t\tsuper();\n\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n\t\tthis.inheritColorTransform = true;\n\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n\t\tthis._timeline = timeline || new Timeline();\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis.disposeValues();\n\n\t\tMovieClip._movieClips.push(this);\n\t}\n\n\tpublic disposeValues():void\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._potentialInstances = [];\n\t\tthis._depth_sessionIDs = {};\n\t\tthis._sessionID_childs = {};\n\t}\n\n\tpublic reset_textclones():void\n\t{\n\t\tif(this.timeline) {\n\t\t\tvar len:number = this._potentialInstances.length;\n\t\t\tfor (var i:number = 0; i< len; i++) {\n\t\t\t\tif (this._potentialInstances[i] != null) {\n\t\t\t\t\tif (this._potentialInstances[i].isAsset(TextField))\n\t\t\t\t\t\t(<TextField>this._potentialInstances[i]).text = (<TextField>this.timeline.getPotentialChildPrototype(i)).text;\n\t\t\t\t\telse if (this._potentialInstances[i].isAsset(MovieClip))\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[i]).reset_textclones();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get isInit():boolean\n\t{\n\t\treturn this._isInit;\n\t}\n\tpublic set isInit(value:boolean)\n\t{\n\t\tthis._isInit = value;\n\t}\n\n\tpublic get timeline():Timeline\n\t{\n\t\treturn this._timeline;\n\t}\n\n\tpublic set timeline(value:Timeline)\n\t{\n\t\tthis._timeline = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic loop:boolean = true;\n\n\tpublic get numFrames() : number\n\t{\n\t\treturn this._timeline.numFrames;\n\t}\n\n\tpublic jumpToLabel(label:string):void\n\t{\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\n\t\tthis._timeline.jumpToLabel(this, label);\n\t}\n\n\t/**\n\t * the current index of the current active frame\n\t */\n\tpublic constructedKeyFrameIndex:number = -1;\n\n\tpublic reset():void\n\t{\n\t\tsuper.reset();\n\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\n\t\tthis._time = 0;\n\n\t\tif(this.adapter)\n\t\t\tthis.adapter.freeFromScript();\n\n\t\tthis.constructedKeyFrameIndex = -1;\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\n\t\t\tthis.removeChildAt(i);\n\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\t\tthis._isPlaying = Boolean(numFrames > 1);\n\t\tif (numFrames) {\n\t\t\tthis._currentFrameIndex = 0;\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\n\t\t} else {\n\t\t\tthis._currentFrameIndex = -1;\n\t\t}\n\t}\n\n\n\tpublic resetSessionIDs():void\n\t{\n\t\tthis._depth_sessionIDs = {};\n\t}\n\n\t/*\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n\t */\n\tpublic get currentFrameIndex():number\n\t{\n\t\treturn this._currentFrameIndex;\n\t}\n\n\tpublic set currentFrameIndex(value:number)\n\t{\n\t\t//if currentFrame is set greater than the available number of\n\t\t//frames, the playhead is moved to the last frame in the timeline.\n\t\t//But because the frame specified was not a keyframe, no scripts are\n\t\t//executed, even if they exist on the last frame.\n\t\tvar skip_script:boolean = false;\n\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\n\n\t\tif (!numFrames)\n\t\t\treturn;\n\n\t\tif (value < 0) {\n\t\t\tvalue = 0;\n\t\t} else if (value >= numFrames) {\n\t\t\tvalue = numFrames - 1;\n\t\t\tskip_script = true;\n\t\t}\n\n\t\tif (this._currentFrameIndex == value)\n\t\t\treturn;\n\n\t\tthis._currentFrameIndex = value;\n\n\t\t//changing current frame will ignore advance command for that\n\t\t//update's advanceFrame function, unless advanceFrame has\n\t\t//already been executed\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\n\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\n\t}\n\n\tpublic addButtonListeners():void\n\t{\n\t\tthis._isButton = true;\n\n\t\tthis.stop();\n\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\t}\n\n\tpublic removeButtonListeners():void\n\t{\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n\t}\n\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\n\t{\n\t\treturn this._sessionID_childs[sessionID];\n\t}\n\n\tpublic getSessionIDDepths():Object\n\t{\n\t\treturn this._depth_sessionIDs;\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\t//this should be implemented for all display objects\n\t\tchild.inheritColorTransform = true;\n\n\t\tchild.reset();// this takes care of transform and visibility\n\n\t\treturn super.addChildAtDepth(child, depth, replace);\n\t}\n\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n\t{\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n\t\tthis._sessionID_childs[sessionID] = child;\n\n\t\treturn this.addChildAtDepth(child, depth);\n\t}\n\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif(child.adapter)\n\t\t\tchild.adapter.freeFromScript();\n\n\t\tthis.adapter.unregisterScriptObject(child);\n\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\n\n\t\tdelete this._sessionID_childs[child._sessionID];\n\n\t\tchild._sessionID = -1;\n\n\t\treturn super.removeChildAtInternal(index);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn MovieClip.assetType;\n\t}\n\n\t/**\n\t * Starts playback of animation from current position\n\t */\n\tpublic play():void\n\t{\n\t\tif (this._timeline.keyframe_indices.length > 1)\n\t\t\tthis._isPlaying = true;\n\t}\n\n\t/**\n\t * should be called right before the call to away3d-render.\n\t */\n\tpublic update():void\n\t{\n\t\tMovieClip._skipAdvance = true;\n\n\t\tthis.advanceFrame();\n\n\t\tMovieClip._skipAdvance = false;\n\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we want to execute the onEnter\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t\t// after we executed the onEnter, we might have some script that needs executing\n\t\tFrameScriptManager.execute_queue();\n\n\t\t// now we execute any intervals queued\n\t\tFrameScriptManager.execute_intervals();\n\n\t\t// finally, we execute any scripts that were added from intervals\n\t\tFrameScriptManager.execute_queue();\n\n\t\t//execute any disposes as a result of framescripts\n\t\tFrameScriptManager.execute_dispose();\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tif (!this._potentialInstances[id])\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n\t\treturn this._potentialInstances[id];\n\t}\n\n\n\t/**\n\t * Stop playback of animation and hold current position\n\t */\n\tpublic stop():void\n\t{\n\t\tthis._isPlaying = false;\n\t}\n\n\tpublic clone():MovieClip\n\t{\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:MovieClip):void\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.timeline = this._timeline;\n\t\tnewInstance.loop = this.loop;\n\t}\n\n\tpublic advanceFrame():void\n\t{\n\t\tif (this._isPlaying && !this._skipAdvance) {\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\n\t\t\t\t\tthis.currentFrameIndex = 0;\n\t\t\t\telse //end of timeline, stop playing\n\t\t\t\t\tthis._isPlaying = false;\n\t\t\t} else { // not end - construct next frame\n\t\t\t\tthis._currentFrameIndex++;\n\t\t\t\tthis._timeline.constructNextFrame(this);\n\t\t\t}\n\t\t}\n\n\t\tvar len:number = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i <  len; ++i) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).advanceFrame();\n\t\t}\n\n\t\tthis._skipAdvance = false;\n\t}\n\n// DEBUG CODE:\n\tlogHierarchy(depth: number = 0):void\n\t{\n\t\tthis.printHierarchyName(depth, this);\n\n\t\tvar len = this._children.length;\n\t\tvar child:DisplayObject;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tchild = this._children[i];\n\n\t\t\tif (child.isAsset(MovieClip))\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\n\t\t\telse\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\n\t\t}\n\t}\n\n\tprintHierarchyName(depth:number, target:DisplayObject):void\n\t{\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < depth; ++i)\n\t\t\tstr += \"--\";\n\n\t\tstr += \" \" + target.name + \" = \" + target.id;\n\t\tconsole.log(str);\n\t}\n\n\tpublic clear():void\n\t{\n\t\t//clear out potential instances\n\t\tvar len:number = this._potentialInstances.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tvar instance:DisplayObject = this._potentialInstances[i];\n\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\n\t\t\tif (instance && instance.name == \"\") {\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\n\t\t\t\tdelete this._potentialInstances[i];\n\t\t\t}\n\t\t}\n\n\t\tsuper.clear();\n\t}\n}\nexport default MovieClip;\n",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {CubeMapShadowMapper}\t\t\tfrom \"../materials/shadowmappers/CubeMapShadowMapper\";\n\nexport class PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds():void\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}",
    "import {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {BasicPartition}\t\t\t\tfrom \"../partition/BasicPartition\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\n\nexport class Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:ITraverser):void\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase):void\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase):void\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Shape class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Shape object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Shape objects that contain the same graphics.\n * However, a Shape object supports user input events, while a Shape object\n * does not.</p>\n */\nexport class Shape extends DisplayObject\n{\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\n\n\tpublic static assetType:string = \"[asset Shape]\";\n\n\tprivate _center:Vector3D;\n\tprivate _graphics:Graphics;\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Shape.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Shape.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Shape object.\n\t *\n\t * @param material    [optional]        The material with which to render the Shape.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations():void\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.disposeValues();\n\n\t\tShape._shapes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues():void\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Shape instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subShapees, children of the shape, and the animator.\n\t *\n\t * If you want to copy just the shape, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new shape manually:\n\t *\n\t * <code>\n\t * var clone : Shape = new Shape(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Shape\n\t{\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(shape:Shape):void\n\t{\n\t\tsuper.copyTo(shape);\n\n\t\tthis._graphics.copyTo(shape.graphics);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds():void\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent):void\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic clear():void\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IAnimationSet}\t\t\t\tfrom \"../animators/IAnimationSet\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport {LightPickerBase}\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\nimport {SingleCubeTexture}\t\t\tfrom \"../textures/SingleCubeTexture\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nexport class Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses():void\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateElements():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\t\n\tpublic invalidateSurface():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase):void\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase):void\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null):void\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent):void\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic _acceptTraverser(traverser:ITraverser):void\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "﻿import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nexport class Sprite extends DisplayObjectContainer\n{\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\n\n\tpublic static assetType:string = \"[asset Sprite]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics; //TODO\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Sprite.assetType;\n\t}\n\n\t/**\n\t * Specifies the Graphics object belonging to this Sprite object, where\n\t * drawing commands can occur.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Sprite.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Sprite object.\n\t *\n\t * @param material    [optional]        The material with which to render the Sprite.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\n\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations():void\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.disposeValues();\n\n\t\tSprite._sprites.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues():void\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Sprite instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subSpritees, children of the sprite, and the animator.\n\t *\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new sprite manually:\n\t *\n\t * <code>\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Sprite\n\t{\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(sprite:Sprite):void\n\t{\n\t\tsuper.copyTo(sprite);\n\n\t\tthis._graphics.copyTo(sprite.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds():void\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds():void\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _onGraphicsInvalidate(event:AssetEvent):void\n\t{\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\n\n\t\t\tif (this._pImplicitPartition)\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear():void\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Float2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport {Byte4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {AntiAliasType}\t\t\t\tfrom \"../text/AntiAliasType\";\nimport {GridFitType}\t\t\t\t\tfrom \"../text/GridFitType\";\nimport {TextFieldAutoSize}\t\t\tfrom \"../text/TextFieldAutoSize\";\nimport {TextFieldType}\t\t\t\tfrom \"../text/TextFieldType\";\nimport {TextFormat}\t\t\t\t\tfrom \"../text/TextFormat\";\nimport {TextInteractionMode}\t\t\tfrom \"../text/TextInteractionMode\";\nimport {TextLineMetrics}\t\t\t\tfrom \"../text/TextLineMetrics\";\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {TesselatedFontChar}\t\t\tfrom \"../text/TesselatedFontChar\";\nimport {TextFormatAlign}\t\t\t\tfrom \"../text/TextFormatAlign\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nexport class TextField extends Sprite\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\tprivate _textElements:TriangleElements;\n\tprivate _textGraphic:Graphic;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The graphics used by the sprite that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor():number\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity():boolean\n\t{\n\t\treturn true; //TODO do this better\n\t}\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\tpublic clear():void\n\t{\n\t\tsuper.clear();\n\n\t\tif (this._textElements)\n\t\t\tthis._textElements.clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues():void\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t\tthis._textGraphic = null;\n\n\t\tif (this._textElements) {\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\n\t\tif (this._textGraphic) {\n\t\t\tthis._textGraphic.dispose();\n\t\t\tthis._textGraphic = null;\n\n\t\t\tthis._textElements.clear();\n\t\t\tthis._textElements.dispose();\n\t\t\tthis._textElements = null;\n\t\t}\n\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar numVertices:number = 0;\n\t\tvar elements:TriangleElements;\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale)+this._textFormat.letterSpacing;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tvar final_lines_justify_bool:Array<Boolean> = [];\n\t\tvar final_lines_justify:Array<number> = [];\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\t\t\tfinal_lines_justify.push(0);\n\t\t\tfinal_lines_justify_bool.push(false);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\t\tnumVertices += elements.numVertices;\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth)||(final_lines_chars[final_lines_chars.length - 1].length==0)) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tif(final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length-1]==null){\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].pop();\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] -= whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]-=1;\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_justify_bool[final_lines_justify_bool.length - 1]=true;\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfinal_lines_justify.push(0);\n\t\t\t\t\tfinal_lines_justify_bool.push(false);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]+=1;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ty_offset=2+(this._textFormat.font_table.ascent-this._textFormat.font_table.get_font_em_size())*char_scale;\n\n\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\n\t\t\tvar justify_addion:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"justify\"){\n\t\t\t\tif(final_lines_justify_bool[i]){\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-(2 + this._textFormat.rightMargin);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\telements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3]*char_scale + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1]*char_scale + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\n\t\t\ty_offset+=(this._textFormat.font_table.ascent + this._textFormat.font_table.descent)*char_scale;\n\t\t\t//y_offset+=(this._textFormat.font_table.get_font_em_size()-this._textFormat.font_table.descent)*char_scale;\n\t\t\ty_offset+= this._textFormat.leading;\n\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\n\t\tthis._textElements = new TriangleElements(vertexBuffer);\n\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\n\n\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph():void\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string):void\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string):void\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/):void\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):void\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField):void\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}",
    "export {Billboard}\t\t\t\t\t\tfrom \"./display/Billboard\";\nexport {Camera}\t\t\t\t\t\t\tfrom \"./display/Camera\";\nexport {DirectionalLight}\t\t\t\tfrom \"./display/DirectionalLight\";\nexport {DisplayObject}\t\t\t\t\tfrom \"./display/DisplayObject\";\nexport {DisplayObjectContainer}\t\t\tfrom \"./display/DisplayObjectContainer\";\nexport {IEntity}\t\t\t\t\t\t\tfrom \"./display/IEntity\";\nexport {LightBase}\t\t\t\t\t\tfrom \"./display/LightBase\";\nexport {LightProbe}\t\t\t\t\t\tfrom \"./display/LightProbe\";\nexport {LineSegment}\t\t\t\t\t\tfrom \"./display/LineSegment\";\nexport {LoaderContainer}\t\t\t\t\tfrom \"./display/LoaderContainer\";\nexport {MovieClip}\t\t\t\t\t\tfrom \"./display/MovieClip\";\nexport {PointLight}\t\t\t\t\t\tfrom \"./display/PointLight\";\nexport {Scene}\t\t\t\t\t\t\tfrom \"./display/Scene\";\nexport {Shape}\t\t\t\t\t\t\tfrom \"./display/Shape\";\nexport {Skybox}\t\t\t\t\t\t\tfrom \"./display/Skybox\";\nexport {Sprite}\t\t\t\t\t\t\tfrom \"./display/Sprite\";\nexport {TextField}\t\t\t\t\t\tfrom \"./display/TextField\";\n",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nexport class CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:number = 1;\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:number = 0;\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:number = 2;\n}",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nexport class GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport {Style}\t\t\t\t\tfrom \"../base/Style\";\nimport {Graphics}\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {Graphic}\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\n\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport {GraphicsFactoryHelper}\t\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\n\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nexport class GraphicsFactoryFills\n{\n\n\tpublic static draw_pathes(targetGraphic:Graphics) {\n\t\tvar len=targetGraphic.queued_fill_pathes.length;\n\t\tvar cp=0;\n\t\tfor(cp=0; cp<len; cp++){\n\t\t\tvar one_path:GraphicsPath = targetGraphic.queued_fill_pathes[cp];\n\t\t\t//one_path.finalizeContour();\n\t\t\tvar contour_commands:Array<Array<number> > = one_path.commands;\n\t\t\tvar contour_data:Array<Array<number> > = one_path.data;\n\t\t\tvar commands:Array<number>;\n\t\t\tvar data:Array<number>;\n\t\t\tvar i:number = 0;\n\t\t\tvar k:number = 0;\n\t\t\tvar vert_cnt:number = 0;\n\t\t\tvar data_cnt:number = 0;\n\t\t\tvar draw_direction:number = 0;\n\t\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\t\tvar final_vert_list:Array<number> = [];\n\t\t\tvar final_vert_cnt:number = 0;\n\t\t\tvar lastPoint:Point = new Point();\n\t\t\tvar last_dir_vec:Point=new Point();\n\t\t\tvar end_point:Point=new Point();\n\t\t\tfor (k = 0; k < contour_commands.length; k++) {\n\t\t\t\tcontours_vertices.push([]);\n\t\t\t\tvert_cnt = 0;\n\t\t\t\tdata_cnt = 0;\n\t\t\t\tcommands = contour_commands[k];\n\t\t\t\tdata = contour_data[k];\n\t\t\t\tdraw_direction = 0;\n\n\t\t\t\tvar new_dir:number=0;\n\t\t\t\tvar new_dir_1:number=0;\n\t\t\t\tvar new_dir_2:number=0;\n\t\t\t\tvar dir_delta:number=0;\n\t\t\t\tvar last_direction:number=0;\n\n\t\t\t\tvar tmp_dir_point:Point=new Point();\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1])){\n\t\t\t\t\tdata[data.length]==data[0];\n\t\t\t\t\tdata[data.length]==data[1];\n\t\t\t\t}\n\n\t\t\t\tlastPoint.x = data[0];\n\t\t\t\tlastPoint.y = data[1];\n\t\t\t\tif(commands[1]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\tlast_dir_vec.x = data[2]-lastPoint.x;\n\t\t\t\t\tlast_dir_vec.y = data[3]-lastPoint.y;\n\t\t\t\t}\n\t\t\t\telse if(commands[1]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\tlast_dir_vec.x = data[4]-lastPoint.x;\n\t\t\t\t\tlast_dir_vec.y = data[5]-lastPoint.y;\n\t\t\t\t}\n\t\t\t\tdata_cnt=2;\n\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t}\n\t\t\t\t\telse if (commands[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\n\t\t\t\t\t}\n\t\t\t\t\t//get the directional vector and the direction for this segment\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\n\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\tdir_delta = new_dir - last_direction;\n\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t}\n\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t}\n\t\t\t\t\tdraw_direction += dir_delta;\n\t\t\t\t\tlast_direction = new_dir;\n\t\t\t\t\tlastPoint.x = end_point.x;\n\t\t\t\t\tlastPoint.y = end_point.y;\n\t\t\t\t}\n\t\t\t\tlastPoint.x = data[0];\n\t\t\t\tlastPoint.y = data[1];\n\t\t\t\tdata_cnt=2;\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t//console.log(\"Draw directions complete: \"+draw_direction);\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\t\t\t\t\t\t\ttmp_dir_point.x = control_x - lastPoint.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = control_y - lastPoint.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\ttmp_dir_point.x = end_x - lastPoint.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = end_y - lastPoint.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\t\t\tvar curve_direction:number = new_dir_2 - new_dir_1;\n\t\t\t\t\t\t\tif(curve_direction>180){\n\t\t\t\t\t\t\t\tcurve_direction-=360;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(curve_direction<-180){\n\t\t\t\t\t\t\t\tcurve_direction+=360;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif((curve_direction==0)&&(curve_direction==180)&&(curve_direction==-180)){\n\t\t\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\t\t\tlastPoint.y = end_y;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\t\tif (draw_direction < 0) {\n\t\t\t\t\t\t\t\tif (curve_direction > 0) {\n\t\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (curve_direction < 0) {\n\t\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (GraphicsFactoryHelper.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t\t//todo\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar verts:Array<number> = [];\n\t\t\tvar all_verts:Array<Point> = [];\n\t\t\tvar vertIndicess:Array<number> = [];\n\t\t\tvar elems:Array<number> = [];\n\t\t\tfor (k = 0; k < contours_vertices.length; k++) {\n\t\t\t\tvar vertices = contours_vertices[k];\n\n\t\t\t\t //for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t\t //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\n\n\n\t\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t\t//var tess = new TESS();\n\t\t\t\tif (GraphicsFactoryHelper._tess_obj == null) {\n\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tGraphicsFactoryHelper._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t\t}\n\t\t\tGraphicsFactoryHelper._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\t\tverts = GraphicsFactoryHelper._tess_obj.getVertices();\n\t\t\telems = GraphicsFactoryHelper._tess_obj.getElements();\n\t\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\t\tvar numVerts:number = verts.length / 2;\n\t\t\tvar numElems:number = elems.length / 3;\n\t\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\t\tvar p1 = elems[i * 3];\n\t\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t}\n\t\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\t\tattributesView.set(final_vert_list);\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\t\tattributesView.dispose();\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\t\tmaterial.bothSides = true;\n\t\t\tmaterial.useColorTransform = true;\n\t\t\tmaterial.curves = true;\n\t\t\tvar thisGraphic:Graphic=targetGraphic.addGraphic(elements, material);\n\t\t}\n\t\ttargetGraphic.queued_fill_pathes.length=0;\n\t}\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\n\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\n\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nexport class GraphicsFactoryHelper\n{\n\n\tpublic static _tess_obj:any;\n\n\n\tpublic static isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\tvar num:number=(point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\n\t\tif(num < 0)\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tpublic static getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic static pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\n\tpublic static getControlXForCurveX(a:number, c:number, b:number):number\n\t{\n\t\treturn c;\n\t}\n\tpublic static getControlYForCurveY(a:number, c:number, b:number):number\n\t{\n\t\treturn c;\n\t}\n\tpublic static drawPoint(startX:number,startY:number, vertices:Array<number>):void\n\t{\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX+2, startY-2, startX+2, startY+2, 0, vertices);\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX-2, startY+2, startX+2, startY+2, 0, vertices);\n\t}\n\tpublic static addTriangle(startX:number,startY:number, controlX:number, controlY:number, endX:number, endY:number, tri_type:number, vertices:Array<number>):void\n\t{\n\t\tvar final_vert_cnt:number = vertices.length;\n\t\tif(tri_type==0){\n\t\t\tvertices[final_vert_cnt++] = startX;\n\t\t\tvertices[final_vert_cnt++] = startY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = controlX;\n\t\t\tvertices[final_vert_cnt++] = controlY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = endX;\n\t\t\tvertices[final_vert_cnt++] = endY;\n\t\t\tvertices[final_vert_cnt++] = 1;\n\t\t\tvertices[final_vert_cnt++] = 2.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t}\n\t\telse{\n\t\t\tvertices[final_vert_cnt++] = startX;\n\t\t\tvertices[final_vert_cnt++] = startY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 1.0;\n\t\t\tvertices[final_vert_cnt++] = 1.0;\n\t\t\tvertices[final_vert_cnt++] = controlX;\n\t\t\tvertices[final_vert_cnt++] = controlY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 0.5;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = endX;\n\t\t\tvertices[final_vert_cnt++] = endY;\n\t\t\tvertices[final_vert_cnt++] = tri_type;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t\tvertices[final_vert_cnt++] = 0.0;\n\t\t}\n\n\t}\n\tpublic static createCap(startX:number, startY:number, start_le:Point, start_ri:Point, dir_vec:Point, capstyle:number, cap_position:number, thickness:number, vertices:Array<number>):void\n\t{\n\n\t\tif (capstyle == CapsStyle.ROUND) {\n\t\t\t//console.log(\"add round cap\");\n\t\t\tvar tmp1_x:number = startX + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp1_y:number = startY + (cap_position * (dir_vec.y * thickness));\n\t\t\ttmp1_x = tmp1_x * 2 - start_le.x/2 - start_ri.x/2;\n\t\t\ttmp1_y = tmp1_y * 2 - start_le.y/2 - start_ri.y/2;\n\t\t\tGraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\n\t\t}\n\t\telse if (capstyle == CapsStyle.SQUARE) {\n\t\t\t//console.log(\"add square cap\");\n\t\t\tvar tmp1_x:number = start_le.x + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp1_y:number = start_le.y + (cap_position * (dir_vec.y * thickness));\n\t\t\tvar tmp2_x:number = start_ri.x + (cap_position * (dir_vec.x * thickness));\n\t\t\tvar tmp2_y:number = start_ri.y + (cap_position * (dir_vec.y * thickness));\n\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\n\t\t}\n\t}\n\tpublic static getLineFormularData(a:Point, b:Point):Point\n\t{\n\n\t\tvar tmp_x = b.x - a.x;\n\t\tvar tmp_y = b.y - a.y;\n\t\tvar return_point:Point=new Point();\n\t\tif ((tmp_x != 0)&&(tmp_y!=0))\n\t\t\treturn_point.x = tmp_y / tmp_x;\n\t\treturn_point.y = -(return_point.x * a.x - a.y);\n\t\treturn return_point;\n\t}\n\tpublic static getQuadricBezierPosition(t, start, control, end):number {\n\t\tvar xt = 1 - t;\n\t\treturn xt * xt * start + 2 * xt * t * control + t * t * end;\n\t}\n\tpublic static subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\tvar angle_1:number=Math.atan2(cy - starty, cx - startx) * MathConsts.RADIANS_TO_DEGREES;\n\t\tvar angle_2:number=Math.atan2(endy - cy, endx - cx) * MathConsts.RADIANS_TO_DEGREES;\n\t\tvar angle_delta:number=angle_2 - angle_1;\n\t\t//console.log(\"angle_delta \"+angle_delta);\n\n\t\tif(angle_delta>180){\n\t\t\tangle_delta-=360;\n\t\t}\n\t\tif(angle_delta<-180){\n\t\t\tangle_delta+=360;\n\t\t}\n\t\tif(Math.abs(angle_delta)>=150){\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\t\treturn;\n\t\t}\n\n\t\tvar b1:boolean=false;\n\t\tvar b2:boolean=false;\n\t\tif(angle_delta<0){\n\t\t\t// curve is curved to right side. right side is convex\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\n\t\t\tb1 = (((starty-endy)*(cx-startx)+(endx-startx)*(cy-starty))*((starty-endy)*(cx2-startx)+(endx-startx)*(cy2-starty)))<0;\n\n\t\t}\n\t\telse{\n\t\t\t// curve is curved to left side. left side is convex\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\n\t\t\tb1 = (((starty2-endy)*(cx-startx2)+(endx2-startx2)*(cy-starty2))*((starty2-endy2)*(cx2-startx2)+(endx2-startx2)*(cy2-starty2)))<0;\n\n\t\t}\n\t\tif(b1){\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\t\treturn;\n\t\t}\n\t\t// triangles overlap. we must subdivide:\n\n\t\tvar c1x = startx + (cx - startx) * 0.5;// new controlpoint 1.1\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;// new controlpoint 1.2\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;// new middlepoint 1\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;// new controlpoint 2.1\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;// new controlpoint 2.2\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;// new middlepoint 2\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\n\t\tGraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\tGraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\n\t}\n\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\n\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\n\nimport {Graphics}\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\n\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\n\nimport {GraphicsFactoryHelper}\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\nimport {GraphicsStrokeStyle}\t\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\n\n\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport {TriangleElements}\t\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nexport class GraphicsFactoryStrokes\n{\n\tpublic static draw_pathes(targetGraphic:Graphics){\n\t\tvar len=targetGraphic.queued_stroke_pathes.length;\n\t\tvar contour_commands:Array<Array<number> >;\n\t\tvar contour_data:Array<Array<number> >;\n\t\tvar strokeStyle:GraphicsStrokeStyle;\n\t\tvar one_path:GraphicsPath;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar tmp_point3:Point=new Point();\n\t\tvar closed:boolean=false;\n\t\tvar last_dir_vec:Point=new Point();\n\t\tvar cp=0;\n\t\tfor(cp=0; cp<len; cp++){\n\n\t\t\tone_path = targetGraphic.queued_stroke_pathes[cp];\n\t\t\tcontour_commands = one_path.commands;\n\t\t\tcontour_data = one_path.data;\n\t\t\tstrokeStyle = one_path.stroke();\n\n\t\t\tvar tessVerts:Array<number>=[];\n\n\t\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\t\tcommands = contour_commands[k];\n\t\t\t\tdata = contour_data[k];\n\t\t\t\tvert_cnt = 0;\n\t\t\t\tdata_cnt = 0;\n\n\t\t\t\tvar new_dir:number=0;\n\t\t\t\tvar dir_delta:number=0;\n\t\t\t\tvar last_direction:number=0;\n\n\t\t\t\tvar tmp_dir_point:Point=new Point();\n\n\t\t\t\tclosed = true;\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1]))\n\t\t\t\t\tclosed = false;\n\t\t\t\telse{\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2]-data[data.length-4];\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1]-data[data.length-3];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t//console.log(\"Path is closed, we set initial direction: \"+last_direction);\n\t\t\t\t}\n\n\t\t\t\tdata_cnt=0;\n\t\t\t\tlastPoint.x=data[data_cnt++];\n\t\t\t\tlastPoint.y=data[data_cnt++];\n\n\n\t\t\t\tvar new_cmds:Array<number>=[];\n\t\t\t\tvar new_pnts:Array<Point>=[];\n\t\t\t\tvar new_cmds_cnt=0;\n\t\t\t\tvar new_pnts_cnt=0;\n\t\t\t\tvar prev_normal:Point = new Point();\n\t\t\t\tvar le_point:Point = new Point();\n\t\t\t\tvar curve_end_point:Point = new Point();\n\t\t\t\tvar ri_point:Point = new Point();\n\t\t\t\tvar ctr_point:Point = new Point();\n\n\t\t\t\tprev_normal.x = -1*last_dir_vec.y;\n\t\t\t\tprev_normal.y = last_dir_vec.x;\n\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"\");\n\t\t\t\t\t//console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\t//console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\tcurve_end_point = new Point(data[data_cnt++], data[data_cnt++]);\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"curve_end_point x = \"+curve_end_point.x+\" y = \"+curve_end_point.y)\n\t\t\t\t\t}\n\t\t\t\t\t//get the directional vector and the direction for this segment\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\n\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\n\t\t\t\t\t// get the difference in angle to the last segment\n\t\t\t\t\tdir_delta = new_dir - last_direction;\n\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t}\n\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t}\n\t\t\t\t\tlast_direction = new_dir;\n\t\t\t\t\t//console.log(\"segment \"+i+\" direction: \"+dir_delta);\n\t\t\t\t\t// rotate direction around 90 degree\n\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\n\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\n\n\t\t\t\t\tri_point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\tle_point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\n\t\t\t\t\tvar add_segment:boolean=false;\n\t\t\t\t\t// check if this is the first segment, and the path is not closed\n\t\t\t\t\t// in this case, we can just set the points to the contour points\n\t\t\t\t\tif((i==1)&&(!closed)){\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\n\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\n\t\t\t\t\t\t// we need to figure out if we need to add a joint or not\n\t\t\t\t\t\tif ((dir_delta==0)||(dir_delta==180)){\n\t\t\t\t\t\t\t// check if this and the prev segment was a line. if yes, than they can be merged\n\t\t\t\t\t\t\tif ((i!=1) && (commands[i]== GraphicsPathCommand.LINE_TO) && (new_cmds[new_cmds.length-1]==GraphicsPathCommand.LINE_TO)){\n\t\t\t\t\t\t\t\t//console.log(\"straight line can be merged in prev straight line\");\n\t\t\t\t\t\t\t\tadd_segment=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if not we can just add the contour points\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dir_delta==180){\n\t\t\t\t\t\t\tconsole.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (dir_delta!=0) {\n\t\t\t\t\t\t\tadd_segment=true;\n\t\t\t\t\t\t\tvar half_angle:number=(180-(dir_delta));\n\t\t\t\t\t\t\tif(dir_delta<0){\n\t\t\t\t\t\t\t\thalf_angle=(-180-(dir_delta));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thalf_angle= half_angle * -0.5 * MathConsts.DEGREES_TO_RADIANS;\n\t\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\n\t\t\t\t\t\t\ttmp_point2.normalize();\n\t\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\n\t\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\n\t\t\t\t\t\t\tif (dir_delta > 0){\n\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\n\t\t\t\t\t\t\t\tvar contour_le:Point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tvar contour_prev_le:Point = new Point(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tle_point=contour_le;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\n\t\t\t\t\t\t\t\tvar contour_ri:Point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tvar contour_prev_ri:Point = new Point(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\tri_point=contour_ri;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar addJoints:boolean=true;\n\t\t\t\t\t\t\tif (strokeStyle.jointstyle==JointStyle.MITER){\n\t\t\t\t\t\t\t\tvar distance_miter:number = (Math.sqrt((distance*distance)-(strokeStyle.half_thickness*strokeStyle.half_thickness))/strokeStyle.half_thickness);\n\t\t\t\t\t\t\t\tif(distance_miter<=strokeStyle.miter_limit){\n\t\t\t\t\t\t\t\t\taddJoints=false;\n\t\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\n\t\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0){\n\t\t\t\t\t\t\t\t\t\tcontour_le.x = contour_le.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_le.y = contour_le.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.x = contour_prev_le.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.y = contour_prev_le.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tcontour_ri.x = contour_ri.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_ri.y = contour_ri.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.x = contour_prev_ri.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.y = contour_prev_ri.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(addJoints) {\n\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++]=(strokeStyle.jointstyle!=JointStyle.ROUND)? GraphicsPathCommand.BUILD_JOINT : GraphicsPathCommand.BUILD_ROUND_JOINT;\n\t\t\t\t\t\t\t\tif (dir_delta > 0) {\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_ri;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_le;\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(strokeStyle.jointstyle==JointStyle.ROUND){\n\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\n\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0) {\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprev_normal.x = tmp_point.x;\n\t\t\t\t\tprev_normal.y = tmp_point.y;\n\t\t\t\t\tif(add_segment){\n\t\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (commands[i]== GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\t\t\ttmp_dir_point.x = curve_end_point.x - end_point.x;\n\t\t\t\t\t\t\ttmp_dir_point.y = curve_end_point.y - end_point.y;\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\n\t\t\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\t\tdir_delta = new_dir - last_direction;\n\n\t\t\t\t\t\t\tlast_direction = new_dir;\n\n\t\t\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\n\t\t\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\n\t\t\t\t\t\t\tif((dir_delta!=0)&&(dir_delta!=180)){\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.CURVE_TO;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x, lastPoint.y);\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(end_point.x, end_point.y);\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = curve_end_point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprev_normal.x = tmp_point.x;\n\t\t\t\t\t\t\tprev_normal.y = tmp_point.y;\n\t\t\t\t\t\t\tlastPoint = curve_end_point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\n\t\t\t\t\t\tlastPoint = end_point;\n\t\t\t\t\t}\n\t\t\t\t\tif(i==commands.length-1){\n\t\t\t\t\t\tif (!closed) {\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[0];\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t// first we draw all the curves:\n\t\t\t\tnew_cmds_cnt=0;\n\t\t\t\tnew_pnts_cnt=0;\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\n\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\t\tnew_pnts_cnt+=2;\n\t\t\t\t\t}\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\n\t\t\t\t\t\tstart_point = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tctr_point = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tend_point = new_pnts[new_pnts_cnt++];\n\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\n\n\n\t\t\t\t\t\t// get the directional vector for the first part of the curve\n\t\t\t\t\t\ttmp_dir_point.x = ctr_point.x - start_point.x;\n\t\t\t\t\t\ttmp_dir_point.y = ctr_point.y - start_point.y;\n\t\t\t\t\t\ttmp_point3.x = ctr_point.x - start_point.x;\n\t\t\t\t\t\ttmp_point3.y = ctr_point.y - start_point.y;\n\t\t\t\t\t\tvar length1:number =tmp_point3.length;\n\t\t\t\t\t\ttmp_dir_point.normalize();\n\n\n\t\t\t\t\t\t// get the directional vector for the second part of the curve\n\t\t\t\t\t\ttmp_point2.x = end_point.x - ctr_point.x;\n\t\t\t\t\t\ttmp_point2.y = end_point.y - ctr_point.y;\n\t\t\t\t\t\tvar length2:number =tmp_point2.length;\n\n\t\t\t\t\t\ttmp_point2.normalize();\n\n\t\t\t\t\t\tvar length_calc:number = 0.5 - ((length2-length1)/length1)*0.5;\n\t\t\t\t\t\tif(length1>length2){\n\t\t\t\t\t\t\tlength_calc = 0.5 + ((length1-length2)/length2)*0.5;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// get angle to positive x-axis for both dir-vectors, than get the difference between those\n\t\t\t\t\t\tvar angle_1:number=Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\tvar angle_2:number=Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts.RADIANS_TO_DEGREES;\n\t\t\t\t\t\tdir_delta=angle_2-angle_1;\n\n\t\t\t\t\t\tif(dir_delta>180){\n\t\t\t\t\t\t\tdir_delta-=360;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(dir_delta<-180){\n\t\t\t\t\t\t\tdir_delta+=360;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(dir_delta==0){\n\t\t\t\t\t\t\tconsole.log(\"This is not a curve, we can just draw it like a straight line\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\n\t\t\t\t\t\tvar dirNumber:number=1;\n\t\t\t\t\t\tif(dir_delta<0){\n\t\t\t\t\t\t\tdirNumber=-1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar half_angle:number=dir_delta*0.5*MathConsts.DEGREES_TO_RADIANS;\n\t\t\t\t\t\tvar lengthpos:number=Math.abs(length1*Math.sin(half_angle));\n\n\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\n\t\t\t\t\t\ttmp_point3.normalize();\n\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\n\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\n\n\n\t\t\t\t\t\tvar curve_x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\n\t\t\t\t\t\tvar curve_y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\n\n\t\t\t\t\t\tvar curve_2x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\n\t\t\t\t\t\tvar curve_2y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\n\n\t\t\t\t\t\ttmp_point3.x =  -1*(curve_y - curve_2y);\n\t\t\t\t\t\ttmp_point3.y =  curve_x - curve_2x;\n\n\t\t\t\t\t\ttmp_point3.normalize();\n\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\n\n\t\t\t\t\t\t// move the point on the curve to use correct thickness\n\t\t\t\t\t\tctr_right.x = curve_x +(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_right.y = curve_y +(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_left.x = curve_x -(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\n\t\t\t\t\t\tctr_left.y = curve_y -(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\n\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n\n\t\t\t\t\t\t// calculate the actual controlpoints\n\t\t\t\t\t\tctr_right.x = ctr_right.x * 2 - start_right.x/2 - end_right.x/2;\n\t\t\t\t\t\tctr_right.y = ctr_right.y * 2 - start_right.y/2 - end_right.y/2;\n\t\t\t\t\t\tctr_left.x = ctr_left.x * 2 - start_left.x/2 - end_left.x/2;\n\t\t\t\t\t\tctr_left.y = ctr_left.y * 2 - start_left.y/2 - end_left.y/2;\n\n\n\t\t\t\t\t\t//ctr_right=merged_pnt_ri;\n\t\t\t\t\t\t//ctr_left=merged_pnt_le;\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t// controlpoints version2:\n\t\t\t\t\t\ttmp_dir_point.x = start_left.x-start_right.x;\n\t\t\t\t\t\ttmp_dir_point.y = start_left.y-start_right.y;\n\t\t\t\t\t\ttmp_point2.x = end_left.x-end_right.x;\n\t\t\t\t\t\ttmp_point2.y = end_left.y-end_right.y;\n\n\t\t\t\t\t\tctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\n\t\t\t\t\t\tctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\n\t\t\t\t\t\tvar new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\n\n\t\t\t\t\t\tctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\n\t\t\t\t\t\tctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\n\t\t\t\t\t\tvar new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\n\t\t\t\t\t\t*/\n\n/*\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\n*/\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tGraphicsFactoryHelper.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\n\t\t\t\t\t\tif(dir_delta>0) {\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\n\t\t\t\t\t\t\t\t// right curved\n\t\t\t\t\t\t\t\t// concave curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\n\n\t\t\t\t\t\t\t\t// fills\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\n\n\t\t\t\t\t\t\t\t// convex curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\n\t\t\t\t\t\t\t\t// left curved\n\t\t\t\t\t\t\t\t// convex curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\n\n\t\t\t\t\t\t\t\t// fills\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\n\n\n\t\t\t\t\t\t\t\t// concave curves:\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\n\t\t\t\t\t\tnew_pnts_cnt+=3;\n\t\t\t\t\t\t//GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\n\t\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt++];// concave curves:\n\t\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\t\t//console.log(\"add round tri\");\n\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x, start_right.y,  end_left.x, end_left.y,start_left.x, start_left.y, -1, final_vert_list);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// now we draw all the normal triangles.\n\t\t\t\t// we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\n\t\t\t\tnew_cmds_cnt=0;\n\t\t\t\tnew_pnts_cnt=0;\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\n\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_left.x,  start_left.y,  end_left.x,  end_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\n\t\t\t\t\t\tnew_pnts_cnt+=5;\n\t\t\t\t\t}\n\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\n\t\t\t\t\t\t\tnew_pnts_cnt+=3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!closed){\n\t\t\t\t\tlast_dir_vec.x = data[2] - data[0];\n\t\t\t\t\tlast_dir_vec.y = data[3] - data[1];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2] - data[data.length-4];\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1] - data[data.length-3];\n\t\t\t\t\tlast_dir_vec.normalize();\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], new_pnts[new_pnts.length-2], new_pnts[new_pnts.length-1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\n\n\t\t\t\t\t/*\n\t\t\t\t\t last_dir_vec.x = data[data.length-2] - data[data.length-4];\n\t\t\t\t\t last_dir_vec.y = data[data.length-1] - data[data.length-3];\n\t\t\t\t\t last_dir_vec.normalize();\n\t\t\t\t\t GraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], contour_points[contour_points.length-1], contour_points[contour_points.length-2], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\n\t\t\t\t\t */\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t//console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\n\t\t\t// todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\n\t\t\tattributesView.set(final_vert_list);\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\t\tattributesView.dispose();\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\t\t//elements.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\t//curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\t\tmaterial.bothSides = true;\n\t\t\tmaterial.useColorTransform = true;\n\t\t\tmaterial.curves = true;\n\t\t\ttargetGraphic.addGraphic(elements, material);\n\t\t}\n\t\ttargetGraphic.queued_stroke_pathes.length=0;\n\t}\n\n}",
    "import {IGraphicsData}\t\tfrom \"../draw/IGraphicsData\";\n\n\nexport class GraphicsFillStyle implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata FillStyle]\";\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _color:number;\n    private _alpha:number;\n\n    constructor(color:number = 0xffffff, alpha:number = 1)\n    {\n        this._color=color;\n        this._alpha=alpha;\n    }\n\n    public get data_type():string\n    {\n        return GraphicsFillStyle.data_type;\n    }\n}",
    "/**\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nexport class GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static BUILD_JOINT:number \t\t= 13;\n\tpublic static BUILD_ROUND_JOINT:number \t= 14;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\nexport default GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nexport class GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}",
    "import {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\nimport {IGraphicsData}\t\t    from \"../draw/IGraphicsData\";\nimport {GraphicsFillStyle}\t\tfrom \"../draw/GraphicsFillStyle\";\nimport {GraphicsStrokeStyle}\t\tfrom \"../draw/GraphicsStrokeStyle\";\n\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nexport class GraphicsPath implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata path]\";\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding_rule:string;\n\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _winding_directions:Array<number>;\n\n    private _startPoint:Point;\n    private _cur_point:Point;\n    private _style:IGraphicsData;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding_rule:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._style = null;\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n        }\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._winding_rule=winding_rule;\n        this._winding_directions=[];\n    }\n\n    public get data_type():string\n    {\n        return GraphicsPath.data_type;\n    }\n\n    public get style():IGraphicsData\n    {\n        return this._style;\n    }\n    public set style(value:IGraphicsData)\n    {\n        this._style = value;\n    }\n\n    public fill():IGraphicsData\n    {\n        if (this._style==null)\n            return null;\n        if (this._style.data_type==GraphicsFillStyle.data_type)\n            return this._style;\n        return null;\n    }\n    public stroke():GraphicsStrokeStyle\n    {\n        if (this._style==null)\n            return null;\n        if (this._style.data_type==GraphicsStrokeStyle.data_type)\n            return <GraphicsStrokeStyle>this._style;\n        return null;\n    }\n\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n        /*\n         if(this.isFill){\n         this._tmp_point.x=anchorX-this._cur_point.x;\n         this._tmp_point.y=anchorY-this._cur_point.y;\n         this._tmp_point.normalize();\n\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n         testpoint.normalize();\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n         if(degree_anchor>180)degree_anchor-=360;\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n         this._tmp_point.x=controlX-this._cur_point.x;\n         this._tmp_point.y=controlY-this._cur_point.y;\n         this._tmp_point.normalize();\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n         if(degree_control>180)degree_control-=360;\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n         console.log(\"degree_control \"+degree_control);\n         console.log(\"degree_anchor \"+degree_anchor);\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n         this._direction.x=testpoint.x;\n         this._direction.y=testpoint.y;\n         if((degree_control)<0)\n         this._data[this._data.length-1].push(1);\n         else\n         this._data[this._data.length-1].push(2);\n\n         }\n         else{\n         this._data[this._data.length-1].push(1);\n         }\n         */\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n\n\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        // whenever a moveTo command apears, we start a new contour\n        if(this._commands[this._commands.length-1].length>0){\n            this._commands.push([GraphicsPathCommand.MOVE_TO]);\n            this._data.push([x, y]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}",
    "import {IGraphicsData}\t\tfrom \"../draw/IGraphicsData\";\nimport {JointStyle}\t\t    from \"../draw/JointStyle\";\nimport {CapsStyle}\t\t    from \"../draw/CapsStyle\";\n\nexport class GraphicsStrokeStyle implements IGraphicsData\n{\n    public static data_type:string = \"[graphicsdata StrokeStyle]\";\n\n    private _color:number;\n    private _alpha:number;\n    private _thickness:number;\n    private _jointstyle:number;\n    private _capstyle:number;\n    private _miter_limit:number;\n\n    constructor(color:number = 0xffffff, alpha:number = 1, thickness:number = 10, jointstyle:number = JointStyle.ROUND, capstyle:number = CapsStyle.SQUARE, miter_limit:number=10)\n    {\n        this._color=color;\n        this._alpha=alpha;\n        this._thickness=thickness;\n        this._jointstyle=jointstyle;\n        this._capstyle=capstyle;\n        this._miter_limit=miter_limit;\n    }\n\n    public get data_type():string\n    {\n        return GraphicsStrokeStyle.data_type;\n    }\n\n    public get color():number\n    {\n        return this._color;\n    }\n    public set color(value:number)\n    {\n        this._color = value;\n    }\n\n    public get alpha():number\n    {\n        return this._alpha;\n    }\n    public set alpha(value:number)\n    {\n        this._alpha = value;\n    }\n\n    public get half_thickness():number\n    {\n        return this._thickness/2;\n    }\n    public get thickness():number\n    {\n        return this._thickness;\n    }\n    public set thickness(value:number)\n    {\n        this._thickness = value;\n    }\n\n    public get jointstyle():number\n    {\n        return this._jointstyle;\n    }\n    public set jointstyle(value:number)\n    {\n        this._jointstyle = value;\n    }\n    public get miter_limit():number\n    {\n        return this._miter_limit;\n    }\n    public set miter_limit(value:number){\n\n        this._miter_limit = value;\n    }\n    public get capstyle():number\n    {\n        return this._capstyle;\n    }\n    public set capstyle(value:number)\n    {\n        this._capstyle = value;\n    }\n}",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nexport class InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nexport class JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:number = 2;\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:number = 0;\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:number = 1;\n}",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nexport class LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nexport class PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nexport class SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nexport class TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}",
    "export {CapsStyle}\t\t\t\t\t\tfrom \"./draw/CapsStyle\";\nexport {GradientType}\t\t\t\t\tfrom \"./draw/GradientType\";\nexport {GraphicsFactoryFills} \t\t\tfrom \"./draw/GraphicsFactoryFills\";\nexport {GraphicsFactoryHelper} \t\t\tfrom \"./draw/GraphicsFactoryHelper\";\nexport {GraphicsFactoryStrokes} \t\t\tfrom \"./draw/GraphicsFactoryStrokes\";\nexport {GraphicsFillStyle} \t\t\t    from \"./draw/GraphicsFillStyle\";\nexport {GraphicsStrokeStyle}\t\t\t    from \"./draw/GraphicsStrokeStyle\";\nexport {GraphicsPath}\t\t\t\t\tfrom \"./draw/GraphicsPath\";\nexport {GraphicsPathCommand}\t\t\t\tfrom \"./draw/GraphicsPathCommand\";\nexport {GraphicsPathWinding}\t\t\t\tfrom \"./draw/GraphicsPathWinding\";\nexport {IGraphicsData}\t\t\t\t\tfrom \"./draw/IGraphicsData\";\nexport {InterpolationMethod}\t\t\t\tfrom \"./draw/InterpolationMethod\";\nexport {JointStyle}\t\t\t\t\t\tfrom \"./draw/JointStyle\";\nexport {LineScaleMode}\t\t\t\t\tfrom \"./draw/LineScaleMode\";\nexport {PixelSnapping}\t\t\t\t\tfrom \"./draw/PixelSnapping\";\nexport {SpreadMethod}\t\t\t\t\tfrom \"./draw/SpreadMethod\";\nexport {TriangleCulling}\t\t\t\t\tfrom \"./draw/TriangleCulling\";",
    "import {ErrorBase}\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\n\nexport class CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}",
    "export {CastError}\t\t\t\t\t\tfrom \"./errors/CastError\";",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {Camera}\t\t\t\t\tfrom \"../display/Camera\";\n\n/**\n * @class away.events.CameraEvent\n */\nexport class CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\n\nexport class DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}",
    "import {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nexport class ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nexport class LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}",
    "import {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\nimport {IRenderable}\t\t\t\tfrom \"../base/IRenderable\";\nimport {View}\t\t\t\t\t\tfrom \"../View\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nexport class MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The entity inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation():void\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation():void\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {IRenderable}\t\t\t\t\t\tfrom \"../base/IRenderable\";\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nexport class RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_SURFACE:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nexport class RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nexport class ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\n\nexport class StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\n\nexport class SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}",
    "import {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\nimport {IRenderable}\t\t\t\tfrom \"../base/IRenderable\";\nimport {View}\t\t\t\t\t\tfrom \"../View\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\n\nexport class TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic entity:IEntity;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic position:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic normal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation():void\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation():void\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.entity = this.entity;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.position = this.position;\n\t\tresult.normal = this.normal;\n\t\tresult.elementIndex = this.elementIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport {Transform}\t\t\t\tfrom \"../base/Transform\";\n\nexport class TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}",
    "export {CameraEvent}\t\t\t\t\t\tfrom \"./events/CameraEvent\";\nexport {DisplayObjectEvent}\t\t\t\tfrom \"./events/DisplayObjectEvent\";\nexport {ElementsEvent}\t\t\t\t\tfrom \"./events/ElementsEvent\";\nexport {LightEvent}\t\t\t\t\t\tfrom \"./events/LightEvent\";\nexport {MouseEvent}\t\t\t\t\t\tfrom \"./events/MouseEvent\";\nexport {RenderableEvent}\t\t\t\t\tfrom \"./events/RenderableEvent\";\nexport {RendererEvent}\t\t\t\t\tfrom \"./events/RendererEvent\";\nexport {ResizeEvent}\t\t\t\t\t\tfrom \"./events/ResizeEvent\";\nexport {StyleEvent}\t\t\t\t\t\tfrom \"./events/StyleEvent\";\nexport {SurfaceEvent}\t\t\t\t\tfrom \"./events/SurfaceEvent\";\nexport {TouchEvent}\t\t\t\t\t\tfrom \"./events/TouchEvent\";\nexport {TransformEvent}\t\t\t\t\tfrom \"./events/TransformEvent\";",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Short3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\n\n/**\n * @class away.base.TriangleElements\n */\nexport class ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\tpublic _numVertices:number = 0;\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributesNames;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase):void\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0):void\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0):void\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number, count:number = 0, offset:number = 0):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies():void\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices():void\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView):void\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView):void\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}",
    "export class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}",
    "import {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {BitmapImage2D}\t\t\t \tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {ParticleData}\t\t\t\t\tfrom \"../animators/data/ParticleData\";\n\n\n\n\nimport {GraphicsPath}\t\t\t\t\tfrom \"../draw/GraphicsPath\";\nimport {GraphicsPathCommand}\t\t\tfrom \"../draw/GraphicsPathCommand\";\nimport {GraphicsFactoryFills}\t\t\tfrom \"../draw/GraphicsFactoryFills\";\nimport {GraphicsFactoryStrokes}\t\tfrom \"../draw/GraphicsFactoryStrokes\";\nimport {PartialImplementationError}\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\nimport {InterpolationMethod}\t\t\tfrom \"../draw/InterpolationMethod\";\nimport {JointStyle}\t\t\t\t\tfrom \"../draw/JointStyle\";\nimport {LineScaleMode}\t\t\t\tfrom \"../draw/LineScaleMode\";\nimport {TriangleCulling}\t\t\t\tfrom \"../draw/TriangleCulling\";\nimport {SpreadMethod}\t\t\t\t\tfrom \"../draw/SpreadMethod\";\nimport {CapsStyle}\t\t\t\t\tfrom \"../draw/CapsStyle\";\nimport {GradientType}\t\t\t\t\tfrom \"../draw/GradientType\";\nimport {GraphicsPathWinding}\t\t\tfrom \"../draw/GraphicsPathWinding\";\nimport {IGraphicsData}\t\t\t\tfrom \"../draw/IGraphicsData\";\nimport {GraphicsStrokeStyle}\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\nimport {GraphicsFillStyle}\t\t\tfrom \"../draw/GraphicsFillStyle\";\n\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Sprite\n *\n * @class Graphics\n */\nexport class Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tpublic get queued_stroke_pathes():Array<GraphicsPath>\n\t{\n\t\treturn this._queued_stroke_pathes;\n\t}\n\n\tpublic set queued_stroke_pathes(value:Array<GraphicsPath>)\n\t{\n\t\tthis._queued_stroke_pathes=value\n\t}\n\tpublic get queued_fill_pathes():Array<GraphicsPath>\n\t{\n\t\treturn this._queued_fill_pathes;\n\t}\n\n\tpublic set queued_fill_pathes(value:Array<GraphicsPath>)\n\t{\n\t\tthis._queued_fill_pathes=value\n\t}\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._current_position=new Point();\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0):Graphic\n\t{\n\t\tvar graphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tgraphic = Graphic._available.pop();\n\t\t\tgraphic._iIndex = this._graphics.length;\n\t\t\tgraphic.parent = this;\n\t\t\tgraphic.elements = elements;\n\t\t\tgraphic.material = material;\n\t\t\tgraphic.style = style;\n\t\t\tgraphic.count = count;\n\t\t\tgraphic.offset = offset;\n\t\t} else {\n\t\t\tgraphic = new Graphic(this._graphics.length, this, elements, material, style, count, offset);\n\t\t}\n\n\t\tthis._graphics.push(graphic);\n\n\t\tgraphic.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis.invalidate();\n\n\t\treturn graphic;\n\t}\n\n\tpublic removeGraphic(graphic:Graphic):void\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\t\tgraphic.clear();\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D):void\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics):void\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\tpublic clone():Graphics\n\t{\n\t\tvar newInstance:Graphics = new Graphics();\n\t\t\n\t\tthis.copyTo(newInstance);\n\t\t\n\t\treturn newInstance;\n\t}\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number):void\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].scale(scale);\n\t}\n\n\tpublic clear():void\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--){\n\t\t\tthis._graphics[i].clear();\n\t\t\t//this._graphics[i].dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose():void\n\t{\n\t\tthis.material = null;\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1):void\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tpublic invalidate():void\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic _iInvalidateSurfaces():void\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements():void\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (this._graphics[i].hitTestPoint(x, y, 0))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent):void\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent):void\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic draw_fills() {\n\t\tGraphicsFactoryFills.draw_pathes(this);\n\t}\n\n\tpublic draw_strokes(){\n\t\tGraphicsFactoryStrokes.draw_pathes(this);\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\t// todo: create bitmap fill style\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(0xffffff, 1);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1):void\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(color, alpha);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0):void\n\t{\n\t\tthis.draw_fills();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\t// todo: create gradient fill style\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(colors[0], alphas[0]);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics):void\n\t{\n\t\tsourceGraphics.copyTo(this);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number):void\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number):void\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number):void\n\t{\n\t\t// todo: directly create triangles instead of draw commands ?\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number):void\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>):void\n\t{\n\t\t//this.draw_fills();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding):void\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number):void\n\t{\n\t\t//todo: directly create triangles instead of drawing commands ?\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void\n\t{\n\t\t//todo: directly create triangles instead of drawing commands ?\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null):void\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill():void\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fills();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0):void\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, capstyle:number = CapsStyle.NONE, jointstyle:number = JointStyle.MITER, miterLimit:number = 100):void\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tthis._active_stroke_path.style = new  GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miterLimit);\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number):void\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number):void\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Sprite\n *\n * @class away.base.Graphic\n */\nexport class Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tpublic count:number;\n\n\tpublic offset:number;\n\t\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic get  elements():ElementsBase\n\t{\n\t\treturn this._elements;\n\t}\n\n\tpublic set elements(value:ElementsBase)\n\t{\n\t\tif (this._elements == value)\n\t\t\treturn;\n\n\t\tthis._elements = value;\n\n\t\tthis.invalidateElements();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\t\t\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t\tthis.count = count;\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidate():void\n\t{\n\t\tsuper.invalidate();\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\t\n\tpublic invalidateElements():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\t}\n\n\tpublic invalidateSurface():void\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent):void\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent):void\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\t\t\n\t\tthis.invalidate();\n\t\t\n\t\tthis.dispatchEvent(event);\n\t}\n\t\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\n\t{\n\t\treturn this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset)\n\t}\n\n\n\tpublic applyTransformation(transform:Matrix3D):void\n\t{\n\t\tthis._elements.applyTransformation(transform, this.count, this.offset);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tvar box:Box;\n\n\t\t//early out for box test\n\t\tif(!(box = this.getBoxBounds()).contains(x, y, z))\n\t\t\treturn false;\n\n\t\treturn this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\n\t}\n\t\n\tpublic scale(scale:number):void\n\t{\n\t\tthis._elements.scale(scale, this.count, this.offset);\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1):void\n\t{\n\t\tthis._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tthis._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box()), this.count, this.offset);\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn this._elements.getSphereBounds(center, target, this.count, this.offset);\n\t}\n}",
    "/**\n * @class away.base.HitTestCache\n */\nexport class HitTestCache\n{\n\t/**\n\t * \n\t */\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\n\t/**\n\t *\n\t */\n\tpublic lastCollisionIndex:number = - 1;\n\n\t/**\n\t * \n\t */\n\tpublic divisions:number;\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Byte4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float1Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * @class LineElements\n */\nexport class LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0):void\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0):void\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0):void\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\n\t}\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Float4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\nimport {Float1Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\nimport {Short3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\n\n/**\n * @class away.base.TriangleElements\n */\nexport class TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\t\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic hitTestCache:Object = new Object();\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per sprite. Only applicable to\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn ElementsUtils.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0):void\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0):void\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0):void\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0):void\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0):void\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0):void\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0):void\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements):void\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\tvar autoDeriveNormals:boolean = this._autoDeriveNormals;\n\t\tvar autoDeriveTangents:boolean = this._autoDeriveTangents;\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0):void\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number, count:number = 0, offset:number = 0):void\n\t{\n\t\tElementsUtils.scale(scale, this.positions, count || this._numVertices, offset);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0):void\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents():void\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals():void\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\n\t}\n}",
    "export {ElementsBase}\t\t\t\t\tfrom \"./graphics/ElementsBase\";\nexport {ElementsType}\t\t\t\t\tfrom \"./graphics/ElementsType\";\nexport {Graphic}\t\t\t\t\t\t\tfrom \"./graphics/Graphic\";\nexport {Graphics}\t\t\t\t\t\tfrom \"./graphics/Graphics\";\nexport {LineElements}\t\t\t\t\tfrom \"./graphics/LineElements\";\nexport {TriangleElements}\t\t\t\tfrom \"./graphics/TriangleElements\";",
    "import {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport {BitmapImage2D}\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport {BitmapImageCube}\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\n\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {LineElements}\t\t\t\t\tfrom \"../graphics/LineElements\";\nimport {Skybox}\t\t\t\t\t\tfrom \"../display/Skybox\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {BasicMaterial}\t\t\t\tfrom \"../materials/BasicMaterial\";\nimport {Single2DTexture}\t\t\t\tfrom \"../textures/Single2DTexture\";\nimport {SingleCubeTexture}\t\t\tfrom \"../textures/SingleCubeTexture\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\n\nexport class DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture():void\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture():void\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube():void\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D():void\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial():void\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial():void\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial():void\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D():void\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}",
    "import {DisplayObject}\t\t\t\t\tfrom \"../display/DisplayObject\";\nimport {MovieClip}\t\t\t\t\t\tfrom \"../display/MovieClip\";\n\nexport class FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject):void\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose():void\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport default FrameScriptManager;",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {TouchPoint}\t\t\t\t\tfrom \"../base/TouchPoint\";\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {MouseEvent}\t\t\t\t\tfrom \"../events/MouseEvent\";\nimport {FrameScriptManager}\t\t\tfrom \"../managers/FrameScriptManager\";\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nexport class MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollision:PickingCollision;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollision;\n\tprivate _queuedEvents:Array<MouseEvent> = new Array<MouseEvent>();\n\n\tprivate _mouseMoveEvent;\n\n\tprivate _mouseUp:MouseEvent = new MouseEvent(MouseEvent.MOUSE_UP);\n\tprivate _mouseClick:MouseEvent = new MouseEvent(MouseEvent.CLICK);\n\tprivate _mouseOut:MouseEvent = new MouseEvent(MouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:MouseEvent = new MouseEvent(MouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:MouseEvent = new MouseEvent(MouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:MouseEvent = new MouseEvent(MouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:MouseEvent = new MouseEvent(MouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:MouseEvent = new MouseEvent(MouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event) => void;\n\tprivate onDoubleClickDelegate:(event) => void;\n\tprivate onMouseDownDelegate:(event) => void;\n\tprivate onMouseMoveDelegate:(event) => void;\n\tprivate onMouseUpDelegate:(event) => void;\n\tprivate onMouseWheelDelegate:(event) => void;\n\tprivate onMouseOverDelegate:(event) => void;\n\tprivate onMouseOutDelegate:(event) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean):void\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollision)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:MouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollision;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View):void\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View):void\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:MouseEvent, sourceEvent, collision:PickingCollision = null):void\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collision == null)\n\t\t\tcollision = this._iCollision;\n\n\t\t// 3D properties.\n\t\tif (collision) {\n\t\t\t// Object.\n\t\t\tevent.entity = collision.entity;\n\t\t\tevent.renderable = collision.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collision.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.elementIndex = collision.elementIndex;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event):void\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event):void\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event):void\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event):void\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event):void\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event):void\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event):void\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event):void\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event):void\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollision)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {TouchEvent}\t\t\t\tfrom \"../events/TouchEvent\";\n\nexport class TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollision:PickingCollision;\n\tprivate _previousCollidingObject:PickingCollision;\n\tpublic static _iCollisionFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<TouchEvent> = new Array<TouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:TouchEvent = new TouchEvent(TouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:TouchEvent = new TouchEvent(TouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:TouchEvent = new TouchEvent(TouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:TouchEvent = new TouchEvent(TouchEvent.TOUCH_END);\n\tprivate _touchOver:TouchEvent = new TouchEvent(TouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event) => void;\n\tprivate onTouchMoveDelegate:(event) => void;\n\tprivate onTouchEndDelegate:(event) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollisionFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean):void\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean):void\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollision)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollision)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\n\t\t}\n\n\t\tvar event:TouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = <DisplayObject> event.entity;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View):void\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View):void\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:TouchEvent, sourceEvent, collider:PickingCollision, touch:TouchPoint):void\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.entity = collider.entity;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementIndex = collider.elementIndex;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.entity = null;\n\t\t\tevent.position = this._nullVector;\n\t\t\tevent.normal = this._nullVector;\n\t\t\tevent.elementIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event):void\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\tif (this._iCollision)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event):void\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event):void\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\n\t\t//if (this._iCollision)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev) => any;\n\tontouchmove: (ev) => any;\n\tontouchend: (ev) => any;\n\tontouchcancel: (ev) => any;\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev) => any;\n\tontouchmove: (ev) => any;\n\tontouchend: (ev) => any;\n\tontouchcancel: (ev) => any;\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev) => any;\n\tontouchmove: (ev) => any;\n\tontouchend: (ev) => any;\n\tontouchcancel: (ev) => any;\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev) => any;\ndeclare var ontouchmove: (ev) => any;\ndeclare var ontouchend: (ev) => any;\ndeclare var ontouchcancel: (ev) => any;\n\ndeclare function addEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\n\n",
    "export {DefaultMaterialManager}\t\t\tfrom \"./managers/DefaultMaterialManager\";\nexport {FrameScriptManager}\t\t\t\tfrom \"./managers/FrameScriptManager\";\nexport {MouseManager}\t\t\t\t\tfrom \"./managers/MouseManager\";\nexport {TouchManager}\t\t\t\t\tfrom \"./managers/TouchManager\";",
    "import {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {Single2DTexture}\t\t\t\tfrom \"../textures/Single2DTexture\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nexport class BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nexport class LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}",
    "import {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\nimport {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {IAnimationSet}\t\t\t\tfrom \"../animators/IAnimationSet\";\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\nimport {LightPickerBase}\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nexport class MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable):void\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable):void\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses():void\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation():void\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces():void\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent):void\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture():void\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number):void\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase):void\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase):void\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null):void\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent):void\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {IEntity}\t\t\t\t\t\tfrom \"../../display/IEntity\";\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport {LightProbe}\t\t\t\t\tfrom \"../../display/LightProbe\";\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nexport class LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose():void\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity):void\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity):void\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\n\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport {LightProbe}\t\t\t\t\tfrom \"../../display/LightProbe\";\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\nimport {LightEvent}\t\t\t\t\tfrom \"../../events/LightEvent\";\nimport {LightPickerBase}\t\t\t\tfrom \"../../materials/lightpickers/LightPickerBase\";\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nexport class StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights():Array<any>\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.shadowsEnabled)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners():void\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent):void\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight):void\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight):void\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.shadowsEnabled) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {FreeMatrixProjection}\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\nimport {IProjection}\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\n\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport {DirectionalShadowMapper}\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\nimport {Single2DTexture}\t\t\t\tfrom \"../../textures/Single2DTexture\";\n\nexport class CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number):void\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init():void\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/):void\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects():void\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer):void\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects():void\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera):void\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = camera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number):void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}",
    "import {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\n\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\nimport {ShadowMapperBase}\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\nimport {SingleCubeTexture}\t\t\tfrom \"../../textures/SingleCubeTexture\";\n\nexport class CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras():void\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number):void\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera):void\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer):void\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tif (this._needsRender[i])\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\n\t}\n}",
    "import {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {FreeMatrixProjection}\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\n\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\nimport {ShadowMapperBase}\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\nimport {Single2DTexture}\t\t\t\tfrom \"../../textures/Single2DTexture\";\n\nexport class DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture):void\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer):void\n\t{\n\t\trenderer.cullPlanes = this._pCullPlanes;\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(camera:Camera):void\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(camera:Camera):void\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(camera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D):void\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}",
    "import {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport {DirectionalShadowMapper}\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\n\nexport class NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera):void\n\t{\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}",
    "import {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\nimport {TextureBase}\t\t\t\t\tfrom \"../../textures/TextureBase\";\n\nexport class ShadowMapperBase extends AssetBase\n{\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows():void\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase):void\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer):void\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(camera:Camera):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value):void\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}",
    "export {LightPickerBase}\t\t\t\t\tfrom \"./materials/lightpickers/LightPickerBase\";\nexport {StaticLightPicker}\t\t\t\tfrom \"./materials/lightpickers/StaticLightPicker\";\nexport {CascadeShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CascadeShadowMapper\";\nexport {CubeMapShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CubeMapShadowMapper\";\nexport {DirectionalShadowMapper}\t\t\tfrom \"./materials/shadowmappers/DirectionalShadowMapper\";\nexport {NearDirectionalShadowMapper}\t\tfrom \"./materials/shadowmappers/NearDirectionalShadowMapper\";\nexport {ShadowMapperBase}\t\t\t\tfrom \"./materials/shadowmappers/ShadowMapperBase\";\nexport {BasicMaterial}\t\t\t\t\tfrom \"./materials/BasicMaterial\";\nexport {LightSources}\t\t\t\t\tfrom \"./materials/LightSources\";\nexport {MaterialBase}\t\t\t\t\tfrom \"./materials/MaterialBase\";",
    "import {NodeBase}\t\t\t\t\t\tfrom \"../partition/NodeBase\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\n\n\n/**\n * @class away.partition.Partition\n */\nexport class BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.CameraNode\n */\nexport class CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\n\t}\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nexport class DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport {AbstractionBase}\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {AxisAlignedBoundingBox}\t\tfrom \"../bounds/AxisAlignedBoundingBox\";\nimport {BoundingSphere}\t\t\t\tfrom \"../bounds/BoundingSphere\";\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\nimport {NullBounds}\t\t\t\t\tfrom \"../bounds/NullBounds\";\nimport {SceneGraphNode}\t\t\t\tfrom \"../partition/SceneGraphNode\";\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\n\n/**\n * @class away.partition.EntityNode\n */\nexport class DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tprivate _boundsType:string;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._displayObject.debugVisible;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis._boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isMask():boolean\n\t{\n\t\treturn this._displayObject.maskMode;\n\t}\n\n\tpublic onClear(event:AssetEvent):void\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent):void\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this._boundsType != this._displayObject.boundsType) {\n\t\t\tthis._boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\t\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent):void\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds():void\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this._boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\n\n/**\n * @class away.partition.EntityNode\n */\nexport class EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\tprivate _maskPosition:Vector3D = new Vector3D();\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent):void\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\n\t\t\treturn false;\n\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\n\n\t\tif (!pickingCollision.normal)\n\t\t\tpickingCollision.normal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn this._displayObject._iAssignedColorTransform()._isRenderable();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._displayObject);\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent):void\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>):boolean\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.LightProbeNode\n */\nexport class LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "import {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\nimport {NullBounds}\t\t\t\t\tfrom \"../bounds/NullBounds\";\n\n/**\n * @class away.partition.NodeBase\n */\nexport class NodeBase implements IContainerNode\n{\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isRenderable():boolean\n\t{\n\t\treturn true;\n\t}\n\t\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isMask():boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode):void\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode):void\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}",
    "import {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport {IAssetClass}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {IEntityNodeClass}\t\t\t\tfrom \"../partition/IEntityNodeClass\";\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\n\n/**\n * @class away.partition.Partition\n */\nexport class PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject):void\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:ITraverser):void\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tif (this._rootNode) {\n\t\t\tthis._rootNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode):void\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode):void\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities():void\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject):void\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject):void\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass):void\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * @class away.partition.PointLightNode\n */\nexport class PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "import {ITraverser}\t\t\t\tfrom \"../ITraverser\";\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nexport class SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _numNodes:number = 0;\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _numMasks:number = 0;\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ITraverser):void\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numNodes; i++)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\tfor (i = 0; i < this._numMasks; i++)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode):void\n\t{\n\t\tnode.parent = this;\n\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t\tthis._numMasks++;\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t\tthis._numNodes++;\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode):void\n\t{\n\t\tif (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t\tthis._numMasks--;\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\t\t\tthis._numNodes--;\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport default SceneGraphNode;",
    "import {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\n\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\nimport {SceneGraphNode}\t\t\t\tfrom \"../partition/SceneGraphNode\";\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\n\n/**\n * @class away.partition.Partition\n */\nexport class SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:ITraverser):void\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject):void\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject):void\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nexport class SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer):void\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\n\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nexport class SkyboxNode extends EntityNode\n{\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false; //skybox never casts shadows\n\t}\n}",
    "export {BasicPartition}\t\t\t\t\tfrom \"./partition/BasicPartition\";\nexport {CameraNode}\t\t\t\t\t\tfrom \"./partition/CameraNode\";\nexport {DirectionalLightNode}\t\t\tfrom \"./partition/DirectionalLightNode\";\nexport {DisplayObjectNode}\t\t\t\tfrom \"./partition/DisplayObjectNode\";\nexport {EntityNode}\t\t\t\t\t\tfrom \"./partition/EntityNode\";\nexport {IContainerNode}\t\t\t\t\tfrom \"./partition/IContainerNode\";\nexport {IDisplayObjectNode}\t\t\t\tfrom \"./partition/IDisplayObjectNode\";\nexport {IEntityNodeClass}\t\t\t\tfrom \"./partition/IEntityNodeClass\";\nexport {INode}\t\t\t\t\t\t\tfrom \"./partition/INode\";\nexport {LightProbeNode}\t\t\t\t\tfrom \"./partition/LightProbeNode\";\nexport {NodeBase}\t\t\t\t\t\tfrom \"./partition/NodeBase\";\nexport {PartitionBase}\t\t\t\t\tfrom \"./partition/PartitionBase\";\nexport {PointLightNode}\t\t\t\t\tfrom \"./partition/PointLightNode\";\nexport {SceneGraphNode}\t\t\t\t\tfrom \"./partition/SceneGraphNode\";\nexport {SceneGraphPartition}\t\t\t\tfrom \"./partition/SceneGraphPartition\";\nexport {SkyboxNode}\t\t\t\t\t\tfrom \"./partition/SkyboxNode\";\n",
    "import {Vector3D}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {Point}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {LineElements}\t\t\t\t\t\tfrom \"../graphics/LineElements\";\nimport {TriangleElements}\t\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {Billboard}\t\t\t\t\t\tfrom \"../display/Billboard\";\nimport {PickingCollision}\t\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {IPickingCollider}\t\t\t\t\tfrom \"../pick/IPickingCollider\";\nimport {MaterialBase}\t\t\t\t\t\tfrom \"../materials/MaterialBase\";\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nexport class JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollision The collision object used to store the collision results\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision):boolean\n\t{\n\t\tpickingCollision.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollision.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(count, offset);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollision\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\n\t//\t\t\tpickingCollision.localPosition = p;\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollision.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollision\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\n\t{\n\t\treturn false;\n\t}\n}",
    "import {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollision\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollision\n */\nexport class PickingCollision\n{\n\t/**\n\t * The entity to which this collision object belongs.\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t * The renderable associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The local position of the collision on the renderable's surface.\n\t */\n\tpublic position:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic normal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the element where the collision took place.\n\t */\n\tpublic elementIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic globalRayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * Creates a new <code>PickingCollision</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tthis.entity = entity;\n\t}\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\n\n\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\nimport {IPicker}\t\t\t\t\t\tfrom \"../pick/IPicker\";\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nexport class RaycastPicker implements IPicker, ITraverser\n{\n\tprivate _rayPosition:Vector3D;\n\tprivate _rayDirection:Vector3D;\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _bestCollision:PickingCollision;\n\tprivate _testCollision:PickingCollision;\n\tprivate _testCollider:IPickingCollider;\n\tprivate _ignoredEntities:Array<IEntity>;\n\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic onlyMouseEnabled:boolean = true;\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection) && !node.isMask();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\n\t{\n\t\tthis._rayPosition = rayPosition;\n\t\tthis._rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this);\n\n\t\t//early out if no collisions detected\n\t\tif (!this._entities.length)\n\t\t\treturn null;\n\n\t\tvar collision:PickingCollision = this.getPickingCollision();\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn collision;\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities:Array<IEntity>):void\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\t\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tif (this._ignoredEntities) {\n\t\t\tvar len:number = this._ignoredEntities.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity2._iPickingCollision.rayEntryDistance - entity1._iPickingCollision.rayEntryDistance;\n\t}\n\n\tprivate getPickingCollision():PickingCollision\n\t{\n\t\t// Sort entities from closest to furthest to reduce tests.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis._bestCollision = null;\n\t\t\n\t\tvar entity:IEntity;\n\t\tvar len:number = this._entities.length;\n\t\tfor (var i:number = len - 1; i >=0; i--) {\n\t\t\tentity = this._entities[i];\n\t\t\tthis._testCollision = entity._iPickingCollision;\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\n\t\t\t\tthis._testCollider = entity.pickingCollider;\n\t\t\t\tif (this._testCollider) {\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\n\t\t\t\t\tentity._acceptTraverser(this);\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\t\tthis._bestCollision = this._testCollision;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._bestCollision)\n\t\t\tthis.updatePosition(this._bestCollision);\n\n\t\treturn this._bestCollision;\n\t}\n\n\tprivate updatePosition(pickingCollision:PickingCollision):void\n\t{\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\n\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\n\t\tvar t:number = pickingCollision.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity):void\n\t{\n\t\tif (!this.isIgnored(entity))\n\t\t\tthis._entities.push(entity);\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable):void\n\t{\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\n\t\t\tthis._bestCollision = this._testCollision;\n\t}\n\t\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity):void\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity):void\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity):void\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity):void\n\t{\n\t\t//don't do anything here\n\t}\n}",
    "export {IPicker}\t\t\t\t\t\t\tfrom \"./pick/IPicker\";\nexport {IPickingCollider}\t\t\t\tfrom \"./pick/IPickingCollider\";\nexport {JSPickingCollider}\t\t\t\tfrom \"./pick/JSPickingCollider\";\nexport {PickingCollision}\t\t\t\tfrom \"./pick/PickingCollision\";\nexport {RaycastPicker}\t\t\t\t\tfrom \"./pick/RaycastPicker\";",
    "import {AssetBase}\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nexport class PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate():void\n\t{\n\t\t// To be overridden when necessary\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Capsule primitive sprite.\n */\nexport class PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitiveCylinderPrefab}\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV Cone primitive sprite.\n */\nexport class PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}",
    "﻿﻿import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cube primitive prefab.\n */\nexport class PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Cylinder primitive sprite.\n */\nexport class PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number):void\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number):void\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A Plane primitive sprite.\n */\nexport class PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitiveCylinderPrefab}\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\n\n/**\n * A UV RegularPolygon primitive sprite.\n */\nexport class PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrefabBase}\t\t\t\tfrom \"../prefabs/PrefabBase\";\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nexport class PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive():void\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs():void\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics():void\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs():void\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate():void\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar sprite:Sprite = new Sprite(this._material);\n\t\tsprite.graphics.addGraphic(this._elements);\n\t\tsprite._iSourcePrefab = this;\n\n\t\treturn sprite;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Sphere primitive sprite.\n */\nexport class PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\n\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\n\n/**\n * A UV Cylinder primitive sprite.\n */\nexport class PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}",
    "export {PrefabBase}\t\t\t\t\t\tfrom \"./prefabs/PrefabBase\";\nexport {PrimitiveCapsulePrefab}\t\t\tfrom \"./prefabs/PrimitiveCapsulePrefab\";\nexport {PrimitiveConePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveConePrefab\";\nexport {PrimitiveCubePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveCubePrefab\";\nexport {PrimitiveCylinderPrefab}\t\t\tfrom \"./prefabs/PrimitiveCylinderPrefab\";\nexport {PrimitivePlanePrefab}\t\t\tfrom \"./prefabs/PrimitivePlanePrefab\";\nexport {PrimitivePolygonPrefab}\t\t\tfrom \"./prefabs/PrimitivePolygonPrefab\";\nexport {PrimitivePrefabBase}\t\t\t\tfrom \"./prefabs/PrimitivePrefabBase\";\nexport {PrimitiveSpherePrefab}\t\t\tfrom \"./prefabs/PrimitiveSpherePrefab\";\nexport {PrimitiveTorusPrefab}\t\t\tfrom \"./prefabs/PrimitiveTorusPrefab\";",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nexport class AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {TesselatedFontTable}\t\tfrom \"../text/TesselatedFontTable\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nexport class Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<TesselatedFontTable> = new Array<TesselatedFontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<TesselatedFontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):TesselatedFontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:TesselatedFontTable = new TesselatedFontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nexport class GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}",
    "import {TesselatedFontTable}\t\t\tfrom \"../text/TesselatedFontTable\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nexport class TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\t}\n\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\nimport {TesselatedFontChar}\t\t\tfrom \"../text/TesselatedFontChar\";\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Sprite\n *\n * @class away.base.GraphicBase\n */\nexport class TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _ascent:number;\n\tprivate _descent:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._ascent=0;\n\t\tthis._descent=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose():void\n\t{\n\n\t}\n\n\tget ascent():number {\n\t\treturn this._ascent;\n\t}\n\n\tset ascent(value:number){\n\t\tthis._ascent=value;\n\t}\n\tget descent():number {\n\t\treturn this._descent;\n\t}\n\n\tset descent(value:number){\n\t\tthis._descent=value;\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase, char_width:number):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\ttesselated_font_char.char_width=char_width;\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nexport class TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nexport class TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nexport class TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\n\nimport {TesselatedFontTable}\t\t\tfrom \"../text/TesselatedFontTable\";\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nexport class TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nexport class TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nexport class TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}",
    "export {AntiAliasType}\t\t\t\t\tfrom \"./text/AntiAliasType\";\nexport {Font}\t\t\t\t\t\t\tfrom \"./text/Font\";\nexport {GridFitType}\t\t\t\t\t\tfrom \"./text/GridFitType\";\nexport {TesselatedFontChar}\t\t\t\tfrom \"./text/TesselatedFontChar\";\nexport {TesselatedFontTable}\t\t\t\tfrom \"./text/TesselatedFontTable\";\nexport {TextFieldAutoSize}\t\t\t\tfrom \"./text/TextFieldAutoSize\";\nexport {TextFieldType}\t\t\t\t\tfrom \"./text/TextFieldType\";\nexport {TextFormat}\t\t\t\t\t\tfrom \"./text/TextFormat\";\nexport {TextFormatAlign}\t\t\t\t\tfrom \"./text/TextFormatAlign\";\nexport {TextInteractionMode}\t\t\t\tfrom \"./text/TextInteractionMode\";\nexport {TextLineMetrics}\t\t\t\t\tfrom \"./text/TextLineMetrics\";",
    "/**\n\n\n */\nexport class MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}",
    "﻿﻿import {Sampler2D}\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport {Image2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport {ErrorBase}\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\nimport {ImageUtils}\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\n\nimport {MappingMode}\t\t\t\tfrom \"../textures/MappingMode\";\nimport {TextureBase}\t\t\t\tfrom \"../textures/TextureBase\";\n\nexport class Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}",
    "import {SamplerCube}\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\nimport {ImageCube}\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport {TextureBase}\t\t\t\tfrom \"../textures/TextureBase\";\n\n\nexport class SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}",
    "import {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport {SamplerBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\n/**\n *\n */\nexport class TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number):void\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number):void\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number):void\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}",
    "export {MappingMode}\t\t\t\t\t\tfrom \"./textures/MappingMode\";\nexport {Single2DTexture}\t\t\t\t\tfrom \"./textures/Single2DTexture\";\nexport {SingleCubeTexture}\t\t\t\tfrom \"./textures/SingleCubeTexture\";\nexport {TextureBase}\t\t\t\t\t\tfrom \"./textures/TextureBase\";",
    "import {Image2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport {ByteArray}\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport {CastError}\t\t\t\tfrom \"../errors/CastError\";\nimport {Single2DTexture}\t\t\tfrom \"../textures/Single2DTexture\";\n\n/**\n * Helper class for casting assets to usable objects\n */\nexport class Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}",
    "import {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\nimport {Short2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Short2Attributes\";\nimport {Short3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\nimport {Float4Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\nimport {Byte4Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\nimport {Matrix3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\nimport {Box}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\nimport {Sphere}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\n\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\nimport {HitTestCache}\t\t\tfrom \"../graphics/HitTestCache\";\n\nexport class ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0):void\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0):void\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0):void\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, box:Box, triangleElements:TriangleElements, count:number, offset:number = 0):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count, offset) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar hitTestCache:HitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache());\n\t\tvar index:number = hitTestCache.lastCollisionIndex;\n\t\t\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = hitTestCache.cells;\n\t\t\tvar divisions:number = cells.length? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/box.width;\n\t\t\tvar conversionY:number = divisions/box.height;\n\t\t\tvar minx:number = box.x;\n\t\t\tvar miny:number = box.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid0 = nodes[k];\n\t\t\t\t\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -128)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 127)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thitTestCache.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\t\t\t\n\t\t\tid1 = k + 1;\n\t\t\tid0 = k + 2;\n\t\t\t\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvey0:number = curves[id0 * curveDim + 2];\n\t\t\t\tvar curvey1:number = curves[id1 * curveDim + 2];\n\t\t\t\tvar curvey2:number = curves[id2 * curveDim + 2];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvey0 || curvey1 || curvey2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -128) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 127) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\thitTestCache.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\t\t\n\t\toutput.x = minX;\n\t\toutput.y = minY;\n\t\toutput.z = minZ;\n\t\toutput.right = maxX;\n\t\toutput.bottom = maxY;\n\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\t\t\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}",
    "export {Cast}\t\t\t\t\t\t\tfrom \"./utils/Cast\";\nexport {ElementsUtils}\t\t\t\t\tfrom \"./utils/ElementsUtils\";"
  ],
  "sourceRoot": ""
}
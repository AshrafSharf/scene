{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-display.js","awayjs-display/lib/animators/nodes/AnimationNodeBase.ts","awayjs-display/lib/base/AlignmentMode.ts","awayjs-display/lib/base/CapsStyle.ts","awayjs-display/lib/base/CurveSubGeometry.ts","awayjs-display/lib/base/CurveSubMesh.ts","awayjs-display/lib/base/DisplayObject.ts","awayjs-display/lib/base/Geometry.ts","awayjs-display/lib/base/GradientType.ts","awayjs-display/lib/base/GraphicsPathWinding.ts","awayjs-display/lib/base/Graphics.ts","awayjs-display/lib/base/InterpolationMethod.ts","awayjs-display/lib/base/JointStyle.ts","awayjs-display/lib/base/LightBase.ts","awayjs-display/lib/base/LineScaleMode.ts","awayjs-display/lib/base/LineSubGeometry.ts","awayjs-display/lib/base/LineSubMesh.ts","awayjs-display/lib/base/LoaderInfo.ts","awayjs-display/lib/base/OrientationMode.ts","awayjs-display/lib/base/PixelSnapping.ts","awayjs-display/lib/base/SpreadMethod.ts","awayjs-display/lib/base/SubGeometryBase.ts","awayjs-display/lib/base/SubMeshBase.ts","awayjs-display/lib/base/Transform.ts","awayjs-display/lib/base/TriangleCulling.ts","awayjs-display/lib/base/TriangleSubGeometry.ts","awayjs-display/lib/base/TriangleSubMesh.ts","awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts","awayjs-display/lib/bounds/BoundingSphere.ts","awayjs-display/lib/bounds/BoundingVolumeBase.ts","awayjs-display/lib/bounds/BoundsType.ts","awayjs-display/lib/bounds/NullBounds.ts","awayjs-display/lib/containers/DisplayObjectContainer.ts","awayjs-display/lib/containers/Loader.ts","awayjs-display/lib/containers/Scene.ts","awayjs-display/lib/containers/View.ts","awayjs-display/lib/controllers/ControllerBase.ts","awayjs-display/lib/controllers/FirstPersonController.ts","awayjs-display/lib/controllers/FollowController.ts","awayjs-display/lib/controllers/HoverController.ts","awayjs-display/lib/controllers/LookAtController.ts","awayjs-display/lib/controllers/SpringController.ts","awayjs-display/lib/display/ContextMode.ts","awayjs-display/lib/entities/Billboard.ts","awayjs-display/lib/entities/Camera.ts","awayjs-display/lib/entities/DirectionalLight.ts","awayjs-display/lib/entities/LightProbe.ts","awayjs-display/lib/entities/LineSegment.ts","awayjs-display/lib/entities/Mesh.ts","awayjs-display/lib/entities/PointLight.ts","awayjs-display/lib/entities/Shape.ts","awayjs-display/lib/entities/Skybox.ts","awayjs-display/lib/entities/TextField.ts","awayjs-display/lib/errors/CastError.ts","awayjs-display/lib/events/CameraEvent.ts","awayjs-display/lib/events/DisplayObjectEvent.ts","awayjs-display/lib/events/GeometryEvent.ts","awayjs-display/lib/events/LightEvent.ts","awayjs-display/lib/events/MaterialEvent.ts","awayjs-display/lib/events/MouseEvent.ts","awayjs-display/lib/events/RenderableOwnerEvent.ts","awayjs-display/lib/events/RendererEvent.ts","awayjs-display/lib/events/ResizeEvent.ts","awayjs-display/lib/events/SceneEvent.ts","awayjs-display/lib/events/StageEvent.ts","awayjs-display/lib/events/SubGeometryEvent.ts","awayjs-display/lib/managers/DefaultMaterialManager.ts","awayjs-display/lib/managers/MouseManager.ts","awayjs-display/lib/materials/BasicMaterial.ts","awayjs-display/lib/materials/CSSMaterialBase.ts","awayjs-display/lib/materials/CurveMaterial.ts","awayjs-display/lib/materials/LightSources.ts","awayjs-display/lib/materials/MaterialBase.ts","awayjs-display/lib/materials/lightpickers/LightPickerBase.ts","awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts","awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts","awayjs-display/lib/partition/CameraNode.ts","awayjs-display/lib/partition/DirectionalLightNode.ts","awayjs-display/lib/partition/EntityNode.ts","awayjs-display/lib/partition/LightProbeNode.ts","awayjs-display/lib/partition/NodeBase.ts","awayjs-display/lib/partition/NullNode.ts","awayjs-display/lib/partition/Partition.ts","awayjs-display/lib/partition/PointLightNode.ts","awayjs-display/lib/partition/SkyboxNode.ts","awayjs-display/lib/pick/PickingCollisionVO.ts","awayjs-display/lib/pick/RaycastPicker.ts","awayjs-display/lib/pool/CSSBillboardRenderable.ts","awayjs-display/lib/pool/CSSLineSegmentRenderable.ts","awayjs-display/lib/pool/CSSRenderableBase.ts","awayjs-display/lib/pool/CSSSkyboxRenderable.ts","awayjs-display/lib/pool/EntityListItemPool.ts","awayjs-display/lib/pool/EntityListItem.ts","awayjs-display/lib/pool/EntityNodePool.ts","awayjs-display/lib/prefabs/PrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts","awayjs-display/lib/prefabs/PrimitiveConePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts","awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts","awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts","awayjs-display/lib/prefabs/PrimitivePrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts","awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts","awayjs-display/lib/render/CSSDefaultRenderer.ts","awayjs-display/lib/render/CSSRendererBase.ts","awayjs-display/lib/sort/RenderableMergeSort.ts","awayjs-display/lib/text/AntiAliasType.ts","awayjs-display/lib/text/GridFitType.ts","awayjs-display/lib/text/TextFieldAutoSize.ts","awayjs-display/lib/text/TextFieldType.ts","awayjs-display/lib/text/TextFormatAlign.ts","awayjs-display/lib/text/TextFormat.ts","awayjs-display/lib/text/TextInteractionMode.ts","awayjs-display/lib/text/TextLineMetrics.ts","awayjs-display/lib/traverse/CSSEntityCollector.ts","awayjs-display/lib/traverse/CollectorBase.ts","awayjs-display/lib/traverse/EntityCollector.ts","awayjs-display/lib/traverse/RaycastCollector.ts","awayjs-display/lib/traverse/ShadowCasterCollector.ts","awayjs-display/lib/utils/Cast.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-display\\lib\\animators\\IAnimationSet","module","awayjs-display\\lib\\animators\\IAnimator","awayjs-display\\lib\\animators\\nodes\\AnimationNodeBase","__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","AssetType","NamedAssetBase","AnimationNodeBase","_super","Object","defineProperty","get","_pStateClass","enumerable","configurable","dispose","ANIMATION_NODE","awayjs-core/lib/library/AssetType","undefined","awayjs-core/lib/library/NamedAssetBase","awayjs-display\\lib\\base\\AlignmentMode","AlignmentMode","REGISTRATION_POINT","PIVOT_POINT","awayjs-display\\lib\\base\\CapsStyle","CapsStyle","ROUND","NONE","SQUARE","awayjs-display\\lib\\base\\CurveSubGeometry","Vector3D","SubGeometryBase","CurveSubMesh","SubGeometryEvent","CurveSubGeometry","concatenatedArrays","_positionsDirty","_curvesDirty","_faceNormalsDirty","_faceTangentsDirty","_vertexNormalsDirty","_vertexTangentsDirty","_uvsDirty","_secondaryUVsDirty","_jointIndicesDirty","_jointWeightsDirty","_concatenateArrays","_autoDeriveNormals","_useFaceWeights","_autoDeriveUVs","_scaleU","_scaleV","_pSubMeshClass","_useCondensedIndices","set","value","_pUpdateStrideOffset","_pOffset","VERTEX_DATA","POSITION_DATA","stride","_curves","CURVE_DATA","_uvs","UV_DATA","_pStride","len","_pNumVertices","_pVertices","Array","_pStrideOffsetDirty","notifyUVsUpdate","updatePositions","_positions","updateCurves","updateUVs","updateFaceNormals","_faceNormals","_condensedIndexLookUp","getBoundingPositions","values","index","positions","getStride","getOffset","pInvalidateBounds","notifyPositionsUpdate","offset","curves","notifyCurvesUpdate","uvs","_pNotifyVerticesUpdate","uvIdx","lenV","_faceWeights","_faceTangents","updateIndices","indices","clone","_pIndices","concat","scaleUV","scaleU","scaleV","ratioU","ratioV","scale","applyTransformation","transform","i1","i2","vector","invTranspose","vi0","vStride","x","y","z","transformVector","j","k","x1","x2","x3","y1","y2","y3","z1","z2","z3","dx1","dy1","dz1","dx2","dy2","dz2","cx","cy","cz","Math","sqrt","w","_positionsUpdated","VERTICES_UPDATED","dispatchEvent","_curvesUpdated","_uvsUpdated","POSITION_FORMAT","CURVE_FORMAT","UV_FORMAT","awayjs-core/lib/geom/Vector3D","awayjs-display/lib/base/CurveSubMesh","awayjs-display/lib/base/SubGeometryBase","awayjs-display/lib/events/SubGeometryEvent","awayjs-display\\lib\\base\\CurveSubMesh","SubMeshBase","subGeometry","parentMesh","material","_pParentMesh","_subGeometry","CURVE_SUB_MESH","_iCollectRenderable","rendererPool","applyCurveSubMesh","awayjs-display/lib/base/SubMeshBase","awayjs-display\\lib\\base\\DisplayObject","Box","Sphere","MathConsts","Matrix3D","Matrix3DUtils","Point","AbstractMethodError","OrientationMode","Transform","PickingCollisionVO","DisplayObjectEvent","SceneEvent","DisplayObject","_boxBoundsInvalid","_sphereBoundsInvalid","_pSceneTransform","_pSceneTransformDirty","_matrix3D","_matrix3DDirty","_inverseSceneTransform","_inverseSceneTransformDirty","_scenePosition","_scenePositionDirty","_explicitVisibility","_pImplicitVisibility","_explicitMouseEnabled","_pImplicitMouseEnabled","_positionDirty","_rotationDirty","_scaleDirty","_rotationX","_rotationY","_rotationZ","_eulers","_flipY","_zOffset","_pScaleX","_pScaleY","_pScaleZ","_x","_y","_z","_pivot","_orientationMatrix","_pivotZero","_pivotDirty","_pos","_rot","_sca","_pIgnoreTransform","_pRenderables","_entityNodes","alignmentMode","castsShadows","orientationMode","DEFAULT","_transformComponents","_transform","identity","appendScale","_boundsType","_pInvalidateBounds","updateBounds","_pUpdateBoxBounds","_pBoxBounds","depth","val","scaleZ","getBox","invalidateScale","RADIANS_TO_DEGREES","DEGREES_TO_RADIANS","invalidateRotation","height","scaleY","_pParent","getChildIndex","copyFrom","sceneTransform","invert","setTo","pInvalidateSceneTransform","_pIsEntity","_loaderInfo","_pUpdateImplicitMouseEnabled","mouseChildren","_mouseX","_mouseY","_explicitPartition","_pUpdateImplicitPartition","_iAssignedPartition","_pScene","_pPickingCollider","pivot","invalidatePivot","_root","rotationX","rotationY","rotationZ","pivotScale","copyColumnTo","pUpdateSceneTransform","_shaderPickingDetails","_debugVisible","debugVisible","_pUpdateImplicitVisibility","_iIsVisible","width","scaleX","invalidatePosition","addEventListener","type","listener","POSITION_CHANGED","_listenToPositionChanged","ROTATION_CHANGED","_listenToRotationChanged","SCALE_CHANGED","_listenToScaleChanged","SCENE_CHANGED","_listenToSceneChanged","SCENETRANSFORM_CHANGED","_listenToSceneTransformChanged","_iMatrix3D","name","parent","removeChild","disposeAsset","getBounds","targetCoordinateSpace","_bounds","getRect","_iSourcePrefab","_iValidate","getSphere","_pUpdateSphereBounds","_pSphereBounds","globalToLocal","point","globalToLocal3D","position","inverseSceneTransform","hitTestObject","obj","hitTestPoint","shapeFlag","lookAt","target","upAxis","yAxis","zAxis","xAxis","raw","Y_AXIS","normalize","subtract","crossProduct","RAW_DATA_CONTAINER","m","copyRawDataFrom","vec","decompose","localToGlobal","localToGlobal3D","moveTo","dx","dy","dz","movePivot","pitch","angle","rotate","X_AXIS","getRenderSceneTransform","camera","CAMERA_PLANE","comps","scenePosition","recompose","prependTranslation","roll","Z_AXIS","axis","prependRotation","rotateTo","ax","ay","az","removeEventListener","hasEventListener","translate","distance","translateLocal","yaw","_pImplicitPartition","_pUpdateMatrix3D","elements","_pPickingCollisionVO","iSetParent","isEntity","invalidatePartition","notifySceneTransformChange","partition","scene","sceneChanged","REMOVED_FROM_SCENE","_iUnregisterPartition","_pUnregisterEntity","_iRegisterPartition","_pRegisterEntity","ADDED_TO_SCENE","notifySceneChange","appendTranslation","_iIsRoot","prepend","_iAddRenderable","renderable","push","_iRemoveRenderable","indexOf","splice","_iTestCollision","shortestCollisionDistance","findClosest","_iInternalUpdate","_iController","update","_iIsMouseEnabled","_iSetScene","notifyPositionChanged","_positionChanged","notifyRotationChanged","_rotationChanged","notifyScaleChanged","_scaleChanged","_scenechanged","_sceneTransformChanged","invalidateMatrix3D","_iAddEntityNode","entityNode","_iRemoveEntityNode","awayjs-core/lib/errors/AbstractMethodError","awayjs-core/lib/geom/Box","awayjs-core/lib/geom/MathConsts","awayjs-core/lib/geom/Matrix3D","awayjs-core/lib/geom/Matrix3DUtils","awayjs-core/lib/geom/Point","awayjs-core/lib/geom/Sphere","awayjs-display/lib/base/AlignmentMode","awayjs-display/lib/base/OrientationMode","awayjs-display/lib/base/Transform","awayjs-display/lib/events/DisplayObjectEvent","awayjs-display/lib/events/SceneEvent","awayjs-display/lib/pick/PickingCollisionVO","awayjs-display\\lib\\base\\Geometry","GeometryEvent","Geometry","_subGeometries","GEOMETRY","getSubGeometries","addSubGeometry","parentGeometry","SUB_GEOMETRY_ADDED","iInvalidateBounds","removeSubGeometry","SUB_GEOMETRY_REMOVED","numSubGeoms","subGeom","BOUNDS_INVALID","awayjs-display/lib/events/GeometryEvent","awayjs-display\\lib\\base\\GradientType","GradientType","LINEAR","RADIAL","awayjs-display\\lib\\base\\GraphicsPathWinding","GraphicsPathWinding","EVEN_ODD","NON_ZERO","awayjs-display\\lib\\base\\Graphics","Graphics","beginBitmapFill","bitmap","matrix","repeat","smooth","beginFill","color","alpha","beginGradientFill","colors","alphas","ratios","spreadMethod","interpolationMethod","focalPointRatio","clear","sourceGraphics","cubicCurveTo","controlX1","controlY1","controlX2","controlY2","anchorX","anchorY","curveTo","controlX","controlY","drawCircle","radius","drawEllipse","drawGraphicsData","graphicsData","drawPath","commands","data","winding","drawRect","drawRoundRect","ellipseWidth","ellipseHeight","NaN","drawTriangles","vertices","uvtData","culling","endFill","lineBitmapStyle","lineGradientStyle","lineStyle","thickness","pixelHinting","scaleMode","caps","joints","miterLimit","lineTo","awayjs-display\\lib\\base\\IBitmapDrawable","awayjs-display\\lib\\base\\IGraphicsData","awayjs-display\\lib\\base\\IMaterialOwner","awayjs-display\\lib\\base\\IRenderObjectOwner","awayjs-display\\lib\\base\\IRenderableOwner","awayjs-display\\lib\\base\\ISubMeshClass","awayjs-display\\lib\\base\\ISubMesh","awayjs-display\\lib\\base\\InterpolationMethod","InterpolationMethod","LINEAR_RGB","RGB","awayjs-display\\lib\\base\\JointStyle","JointStyle","BEVEL","MITER","awayjs-display\\lib\\base\\LightBase","DisplayObjectContainer","LightEvent","LightBase","_color","_colorR","_colorG","_colorB","_ambientColor","_ambient","_iAmbientR","_iAmbientG","_iAmbientB","_specular","_iSpecularR","_iSpecularG","_iSpecularB","_diffuse","_iDiffuseR","_iDiffuseG","_iDiffuseB","_castsShadows","_shadowMapper","pCreateShadowMapper","light","CASTS_SHADOW_CHANGE","updateSpecular","updateDiffuse","updateAmbient","iGetObjectProjectionMatrix","entity","LIGHT","awayjs-display/lib/containers/DisplayObjectContainer","awayjs-display/lib/events/LightEvent","awayjs-display\\lib\\base\\LineScaleMode","LineScaleMode","HORIZONTAL","NORMAL","VERTICAL","awayjs-display\\lib\\base\\LineSubGeometry","LineSubMesh","TriangleSubGeometry","LineSubGeometry","_boundingPositionDirty","_thicknessDirty","_colorsDirty","START_POSITION_DATA","END_POSITION_DATA","THICKNESS_DATA","COLOR_DATA","_startPositions","_endPositions","updateThickness","_thickness","updateColors","_startColors","_endColors","_numSegments","_boundingPositions","startPositions","endPositions","startValues","endValues","floor","notifyThicknessUpdate","notifyColorsUpdate","_thicknessUpdated","_colorUpdated","COLOR_FORMAT","THICKNESS_FORMAT","awayjs-display/lib/base/LineSubMesh","awayjs-display/lib/base/TriangleSubGeometry","awayjs-display\\lib\\base\\LineSubMesh","LINE_SUB_MESH","applyLineSubMesh","awayjs-display\\lib\\base\\LoaderInfo","EventDispatcher","LoaderInfo","apply","arguments","_bytes","_bytesLoaded","_bytesTotal","_content","_contentType","_loader","_url","awayjs-core/lib/events/EventDispatcher","awayjs-display\\lib\\base\\OrientationMode","CAMERA_POSITION","awayjs-display\\lib\\base\\PixelSnapping","PixelSnapping","ALWAYS","AUTO","NEVER","awayjs-display\\lib\\base\\SpreadMethod","SpreadMethod","PAD","REFLECT","REPEAT","awayjs-display\\lib\\base\\SubGeometryBase","_pConcatenateArrays","updateVertices","_numTriangles","dataType","_numIndices","notifyIndicesUpdate","_indicesUpdated","INDICES_UPDATED","awayjs-display\\lib\\base\\SubMeshBase","_iIndex","_renderables","animator","_material","iRemoveOwner","iAddOwner","_uvTransform","uvTransform","_iInvalidateRenderableGeometry","invalidateGeometry","_iGetExplicitMaterial","awayjs-display\\lib\\base\\Transform","displayObject","_position","_displayObject","director","getForward","negate","_concatenatedColorTransform","_concatenatedMatrix","getUp","getRight","_pixelBounds","getRelativeMatrix3D","relativeTo","moveForward","moveBackward","moveLeft","moveRight","moveUp","moveDown","awayjs-display\\lib\\base\\TriangleCulling","TriangleCulling","NEGATIVE","POSITIVE","awayjs-display\\lib\\base\\TriangleSubGeometry","TriangleSubMesh","_autoDeriveTangents","notifyJointIndicesUpdate","_vertexNormals","NORMAL_DATA","_vertexTangents","TANGENT_DATA","_secondaryUVs","SECONDARY_UV_DATA","_jointIndices","JOINT_INDEX_DATA","_jointsPerVertex","_jointWeights","JOINT_WEIGHT_DATA","notifyNormalsUpdate","notifyTangentsUpdate","updateVertexNormals","updateVertexTangents","updateSecondaryUVs","updateJointIndices","updateJointWeights","updateFaceTangents","_condensedJointIndices","_numCondensedJoints","normals","f1","f2","f3","lenI","weight","vx","vy","vz","tangents","notifySecondaryUVsUpdate","jointIndices","oldIndex","newIndex","dic","jointWeights","notifyJointWeightsUpdate","jointsPerVertex","bakeNormals","bakeTangents","transpose","ni0","ti0","nStride","tStride","deltaTransformVector","index1","index2","index3","vi","v0","dv1","dv2","denom","x0","y0","z0","_normalsUpdated","_tangentsUpdated","_secondaryUVsUpdated","_jointIndicesUpdated","_jointWeightsUpdated","NORMAL_FORMAT","TANGENT_FORMAT","SECONDARY_UV_FORMAT","awayjs-display/lib/base/TriangleSubMesh","awayjs-display\\lib\\base\\TriangleSubMesh","TRIANGLE_SUB_MESH","applyTriangleSubMesh","awayjs-display\\lib\\bounds\\AxisAlignedBoundingBox","PlaneClassification","BoundingVolumeBase","PrimitiveCubePrefab","AxisAlignedBoundingBox","_width","_height","_depth","_centerX","_centerY","_centerZ","_halfExtentsX","_halfExtentsY","_halfExtentsZ","nullify","isInFrustum","planes","numPlanes","_pInvalidated","_pUpdate","plane","c","flippedExtentX","flippedExtentY","flippedExtentZ","projDist","rayIntersection","direction","targetNormal","_box","classifyToPlane","centerDistance","boundOffset","FRONT","BACK","INTERSECT","_pEntity","hx","hy","hz","copyRawDataTo","m11","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","abs","_prefab","_pBoundsPrimitive","matrix3D","_pCreateBoundsPrimitive","geometryType","getNewObject","awayjs-core/lib/geom/PlaneClassification","awayjs-display/lib/bounds/BoundingVolumeBase","awayjs-display/lib/prefabs/PrimitiveCubePrefab","awayjs-display\\lib\\bounds\\BoundingSphere","PrimitiveSpherePrefab","BoundingSphere","_radius","_sphere","dd","rr","rx","ry","rz","awayjs-display/lib/prefabs/PrimitiveSpherePrefab","awayjs-display\\lib\\bounds\\BoundingVolumeBase","invalidate","awayjs-display\\lib\\bounds\\BoundsType","BoundsType","SPHERE","AXIS_ALIGNED_BOX","NULL","awayjs-display\\lib\\bounds\\NullBounds","NullBounds","alwaysIn","_alwaysIn","awayjs-display\\lib\\containers\\DisplayObjectContainer","ArgumentError","RangeError","_mouseChildren","_children","CONTAINER","addChild","child","removeChildInternal","addChildAt","addChildren","childarray","_i","contains","disposeWithChildren","numChildren","getChildAt","getChildByName","childIndex","getObjectsUnderPoint","removeChildAt","removeChildren","beginIndex","endIndex","setChildIndex","swapChildren","child1","child2","swapChildrenAt","awayjs-core/lib/errors/ArgumentError","awayjs-core/lib/errors/Error","awayjs-core/lib/errors/RangeError","awayjs-display/lib/base/DisplayObject","awayjs-display\\lib\\containers\\Loader","AssetLibraryBundle","AssetLoader","AssetEvent","IOErrorEvent","LoaderEvent","ParserEvent","Loader","useAssetLibrary","assetLibraryId","_this","_loadingSessions","_useAssetLib","_assetLibId","_onResourceCompleteDelegate","event","onResourceComplete","_onAssetCompleteDelegate","onAssetComplete","_contentLoaderInfo","close","lib","getInstance","stopAllLoadingSessions","removeListeners","stop","load","request","context","ns","parser","token","loader","RESOURCE_COMPLETE","ASSET_COMPLETE","_iLoader","_iAddErrorHandler","onLoadError","_iAddParseErrorHandler","onParseError","loadData","unload","enableParser","parserClass","enableParsers","parserClasses","dispatcher","IO_ERROR","PARSE_ERROR","content","awayjs-core/lib/events/AssetEvent","awayjs-core/lib/events/IOErrorEvent","awayjs-core/lib/events/LoaderEvent","awayjs-core/lib/events/ParserEvent","awayjs-core/lib/library/AssetLibraryBundle","awayjs-core/lib/library/AssetLoader","awayjs-display\\lib\\containers\\Scene","NodeBase","Partition","Scene","_expandedPartitions","_partitions","_iCollectionMark","_partition","_iSceneGraphRoot","traversePartitions","traverser","traverse","PARTITION_CHANGED","awayjs-display/lib/partition/NodeBase","awayjs-display/lib/partition/Partition","awayjs-display\\lib\\containers\\View","getTimer","RaycastPicker","Camera","CameraEvent","RendererEvent","MouseManager","View","renderer","_time","_deltaTime","_backgroundColor","_backgroundAlpha","_viewportDirty","_scissorDirty","_mousePicker","_onScenePartitionChangedDelegate","onScenePartitionChanged","_onProjectionChangedDelegate","onProjectionChanged","_onViewportUpdatedDelegate","onViewportUpdated","_onScissorUpdatedDelegate","onScissorUpdated","document","body","style","margin","_htmlElement","createElement","appendChild","_mouseManager","registerView","_pCamera","_iRegisterCamera","_pMouseX","_pMouseY","_pRenderer","VIEWPORT_UPDATED","SCISSOR_UPDATED","_pEntityCollector","_iCreateEntityCollector","_iBackgroundR","_iBackgroundG","_iBackgroundB","_iBackgroundAlpha","shareContext","_shareContext","PROJECTION_CHANGED","_aspectRatio","projection","_iAspectRatio","left","top","visibility","render","pUpdateTime","_iUpdateScissorRect","scissorRect","_iUpdateViewport","viewPort","forceMouseMove","_iActiveDiv","_iUpdateDirty","_iCollidingObject","mousePicker","getViewCollision","fireMouseEvents","time","unregisterView","project","point3d","v","originX","originY","unproject","sX","sY","sZ","getRay","updateCollider","collidingObject","layeredView","rayEntryDistance","awayjs-core/lib/utils/getTimer","awayjs-display/lib/containers/Scene","awayjs-display/lib/entities/Camera","awayjs-display/lib/events/CameraEvent","awayjs-display/lib/events/RendererEvent","awayjs-display/lib/managers/MouseManager","awayjs-display/lib/pick/RaycastPicker","awayjs-display\\lib\\controllers\\ControllerBase","ControllerBase","targetObject","_pAutoUpdate","pNotifyUpdate","_pTargetObject","interpolate","awayjs-display\\lib\\controllers\\FirstPersonController","FirstPersonController","panAngle","tiltAngle","minTiltAngle","maxTiltAngle","steps","wrapPanAngle","_iCurrentPanAngle","_iCurrentTiltAngle","_panAngle","_tiltAngle","_minTiltAngle","_maxTiltAngle","_steps","_walkIncrement","_strafeIncrement","_wrapPanAngle","fly","max","min","sin","cos","incrementWalk","incrementStrafe","awayjs-display/lib/controllers/ControllerBase","awayjs-display\\lib\\controllers\\FollowController","HoverController","FollowController","lookAtObject","_pLookAtObject","awayjs-display/lib/controllers/HoverController","awayjs-display\\lib\\controllers\\HoverController","LookAtController","minPanAngle","maxPanAngle","yFactor","_distance","_minPanAngle","Infinity","_maxPanAngle","_yFactor","_upAxis","pos","lookAtPosition","_pOrigin","_pLookAtPosition","awayjs-display/lib/controllers/LookAtController","awayjs-display\\lib\\controllers\\LookAtController","_onLookAtObjectChangedDelegate","onLookAtObjectChanged","awayjs-display\\lib\\controllers\\SpringController","SpringController","stiffness","mass","damping","positionOffset","_velocity","_dv","_stretch","_force","_acceleration","_desiredPosition","offs","add","scaleBy","incrementBy","awayjs-display\\lib\\display\\ContextMode","ContextMode","WEBGL","FLASH","NATIVE","awayjs-display\\lib\\display\\IContext","awayjs-display\\lib\\entities\\Billboard","MaterialEvent","Billboard","pixelSnapping","smoothing","onSizeChangedDelegate","onSizeChanged","_billboardWidth","_billboardHeight","_animator","BILLBOARD","SIZE_CHANGED","testBillboardCollision","_iCollectRenderables","applyBillboard","_iRegisterEntity","_iUnregisterEntity","awayjs-display/lib/bounds/BoundsType","awayjs-display/lib/events/MaterialEvent","awayjs-display\\lib\\entities\\Camera","Plane3D","ProjectionEvent","PerspectiveProjection","_viewProjection","_viewProjectionDirty","_frustumPlanesDirty","_onProjectionMatrixChangedDelegate","onProjectionMatrixChanged","_projection","MATRIX_CHANGED","_frustumPlanes","CAMERA","updateFrustum","c11","c12","c13","c14","c21","c22","c23","c24","c31","c32","c33","c34","c41","c42","c43","c44","invLen","viewProjection","append","nX","nY","_iUnregisterCamera","awayjs-core/lib/events/ProjectionEvent","awayjs-core/lib/geom/Plane3D","awayjs-core/lib/projections/PerspectiveProjection","awayjs-display\\lib\\entities\\DirectionalLight","DirectionalShadowMapper","DirectionalLight","xDir","yDir","zDir","_pAabbPoints","_sceneDirection","_direction","_tmpLookAt","_projAABBPoints","transformVectors","xMin","xMax","yMin","yMax","zMin","zMax","invXRange","invYRange","invZRange","_iRegisterDirectionalLight","_iUnregisterDirectionalLight","minX","minY","minZ","maxX","maxY","maxZ","awayjs-display/lib/base/LightBase","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper","awayjs-display\\lib\\entities\\IEntity","awayjs-display\\lib\\entities\\LightProbe","LightProbe","diffuseMap","specularMap","_diffuseMap","_specularMap","_iRegisterLightProbe","_iUnregisterLightProbe","awayjs-display\\lib\\entities\\LineSegment","LineSegment","startPosition","endPosition","_startPosition","_endPosition","_halfThickness","LINE_SEGMENT","notifyRenderableUpdate","halfWidth","halfHeight","halfDepth","applyLineSegment","awayjs-display\\lib\\entities\\Mesh","Mesh","geometry","_shareAnimationGeometry","_subMeshes","_onGeometryBoundsInvalidDelegate","onGeometryBoundsInvalid","_onSubGeometryAddedDelegate","onSubGeometryAdded","_onSubGeometryRemovedDelegate","onSubGeometryRemoved","removeOwner","subMesh","addOwner","MESH","_geometry","subGeoms","subGeometries","addSubMesh","bakeTransformations","disposeWithAnimatorAndChildren","boundsType","shareAnimationGeometry","mouseEnabled","extra","getSubMeshFromSubGeometry","boundingPositions","setEmpty","box","centerX","centerY","centerZ","maxRadiusSquared","radiusSquared","distanceX","distanceY","distanceZ","SubMeshClass","subMeshClass","testMeshCollision","_iInvalidateRenderableGeometries","awayjs-display/lib/base/Geometry","awayjs-display\\lib\\entities\\PointLight","CubeMapShadowMapper","PointLight","_pRadius","_pFallOff","_pFallOffFactor","iFallOffFactor","v1","bottom","front","v2","right","back","d1","d2","rawData","_iRegisterPointLight","_iUnregisterPointLight","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper","awayjs-display\\lib\\entities\\Shape","Shape","_graphics","awayjs-display\\lib\\entities\\Skybox","BlendMode","Skybox","cubeMap","_pAlphaThreshold","_pBlendMode","_renderObjects","_mipmap","_smooth","_owners","_pIinvalidatePasses","_pLightPicker","_animationSet","_pInvalidateRenderObject","invalidateRenderObject","invalidatePasses","_cubeMap","format","SKYBOX","_iAddRenderObject","renderObject","_iRemoveRenderObject","getRenderObject","renderablePool","getSkyboxRenderObject","_iRegisterSkybox","_iUnregisterSkybox","awayjs-core/lib/base/BlendMode","awayjs-display\\lib\\entities\\TextField","TextField","_text","_bottomScrollV","_caretIndex","_length","maxScrollH","_maxScrollH","maxScrollV","_maxScrollV","_numLines","_selectionBeginIndex","_selectionEndIndex","_textHeight","_textInteractionMode","_textWidth","appendText","newText","getCharBoundaries","charIndex","_charBoundaries","getCharIndexAtPoint","_charIndexAtPoint","getFirstCharInParagraph","_firstCharInParagraph","getImageReference","id","_imageReference","getLineIndexAtPoint","_lineIndexAtPoint","getLineIndexOfChar","_lineIndexOfChar","getLineLength","lineIndex","_lineLength","getLineMetrics","_lineMetrics","getLineOffset","_lineOffset","getLineText","_lineText","getParagraphLength","_paragraphLength","getTextFormat","_textFormat","replaceSelectedText","replaceText","setSelection","setTextFormat","isFontCompatible","fontName","fontStyle","awayjs-display\\lib\\errors\\CastError","CastError","message","awayjs-display\\lib\\events\\CameraEvent","Event","_camera","awayjs-core/lib/events/Event","awayjs-display\\lib\\events\\DisplayObjectEvent","object","VISIBLITY_UPDATED","awayjs-display\\lib\\events\\GeometryEvent","awayjs-display\\lib\\events\\LightEvent","awayjs-display\\lib\\events\\MaterialEvent","awayjs-display\\lib\\events\\MouseEvent","MouseEvent","_iAllowedToPropagate","doesBubble","stopPropagation","_iParentEvent","stopImmediatePropagation","result","screenX","screenY","view","renderableOwner","uv","localPosition","localNormal","subGeometryIndex","delta","ctrlKey","shiftKey","sceneNormal","MOUSE_OVER","MOUSE_OUT","MOUSE_UP","MOUSE_DOWN","MOUSE_MOVE","CLICK","DOUBLE_CLICK","MOUSE_WHEEL","awayjs-display\\lib\\events\\RenderableOwnerEvent","RenderableOwnerEvent","renderObjectOwner","_renderObjectOwner","RENDER_OBJECT_OWNER_UPDATED","awayjs-display\\lib\\events\\RendererEvent","awayjs-display\\lib\\events\\ResizeEvent","ResizeEvent","oldHeight","oldWidth","_oldHeight","_oldWidth","RESIZE","awayjs-display\\lib\\events\\SceneEvent","awayjs-display\\lib\\events\\StageEvent","StageEvent","CONTEXT_CREATED","CONTEXT_DISPOSED","CONTEXT_RECREATED","awayjs-display\\lib\\events\\SubGeometryEvent","_dataType","awayjs-display\\lib\\managers\\DefaultMaterialManager","BitmapData","BitmapTexture","BasicMaterial","DefaultMaterialManager","getDefaultMaterial","assetType","_defaultLineMaterial","createDefaultLineMaterial","_defaultTriangleMaterial","createDefaultTriangleMaterial","getDefaultTexture","_defaultTexture","createDefaultTexture","_defaultBitmapData","createCheckeredBitmapData","setPixel","mipmap","awayjs-core/lib/base/BitmapData","awayjs-core/lib/textures/BitmapTexture","awayjs-display/lib/materials/BasicMaterial","awayjs-display\\lib\\managers\\MouseManager","AwayMouseEvent","_viewLookup","_nullVector","_queuedEvents","_mouseUp","_mouseClick","_mouseOut","_mouseDown","_mouseMove","_mouseOver","_mouseWheel","_mouseDoubleClick","onClickDelegate","onClick","onDoubleClickDelegate","onDoubleClick","onMouseDownDelegate","onMouseDown","onMouseMoveDelegate","onMouseMove","onMouseUpDelegate","onMouseUp","onMouseWheelDelegate","onMouseWheel","onMouseOverDelegate","onMouseOver","onMouseOutDelegate","onMouseOut","_instance","_previousCollidingObject","queueDispatch","_mouseMoveEvent","htmlElement","slice","sourceEvent","collider","altKey","clientX","clientY","updateColliders","bounds","mouseX","mouseY","getBoundingClientRect","awayjs-display/lib/events/MouseEvent","awayjs-display\\lib\\materials\\BasicMaterial","Texture2DBase","MaterialBase","textureColor","smoothAlpha","_preserveAlpha","texture","Number","getMaterialRenderObject","awayjs-core/lib/textures/Texture2DBase","awayjs-display/lib/materials/MaterialBase","awayjs-display\\lib\\materials\\CSSMaterialBase","ImageTexture","CSSMaterialBase","_iMaterialId","_imageElement","_imageStyle","_pTexture","htmlImageElement","node","getElementsByTagName","sheet","styleSheets","insertRule","cssRules","backgroundImage","src","backgroundSize","transformOrigin","_pHeight","_pWidth","_pNotifySizeChanged","awayjs-core/lib/textures/ImageTexture","awayjs-display\\lib\\materials\\CurveMaterial","CurveMaterial","awayjs-display\\lib\\materials\\LightSources","LightSources","LIGHTS","PROBES","ALL","awayjs-display\\lib\\materials\\MaterialBase","ColorTransform","_alphaBlending","_alpha","_pAnimateUVs","_enableLightFallOff","_specularLightSources","_diffuseLightSources","_iBaseScreenPassIndex","_bothSides","_repeat","_onLightChangeDelegate","onLightsChange","alphaPremultiplied","MATERIAL","_colorTransform","alphaMultiplier","CHANGE","_pInvalidatePasses","_alphaPremultiplied","owner","animationSet","invalidateAnimation","_sizeChanged","awayjs-core/lib/geom/ColorTransform","awayjs-display/lib/events/RenderableOwnerEvent","awayjs-display\\lib\\materials\\lightpickers\\LightPickerBase","LightPickerBase","_pNumPointLights","_pNumDirectionalLights","_pNumCastingPointLights","_pNumCastingDirectionalLights","_pNumLightProbes","LIGHT_PICKER","_pPointLights","_pDirectionalLights","_pCastingPointLights","_pCastingDirectionalLights","_pLightProbes","_pLightProbeWeights","_pAllPickedLights","collectLights","updateProbeWeights","objectPos","sourceEntity","lightPos","total","awayjs-display\\lib\\materials\\lightpickers\\StaticLightPicker","StaticLightPicker","lights","_onCastShadowChangeDelegate","onCastShadowChange","_lights","numPointLights","numDirectionalLights","numCastingPointLights","numCastingDirectionalLights","numLightProbes","clearListeners","ceil","updatePointCasting","updateDirectionalCasting","dl","pl","awayjs-display/lib/entities/DirectionalLight","awayjs-display/lib/entities/LightProbe","awayjs-display/lib/entities/PointLight","awayjs-display/lib/materials/lightpickers/LightPickerBase","awayjs-display\\lib\\materials\\shadowmappers\\CascadeShadowMapper","Rectangle","FreeMatrixProjection","CascadeShadowMapper","numCascades","_pScissorRectsInvalid","_numCascades","_changeDispatcher","init","getSplitRatio","_splitRatios","setSplitRatio","getDepthProjections","_depthCameras","_nearPlaneDistances","_texOffsetsX","_texOffsetsY","_pScissorRects","_depthLenses","_pSetDepthMapSize","invalidateScissorRects","pDrawDepthMap","updateScissorRects","_pCasterCollector","cullPlanes","_pCullPlanes","_pOverallDepthCamera","_iRenderCascades","half","_pDepthMapSize","pUpdateDepthProjection","viewCamera","projectionNear","near","projectionRange","far","pUpdateProjectionFromFrustumCorners","frustumCorners","_pMatrix","_pOverallDepthProjection","pUpdateCullPlanes","updateProjectionPartition","splitRatio","texOffsetX","texOffsetY","xN","yN","zN","xF","yF","zF","POSITIVE_INFINITY","NEGATIVE_INFINITY","_pLocalFrustum","h","_pSnap","snap2","awayjs-core/lib/geom/Rectangle","awayjs-core/lib/projections/FreeMatrixProjection","awayjs-display\\lib\\materials\\shadowmappers\\CubeMapShadowMapper","PartialImplementationError","ShadowMapperBase","_needsRender","initCameras","_projections","addCamera","cam","fieldOfView","pCreateDepthTexture","maxDistance","_pLight","_iRender","awayjs-core/lib/errors/PartialImplementationError","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase","awayjs-display\\lib\\materials\\shadowmappers\\DirectionalShadowMapper","_pLightOffset","_pMaxZ","_pMinZ","lightFrustumPlanes","frustumPlanes","viewFrustumPlanes","dir","sceneDirection","dirX","dirY","dirZ","corners","awayjs-display\\lib\\materials\\shadowmappers\\NearDirectionalShadowMapper","NearDirectionalShadowMapper","coverageRatio","_coverageRatio","awayjs-display\\lib\\materials\\shadowmappers\\ShadowMapperBase","ShadowCasterCollector","RenderTexture","_autoUpdateShadows","pCreateCasterCollector","updateShadows","_iShadowsInvalid","iSetDepthMap","depthMap","_depthMap","_explicitDepthMap","size","iRenderDepthMap","entityCollector","awayjs-core/lib/textures/RenderTexture","awayjs-display/lib/traverse/ShadowCasterCollector","awayjs-display\\lib\\partition\\CameraNode","EntityNode","CameraNode","pool","acceptTraverser","awayjs-display/lib/partition/EntityNode","awayjs-display\\lib\\partition\\DirectionalLightNode","DirectionalLightNode","directionalLight","_directionalLight","enterNode","applyDirectionalLight","isCastingShadow","awayjs-display\\lib\\partition\\EntityNode","_pool","_entity","_iNumEntities","removeFromParent","_iParent","iRemoveNode","applyEntity","_pImplicitDebugVisible","isEntityCollector","_pDebugEntity","isIntersectingRay","rayPosition","rayDirection","pickingCollisionVO","_iPickingCollisionVO","localRayPosition","localRayDirection","rayOriginIsInsideBounds","_pCreateDebugEntity","boundsPrimitive","iMarkForUpdate","updateDebugEntity","awayjs-display/lib/bounds/AxisAlignedBoundingBox","awayjs-display/lib/bounds/BoundingSphere","awayjs-display/lib/bounds/NullBounds","awayjs-display\\lib\\partition\\LightProbeNode","LightProbeNode","lightProbe","_lightProbe","applyLightProbe","awayjs-display\\lib\\partition\\NodeBase","_pNumChildNodes","_pChildNodes","_explicitDebugVisible","_iUpdateImplicitDebugVisible","debugChildrenVisible","_debugChildrenVisible","findPartitionForEntity","_pNumEntities","applyDebugEntity","iAddNode","numEntities","pop","awayjs-display\\lib\\partition\\NullNode","NullNode","awayjs-display\\lib\\partition\\Partition","PointLightNode","SkyboxNode","EntityNodePool","rootNode","_updatesMade","_rootNode","_cameraNodePool","_directionalLightNodePool","_entityNodePool","_lightProbeNodePool","_pointLightNodePool","_skyboxNodePool","updateEntities","_updateQueue","_iUpdateQueueNext","iRemoveEntity","targetNode","getItem","pointLight","skybox","awayjs-display/lib/partition/CameraNode","awayjs-display/lib/partition/DirectionalLightNode","awayjs-display/lib/partition/LightProbeNode","awayjs-display/lib/partition/NullNode","awayjs-display/lib/partition/PointLightNode","awayjs-display/lib/partition/SkyboxNode","awayjs-display/lib/pool/EntityNodePool","awayjs-display\\lib\\partition\\PointLightNode","_pointLight","applyPointLight","awayjs-display\\lib\\partition\\SkyboxNode","skyBox","_skyBox","applySkybox","awayjs-display\\lib\\pick\\IPicker","awayjs-display\\lib\\pick\\IPickingCollider","awayjs-display\\lib\\pick\\PickingCollisionVO","awayjs-display\\lib\\pick\\RaycastPicker","RaycastCollector","findClosestCollision","_ignoredEntities","_onlyMouseEnabled","_numEntities","_raycastCollector","_findClosestCollision","_entities","getSceneCollision","entityHead","isIgnored","next","getPickingCollisionVO","setIgnoreList","entities","sortOnNearT","entity1","entity2","collector","sort","MAX_VALUE","bestCollisionVO","pickingCollider","updateLocalPosition","collisionPos","rayDir","rayPos","awayjs-display/lib/traverse/RaycastCollector","awayjs-display\\lib\\pool\\CSSBillboardRenderable","CSSRenderableBase","CSSBillboardRenderable","billboard","div","onmousedown","img","className","awayjs-display/lib/pool/CSSRenderableBase","awayjs-display\\lib\\pool\\CSSLineSegmentRenderable","CSSLineSegmentRenderable","lineSegment","awayjs-display\\lib\\pool\\CSSRenderableBase","disposeItem","invalidateIndexData","invalidateVertexData","awayjs-display\\lib\\pool\\CSSSkyboxRenderable","CSSSkyboxRenderable","awayjs-display\\lib\\pool\\EntityListItemPool","EntityListItem","EntityListItemPool","_index","_poolSize","item","freeAll","awayjs-display/lib/pool/EntityListItem","awayjs-display\\lib\\pool\\EntityListItem","awayjs-display\\lib\\pool\\EntityNodePool","entityNodeClass","_entityNodeClass","awayjs-display\\lib\\pool\\IEntityNodeClass","awayjs-display\\lib\\pool\\IRenderObject","awayjs-display\\lib\\pool\\IRenderablePool","awayjs-display\\lib\\pool\\IRenderable","awayjs-display\\lib\\pool\\IRendererPool","awayjs-display\\lib\\prefabs\\PrefabBase","PrefabBase","_pObjects","_pCreateObject","awayjs-display\\lib\\prefabs\\PrimitiveCapsulePrefab","PrimitivePrefabBase","PrimitiveCapsulePrefab","segmentsW","segmentsH","yUp","_numVertices","_segmentsW","_segmentsH","_yUp","_pInvalidateGeometry","_pInvalidateUVs","_pBuildGeometry","triIndex","startIndex","comp1","comp2","t1","t2","numIndices","triangleGeometry","numVertices","vertexNormals","vertexTangents","horangle","PI","ringradius","verangle","normLen","tanLen","_pBuildUVs","awayjs-display/lib/prefabs/PrimitivePrefabBase","awayjs-display\\lib\\prefabs\\PrimitiveConePrefab","PrimitiveCylinderPrefab","PrimitiveConePrefab","closed","_pBottomRadius","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab","awayjs-display\\lib\\prefabs\\PrimitiveCubePrefab","segmentsD","tile6","_segmentsD","_tile6","tl","tr","bl","br","inc","vidx","fidx","hw","hh","hd","dw","dh","outer_pos","lineGeometry","numSegments","u_tile_dim","v_tile_dim","u_tile_step","v_tile_step","tl0u","tl0v","tl1u","tl1v","du","dv","awayjs-display\\lib\\prefabs\\PrimitiveCylinderPrefab","topRadius","bottomRadius","topClosed","bottomClosed","surfaceClosed","_topRadius","_pSegmentsW","_pSegmentsH","_topClosed","_bottomClosed","_surfaceClosed","setSegmentsW","setSegmentsH","revolutionAngle","dr","latNormElev","latNormBase","nextVertexIndex","centerVertexIndex","revolutionAngleDelta","na0","na1","naComp1","naComp2","awayjs-display\\lib\\prefabs\\PrimitivePlanePrefab","PrimitivePlanePrefab","doubleSided","_doubleSided","base","tw","xi","yi","mult","awayjs-display\\lib\\prefabs\\PrimitivePolygonPrefab","PrimitivePolygonPrefab","sides","awayjs-display\\lib\\prefabs\\PrimitivePrefabBase","_geomDirty","_uvDirty","_geometryTypeDirty","_geometryType","PRIMITIVE_PREFAB","invalidateGeometryType","updateGeometryType","autoDeriveNormals","autoDeriveTangents","autoDeriveUVs","updateGeometry","mesh","awayjs-display/lib/base/LineSubGeometry","awayjs-display/lib/entities/Mesh","awayjs-display/lib/prefabs/PrefabBase","awayjs-display\\lib\\prefabs\\PrimitiveSpherePrefab","awayjs-display\\lib\\prefabs\\PrimitiveTorusPrefab","PrimitiveTorusPrefab","tubeRadius","segmentsR","segmentsT","_tubeRadius","_segmentsR","_segmentsT","nx","ny","nz","revolutionAngleR","revolutionAngleT","revolutionAngleDeltaR","revolutionAngleDeltaT","n1","n2","awayjs-display\\lib\\render\\CSSDefaultRenderer","CoordinateSystem","CSSRendererBase","CSSEntityCollector","CSSDefaultRenderer","_contextMatrix","_skyboxProjection","_container","overflow","_context","_contextStyle","transformStyle","_pBackBufferInvalid","pUpdateBackBuffer","pDraw","coordinateSystem","RIGHT_HANDED","drawRenderables","_renderableHead","_activeMaterial","clip","toString","drawSkybox","renderSceneTransform","awayjs-core/lib/projections/CoordinateSystem","awayjs-display/lib/render/CSSRendererBase","awayjs-display/lib/traverse/CSSEntityCollector","awayjs-display\\lib\\render\\CSSRendererBase","renderToTexture","forceSoftware","profile","_backgroundR","_backgroundG","_backgroundB","_depthTextureInvalid","_viewPort","_scissorRect","_localPos","_globalPos","window","innerWidth","innerHeight","updateGlobalPos","notifyViewportUpdate","notifyScissorUpdate","surfaceSelector","pExecuteRender","scissorRects","cameras","pCollectRenderables","lineSubMesh","triangleSubMesh","_applyRenderable","materialId","cascaded","_iEntryPoint","zIndex","zOffset","dotProduct","_pCameraForward","_scissorUpdated","_viewPortUpdated","awayjs-display\\lib\\render\\IRenderer","awayjs-display\\lib\\sort\\IEntitySorter","awayjs-display\\lib\\sort\\RenderableMergeSort","RenderableMergeSort","sortBlendedRenderables","head","headB","fast","slow","curr","sortOpaqueRenderables","cmp","aid","renderOrderId","bid","ma","renderObjectId","mb","awayjs-display\\lib\\text\\AntiAliasType","AntiAliasType","ADVANCED","awayjs-display\\lib\\text\\GridFitType","GridFitType","PIXEL","SUBPIXEL","awayjs-display\\lib\\text\\TextFieldAutoSize","TextFieldAutoSize","CENTER","LEFT","RIGHT","awayjs-display\\lib\\text\\TextFieldType","TextFieldType","DYNAMIC","INPUT","awayjs-display\\lib\\text\\TextFormatAlign","TextFormatAlign","JUSTIFY","awayjs-display\\lib\\text\\TextFormat","TextFormat","font","bold","italic","underline","url","align","leftMargin","rightMargin","indent","leading","tabStops","awayjs-display\\lib\\text\\TextInteractionMode","TextInteractionMode","SELECTION","awayjs-display\\lib\\text\\TextLineMetrics","TextLineMetrics","ascent","descent","awayjs-display\\lib\\traverse\\CSSEntityCollector","CollectorBase","awayjs-display/lib/traverse/CollectorBase","awayjs-display\\lib\\traverse\\CollectorBase","_numCullPlanes","_pNumInteractiveEntities","_pEntityListItemPool","_cullPlanes","_customCullPlanes","_pEntityHead","enter","awayjs-display/lib/pool/EntityListItemPool","awayjs-display\\lib\\traverse\\EntityCollector","EntityCollector","_pNumLights","_numDirectionalLights","_numPointLights","_numLightProbes","_pLights","_directionalLights","_pointLights","_lightProbes","_pSkybox","awayjs-display\\lib\\traverse\\RaycastCollector","_rayPosition","_rayDirection","awayjs-display\\lib\\traverse\\ShadowCasterCollector","awayjs-display\\lib\\utils\\Cast","ByteArray","Cast","string","byteArray","isHex","str","_hexChars","charAt","tryColor","random","_colorNames","parseInt","tryClass","_notClasses","_classes","bitmapData","HTMLImageElement","imageElement","draw","bitmapTexture","bmd","awayjs-core/lib/utils/ByteArray","awayjs-display/lib/errors/CastError"],"mappings":"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","file":"awayjs-display.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.ANIMATION_NODE;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;","/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;","/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubMesh\t\t    \t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n    public static CURVE_DATA:string = \"curves\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static CURVE_FORMAT:string = \"float2\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _curvesDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\tprivate _vertexNormalsDirty:boolean = true;\r\n\tprivate _vertexTangentsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _curves:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n    private _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceTangents:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _curvesUpdated:SubGeometryEvent;\r\n\tprivate _tangentsUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[CurveSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._curves != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = stride;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[CurveSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.CURVE_DATA] = 0;\r\n\t\t\tthis._pOffset[CurveSubGeometry.UV_DATA] = 0;\r\n\r\n\r\n\t\t\tthis._pStride[CurveSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[CurveSubGeometry.CURVE_DATA] = 2;\r\n\t\t\tthis._pStride[CurveSubGeometry.UV_DATA] = 2;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn false;//this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\t//if (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\t//this._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n    //remove\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n        if (this._curvesDirty)\r\n            this.updateCurves(this._curves);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Array<number>\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\tthis.updateCurves(this._curves);\r\n\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = CurveSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(CurveSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateCurves(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar curves:Array<number>;\r\n\r\n\t\tif (true) {\r\n\t\t\tif ((this._curves == null || values == null) && (this._curves != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n                    true; //\"do nothing\";\r\n\t\t\t\t\t//this._pNotifyCurvesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._curves = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.CURVE_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.CURVE_DATA);\r\n                curves = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n                    curves[index] = values[i++];\r\n                    curves[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.notifyCurvesUpdate();\r\n\r\n\t\tthis._curvesDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(CurveSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(CurveSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._curves = null;\r\n\t\tthis._uvs = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t\tthis._faceTangents = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the CurveSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._curves)\r\n\t\t\tclone.updateCurves(this._curves.concat());\r\n\t\telse\r\n\t\t\tclone.updateCurves(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\r\n\r\n\t\tvar vi0:number = this.getOffset(CurveSubGeometry.POSITION_DATA);\r\n\t\tvar vStride:number = this.getStride(CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyCurvesUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyCurvesUpdate()\r\n\t{\r\n\t\tif (this._curvesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curvesDirty = true;\r\n\r\n\t\tif (!this._curvesUpdated)\r\n\t\t\tthis._curvesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.CURVE_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._curvesUpdated);\r\n\t}\r\n\r\n\r\n\r\n\tprivate notifyUVsUpdate() {\r\n        if (this._uvsDirty)\r\n            return;\r\n\r\n        this._uvsDirty = true;\r\n\r\n        if (!this._uvsUpdated)\r\n            this._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, CurveSubGeometry.UV_DATA);\r\n\r\n        this.dispatchEvent(this._uvsUpdated);\r\n    }\r\n}\r\n\r\nexport = CurveSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport CurveSubGeometry\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CURVE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyCurveSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic alpha:number;\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tvar scaleZ:number = val/this.getBox().depth;\r\n\r\n\t\tif (this._pScaleZ == scaleZ)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = scaleZ;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tvar scaleY:number = val/this.getBox().height;\r\n\r\n\t\tif (this._pScaleY == scaleY)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = scaleY;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\r\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds.width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tvar scaleX:number = val/this.getBox().width;\r\n\r\n\t\tif (this._pScaleX == scaleX)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = scaleX;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid)\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends NamedAssetBase implements IAsset\r\n{\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.GEOMETRY;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\tpublic getSubGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;","/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;","/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;","/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;","/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;","/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;","import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\r\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\r\n\tpublic static THICKNESS_DATA:string = \"thickness\";\r\n\tpublic static COLOR_DATA:string = \"colors\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static COLOR_FORMAT:string = \"float4\";\r\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _boundingPositionDirty = true;\r\n\tprivate _thicknessDirty:boolean = true;\r\n\tprivate _colorsDirty:boolean = true;\r\n\r\n\tprivate _startPositions:Array<number>;\r\n\tprivate _endPositions:Array<number>;\r\n\tprivate _boundingPositions:Array<number>\r\n\tprivate _thickness:Array<number>;\r\n\tprivate _startColors:Array<number>;\r\n\tprivate _endColors:Array<number>;\r\n\r\n\tprivate _numSegments:number;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _thicknessUpdated:SubGeometryEvent;\r\n\tprivate _colorUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\tvar stride:number = 0;\r\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tstride += 3;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tstride += 1;\r\n\r\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\r\n\t\tstride += 4;\r\n\r\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\r\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\r\n\r\n\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\telse if (this._pVertices.length != len)\r\n\t\t\tthis._pVertices.length = len;\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._startPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\r\n\r\n\t\treturn this._endPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Array<number>\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\tthis.updateThickness(this._thickness);\r\n\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._startColors;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endColors():Array<number>\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\tthis.updateColors(this._startColors, this._endColors);\r\n\r\n\t\treturn this._endColors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of segments in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numSegments():number\r\n\t{\r\n\t\treturn this._numSegments;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(true);\r\n\r\n\t\tthis._pSubMeshClass = LineSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._boundingPositionDirty)\r\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\r\n\r\n\t\treturn this._boundingPositions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar indices:Array<number>;\r\n\r\n\t\tthis._startPositions = startValues;\r\n\r\n\t\tif (this._startPositions == null)\r\n\t\t\tthis._startPositions = new Array<number>();\r\n\r\n\t\tthis._endPositions = endValues;\r\n\r\n\t\tif (this._endPositions == null)\r\n\t\t\tthis._endPositions = new Array<number>();\r\n\r\n\t\tthis._boundingPositionDirty = true;\r\n\r\n\t\tthis._numSegments = this._startPositions.length/3;\r\n\r\n\t\tthis._pNumVertices = this._numSegments*4;\r\n\r\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\r\n\r\n\t\tif (this._pVertices == null)\r\n\t\t\tthis._pVertices = new Array<number>(lenV);\r\n\t\telse if (this._pVertices.length != lenV)\r\n\t\t\tthis._pVertices.length = lenV;\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\r\n\t\tpositions = this._pVertices;\r\n\t\tindices = new Array();\r\n\r\n\t\twhile (i < startValues.length) {\r\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\r\n\t\t\tpositions[index] = values[i];\r\n\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\tpositions[index + 2] = values[i + 2];\r\n\r\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\r\n\t\t\tpositions[index + 3] = values[i];\r\n\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\tpositions[index + 5] = values[i + 2];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tvar o:number = index/stride - 3;\r\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.updateIndices(indices);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic updateThickness(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar thickness:Array<number>;\r\n\r\n\t\tthis._thickness = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\ti = 0;\r\n\t\t\tj = 0;\r\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\r\n\t\t\tthickness = this._pVertices;\r\n\r\n\t\t\tindex = offset\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyThicknessUpdate();\r\n\r\n\t\tthis._thicknessDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar values:Array<number>\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar colors:Array<number>;\r\n\r\n\t\tthis._startColors = startValues;\r\n\r\n\t\tthis._endColors = endValues;\r\n\r\n\t\t//default to white\r\n\t\tif (this._startColors == null) {\r\n\t\t\tthis._startColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._startColors.length)\r\n\t\t\t\tthis._startColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\tif (this._endColors == null) {\r\n\t\t\tthis._endColors = new Array(this._numSegments*4);\r\n\r\n\t\t\ti = 0;\r\n\t\t\twhile (i < this._endColors.length)\r\n\t\t\t\tthis._endColors[i++] = 1;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tj = 0;\r\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\r\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\r\n\t\tcolors = this._pVertices;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (i < this._startColors.length) {\r\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\r\n\t\t\tcolors[index] = values[i];\r\n\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\tcolors[index + 3] = values[i + 3];\r\n\r\n\t\t\tif (++j == 4) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\ti += 4;\r\n\t\t\t}\r\n\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyColorsUpdate();\r\n\r\n\t\tthis._colorsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._startPositions = null;\r\n\t\tthis._endPositions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._startColors = null;\r\n\t\tthis._endColors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\t\tclone.updateThickness(this._thickness.concat());\r\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyThicknessUpdate();\r\n\t\tthis.notifyColorsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyThicknessUpdate()\r\n\t{\r\n\t\tif (this._thicknessDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._thicknessDirty = true;\r\n\r\n\t\tif (!this._thicknessUpdated)\r\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._thicknessUpdated);\r\n\t}\r\n\r\n\tprivate notifyColorsUpdate()\r\n\t{\r\n\t\tif (this._colorsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._colorsDirty = true;\r\n\r\n\t\tif (!this._colorUpdated)\r\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._colorUpdated);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;","import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;","class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;","/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;","/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends NamedAssetBase\r\n{\r\n\tpublic static VERTEX_DATA:string = \"vertices\";\r\n\r\n\tpublic _pStrideOffsetDirty:boolean = true;\r\n\r\n\tpublic _pIndices:Array<number> /*uint*/;\r\n\tpublic _pVertices:Array<number>;\r\n\r\n\tprivate _numIndices:number;\r\n\tprivate _numTriangles:number;\r\n\tpublic _pNumVertices:number;\r\n\r\n\tpublic _pConcatenateArrays:boolean = true;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _pStride:Object = new Object();\r\n\tpublic _pOffset:Object = new Object();\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSubMeshClass:ISubMeshClass;\r\n\r\n\tpublic get subMeshClass():ISubMeshClass\r\n\t{\r\n\t\treturn this._pSubMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get concatenateArrays():boolean\r\n\t{\r\n\t\treturn this._pConcatenateArrays;\r\n\t}\r\n\r\n\tpublic set concatenateArrays(value:boolean)\r\n\t{\r\n\t\tif (this._pConcatenateArrays == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pConcatenateArrays = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Array<number>\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tthis.updateVertices();\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numTriangles():number\r\n\t{\r\n\t\treturn this._numTriangles;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._pNumVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pConcatenateArrays = concatenatedArrays;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getStride(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pStride[dataType];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getOffset(dataType:string)\r\n\t{\r\n\t\tif (this._pStrideOffsetDirty)\r\n\t\t\tthis._pUpdateStrideOffset();\r\n\r\n\t\treturn this._pOffset[dataType];\r\n\t}\r\n\r\n\tpublic updateVertices()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pIndices = null;\r\n\t\tthis._pVertices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tthis._pIndices = indices;\r\n\t\tthis._numIndices = indices.length;\r\n\r\n\t\tthis._numTriangles = this._numIndices/3;\r\n\r\n\t\tthis.notifyIndicesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends NamedAssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;","import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n","/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static POSITION_DATA:string = \"positions\";\r\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\r\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\r\n\tpublic static UV_DATA:string = \"uvs\";\r\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\r\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\r\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\r\n\r\n\t//TODO - move these to StageGL\r\n\tpublic static POSITION_FORMAT:string = \"float3\";\r\n\tpublic static NORMAL_FORMAT:string = \"float3\";\r\n\tpublic static TANGENT_FORMAT:string = \"float3\";\r\n\tpublic static UV_FORMAT:string = \"float2\";\r\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\r\n\r\n\tprivate _positionsDirty:boolean = true;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\tprivate _vertexNormalsDirty:boolean = true;\r\n\tprivate _vertexTangentsDirty:boolean = true;\r\n\tprivate _uvsDirty:boolean = true;\r\n\tprivate _secondaryUVsDirty:boolean = true;\r\n\tprivate _jointIndicesDirty:boolean = true;\r\n\tprivate _jointWeightsDirty:boolean = true;\r\n\r\n\tprivate _positions:Array<number>;\r\n\tprivate _vertexNormals:Array<number>;\r\n\tprivate _vertexTangents:Array<number>;\r\n\tprivate _uvs:Array<number>;\r\n\tprivate _secondaryUVs:Array<number>;\r\n\tprivate _jointIndices:Array<number>;\r\n\tprivate _jointWeights:Array<number>;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedJointIndices:Array<number>;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\tprivate _numCondensedJoints:number;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _concatenateArrays:boolean = true;\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\tprivate _useFaceWeights:boolean = false;\r\n\r\n\tprivate _faceNormals:Array<number>;\r\n\tprivate _faceTangents:Array<number>;\r\n\tprivate _faceWeights:Array<number>;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\tprivate _positionsUpdated:SubGeometryEvent;\r\n\tprivate _normalsUpdated:SubGeometryEvent;\r\n\tprivate _tangentsUpdated:SubGeometryEvent;\r\n\tprivate _uvsUpdated:SubGeometryEvent;\r\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\r\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\r\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t}\r\n\r\n\tpublic _pUpdateStrideOffset()\r\n\t{\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\r\n\r\n\t\t\t//always have positions\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tvar stride:number = 3;\r\n\r\n\t\t\tif (this._vertexNormals != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._vertexTangents != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\t\tstride += 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._secondaryUVs != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\t\tstride += 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointIndices != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._jointWeights != null) {\r\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\t\t\t\tstride += this._jointsPerVertex;\r\n\t\t\t}\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\r\n\r\n\t\t\tvar len:number = this._pNumVertices*stride;\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t} else {\r\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\r\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\r\n\r\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\r\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\r\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\r\n\t\t}\r\n\r\n\t\tthis._pStrideOffsetDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tif (this._pConcatenateArrays)\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertices():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._pVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexNormals():Array<number>\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\r\n\r\n\t\treturn this._vertexNormals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get vertexTangents():Array<number>\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\r\n\r\n\t\treturn this._vertexTangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Array<number>\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Array<number>\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Array<number>\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.updateUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Array<number>\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\r\n\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\tif (this._useCondensedIndices)\r\n\t\t\treturn this._condensedJointIndices;\r\n\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():Array<number>\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\tthis.updateJointWeights(this._jointWeights);\r\n\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\r\n\t */\r\n\tpublic get useFaceWeights():boolean\r\n\t{\r\n\t\treturn this._useFaceWeights;\r\n\t}\r\n\r\n\tpublic set useFaceWeights(value:boolean)\r\n\t{\r\n\t\tif (this._useFaceWeights == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useFaceWeights = value;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t}\r\n\r\n\tpublic get numCondensedJoints():number\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._numCondensedJoints;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\tthis.updateJointIndices(this._jointIndices);\r\n\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedArrays:boolean)\r\n\t{\r\n\t\tsuper(concatenatedArrays);\r\n\r\n\t\tthis._pSubMeshClass = TriangleSubMesh;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Array<number>\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\tthis.updatePositions(this._positions);\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updatePositions(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tthis._positions = values;\r\n\r\n\t\tif (this._positions == null)\r\n\t\t\tthis._positions = new Array<number>();\r\n\r\n\t\tthis._pNumVertices = this._positions.length/3;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\r\n\r\n\t\t\tif (this._pVertices == null)\r\n\t\t\t\tthis._pVertices = new Array<number>(len);\r\n\t\t\telse if (this._pVertices.length != len)\r\n\t\t\t\tthis._pVertices.length = len;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\t\tpositions = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tpositions[index] = values[i++];\r\n\t\t\t\tpositions[index + 1] = values[i++];\r\n\t\t\t\tpositions[index + 2] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyUVsUpdate()\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\r\n\t\tthis._positionsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic updateVertexNormals(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar normals:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._vertexNormals = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\t\tnormals = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tnormals[index] = values[i++];\r\n\t\t\t\t\tnormals[index + 1] = values[i++];\r\n\t\t\t\t\tnormals[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexNormals == null) {\r\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\t\t//autoderived normals\r\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\r\n\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear normal values\r\n\t\t\tvar lenV:number = normals.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tnormals[index] = 0;\r\n\t\t\t\tnormals[index + 1] = 0;\r\n\t\t\t\tnormals[index + 2] = 0;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\tvar weight:number;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face normals\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\r\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\r\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average normals collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = normals[index];\r\n\t\t\t\tvar vy:number = normals[index + 1];\r\n\t\t\t\tvar vz:number = normals[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnormals[index] = vx*d;\r\n\t\t\t\t\tnormals[index + 1] = vy*d;\r\n\t\t\t\t\tnormals[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyNormalsUpdate();\r\n\r\n\t\tthis._vertexNormalsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic updateVertexTangents(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._vertexTangents = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\t\ttangents = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\ttangents[index] = values[i++];\r\n\t\t\t\t\ttangents[index + 1] = values[i++];\r\n\t\t\t\t\ttangents[index + 2] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._vertexTangents == null) {\r\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\t\t//autoderived tangents\r\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\r\n\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//clear tangent values\r\n\t\t\tvar lenV:number = tangents.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\ttangents[index] = 0;\r\n\t\t\t\ttangents[index + 1] = 0;\r\n\t\t\t\ttangents[index + 2] = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar weight:number;\r\n\t\t\tvar f1:number = 0;\r\n\t\t\tvar f2:number = 1;\r\n\t\t\tvar f3:number = 2;\r\n\r\n\t\t\ti = 0;\r\n\r\n\t\t\t//collect face tangents\r\n\t\t\tvar lenI:number = this._pIndices.length;\r\n\t\t\twhile (i < lenI) {\r\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\r\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\r\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\r\n\t\t\t\tf1 += 3;\r\n\t\t\t\tf2 += 3;\r\n\t\t\t\tf3 += 3;\r\n\t\t\t}\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\r\n\t\t\t//average tangents collections\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tvar vx:number = tangents[index];\r\n\t\t\t\tvar vy:number = tangents[index + 1];\r\n\t\t\t\tvar vz:number = tangents[index + 2];\r\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\r\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttangents[index] = vx*d;\r\n\t\t\t\t\ttangents[index + 1] = vy*d;\r\n\t\t\t\t\ttangents[index + 2] = vz*d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis._vertexTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic updateUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis._uvs = values;\r\n\r\n\t\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\t\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (this._uvs == null) {\r\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\r\n\r\n\t\t\t\tif (this._concatenateArrays)\r\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\r\n\t\t\t}\r\n\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\r\n\r\n\t\t\t//autoderived uvs\r\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tvar uvIdx:number = 0;\r\n\r\n\t\t\t//clear uv values\r\n\t\t\tvar lenV:number = uvs.length;\r\n\t\t\twhile (index < lenV) {\r\n\t\t\t\tif (this._concatenateArrays) {\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\r\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuvs[index] = uvIdx*.5;\r\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (++uvIdx == 3)\r\n\t\t\t\t\tuvIdx = 0;\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyTangentsUpdate();\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\r\n\t\tthis._uvsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic updateSecondaryUVs(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._secondaryUVs = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tuvs = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tuvs[index] = values[i++];\r\n\t\t\t\tuvs[index + 1] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\r\n\t\tthis._secondaryUVsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic updateJointIndices(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointIndices:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointIndices = values;\r\n\r\n\t\tif (values != null) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tj = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tif (!this._concatenateArrays)\r\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\r\n\t\t\t\t\t\toldIndex = values[i++];\r\n\r\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\r\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t\tthis._numCondensedJoints = newIndex;\r\n\t\t\t} else if (this._concatenateArrays) {\r\n\r\n\t\t\t\ti = 0;\r\n\t\t\t\tindex = offset;\r\n\t\t\t\tjointIndices = this._pVertices;\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\r\n\t\tthis._jointIndicesDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic updateJointWeights(values:Array<number>)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar jointWeights:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\r\n\t\t\tthis._pNotifyVerticesUpdate();\r\n\r\n\t\tthis._jointWeights = values;\r\n\r\n\t\tif (values != null && this._concatenateArrays) {\r\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\t\ti = 0;\r\n\t\t\tindex = offset;\r\n\t\t\tjointWeights = this._pVertices;\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile (j < this._jointsPerVertex)\r\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\r\n\t\tthis._jointWeightsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._vertexNormals = null;\r\n\t\tthis._vertexTangents = null;\r\n\t\tthis._uvs = null;\r\n\t\tthis._secondaryUVs = null;\r\n\t\tthis._jointIndices = null;\r\n\t\tthis._jointWeights = null;\r\n\r\n\t\tthis._faceNormals = null;\r\n\t\tthis._faceWeights = null;\r\n\t\tthis._faceTangents = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic updateIndices(indices:Array<number>)\r\n\t{\r\n\t\tsuper.updateIndices(indices);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\r\n\t\tclone.updateIndices(this._pIndices.concat());\r\n\t\tclone.updatePositions(this._positions.concat());\r\n\r\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\r\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexNormals(null);\r\n\r\n\t\tif (this._uvs && !this._autoDeriveUVs)\r\n\t\t\tclone.updateUVs(this._uvs.concat());\r\n\t\telse\r\n\t\t\tclone.updateUVs(null);\r\n\r\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\r\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\r\n\t\telse\r\n\t\t\tclone.updateVertexTangents(null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tuvs = this._uvs;\r\n\r\n\t\tvar ratioU:number = scaleU/this._scaleU;\r\n\t\tvar ratioV:number = scaleV/this._scaleV;\r\n\r\n\t\tthis._scaleU = scaleU;\r\n\t\tthis._scaleV = scaleV;\r\n\r\n\t\tvar len:number = uvs.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 2;\r\n\r\n\t\tindex = offset;\r\n\r\n\t\twhile (index < len) {\r\n\t\t\tuvs[index] *= ratioU;\r\n\t\t\tuvs[index + 1] *= ratioV;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyUVsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\t\tvar positions:Array<number>;\r\n\r\n\t\tpositions = this._positions;\r\n\r\n\t\tvar len:number = positions.length;\r\n\r\n\t\toffset = 0;\r\n\t\tstride = 3;\r\n\r\n\t\ti = 0;\r\n\t\tindex = offset;\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[index] *= scale;\r\n\t\t\tpositions[index + 1] *= scale;\r\n\t\t\tpositions[index + 2] *= scale;\r\n\r\n\t\t\ti += 3;\r\n\t\t\tindex += stride;\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tif (this._concatenateArrays) {\r\n\t\t\tpositions = this._pVertices;\r\n\t\t\tnormals = this._pVertices;\r\n\t\t\ttangents = this._pVertices;\r\n\t\t} else {\r\n\t\t\tpositions = this._positions;\r\n\t\t\tnormals = this._vertexNormals;\r\n\t\t\ttangents = this._vertexTangents;\r\n\t\t}\r\n\r\n\t\tvar len:number = this._positions.length/3;\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\r\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\r\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (bakeNormals || bakeTangents) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\r\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\r\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\r\n\t\t\t// bake position\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += vStride;\r\n\r\n\t\t\t// bake normal\r\n\t\t\tif (bakeNormals) {\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += nStride;\r\n\t\t\t}\r\n\r\n\t\t\t// bake tangent\r\n\t\t\tif (bakeTangents) {\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tStride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions\r\n\t\tvar uvs:Array<number> = this._uvs;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceTangents == null)\r\n\t\t\tthis._faceTangents = new Array<number>(len);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex1 = this._pIndices[i];\r\n\t\t\tindex2 = this._pIndices[i + 1];\r\n\t\t\tindex3 = this._pIndices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*2 + 1];\r\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\r\n\r\n\t\t\tvi = index1*3;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*3;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*3;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tthis._faceTangents[i++] = denom*cx;\r\n\t\t\tthis._faceTangents[i++] = denom*cy;\r\n\t\t\tthis._faceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar index:number;\r\n\t\tvar offset:number;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tvar positions:Array<number> = this._positions;\r\n\r\n\t\tvar len:number = this._pIndices.length;\r\n\r\n\t\tif (this._faceNormals == null)\r\n\t\t\tthis._faceNormals = new Array<number>(len);\r\n\r\n\t\tif (this._useFaceWeights && this._faceWeights == null)\r\n\t\t\tthis._faceWeights = new Array<number>(len/3);\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = this._pIndices[i++]*3;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tif (this._useFaceWeights) {\r\n\t\t\t\tvar w:number = d*10000;\r\n\r\n\t\t\t\tif (w < 1)\r\n\t\t\t\t\tw = 1;\r\n\r\n\t\t\t\tthis._faceWeights[k++] = w;\r\n\t\t\t}\r\n\r\n\t\t\td = 1/d;\r\n\r\n\t\t\tthis._faceNormals[j++] = cx*d;\r\n\t\t\tthis._faceNormals[j++] = cy*d;\r\n\t\t\tthis._faceNormals[j++] = cz*d;\r\n\t\t}\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _pNotifyVerticesUpdate()\r\n\t{\r\n\t\tthis._pStrideOffsetDirty = true;\r\n\r\n\t\tthis.notifyPositionsUpdate();\r\n\t\tthis.notifyNormalsUpdate();\r\n\t\tthis.notifyTangentsUpdate();\r\n\t\tthis.notifyUVsUpdate();\r\n\t\tthis.notifySecondaryUVsUpdate();\r\n\t\tthis.notifyJointIndicesUpdate();\r\n\t\tthis.notifyJointWeightsUpdate();\r\n\t}\r\n\r\n\tprivate notifyPositionsUpdate()\r\n\t{\r\n\t\tif (this._positionsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionsDirty = true;\r\n\r\n\t\tif (!this._positionsUpdated)\r\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._positionsUpdated);\r\n\t}\r\n\r\n\tprivate notifyNormalsUpdate()\r\n\t{\r\n\t\tif (this._vertexNormalsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexNormalsDirty = true;\r\n\r\n\t\tif (!this._normalsUpdated)\r\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._normalsUpdated);\r\n\t}\r\n\r\n\tprivate notifyTangentsUpdate()\r\n\t{\r\n\t\tif (this._vertexTangentsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._vertexTangentsDirty = true;\r\n\r\n\t\tif (!this._tangentsUpdated)\r\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._tangentsUpdated);\r\n\t}\r\n\r\n\tprivate notifyUVsUpdate()\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._uvsDirty = true;\r\n\r\n\t\tif (!this._uvsUpdated)\r\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._uvsUpdated);\r\n\t}\r\n\r\n\tprivate notifySecondaryUVsUpdate()\r\n\t{\r\n\t\tif (this._secondaryUVsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._secondaryUVsDirty = true;\r\n\r\n\t\tif (!this._secondaryUVsUpdated)\r\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointIndicesUpdate()\r\n\t{\r\n\t\tif (this._jointIndicesDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointIndicesDirty = true;\r\n\r\n\t\tif (!this._jointIndicesUpdated)\r\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyJointWeightsUpdate()\r\n\t{\r\n\t\tif (this._jointWeightsDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointWeightsDirty = true;\r\n\r\n\t\tif (!this._jointWeightsUpdated)\r\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\r\n\r\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\n\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyTriangleSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;","import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;","import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;","/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;","import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CONTAINER;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;","import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;","import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;","import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;","class ContextMode\r\n{\r\n\tstatic AUTO:string = \"auto\";\r\n\tstatic WEBGL:string = \"webgl\";\r\n\tstatic FLASH:string = \"flash\";\r\n\tstatic NATIVE:string = \"native\";\r\n}\r\n\r\nexport = ContextMode;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its BitmapData reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same BitmapData object,\r\n * multiple display objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.BILLBOARD;\r\n\t}\r\n\r\n\t/**\r\n\t * The BitmapData object being referenced.\r\n\t */\r\n\tpublic bitmapData:BitmapData; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardWidth;\r\n\t\tthis._pBoxBounds.height = this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyBillboard(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.CAMERA;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:CubeTextureBase;\r\n\tprivate _specularMap:CubeTextureBase;\r\n\r\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LINE_SEGMENT;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSegment(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;","﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MESH;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tlen = this.numChildren;\r\n\t\tvar obj:any;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tclone.animator = this._animator.clone();\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;","import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\r\n{\r\n\tprivate _cubeMap:CubeTextureBase;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\t\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:CubeTextureBase)\r\n\t{\r\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\t\tthis._pInvalidateRenderObject();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.SKYBOX;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool)\r\n\t{\r\n\t\treturn renderablePool.getSkyboxRenderObject(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends DisplayObject\r\n{\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t * \r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = TextField;","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\r\n\r\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\r\n\r\n\tprivate _renderObjectOwner:IRenderObjectOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderObjectOwner():IRenderObjectOwner\r\n\t{\r\n\t\treturn this._renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass StageEvent extends Event\r\n{\r\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\r\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\r\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = StageEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\tprivate _dataType:string;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, dataType:string = \"\")\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._dataType = dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * The data type of the vertex data.\r\n\t */\r\n\tpublic get dataType():string\r\n\t{\r\n\t\treturn this._dataType;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapData:BitmapData;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:BitmapTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.assetType == AssetType.LINE_SUB_MESH) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapData():BitmapData\r\n\t{\r\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = BasicMaterial;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass CSSMaterialBase extends MaterialBase\r\n{\r\n\tprivate _imageElement:HTMLImageElement;\r\n\tprivate _imageStyle:MSStyleCSSProperties;\r\n\r\n\r\n\tpublic get imageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._imageElement;\r\n\t}\r\n\r\n\tpublic get imageStyle():MSStyleCSSProperties\r\n\t{\r\n\t\treturn this._imageStyle;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tif (value instanceof ImageTexture) {\r\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\r\n\r\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\r\n\t\t\tnode.type = \"text/css\";\r\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\r\n\r\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\r\n\r\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\r\n\t\t\tstyle.backgroundSize = \"100% 100%\";\r\n\t\t\tstyle.position = \"absolute\";\r\n\t\t\tstyle.width = this._imageElement.width + \"px\";\r\n\t\t\tstyle.height = this._imageElement.height + \"px\";\r\n\t\t\tstyle.transformOrigin\r\n\t\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t\tthis._pHeight = this._imageElement.height;\r\n\t\t\tthis._pWidth = this._imageElement.width;\r\n\r\n\t\t\tthis._pNotifySizeChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis.texture = texture;\r\n\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.repeat = repeat;\r\n\t}\r\n}\r\n\r\nexport = CSSMaterialBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = CurveMaterial;","/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;","import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/base/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends NamedAssetBase implements IRenderObjectOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:Texture2DBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.MATERIAL;;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tthis._pHeight = this._pTexture.height;\r\n\t\tthis._pWidth = this._pTexture.width;\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends NamedAssetBase implements IAsset\r\n{\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.LIGHT_PICKER;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\tthrow new PartialImplementationError();\r\n\t\t/*\r\n\t\t return new RenderCubeTexture( this._depthMapSize );\r\n\t\t */\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tprivate _depthMap:TextureProxyBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tprivate _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureProxyBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureProxyBase\r\n\t{\r\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;","/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSBillboardRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"billboard\";\r\n\r\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + billboard.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSBillboardRenderable;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSLineSegmentRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"lineSegment\";\r\n\r\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + lineSegment.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSLineSegmentRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSRenderableBase implements IRenderable\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _pool:IRenderablePool;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:CSSRenderableBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic materialId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic htmlElement:HTMLElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param material\r\n\t * @param animator\r\n\t */\r\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = CSSRenderableBase;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n\r\n/**\r\n * @class away.pool.CSSSkyboxRenderable\r\n */\r\nclass CSSSkyboxRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\r\n\t{\r\n\t\tsuper(pool, skyBox, skyBox);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\t\tvar img:HTMLDivElement;\r\n\r\n\t\t//create the six images that make up the skybox\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + skyBox.id;\r\n\t}\r\n}\r\n\r\nexport = CSSSkyboxRenderable;","import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity)\r\n\t{\r\n\t\tentity._iRemoveEntityNode(this._entityNodePool[entity.id]);\r\n\r\n\t\tthis._entityNodePool[entity.id] = null;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends NamedAssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AssetType.PRIMITIVE_PREFAB;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\n\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\n\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\r\n{\r\n\tprivate _container:HTMLDivElement;\r\n\tprivate _context:HTMLDivElement;\r\n\tprivate _contextStyle:MSStyleCSSProperties;\r\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\r\n\t\r\n\tprivate _activeMaterial:CSSMaterialBase;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tprivate _transform:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Creates a new CSSDefaultRenderer object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//create container for the renderer\r\n\t\tthis._container = document.createElement(\"div\");\r\n\t\tthis._container.style.overflow = \"hidden\";\r\n\t\tthis._container.style.position = \"absolute\";\r\n\t\t\r\n\t\t//add container to body\r\n\t\tdocument.body.appendChild(this._container);\r\n\r\n\t\t//create conxtext for the renderer\r\n\t\tthis._context = document.createElement(\"div\");\r\n\t\tthis._contextStyle = this._context.style;\r\n\t\tthis._contextStyle.position = \"absolute\";\r\n\t\tthis._contextStyle.transformStyle\r\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\t\tthis._contextStyle.transformOrigin\r\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t//add context to container\r\n\t\tthis._container.appendChild(this._context);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entityCollector\r\n\t */\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tthis._iRender(<EntityCollector> entityCollector);\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n//\t\t\tif (entityCollector.skyBox) {\r\n//\t\t\t\tif (this._activeMaterial)\r\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n//\r\n//\t\t\t\tthis._activeMaterial = null;\r\n//\r\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\r\n//\t\t\t\tthis.drawSkybox(entityCollector);\r\n//\r\n//\t\t\t}\r\n//\r\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\r\n\r\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\r\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\r\n\t\t}\r\n\r\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\r\n\r\n//\t\t\tif (this._activeMaterial)\r\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n\r\n\t\tthis._activeMaterial = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the backbuffer properties.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\tthis._container.style.width = this._width + \"px\";\r\n\t\tthis._container.style.height = this._height + \"px\";\r\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\r\n\r\n\t\t//update context matrix\r\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\r\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\r\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\r\n\r\n\t\t//update context tranform\r\n\t\tthis._contextStyle.transform\r\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform\"]\r\n\t\t\t= this._contextStyle[\"-o-transform\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\r\n\r\n\t\twhile (item) {\r\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\r\n\r\n\t\t\t//serialise transform and apply to html element\r\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\r\n\t\t\tthis._transform.append(viewProjection);\r\n\r\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\r\n\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\r\n\r\n\t\t\tstyle.transformStyle\r\n\t\t\t\t= style[\"-webkit-transform-style\"]\r\n\t\t\t\t= style[\"-moz-transform-style\"]\r\n\t\t\t\t= style[\"-o-transform-style\"]\r\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\r\n\t\t\t//check if child requires adding to the view\r\n\t\t\tif (!this._context.contains(item.htmlElement))\r\n\t\t\t\tthis._context.appendChild(item.htmlElement);\r\n\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n//\t\t\tvar numPasses:number;\r\n//\t\t\tvar j:number;\r\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\r\n//\t\t\tvar item2:away.render.CSSRenderableBase;\r\n//\r\n//\t\t\twhile (item) {\r\n//\t\t\t\tthis._activeMaterial = item.material;\r\n//\r\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\r\n//\r\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\r\n//\r\n//\t\t\t\tj = 0;\r\n//\r\n//\t\t\t\tdo {\r\n//\t\t\t\t\titem2 = item;\r\n//\r\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\r\n//\r\n//\t\t\t\t\tif ((rttMask & which) != 0) {\r\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\r\n//\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\r\n//\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\r\n//\r\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\r\n//\r\n//\t\t\t\t\t} else {\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\r\n//\t\t\t\t\t}\r\n//\t\t\t\t} while (++j < numPasses);\r\n//\r\n//\t\t\t\titem = item2;\r\n//\t\t\t}\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new CSSEntityCollector();\r\n\t}\r\n}\r\n\r\nexport = CSSDefaultRenderer;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\r\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass CSSRendererBase extends EventDispatcher\r\n{\r\n\tprivate _billboardRenderablePool:IRenderablePool;\r\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tprivate _shareContext:boolean = false;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _depthTextureInvalid:boolean = true;\r\n\r\n\tpublic _renderableHead:CSSRenderableBase;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorRect:Rectangle = new Rectangle();\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the StageGL size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._scissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._scissorRect.width = value;\r\n\t\tthis._viewPort.width = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._scissorRect.height = value;\r\n\t\tthis._viewPort.height = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\r\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\r\n\r\n\t\tthis._viewPort = new Rectangle();\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tif (!entityCollector.entityHead)\r\n\t\t\treturn;\r\n\r\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\r\n\t}\r\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\r\n\t{\r\n\t\t////reset head values\r\n\t\t//this._renderableHead = null;\r\n\t\t//\r\n\t\t////grab entity head\r\n\t\t//var item:EntityListItem = entityCollector.entityHead;\r\n\t\t//\r\n\t\t////set temp values for entry point and camera forward vector\r\n\t\t//this._pCamera = entityCollector.camera;\r\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\r\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\r\n\t\t//\r\n\t\t////iterate through all entities\r\n\t\t//while (item) {\r\n\t\t//\t//item.entity._iCollectRenderables(this);\r\n\t\t//\titem = item.next;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\r\n\t{\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of dom objects to the target.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\r\n\t */\r\n\tpublic pDraw(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param billboard\r\n\t */\r\n\tpublic applyBillboard(billboard:Billboard)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param skybox\r\n\t */\r\n\tpublic applySkybox(skybox:Skybox)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param triangleSubMesh\r\n\t */\r\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @private\r\n\t */\r\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\r\n\t{\r\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\tif (material) {\r\n\t\t\t//set ids for faster referencing\r\n\t\t\trenderable.materialId = material._iMaterialId;\r\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\r\n\t\t\trenderable.cascaded = false;\r\n\r\n\t\t\t// project onto camera's z-axis\r\n\t\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\r\n\r\n\t\t\t//store reference to scene transform\r\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\t\t//store reference to next item in list\r\n\t\t\trenderable.next = this._renderableHead;\r\n\t\t\tthis._renderableHead = renderable;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\tthis._viewPort.y = this._globalPos.y;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CSSRendererBase;","import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderObjectId;\r\n\t\t\t\tvar mb:number = headB.renderObjectId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;","/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;","/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;","/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;","/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;","/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;","/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat\r\n{\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\tpublic align:string;\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\tpublic color:boolean;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses\r\n\t * Times New Roman font for the text.\r\n\t */\r\n\tpublic font:string;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\tpublic target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tthis.font = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.target = target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;","/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;","/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;","import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static bitmapData(data:any):BitmapData\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapData)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof ImageTexture)\r\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\r\n\r\n\t\tif (data instanceof HTMLImageElement) {\r\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\r\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\r\n\t\t\tbitmapData.draw(imageElement)\r\n\t\t\treturn bitmapData;\r\n\t\t}\r\n\r\n\t\t//            if (data is DisplayObject) {\r\n\t\t//                var ds:DisplayObject = data as DisplayObject;\r\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\r\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\r\n\t\t//                mat.tx = 0;\r\n\t\t//                mat.ty = 0;\r\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\r\n\t\t//                return bmd;\r\n\t\t//            }\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):BitmapTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\r\n\t\t\treturn new BitmapTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"],"sourceRoot":"./"}
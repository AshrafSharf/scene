{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "CurveSubGeometry",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "set",
    "value",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubGeometry",
    "LineSubMesh",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubGeometry",
    "TriangleSubMesh",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "removeSubGeometry",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "k",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_colorTransform",
    "alphaMultiplier",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this._pScaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._pScaleZ = val/this.getBox().depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this._pScaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._pScaleY = val/this.getBox().height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this._pScaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._pScaleX = val/this.getBox().width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\tif (this._width != null) {\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._height != null) {\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\n\n\t\t\tif (this._depth != null) {\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\n\t\t\t\tthis.invalidateScale();\n\t\t\t}\n\t\t}\n\n\n\t\treturn this._pBoxBounds;\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid) {\n\t\t\tthis._pUpdateSphereBounds();\n\t\t}\n\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tif (this._listenToSceneChanged)\n\t\t\t\tthis.notifySceneChange();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (!this._scenechanged)\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scenechanged);\n}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\t\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\t\t\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tprivate _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n        clone._iMasks = this._iMasks;\n        clone._iMaskID = this._iMaskID;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        var obj:any;\n\n        for (i = 0; i < len; ++i) {\n            obj = this.getChildAt(i).clone();\n            clone.addChild(<DisplayObjectContainer> obj);\n        }\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._textFormat==null){\n\t\t\treturn;\n\t\t}\n\t\tif(this._text==\"\"){\n\t\t\treturn;\n\t\t}\n\t\tvar indices:Array<number> = new Array<number>();\n\t\tvar positions:Array<number> = new Array<number>();\n\t\tvar curveData:Array<number> = new Array<number>();\n\t\tvar uvs:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar tri_idx_offset:number=0;\n\t\tvar tri_cnt:number=0;\n\t\tvar x_offset:number=0;\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tfor (var i = 0; i < this.text.length; i++) {\n\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\n\t\t\tif(this_char!= null) {\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\ttri_cnt = 0;\n\t\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\n\t\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\n\t\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\n\t\t\t\t\t\tindices.push(indices2[v] + tri_idx_offset);\n\t\t\t\t\t\ttri_cnt++;\n\t\t\t\t\t}\n\t\t\t\t\ttri_idx_offset += tri_cnt;\n\t\t\t\t\tfor (v = 0; v < positions2.length / 3; v++) {\n\t\t\t\t\t\tpositions.push((positions2[v * 3] * char_scale) + x_offset);\n\t\t\t\t\t\tpositions.push((positions2[v * 3 + 1] * char_scale) + y_offset);\n\t\t\t\t\t\tpositions.push(positions2[v * 3 + 2]);\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2]);\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2 + 1]);\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[0]);\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[1]);\n\t\t\t\t\t}\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\tvar kerning_value:number=0;\n\t\t\t\t\tif(prev_char!=null){\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t}\n\t\t}\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\n\t\tcurve_sub_geom.updateIndices(indices);\n\t\tcurve_sub_geom.updatePositions(positions);\n\t\tcurve_sub_geom.updateCurves(curveData);\n\t\tcurve_sub_geom.updateUVs(uvs);\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n        this._iCopyToMesh(clone);\n        clone.textFormat = clone.textFormat;\n        clone.textColor = clone.textColor;\n        clone.text = clone.text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\n\tprivate static _defaultLineMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:IEntity;\n\tprivate _partition:Partition;\n\tprivate _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Array<number> = this.subgeom.positions;\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "CurveSubGeometry",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "set",
    "value",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubGeometry",
    "LineSubMesh",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubGeometry",
    "TriangleSubMesh",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "ColorTransform",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "alphaMultiplier",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "removeSubGeometry",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "k",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gCAAA,SAAAjB,EAAAkB,EAAAJ,SCEMK,8CAA8C,SAASnB,EAAQkB,EAAOJ,SAEtEM,0CAA0C,SAASpB,EAAQkB,EAAOJ,SAElEO,wDAAwD,SAASrB,EAAQkB,EAAOJ,GACtF,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCVtB,IAAOG,GAAS/B,EAAc,oCDgB9B,ICXMgC,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAAlB,KAAAQ,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cDcJM,ICdP,WAEC,MAAOb,MAAKc,cDeNC,WAAY,KACZC,aAAc,MCFdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDMJM,ICNP,WAEC,MAAOJ,GAAkBS,WDOnBH,WAAY,KACZC,aAAc,MCrCPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmChCb,GAA2BJ,QAAlBkB,IDWNU,oCAAoCC,YAAYC,yCAAyC,SAAS5C,EAAQkB,EAAOJ,GAIpH,GErDM+B,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEA3B,GAAuBJ,QAAd+B,OFuDHG,wCAAwC,SAAShD,EAAQkB,EAAOJ,GACtE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GG5EtB,IAAOqB,GAAgBjD,EAAa,wCAIpC,IAAOkD,GAAWlD,EAAc,sCHqFhC,IGvEMmD,GAAY,SAAAlB,GAASX,EAArB6B,EAAYlB,EA8BjB,SA9BKkB,GA8BOC,EAA8BC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1DrB,EAAAlB,KAAAQ,KAEAA,MAAKgC,aAAeF,CACpB9B,MAAKiC,aAAeJ,CACpB7B,MAAK+B,SAAWA,EAzBjBpB,OAAAC,eAAWgB,EAAArB,UAAA,aH+EJM,IG/EP,WAEC,MAAOe,GAAaV,WHgFdH,WAAY,KACZC,aAAc,MG3ErBL,QAAAC,eAAWgB,EAAArB,UAAA,eHiFJM,IGjFP,WAEC,MAAOb,MAAKiC,cHkFNlB,WAAY,KACZC,aAAc,MG9DdY,GAAArB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,MA1CA4B,GAAAV,UAAmB,sBAEnBU,GAAAM,WAAyBR,CA0CxC,OAAAE,IA9C2BD,EAgDLhC,GAAAJ,QAAbqC,IHsENO,wCAAwCf,UAAUgB,sCAAsC,wCAAwCC,yCAAyC,SAAS5D,EAAQkB,EAAOJ,GACpM,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GI5ItB,IAAOiC,GAAG7D,EAAiB,2BAC3B,IAAO8D,GAAM9D,EAAgB,8BAC7B,IAAO+D,GAAU/D,EAAe,kCAChC,IAAOgE,GAAQhE,EAAgB,gCAC/B,IAAOiE,GAAajE,EAAc,qCAClC,IAAOkE,GAAKlE,EAAgB,6BAE5B,IAAOmE,GAAQnE,EAAgB,gCAC/B,IAAO+B,GAAS/B,EAAe,oCAC/B,IAAOoE,GAAmBpE,EAAa,6CAKvC,IAAO6C,GAAa7C,EAAc,wCAElC,IAAOqE,GAAerE,EAAc,0CAEpC,IAAOsE,GAAStE,EAAe,oCAI/B,IAAOuE,GAAkBvE,EAAa,6CAGtC,IAAOwE,GAAkBxE,EAAa,+CACtC,IAAOyE,GAAUzE,EAAe,uCJoQhC,IIhIM0E,GAAa,SAAAzC,GAASX,EAAtBoD,EAAazC,EAkoClB,SAloCKyC,KAooCJzC,EAAAlB,KAAAQ,KA5nCOA,MAAAoD,kBAA4B,IAE5BpD,MAAAqD,qBAA+B,IAMhCrD,MAAAsD,iBAA4B,GAAIb,EAChCzC,MAAAuD,sBAAgC,IAE7BvD,MAAAwD,UAAmB,CACnBxD,MAAAyD,QAA0B,IAQ5BzD,MAAA0D,UAAqB,GAAIjB,EACzBzC,MAAA2D,eAAyB,IAEzB3D,MAAA4D,uBAAkC,GAAInB,EACtCzC,MAAA6D,4BAAsC,IACtC7D,MAAA8D,eAA0B,GAAIlB,EAC9B5C,MAAA+D,oBAA8B,IAC9B/D,MAAAgE,oBAA8B,IAC/BhE,MAAAiE,qBAA+B,IAC9BjE,MAAAkE,sBAAgC,IACjClE,MAAAmE,uBAAiC,IAIhCnE,MAAAoE,eAAyB,IACzBpE,MAAAqE,eAAyB,IACzBrE,MAAAsE,YAAsB,IAMtBtE,MAAAuE,WAAoB,CACpBvE,MAAAwE,WAAoB,CACpBxE,MAAAyE,WAAoB,CACpBzE,MAAA0E,QAAmB,GAAI9B,EACvB5C,MAAA2E,OAAkB,GAAIlC,EAKtBzC,MAAA4E,SAAkB,CAMnB5E,MAAA6E,SAAkB,CAClB7E,MAAA8E,SAAkB,CAClB9E,MAAA+E,SAAkB,CACjB/E,MAAAgF,GAAY,CACZhF,MAAAiF,GAAY,CACZjF,MAAAkF,GAAY,CACZlF,MAAAmF,OAAkB,GAAIvC,EACtB5C,MAAAoF,YAAuB,GAAIxC,EAC3B5C,MAAAqF,mBAA8B,GAAI5C,EAClCzC,MAAAsF,WAAqB,IACrBtF,MAAAuF,YAAsB,IACtBvF,MAAAwF,KAAgB,GAAI5C,EACpB5C,MAAAyF,KAAgB,GAAI7C,EACpB5C,MAAA0F,KAAgB,GAAI9C,EAGrB5C,MAAA2F,kBAA4B,KAU5B3F,MAAA4F,cAAmC,GAAIC,MACtC7F,MAAA8F,aAAiC,GAAID,MAOtC7F,MAAA+F,cAAuBzE,EAAcC,kBAwHrCvB,MAAAgG,aAAuB,IAiWvBhG,MAAAiG,gBAAyBnD,EAAgBoD,OA6kB/ClG,MAAKmG,qBAAuB,GAAIN,OAAgB,EAEhD7F,MAAKmG,qBAAqB,GAAKnG,KAAKwF,IACpCxF,MAAKmG,qBAAqB,GAAKnG,KAAKyF,IACpCzF,MAAKmG,qBAAqB,GAAKnG,KAAK0F,IAGpC1F,MAAKoG,WAAa,GAAIrD,GAAU/C,KAEhCA,MAAK0D,UAAU2C,UAEfrG,MAAK2E,OAAO2B,YAAY,GAAI,EAAG,GA1gChC3F,OAAAC,eAAWuC,EAAA5C,UAAA,cJkEJM,IIlEP,WAEC,MAAOb,MAAKuG,aJmENC,IIhEP,SAAsBC,GAErB,GAAIzG,KAAKuG,aAAeE,EACvB,MAEDzG,MAAKuG,YAAcE,CAEnBzG,MAAK0G,oBAEL,IAAIC,GAAa3G,KAAK8F,aAAarG,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAK8F,aAAa5G,GAAG0H,gBJ8DhB7F,WAAY,KACZC,aAAc,MIcrBL,QAAAC,eAAWuC,EAAA5C,UAAA,SJDJM,IICP,WAEC,MAAOb,MAAK6G,SAASC,MAAM9G,KAAK+E,UJA1ByB,IIGP,SAAiBO,GAEhB,GAAI/G,KAAKgH,QAAUD,EAClB,MAED/G,MAAKgH,OAASD,CAEd/G,MAAK+E,SAAWgC,EAAI/G,KAAK6G,SAASC,KAElC9G,MAAKiH,mBJLClG,WAAY,KACZC,aAAc,MIUrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJJJM,IIIP,WAECb,KAAK0E,QAAQwC,EAAIlH,KAAKuE,WAAW/B,EAAW2E,kBAC5CnH,MAAK0E,QAAQ0C,EAAIpH,KAAKwE,WAAWhC,EAAW2E,kBAC5CnH,MAAK0E,QAAQ2C,EAAIrH,KAAKyE,WAAWjC,EAAW2E,kBAE5C,OAAOnH,MAAK0E,SJJN8B,IIOP,SAAkBC,GAEjBzG,KAAKuE,WAAakC,EAAMS,EAAE1E,EAAW8E,kBACrCtH,MAAKwE,WAAaiC,EAAMW,EAAE5E,EAAW8E,kBACrCtH,MAAKyE,WAAagC,EAAMY,EAAE7E,EAAW8E,kBAErCtH,MAAKuH,sBJPCxG,WAAY,KACZC,aAAc,MIyGrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJZJM,IIYP,WAEC,MAAOb,MAAK6G,SAASW,OAAOxH,KAAK8E,UJX3B0B,IIcP,SAAkBO,GAEjB,GAAI/G,KAAKyH,SAAWV,EACnB,MAED/G,MAAKyH,QAAUV,CAEf/G,MAAK8E,SAAWiC,EAAI/G,KAAK6G,SAASW,MAElCxH,MAAKiH,mBJhBClG,WAAY,KACZC,aAAc,MI0BrBL,QAAAC,eAAWuC,EAAA5C,UAAA,SJfJM,IIeP,WAEC,GAAIb,KAAK0H,SACR,MAAO1H,MAAK0H,SAASC,cAAc3H,KAEpC,OAAO,IJfDe,WAAY,KACZC,aAAc,MIoBrBL,QAAAC,eAAWuC,EAAA5C,UAAA,yBJdJM,IIcP,WAEC,GAAIb,KAAK6D,4BAA6B,CACrC7D,KAAK4D,uBAAuBgE,SAAS5H,KAAK6H,eAC1C7H,MAAK4D,uBAAuBkE,QAC5B9H,MAAK6D,4BAA8B,MAEpC,MAAO7D,MAAK4D,wBJbN7C,WAAY,KACZC,aAAc,MIkBrBL,QAAAC,eAAWuC,EAAA5C,UAAA,mBJZJM,IIYP,WAEC,MAAOb,MAAK2F,mBJXNa,IIcP,SAA2BC,GAE1B,GAAIzG,KAAK2F,mBAAqBc,EAC7B,MAEDzG,MAAK2F,kBAAoBc,CAEzB,IAAIA,EAAO,CACVzG,KAAKsD,iBAAiB+C,UACtBrG,MAAK8D,eAAeiE,MAAM,EAAG,EAAG,GAGjC/H,KAAKgI,6BJhBCjH,WAAY,KACZC,aAAc,MIqBrBL,QAAAC,eAAWuC,EAAA5C,UAAA,YJfJM,IIeP,WAEC,MAAOb,MAAKiI,YJdNlH,WAAY,KACZC,aAAc,MI6BrBL,QAAAC,eAAWuC,EAAA5C,UAAA,cJbJM,IIaP,WAEC,MAAOb,MAAKkI,aJZNnH,WAAY,KACZC,aAAc,MI+DrBL,QAAAC,eAAWuC,EAAA5C,UAAA,gBJ5CJM,II4CP,WAEC,MAAOb,MAAKkE,uBJ3CNsC,II8CP,SAAwBC,GAEvB,GAAIzG,KAAKkE,uBAAyBuC,EACjC,MAEDzG,MAAKkE,sBAAwBuC,CAE7BzG,MAAKmI,6BAA6BnI,KAAK0H,SAAU1H,KAAK0H,SAASU,cAAgB,OJ/CzErH,WAAY,KACZC,aAAc,MIyDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJ/CJM,II+CP,WAEC,MAAOb,MAAKqI,SJ9CNtH,WAAY,KACZC,aAAc,MIuDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJ7CJM,II6CP,WAEC,MAAOb,MAAKsI,SJ5CNvH,WAAY,KACZC,aAAc,MIwDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,QJ3CJM,II2CP,WAEO,MAAOb,MAAKuI,QJ1CZ/B,II6CJ,SAAgBC,GAEZzG,KAAKuI,OAAS9B,GJ5Cd1F,WAAY,KACZC,aAAc,MIiErBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJhDJM,IIgDP,WAEC,MAAOb,MAAK0H,UJ/CN3G,WAAY,KACZC,aAAc,MIoDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,aJ9CJM,II8CP,WAEC,MAAOb,MAAKwI,oBJ7CNhC,IIgDP,SAAqBC,GAEpB,GAAIzG,KAAKwI,oBAAsB/B,EAC9B,MAEDzG,MAAKwI,mBAAqB/B,CAE1BzG,MAAKyI,0BAA0BzI,KAAK0H,SAAU1H,KAAK0H,SAASgB,oBAAsB,KAAM1I,KAAK2I,UJjDvF5H,WAAY,KACZC,aAAc,MIsDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,mBJhDJM,IIgDP,WAEC,MAAOb,MAAK4I,mBJ/CNpC,IIkDP,SAA2BC,GAE1BzG,KAAK4I,kBAAoBnC,GJjDnB1F,WAAY,KACZC,aAAc,MIsDrBL,QAAAC,eAAWuC,EAAA5C,UAAA,SJhDJM,IIgDP,WAEC,MAAOb,MAAKmF,QJ/CNqB,IImDP,SAAiBqC,GAEhB7I,KAAKmF,OAAS0D,EAAMC,OAEpB9I,MAAK+I,mBJnDChI,WAAY,KACZC,aAAc,MI+ErBL,QAAAC,eAAWuC,EAAA5C,UAAA,QJlDJM,IIkDP,WAEC,MAAOb,MAAKgJ,OJjDNjI,WAAY,KACZC,aAAc,MIoErBL,QAAAC,eAAWuC,EAAA5C,UAAA,aJ1DJM,II0DP,WAEC,MAAOb,MAAKuE,WAAW/B,EAAW2E,oBJzD5BX,II4DP,SAAqBO,GAEpB,GAAI/G,KAAKiJ,WAAalC,EACrB,MAED/G,MAAKuE,WAAawC,EAAIvE,EAAW8E,kBAEjCtH,MAAKuH,sBJ7DCxG,WAAY,KACZC,aAAc,MIsErBL,QAAAC,eAAWuC,EAAA5C,UAAA,aJ5DJM,II4DP,WAEC,MAAOb,MAAKwE,WAAWhC,EAAW2E,oBJ3D5BX,II8DP,SAAqBO,GAEpB,GAAI/G,KAAKkJ,WAAanC,EACrB,MAED/G,MAAKwE,WAAauC,EAAIvE,EAAW8E,kBAEjCtH,MAAKuH,sBJ/DCxG,WAAY,KACZC,aAAc,MIwErBL,QAAAC,eAAWuC,EAAA5C,UAAA,aJ9DJM,II8DP,WAEC,MAAOb,MAAKyE,WAAWjC,EAAW2E,oBJ7D5BX,IIgEP,SAAqBO,GAEpB,GAAI/G,KAAKmJ,WAAapC,EACrB,MAED/G,MAAKyE,WAAasC,EAAIvE,EAAW8E,kBAEjCtH,MAAKuH,sBJjECxG,WAAY,KACZC,aAAc,MI+HrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJpHJM,IIoHP,WAEC,MAAOb,MAAK6E,UJnHN2B,IIsHP,SAAkBO,GAGjB/G,KAAKoJ,OAAS,IAEd,IAAIpJ,KAAK6E,UAAYkC,EACpB,MAED/G,MAAK6E,SAAWkC,CAEhB/G,MAAKiH,mBJxHClG,WAAY,KACZC,aAAc,MIkIrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJvHJM,IIuHP,WAEC,MAAOb,MAAK8E,UJtHN0B,IIyHP,SAAkBO,GAGjB/G,KAAKyH,QAAU,IAEf,IAAIzH,KAAK8E,UAAYiC,EACpB,MAED/G,MAAK8E,SAAWiC,CAEhB/G,MAAKiH,mBJ3HClG,WAAY,KACZC,aAAc,MIsIrBL,QAAAC,eAAWuC,EAAA5C,UAAA,UJ1HJM,II0HP,WAEC,MAAOb,MAAK+E,UJzHNyB,II4HP,SAAkBO,GAGjB/G,KAAKgH,OAAS,IAEd,IAAIhH,KAAK+E,UAAYgC,EACpB,MAED/G,MAAK+E,SAAWgC,CAEhB/G,MAAKiH,mBJ9HClG,WAAY,KACZC,aAAc,MImIrBL,QAAAC,eAAWuC,EAAA5C,UAAA,SJ7HJM,II6HP,WAEC,MAAOb,MAAK2I,SJ5HN5H,WAAY,KACZC,aAAc,MIiIrBL,QAAAC,eAAWuC,EAAA5C,UAAA,iBJ3HJM,II2HP,WAEC,GAAIb,KAAK+D,oBAAqB,CAC7B,IAAK/D,KAAKsF,YAActF,KAAK+F,eAAiBzE,EAAcE,YAAa,CACxExB,KAAK8D,eAAiB9D,KAAK6H,eAAewB,gBAAgBrJ,KAAKoF,iBAEzD,CACNpF,KAAK6H,eAAeyB,aAAa,EAAGtJ,KAAK8D,gBAG1C9D,KAAK+D,oBAAsB,MAE5B,MAAO/D,MAAK8D,gBJ3HN/C,WAAY,KACZC,aAAc,MI6HrBL,QAAAC,eAAWuC,EAAA5C,UAAA,kBJ1HJM,II0HP,WAEC,GAAIb,KAAKuD,sBACRvD,KAAKuJ,uBAEN,OAAOvJ,MAAKsD,kBJ1HNvC,WAAY,KACZC,aAAc,MIuJrBL,QAAAC,eAAWuC,EAAA5C,UAAA,wBJjJJM,IIiJP,WAEC,MAAOb,MAAKwJ,uBJhJNzI,WAAY,KACZC,aAAc,MIqJrBL,QAAAC,eAAWuC,EAAA5C,UAAA,gBJ/IJM,II+IP,WAEC,MAAOb,MAAKyJ,eJ9INjD,IIiJP,SAAwBC,GAEvB,GAAIA,GAASzG,KAAKyJ,cACjB,MAEDzJ,MAAKyJ,cAAgBhD,CAErB,IAAIE,GAAa3G,KAAK8F,aAAarG,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAK8F,aAAa5G,GAAGwK,aAAe1J,KAAKyJ,eJlJpC1I,WAAY,KACZC,aAAc,MI0LrBL,QAAAC,eAAWuC,EAAA5C,UAAA,aJjJJM,IIiJP,WAEC,MAAOb,MAAKoG,YJhJNrF,WAAY,KACZC,aAAc,MIuJrBL,QAAAC,eAAWuC,EAAA5C,UAAA,WJ/IJM,II+IP,WAEC,MAAOb,MAAKgE,qBJ9INwC,IIiJP,SAAmBC,GAElB,GAAIzG,KAAKgE,qBAAuByC,EAC/B,MAEDzG,MAAKgE,oBAAsByC,CAE3BzG,MAAK2J,2BAA2B3J,KAAK0H,SAAU1H,KAAK0H,SAASkC,cAAgB,OJlJvE7I,WAAY,KACZC,aAAc,MI8JrBL,QAAAC,eAAWuC,EAAA5C,UAAA,SJjJJM,IIiJP,WAEC,MAAOb,MAAK6G,SAASgD,MAAM7J,KAAK6E,UJhJ1B2B,IImJP,SAAiBO,GAEhB,GAAI/G,KAAKoJ,QAAUrC,EAClB,MAED/G,MAAKoJ,OAASrC,CAEd/G,MAAK6E,SAAWkC,EAAI/G,KAAK6G,SAASgD,KAElC7J,MAAKiH,mBJrJClG,WAAY,KACZC,aAAc,MIiKrBL,QAAAC,eAAWuC,EAAA5C,UAAA,KJpJJM,IIoJP,WAEC,MAAOb,MAAKgF,IJnJNwB,IIsJP,SAAaO,GAEZ,GAAI/G,KAAKgF,IAAM+B,EACd,MAED/G,MAAKgF,GAAK+B,CAEV/G,MAAK8J,sBJvJC/I,WAAY,KACZC,aAAc,MImKrBL,QAAAC,eAAWuC,EAAA5C,UAAA,KJtJJM,IIsJP,WAEC,MAAOb,MAAKiF,IJrJNuB,IIwJP,SAAaO,GAEZ,GAAI/G,KAAKiF,IAAM8B,EACd,MAED/G,MAAKiF,GAAK8B,CAEV/G,MAAK8J,sBJzJC/I,WAAY,KACZC,aAAc,MI8KrBL,QAAAC,eAAWuC,EAAA5C,UAAA,KJxJJM,IIwJP,WAEC,MAAOb,MAAKkF,IJvJNsB,II0JP,SAAaO,GAEZ,GAAI/G,KAAKkF,IAAM6B,EACd,MAED/G,MAAKkF,GAAK6B,CAEV/G,MAAK8J,sBJ3JC/I,WAAY,KACZC,aAAc,MIgKrBL,QAAAC,eAAWuC,EAAA5C,UAAA,WJ1JJM,II0JP,WAEC,MAAOb,MAAK4E,UJzJN4B,II4JP,SAAmBC,GAElBzG,KAAK4E,SAAW6B,GJ3JV1F,WAAY,KACZC,aAAc,MIwLdmC,GAAA5C,UAAAwJ,iBAAP,SAAwBC,EAAaC,GAEpCvJ,EAAAH,UAAMwJ,iBAAgBvK,KAAAQ,KAACgK,EAAMC,EAE7B,QAAQD,GACP,IAAK/G,GAAmBiH,iBACvBlK,KAAKmK,yBAA2B,IAChC,MACD,KAAKlH,GAAmBmH,iBACvBpK,KAAKqK,yBAA2B,IAChC,MACD,KAAKpH,GAAmBqH,cACvBtK,KAAKuK,sBAAwB,IAC7B,MACD,KAAKtH,GAAmBuH,cACvBxK,KAAKyK,sBAAwB,IAC7B,MACD,KAAKxH,GAAmByH,uBACvB1K,KAAK2K,+BAAiC,IACtC,QAOIxH,GAAA5C,UAAAuI,MAAP,WAEC,GAAIA,GAAsB,GAAI3F,EAC9B2F,GAAMD,MAAQ7I,KAAK6I,KACnBC,GAAM8B,WAAa5K,KAAK4K,UACxB9B,GAAM+B,KAAOA,IACP/B,GAAMtF,SAAWxD,KAAKwD,QACtBsF,GAAMrF,QAAUzD,KAAKyD,QAASzD,KAAKyD,QAAQqH,SAAW,IAG5D,OAAOhC,GAMD3F,GAAA5C,UAAAU,QAAP,WAEC,GAAIjB,KAAK+K,OACR/K,KAAK+K,OAAOC,YAAYhL,KAEzB,OAAOA,KAAK4F,cAAcnG,OACzBO,KAAK4F,cAAc,GAAG3E,UAMjBkC,GAAA5C,UAAA0K,aAAP,WAECjL,KAAKiB,UA2BCkC,GAAA5C,UAAA2K,UAAP,SAAiBC,GAEhB,MAAOnL,MAAKoL,QAqBNjI,GAAA5C,UAAA8K,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAOnL,MAAKoL,QAGNjI,GAAA5C,UAAAsG,OAAP,SAAcsE,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAInL,KAAKsL,eACRtL,KAAKsL,eAAeC,YAGrB,IAAIvL,KAAKoD,kBAAmB,CAC3BpD,KAAKwL,mBAEL,IAAIxL,KAAKoJ,QAAU,KAAM,CACxBpJ,KAAK6E,SAAW7E,KAAKoJ,OAAOpJ,KAAKyL,YAAY5B,KAC7C7J,MAAKiH,kBAIN,GAAIjH,KAAKyH,SAAW,KAAM,CACzBzH,KAAK8E,SAAW9E,KAAKyH,QAAQzH,KAAKyL,YAAYjE,MAC9CxH,MAAKiH,kBAIN,GAAIjH,KAAKgH,QAAU,KAAM,CACxBhH,KAAK+E,SAAW/E,KAAKgH,OAAOhH,KAAKyL,YAAY3E,KAC7C9G,MAAKiH,mBAKP,MAAOjH,MAAKyL,YAGNtI,GAAA5C,UAAAmL,UAAP,SAAiBP,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAInL,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErB,IAAIvL,KAAKqD,qBAAsB,CAC9BrD,KAAK2L,uBAIN,MAAO3L,MAAK4L,eAoBNzI,GAAA5C,UAAAsL,cAAP,SAAqBC,GAEpB,MAAOA,GAqBD3I,GAAA5C,UAAAwL,gBAAP,SAAuBC,GAEtB,MAAOhM,MAAKiM,sBAAsB5C,gBAAgB2C,GAW5C7I,GAAA5C,UAAA2L,cAAP,SAAqBC,GAEpB,MAAO,OAmBDhJ,GAAA5C,UAAA6L,aAAP,SAAoBlF,EAAUE,EAAUiF,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAEvC,MAAO,OASDlJ,GAAA5C,UAAA+L,OAAP,SAAcC,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAAS5J,EAASiK,WAElBL,GAAOM,WAERJ,GAAQH,EAAOQ,SAAS/M,KAAK4K,WAAWoB,SACxCU,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAMlN,OAAS,IAAM,CACxBkN,EAAMzF,EAAIsF,EAAOpF,CACjBuF,GAAMvF,EAAIoF,EAAOtF,CACjByF,GAAMtF,EAAI,CACVsF,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMlK,EAAcuK,kBAEpBL,GAAI,GAAKD,EAAMzF,CACf0F,GAAI,GAAKD,EAAMvF,CACfwF,GAAI,GAAKD,EAAMtF,CACfuF,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMvF,CACf0F,GAAI,GAAKH,EAAMrF,CACfwF,GAAI,GAAKH,EAAMpF,CACfuF,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMxF,CACf0F,GAAI,GAAKF,EAAMtF,CACfwF,GAAI,IAAMF,EAAMrF,CAChBuF,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAIzK,EACrByK,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjCrN,MAAKuE,WAAa6I,EAAIlG,CACtBlH,MAAKwE,WAAa4I,EAAIhG,CACtBpH,MAAKyE,WAAa2I,EAAI/F,CAEtBrH,MAAKuH,qBA0BCpE,GAAA5C,UAAA+M,cAAP,SAAqBxB,GAEpB,MAAO,IAAInJ,GA4BLQ,GAAA5C,UAAAgN,gBAAP,SAAuBvB,GAEtB,MAAOhM,MAAK6H,eAAewB,gBAAgB2C,GAWrC7I,GAAA5C,UAAAiN,OAAP,SAAcC,EAAWC,EAAWC,GAEnC,GAAI3N,KAAKgF,IAAMyI,GAAMzN,KAAKiF,IAAMyI,GAAM1N,KAAKkF,IAAMyI,EAChD,MAED3N,MAAKgF,GAAKyI,CACVzN,MAAKiF,GAAKyI,CACV1N,MAAKkF,GAAKyI,CAEV3N,MAAK8J,qBAUC3G,GAAA5C,UAAAqN,UAAP,SAAiBH,EAAWC,EAAWC,GAEtC,GAAI3N,KAAKmF,QAAU,KAClBnF,KAAKmF,OAAS,GAAIvC,EAEnB5C,MAAKmF,OAAO+B,GAAKuG,CACjBzN,MAAKmF,OAAOiC,GAAKsG,CACjB1N,MAAKmF,OAAOkC,GAAKsG,CAEjB3N,MAAK+I,kBAQC5F,GAAA5C,UAAAsN,MAAP,SAAaC,GAEZ9N,KAAK+N,OAAOnL,EAASoL,OAAQF,GAMvB3K,GAAA5C,UAAA0N,wBAAP,SAA+BC,GAE9B,GAAIlO,KAAKiG,iBAAmBnD,EAAgBqL,aAAc,CACzD,GAAIC,GAAwBF,EAAOrG,eAAewF,WAClD,IAAIgB,GAAiBD,EAAM,EAC3BA,GAAM,GAAKpO,KAAKsO,aAChBD,GAAMnH,EAAIlH,KAAK6E,QACfwJ,GAAMjH,EAAIpH,KAAK8E,QACfuJ,GAAMhH,EAAIrH,KAAK+E,QACf/E,MAAKqF,mBAAmBkJ,UAAUH,EAGlC,KAAKpO,KAAKsF,YAActF,KAAK+F,eAAiBzE,EAAcE,YAC3DxB,KAAKqF,mBAAmBmJ,oBAAoBxO,KAAKmF,OAAO+B,EAAElH,KAAK6E,UAAW7E,KAAKmF,OAAOiC,EAAEpH,KAAK8E,UAAW9E,KAAKmF,OAAOkC,EAAErH,KAAK+E,SAE5H,OAAO/E,MAAKqF,mBAGb,MAAOrF,MAAK6H,eAQN1E,GAAA5C,UAAAkO,KAAP,SAAYX,GAEX9N,KAAK+N,OAAOnL,EAAS8L,OAAQZ,GASvB3K,GAAA5C,UAAAwN,OAAP,SAAcY,EAAeb,GAE5B,GAAIZ,GAAa,GAAIzK,EACrByK,GAAE0B,gBAAgBd,EAAOa,EAEzB,IAAIvB,GAAeF,EAAEG,YAAY,EAEjCrN,MAAKuE,YAAc6I,EAAIlG,CACvBlH,MAAKwE,YAAc4I,EAAIhG,CACvBpH,MAAKyE,YAAc2I,EAAI/F,CAEvBrH,MAAKuH,qBAUCpE,GAAA5C,UAAAsO,SAAP,SAAgBC,EAAWC,EAAWC,GAErChP,KAAKuE,WAAauK,EAAGtM,EAAW8E,kBAChCtH,MAAKwE,WAAauK,EAAGvM,EAAW8E,kBAChCtH,MAAKyE,WAAauK,EAAGxM,EAAW8E,kBAEhCtH,MAAKuH,qBAMCpE,GAAA5C,UAAA0O,oBAAP,SAA2BjF,EAAaC,GAEvCvJ,EAAAH,UAAM0O,oBAAmBzP,KAAAQ,KAACgK,EAAMC,EAEhC,IAAIjK,KAAKkP,iBAAiBlF,EAAMC,GAC/B,MAED,QAAQD,GACP,IAAK/G,GAAmBiH,iBACvBlK,KAAKmK,yBAA2B,KAChC,MAED,KAAKlH,GAAmBmH,iBACvBpK,KAAKqK,yBAA2B,KAChC,MAED,KAAKpH,GAAmBqH,cACvBtK,KAAKuK,sBAAwB,KAC7B,QAUIpH,GAAA5C,UAAA4O,UAAP,SAAiBR,EAAeS,GAE/B,GAAIlI,GAAWyH,EAAKzH,EAAGE,EAAWuH,EAAKvH,EAAGC,EAAWsH,EAAKtH,CAC1D,IAAIV,GAAayI,EAASC,KAAKC,KAAKpI,EAAEA,EAAIE,EAAEA,EAAIC,EAAEA,EAElDrH,MAAKgF,IAAMkC,EAAEP,CACb3G,MAAKiF,IAAMmC,EAAET,CACb3G,MAAKkF,IAAMmC,EAAEV,CAEb3G,MAAK8J,qBASC3G,GAAA5C,UAAAgP,eAAP,SAAsBZ,EAAeS,GAEpC,GAAIlI,GAAWyH,EAAKzH,EAAGE,EAAWuH,EAAKvH,EAAGC,EAAWsH,EAAKtH,CAC1D,IAAIV,GAAayI,EAASC,KAAKC,KAAKpI,EAAEA,EAAIE,EAAEA,EAAIC,EAAEA,EAElDrH,MAAK4K,WAAW4D,mBAAmBtH,EAAEP,EAAKS,EAAET,EAAKU,EAAEV,EAEnD3G,MAAK0D,UAAU4F,aAAa,EAAGtJ,KAAKwF,KAEpCxF,MAAKgF,GAAKhF,KAAKwF,KAAK0B,CACpBlH,MAAKiF,GAAKjF,KAAKwF,KAAK4B,CACpBpH,MAAKkF,GAAKlF,KAAKwF,KAAK6B,CAEpBrH,MAAK8J,qBAQC3G,GAAA5C,UAAAiP,IAAP,SAAW1B,GAEV9N,KAAK+N,OAAOnL,EAASiK,OAAQiB,GAW9BnN,QAAAC,eAAWuC,EAAA5C,UAAA,uBJxRJM,IIwRP,WAEC,MAAOb,MAAKyP,qBJvRN1O,WAAY,KACZC,aAAc,MI8RrBL,QAAAC,eAAWuC,EAAA5C,UAAA,cJtRJM,IIsRP,WAEC,GAAIb,KAAK2D,eACR3D,KAAK0P,kBAEN,OAAO1P,MAAK0D,WJtRN8C,IIyRP,SAAsBO,GJ7QX,GI2RN4I,GAA2B5I,EAAIsG,WACnC,IAAID,EAEJA,GAAMuC,EAAS,EAEf,IAAI3P,KAAKgF,IAAMoI,EAAIlG,GAAKlH,KAAKiF,IAAMmI,EAAIhG,GAAKpH,KAAKkF,IAAMkI,EAAI/F,EAAG,CAC7DrH,KAAKgF,GAAKoI,EAAIlG,CACdlH,MAAKiF,GAAKmI,EAAIhG,CACdpH,MAAKkF,GAAKkI,EAAI/F,CAEdrH,MAAK8J,qBAGNsD,EAAMuC,EAAS,EAEf,IAAI3P,KAAKuE,YAAc6I,EAAIlG,GAAKlH,KAAKwE,YAAc4I,EAAIhG,GAAKpH,KAAKyE,YAAc2I,EAAI/F,EAAG,CACrFrH,KAAKuE,WAAa6I,EAAIlG,CACtBlH,MAAKwE,WAAa4I,EAAIhG,CACtBpH,MAAKyE,WAAa2I,EAAI/F,CAEtBrH,MAAKuH,qBAGN6F,EAAMuC,EAAS,EAEf,IAAI3P,KAAK6E,UAAYuI,EAAIlG,GAAKlH,KAAK8E,UAAYsI,EAAIhG,GAAKpH,KAAK+E,UAAYqI,EAAI/F,EAAG,CAC/ErH,KAAK6E,SAAWuI,EAAIlG,CACpBlH,MAAK8E,SAAWsI,EAAIhG,CACpBpH,MAAK+E,SAAWqI,EAAI/F,CAEpBrH,MAAKiH,oBJjSAlG,WAAY,KACZC,aAAc,MIuSrBL,QAAAC,eAAWuC,EAAA5C,UAAA,wBJjSJM,IIiSP,WAEC,IAAKb,KAAK4P,qBACT5P,KAAK4P,qBAAuB,GAAI5M,GAAmBhD,KAEpD,OAAOA,MAAK4P,sBJjSN7O,WAAY,KACZC,aAAc,MIsSdmC,GAAA5C,UAAAsP,WAAP,SAAkBpJ,GAEjBzG,KAAK0H,SAAWjB,CAEhB,IAAIA,EAAO,CACVzG,KAAKmI,6BAA6B1B,EAAM2B,cACxCpI,MAAK2J,2BAA2BlD,EAAMmD,cACtC5J,MAAKyI,0BAA0BhC,EAAMiC,oBAAqBjC,EAAMkC,aAC1D,CACN3I,KAAKmI,6BAA6B,KAClCnI,MAAK2J,2BAA2B,KAChC3J,MAAKyI,0BAA0B,KAAM,OAOhCtF,GAAA5C,UAAAyH,0BAAP,WAEChI,KAAKuD,uBAAyBvD,KAAK2F,iBACnC3F,MAAK6D,6BAA+B7D,KAAK2F,iBACzC3F,MAAK+D,qBAAuB/D,KAAK2F,iBAEjC,IAAI3F,KAAK8P,SACR9P,KAAK+P,qBAEN,IAAI/P,KAAK2K,+BACR3K,KAAKgQ,6BAMA7M,GAAA5C,UAAA4H,6BAAP,SAAoC1B,GAEnCzG,KAAKmE,uBAAyBnE,KAAKkE,uBAAyBuC,CAG5D,IAAIzG,KAAKmE,wBAA0BnE,KAAK0H,WAAa1H,KAAK4I,kBACzD5I,KAAK4I,kBAAqB5I,KAAK0H,SAASkB,kBAMnCzF,GAAA5C,UAAAkI,0BAAP,SAAiCwH,EAAqBC,GAErD,GAAIC,GAAuBnQ,KAAK2I,SAAWuH,CAE3C,IAAIC,GAAgBnQ,KAAK2I,QACxB3I,KAAK2I,QAAQyH,cAAc,GAAIlN,GAAWA,EAAWmN,mBAAoBrQ,MAE1E,IAAIA,KAAK2I,SAAW3I,KAAKyP,oBAAqB,CAE7CzP,KAAK2I,QAAQ2H,sBAAsBtQ,KAAKyP,oBAGxC,IAAIzP,KAAKiI,WACRjI,KAAKuQ,mBAAmBvQ,KAAKyP,qBAI/BzP,KAAKyP,oBAAsBzP,KAAKwI,oBAAsByH,CAGtD,IAAIE,EACHnQ,KAAK2I,QAAUuH,CAEhB,IAAIlQ,KAAK2I,SAAW3I,KAAKyP,oBAAqB,CAE7CzP,KAAK2I,QAAQ6H,oBAAoBxQ,KAAKyP,oBAGtC,IAAIzP,KAAKiI,WACRjI,KAAKyQ,iBAAiBzQ,KAAKyP,qBAG7B,GAAIU,GAAgBnQ,KAAK2I,QACxB3I,KAAK2I,QAAQyH,cAAc,GAAIlN,GAAWA,EAAWwN,eAAgB1Q,MAEtE,IAAImQ,EAAc,CACjB,IAAKnQ,KAAKuD,wBAA0BvD,KAAK2F,kBACxC3F,KAAKgI,2BAEN,IAAIhI,KAAKyK,sBACRzK,KAAK2Q,qBAODxN,GAAA5C,UAAAoJ,2BAAP,SAAkClD,GAEjCzG,KAAKiE,qBAAuBjE,KAAKgE,qBAAuByC,EAMlDtD,GAAA5C,UAAAmP,iBAAP,WAGC1P,KAAKwF,KAAK0B,EAAIlH,KAAKgF,EACnBhF,MAAKwF,KAAK4B,EAAIpH,KAAKiF,EACnBjF,MAAKwF,KAAK6B,EAAIrH,KAAKkF,EAEnBlF,MAAKyF,KAAKyB,EAAIlH,KAAKuE,UACnBvE,MAAKyF,KAAK2B,EAAIpH,KAAKwE,UACnBxE,MAAKyF,KAAK4B,EAAIrH,KAAKyE,UAEnBzE,MAAK0F,KAAKwB,EAAIlH,KAAK6E,QACnB7E,MAAK0F,KAAK0B,EAAIpH,KAAK8E,QACnB9E,MAAK0F,KAAK2B,EAAIrH,KAAK+E,QAEnB/E,MAAK0D,UAAU6K,UAAUvO,KAAKmG,qBAE9B,KAAKnG,KAAKsF,WAAY,CACrBtF,KAAKoF,YAAY8B,EAAIlH,KAAKmF,OAAO+B,EAAElH,KAAK6E,QACxC7E,MAAKoF,YAAYgC,EAAIpH,KAAKmF,OAAOiC,EAAEpH,KAAK8E,QACxC9E,MAAKoF,YAAYiC,EAAIrH,KAAKmF,OAAOkC,EAAErH,KAAK+E,QACxC/E,MAAK0D,UAAU8K,oBAAoBxO,KAAKoF,YAAY8B,GAAIlH,KAAKoF,YAAYgC,GAAIpH,KAAKoF,YAAYiC,EAC9F,IAAIrH,KAAK+F,eAAiBzE,EAAcE,YACvCxB,KAAK0D,UAAUkN,kBAAkB5Q,KAAKmF,OAAO+B,EAAGlH,KAAKmF,OAAOiC,EAAGpH,KAAKmF,OAAOkC,GAG7ErH,KAAK2D,eAAiB,KACtB3D,MAAKoE,eAAiB,KACtBpE,MAAKqE,eAAiB,KACtBrE,MAAKsE,YAAc,KACnBtE,MAAKuF,YAAc,MAMbpC,GAAA5C,UAAAgJ,sBAAP,WAEC,GAAIvJ,KAAK0H,WAAa1H,KAAK0H,SAASmJ,SAAU,CAC7C7Q,KAAKsD,iBAAiBsE,SAAS5H,KAAK0H,SAASG,eAC7C7H,MAAKsD,iBAAiBwN,QAAQ9Q,KAAK4K,gBAC7B,CACN5K,KAAKsD,iBAAiBsE,SAAS5H,KAAK4K,YAGrC5K,KAAKuD,sBAAwB,MAGvBJ,GAAA5C,UAAAwQ,gBAAP,SAAuBC,GAEtBhR,KAAK4F,cAAcqL,KAAKD,EAExB,OAAOA,GAID7N,GAAA5C,UAAA2Q,mBAAP,SAA0BF,GAEzB,GAAIG,GAAenR,KAAK4F,cAAcwL,QAAQJ,EAE9ChR,MAAK4F,cAAcyL,OAAOF,EAAO,EAEjC,OAAOH,GAYD7N,GAAA5C,UAAA+Q,gBAAP,SAAuBC,EAAkCC,GAExD,MAAO,OAMDrO,GAAA5C,UAAAkR,iBAAP,WAEC,GAAIzR,KAAK0R,aACR1R,KAAK0R,aAAaC,SAMbxO,GAAA5C,UAAAqJ,YAAP,WAEC,MAAO5J,MAAKiE,qBAMNd,GAAA5C,UAAAqR,iBAAP,WAEC,MAAO5R,MAAKmE,uBAMNhB,GAAA5C,UAAAsR,WAAP,SAAkBpL,GAEjB,GAAIzG,KAAK2I,SAAWlC,EACnB,MAEDzG,MAAKyI,0BAA0BzI,KAAK0H,SAAU1H,KAAK0H,SAASgB,oBAAsB,KAAMjC,GAMjFtD,GAAA5C,UAAAuR,sBAAR,WAEC,IAAK9R,KAAK+R,iBACT/R,KAAK+R,iBAAmB,GAAI9O,GAAmBA,EAAmBiH,iBAAkBlK,KAErFA,MAAKoQ,cAAcpQ,KAAK+R,kBAMjB5O,GAAA5C,UAAAyR,sBAAR,WAEC,IAAKhS,KAAKiS,iBACTjS,KAAKiS,iBAAmB,GAAIhP,GAAmBA,EAAmBmH,iBAAkBpK,KAErFA,MAAKoQ,cAAcpQ,KAAKiS,kBAMjB9O,GAAA5C,UAAA2R,mBAAR,WAEC,IAAKlS,KAAKmS,cACTnS,KAAKmS,cAAgB,GAAIlP,GAAmBA,EAAmBqH,cAAetK,KAE/EA,MAAKoQ,cAAcpQ,KAAKmS,eAMjBhP,GAAA5C,UAAAoQ,kBAAR,WAEC,IAAK3Q,KAAKoS,cACTpS,KAAKoS,cAAgB,GAAInP,GAAmBA,EAAmBuH,cAAexK,KAE/EA,MAAKoQ,cAAcpQ,KAAKoS,eAMjBjP,GAAA5C,UAAAyP,2BAAR,WAEC,IAAKhQ,KAAKqS,uBACTrS,KAAKqS,uBAAyB,GAAIpP,GAAmBA,EAAmByH,uBAAwB1K,KAEjGA,MAAKoQ,cAAcpQ,KAAKqS,wBAQjBlP,GAAA5C,UAAA+R,mBAAR,WAEC,GAAItS,KAAK2D,eACR,MAED3D,MAAK2D,eAAiB,IAEtB,KAAK3D,KAAKuD,wBAA0BvD,KAAK2F,kBACxC3F,KAAKgI,4BAMA7E,GAAA5C,UAAAwP,oBAAP,WAEC,GAAIpJ,GAAa3G,KAAK8F,aAAarG,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAK8F,aAAa5G,GAAG6Q,sBAMf5M,GAAA5C,UAAAwI,gBAAR,WAEC/I,KAAKsF,WAActF,KAAKmF,OAAO+B,GAAK,GAAOlH,KAAKmF,OAAOiC,GAAK,GAAOpH,KAAKmF,OAAOkC,GAAK,CAEpF,IAAIrH,KAAKuF,YACR,MAEDvF,MAAKuF,YAAc,IAEnBvF,MAAKsS,qBAMEnP,GAAA5C,UAAAuJ,mBAAR,WAEC,GAAI9J,KAAKoE,eACR,MAEDpE,MAAKoE,eAAiB,IAEtBpE,MAAKsS,oBAEL,IAAItS,KAAKmK,yBACRnK,KAAK8R,wBAMC3O,GAAA5C,UAAAgH,mBAAR,WAEC,GAAIvH,KAAKqE,eACR,MAEDrE,MAAKqE,eAAiB,IAEtBrE,MAAKsS,oBAEL,IAAItS,KAAKqK,yBACRrK,KAAKgS,wBAMC7O,GAAA5C,UAAA0G,gBAAR,WAEC,GAAIjH,KAAKsE,YACR,MAEDtE,MAAKsE,YAAc,IAEnBtE,MAAKsS,oBAEL,IAAItS,KAAKuK,sBACRvK,KAAKkS,qBAIA/O,GAAA5C,UAAAgS,gBAAP,SAAuBC,GAEtBxS,KAAK8F,aAAamL,KAAKuB,EAEvB,OAAOA,GAIDrP,GAAA5C,UAAAkS,mBAAP,SAA0BD,GAEzB,GAAIrB,GAAenR,KAAK8F,aAAasL,QAAQoB,EAE7CxS,MAAK8F,aAAauL,OAAOF,EAAO,EAEhC,OAAOqB,GAGDrP,GAAA5C,UAAAkQ,iBAAP,SAAwBR,GAEvB,KAAM,IAAIpN,GAGJM,GAAA5C,UAAAgQ,mBAAP,SAA0BN,GAEzB,KAAM,IAAIpN,GAGJM,GAAA5C,UAAAmG,mBAAP,WAEC1G,KAAKoD,kBAAoB,IACzBpD,MAAKqD,qBAAuB,IAE5B,IAAIrD,KAAK8P,SACR9P,KAAK+P,sBAGA5M,GAAA5C,UAAAiL,kBAAP,WAECxL,KAAKoD,kBAAoB,KAEzB,IAAIpD,KAAKyL,aAAe,KACvBzL,KAAKyL,YAAc,GAAInJ,GAGlBa,GAAA5C,UAAAoL,qBAAP,WAEC3L,KAAKqD,qBAAuB,KAE5B,IAAIrD,KAAK4L,gBAAkB,KAC1B5L,KAAK4L,eAAiB,GAAIrJ,GAE7B,OAAAY,IAnrE4B3C,EAqrELb,GAAAJ,QAAd4D,IJjZNuP,6CAA6CtR,UAAUuR,2BAA2BvR,UAAUwR,kCAAkCxR,UAAUyR,gCAAgCzR,UAAU0R,qCAAqC1R,UAAU2R,6BAA6B3R,UAAU4R,8BAA8B5R,UAAU6R,gCAAgC7R,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwC6R,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,+CAA+C,+CAA+CC,uCAAuC,uCAAuCC,6CAA6C,+CAA+CC,2CAA2C,SAAS9U,EAAQkB,EAAOJ,SAE57BiU,wCAAwC,SAAS/U,EAAQkB,EAAOJ,SAEhEkU,4CAA4C,SAAShV,EAAQkB,EAAOJ,SAEpEmU,yCAAyC,SAASjV,EAAQkB,EAAOJ,SAEjEoU,oCAAoC,SAASlV,EAAQkB,EAAOJ,SAE5DqU,qCAAqC,SAASnV,EAAQkB,EAAOJ,GACnE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKj9DtB,IAAOwC,GAAmBpE,EAAY,6CAEtC,IAAOoV,GAAsBpV,EAAW,uDAGxC,IAAOqV,GAAUrV,EAAc,uCAG/B,IAAMsV,GAAS,SAAArT,GAASX,EAAlBgU,EAASrT,EA6Bd,SA7BKqT,KA+BJrT,EAAAlB,KAAAQ,KA3BOA,MAAAgU,OAAgB,QAChBhU,MAAAiU,QAAiB,CACjBjU,MAAAkU,QAAiB,CACjBlU,MAAAmU,QAAiB,CAEjBnU,MAAAoU,cAAuB,QACvBpU,MAAAqU,SAAkB,CACnBrU,MAAAsU,WAAoB,CACpBtU,MAAAuU,WAAoB,CACpBvU,MAAAwU,WAAoB,CAEnBxU,MAAAyU,UAAmB,CACpBzU,MAAA0U,YAAqB,CACrB1U,MAAA2U,YAAqB,CACrB3U,MAAA4U,YAAqB,CAEpB5U,MAAA6U,SAAkB,CACnB7U,MAAA8U,WAAoB,CACpB9U,MAAA+U,WAAoB,CACpB/U,MAAAgV,WAAoB,CAEnBhV,MAAAiV,cAAwB,MAShCtU,OAAAC,eAAWmT,EAAAxT,UAAA,gBLo8DJM,IKp8DP,WAEC,MAAOb,MAAKiV,eLq8DNzO,IKl8DP,SAAwBC,GAEvB,GAAIzG,KAAKiV,eAAiBxO,EACzB,MAEDzG,MAAKiV,cAAgBxO,CAErB,IAAIA,EAAO,CACV,GAAIzG,KAAKkV,eAAiB,KACzBlV,KAAKkV,cAAgBlV,KAAKmV,qBAE3BnV,MAAKkV,cAAcE,MAAQpV,SACrB,CACNA,KAAKkV,cAAcjU,SACnBjB,MAAKkV,cAAgB,KAGtBlV,KAAKoQ,cAAc,GAAI0D,GAAWA,EAAWuB,uBLi8DvCtU,WAAY,KACZC,aAAc,MK/7Dd+S,GAAAxT,UAAA4U,oBAAP,WAEC,KAAM,IAAItS,GAGXlC,QAAAC,eAAWmT,EAAAxT,UAAA,YLg8DJM,IKh8DP,WAEC,MAAOb,MAAKyU,WLi8DNjO,IK97DP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAETzG,MAAKyU,UAAYhO,CACjBzG,MAAKsV,kBL87DCvU,WAAY,KACZC,aAAc,MK57DrBL,QAAAC,eAAWmT,EAAAxT,UAAA,WL+7DJM,IK/7DP,WAEC,MAAOb,MAAK6U,ULg8DNrO,IK77DP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAETzG,MAAK6U,SAAWpO,CAChBzG,MAAKuV,iBL67DCxU,WAAY,KACZC,aAAc,MK37DrBL,QAAAC,eAAWmT,EAAAxT,UAAA,SL87DJM,IK97DP,WAEC,MAAOb,MAAKgU,QL+7DNxN,IK57DP,SAAiBC,GAEhBzG,KAAKgU,OAASvN,CACdzG,MAAKiU,SAAYjU,KAAKgU,QAAU,GAAM,KAAM,GAC5ChU,MAAKkU,SAAYlU,KAAKgU,QAAU,EAAK,KAAM,GAC3ChU,MAAKmU,SAAWnU,KAAKgU,OAAS,KAAM,GAEpChU,MAAKuV,eACLvV,MAAKsV,kBL47DCvU,WAAY,KACZC,aAAc,MK17DrBL,QAAAC,eAAWmT,EAAAxT,UAAA,WL67DJM,IK77DP,WAEC,MAAOb,MAAKqU,UL87DN7N,IK37DP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAETzG,MAAKqU,SAAW5N,CAChBzG,MAAKwV,iBL27DCzU,WAAY,KACZC,aAAc,MKz7DrBL,QAAAC,eAAWmT,EAAAxT,UAAA,gBL47DJM,IK57DP,WAEC,MAAOb,MAAKoU,eL67DN5N,IK17DP,SAAwBC,GAEvBzG,KAAKoU,cAAgB3N,CACrBzG,MAAKwV,iBL27DCzU,WAAY,KACZC,aAAc,MKz7Db+S,GAAAxT,UAAAiV,cAAR,WAECxV,KAAKsU,YAAetU,KAAKoU,eAAiB,GAAM,KAAM,IAAKpU,KAAKqU,QAChErU,MAAKuU,YAAevU,KAAKoU,eAAiB,EAAK,KAAM,IAAKpU,KAAKqU,QAC/DrU,MAAKwU,YAAcxU,KAAKoU,cAAgB,KAAM,IAAKpU,KAAKqU,SAGlDN,GAAAxT,UAAAkV,2BAAP,SAAkCC,EAAgBxH,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI1J,GAIXlC,QAAAC,eAAWmT,EAAAxT,UAAA,aLy7DJM,IKz7DP,WAEC,MAAOkT,GAAU7S,WL07DXH,WAAY,KACZC,aAAc,MKx7Db+S,GAAAxT,UAAA+U,eAAR,WAECtV,KAAK0U,YAAc1U,KAAKiU,QAAQjU,KAAKyU,SACrCzU,MAAK2U,YAAc3U,KAAKkU,QAAQlU,KAAKyU,SACrCzU,MAAK4U,YAAc5U,KAAKmU,QAAQnU,KAAKyU,UAG9BV,GAAAxT,UAAAgV,cAAR,WAECvV,KAAK8U,WAAa9U,KAAKiU,QAAQjU,KAAK6U,QACpC7U,MAAK+U,WAAa/U,KAAKkU,QAAQlU,KAAK6U,QACpC7U,MAAKgV,WAAahV,KAAKmU,QAAQnU,KAAK6U,SAGrClU,QAAAC,eAAWmT,EAAAxT,UAAA,gBLu7DJM,IKv7DP,WAEC,MAAOb,MAAKkV,eLw7DN1O,IKr7DP,SAAwBC,GAEvBzG,KAAKkV,cAAgBzO,CACrBzG,MAAKkV,cAAcE,MAAQpV,MLs7DrBe,WAAY,KACZC,aAAc,MKpmEP+S,GAAA7S,UAAmB,eA+KlC,OAAA6S,IAjLwBF,EAmLLlU,GAAAJ,QAAVwU,IL07DNrB,6CAA6CtR,UAAUuU,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,uCAAuC,SAASpX,EAAQkB,EAAOJ,GACvT,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM3nEtB,IAAOyV,GAAerX,EAAa,uCAInC,IAAOkD,GAAWlD,EAAc,sCNooEhC,IMtnEMsX,GAAW,SAAArV,GAASX,EAApBgW,EAAWrV,EA8BhB,SA9BKqV,GA8BOlU,EAA6BC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzDrB,EAAAlB,KAAAQ,KAEAA,MAAKgC,aAAeF,CACpB9B,MAAKiC,aAAeJ,CACpB7B,MAAK+B,SAAWA,EAzBjBpB,OAAAC,eAAWmV,EAAAxV,UAAA,aN8nEJM,IM9nEP,WAEC,MAAOkV,GAAY7U,WN+nEbH,WAAY,KACZC,aAAc,MM1nErBL,QAAAC,eAAWmV,EAAAxV,UAAA,eNgoEJM,IMhoEP,WAEC,MAAOb,MAAKiC,cNioENlB,WAAY,KACZC,aAAc,MM7mEd+U,GAAAxV,UAAAU,QAAP,WAECjB,KAAK+B,SAAW,IAEhBrB,GAAAH,UAAMU,QAAOzB,KAAAQ,MA5CA+V,GAAA7U,UAAmB,qBAEnB6U,GAAA7T,WAAyB4T,CA4CxC,OAAAC,IAhD0BpU,EAkD1BhC,GAAqBJ,QAAZwW,INonENC,uCAAuC5U,UAAUgB,sCAAsC,wCAAwC6T,sCAAsC,SAASxX,EAAQkB,EAAOJ,GAChM,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GO7rEtB,IAAO6V,GAAezX,EAAa,yCPiyEnC,IO1rEM0X,GAAU,SAAAzV,GAASX,EAAnBoW,EAAUzV,EAAhB,SAAMyV,KAAmBzV,EAAA0V,MAAApW,KAAAqW,WAyBxB1V,OAAAC,eAAWuV,EAAA5V,UAAA,SPurEJM,IOvrEP,WAEC,MAAOb,MAAKsW,QPwrENvV,WAAY,KACZC,aAAc,MOlrErBL,QAAAC,eAAWuV,EAAA5V,UAAA,ePyrEJM,IOzrEP,WAEC,MAAOb,MAAKuW,cP0rENxV,WAAY,KACZC,aAAc,MO/qErBL,QAAAC,eAAWuV,EAAA5V,UAAA,cP2rEJM,IO3rEP,WAEC,MAAOb,MAAKwW,aP4rENzV,WAAY,KACZC,aAAc,MO1qErBL,QAAAC,eAAWuV,EAAA5V,UAAA,WP6rEJM,IO7rEP,WAEC,MAAOb,MAAKyW,UP8rEN1V,WAAY,KACZC,aAAc,MOjrErBL,QAAAC,eAAWuV,EAAA5V,UAAA,eP+rEJM,IO/rEP,WAEC,MAAOb,MAAK0W,cPgsEN3V,WAAY,KACZC,aAAc,MO5qErBL,QAAAC,eAAWuV,EAAA5V,UAAA,UPisEJM,IOjsEP,WAEC,MAAOb,MAAK2W,SPksEN5V,WAAY,KACZC,aAAc,MOlrErBL,QAAAC,eAAWuV,EAAA5V,UAAA,OPmsEJM,IOnsEP,WAEC,MAAOb,MAAK4W,MPosEN7V,WAAY,KACZC,aAAc,MOnsEtB,OAAAmV,IAnIyBD,EAqILvW,GAAAJ,QAAX4W,IPusENU,yCAAyCzV,YAAY8R,2CAA2C,SAASzU,EAAQkB,EAAOJ,GQn7E3H,GAAMuD,GAAe,WAArB,QAAMA,MAKSA,EAAAoD,QAAiB,SAKjBpD,GAAAqL,aAAsB,aAKtBrL,GAAAgU,gBAAyB,gBACxC,OAAAhU,KAEAnD,GAAyBJ,QAAhBuD,ORq7EHV,uCAAuC,SAAS3D,EAAQkB,EAAOJ,GACrE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GSx8EtB,IAAOG,GAAS/B,EAAe,oCTo9E/B,ISn8EMkD,GAAW,SAAAjB,GAASX,EAApB4B,EAAWjB,EAwFhB,SAxFKiB,KA0FJjB,EAAAlB,KAAAQ,KApFMA,MAAA+W,QAAiB,CAGhB/W,MAAAgX,aAAkC,GAAInR,OAY9ClF,OAAAC,eAAWe,EAAApB,UAAA,YTk8EJM,ISl8EP,WAEC,MAAOb,MAAKgC,aAAaiV,UTm8EnBlW,WAAY,KACZC,aAAc,MS97ErBL,QAAAC,eAAWe,EAAApB,UAAA,YTo8EJM,ISp8EP,WAEC,MAAOb,MAAKkX,WAAalX,KAAKgC,aAAaD;ETq8ErCyE,ISl8EP,SAAoBC,GAEnB,GAAIzG,KAAK+B,SACR/B,KAAK+B,SAASoV,aAAanX,KAE5BA,MAAKkX,UAAYzQ,CAEjB,IAAIzG,KAAK+B,SACR/B,KAAK+B,SAASqV,UAAUpX,OTi8EnBe,WAAY,KACZC,aAAc,MS57ErBL,QAAAC,eAAWe,EAAApB,UAAA,kBTk8EJM,ISl8EP,WAEC,MAAOb,MAAKgC,aAAa6F,gBTm8EnB9G,WAAY,KACZC,aAAc,MS97ErBL,QAAAC,eAAWe,EAAApB,UAAA,cTo8EJM,ISp8EP,WAEC,MAAOb,MAAKgC,cTq8ENjB,WAAY,KACZC,aAAc,MSh8ErBL,QAAAC,eAAWe,EAAApB,UAAA,eTs8EJM,ISt8EP,WAEC,MAAOb,MAAKqX,cAAgBrX,KAAKgC,aAAasV,aTu8ExC9Q,ISp8EP,SAAuBC,GAEtBzG,KAAKqX,aAAe5Q,GTq8Ed1F,WAAY,KACZC,aAAc,MSj8ErBL,QAAAC,eAAWe,EAAApB,UAAA,kBTu8EJM,ISv8EP,WAEC,MAAOb,MAAKuX,iBTw8EN/Q,ISr8EP,SAA0BC,GAEzBzG,KAAKuX,gBAAkB9Q,GTs8EjB1F,WAAY,KACZC,aAAc,MS17EdW,GAAApB,UAAAU,QAAP,WAECjB,KAAK+B,SAAW,IAEhB,IAAI4E,GAAa3G,KAAKgX,aAAavX,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKgX,aAAa9X,GAAG+B,SAEtBjB,MAAKgX,aAAe,GAAInR,OAQlBlE,GAAApB,UAAA0N,wBAAP,SAA+BC,GAE9B,MAAOlO,MAAKgC,aAAaiM,wBAAwBC,GAG3CvM,GAAApB,UAAAwQ,gBAAP,SAAuBC,GAEtBhR,KAAKgX,aAAa/F,KAAKD,EAEvB,OAAOA,GAIDrP,GAAApB,UAAA2Q,mBAAP,SAA0BF,GAEzB,GAAIG,GAAenR,KAAKgX,aAAa5F,QAAQJ,EAE7ChR,MAAKgX,aAAa3F,OAAOF,EAAO,EAEhC,OAAOH,GAGDrP,GAAApB,UAAAiX,+BAAP,WAEC,GAAI7Q,GAAa3G,KAAKgX,aAAavX,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKgX,aAAa9X,GAAGuY,qBAGhB9V,GAAApB,UAAAmX,sBAAP,WAEC,MAAO1X,MAAKkX,UAEd,OAAAvV,IAjJ0BnB,EAmJ1Bb,GAAqBJ,QAAZoC,ITg7ENR,oCAAoCC,YAAY+R,qCAAqC,SAAS1U,EAAQkB,EAAOJ,GUtlFhH,GAAOkD,GAAQhE,EAAe,gCAC9B,IAAOiE,GAAajE,EAAa,qCAEjC,IAAOmE,GAAQnE,EAAe,gCV6oF9B,IUllFMsE,GAAS,WA0Md,QA1MKA,GA0MO4U,GApML3X,KAAA4X,UAAqB,GAAIhV,EAsM/B5C,MAAK6X,eAAiBF,EAjMvBhX,OAAAC,eAAWmC,EAAAxC,UAAA,cVglFJM,IUhlFP,WAEC,GAAIiX,GAAoBpV,EAAcqV,WAAW/X,KAAK6X,eAAejN,WACrEkN,GAASE,QAET,OAAOF,IVglFD/W,WAAY,KACZC,aAAc,MU/jFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,8BVykFJM,IUzkFP,WAEC,MAAOb,MAAKiY,6BV0kFNlX,WAAY,KACZC,aAAc,MU7jFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,sBV2kFJM,IU3kFP,WAEC,MAAOb,MAAKkY,qBV4kFNnX,WAAY,KACZC,aAAc,MUvkFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,cV6kFJM,IU7kFP,WAEC,GAAIiX,GAAoBpV,EAAcyV,MAAMnY,KAAK6X,eAAejN,WAChEkN,GAASE,QAET,OAAOF,IV6kFD/W,WAAY,KACZC,aAAc,MUxkFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,iBV8kFJM,IU9kFP,WAEC,MAAO6B,GAAcqV,WAAW/X,KAAK6X,eAAejN,aV+kF9C7J,WAAY,KACZC,aAAc,MU1kFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,cVglFJM,IUhlFP,WAEC,GAAIiX,GAAoBpV,EAAc0V,SAASpY,KAAK6X,eAAejN,WACnEkN,GAASE,QAET,OAAOF,IVglFD/W,WAAY,KACZC,aAAc,MUpjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,YVmkFJM,IUnkFP,WAEC,MAAOb,MAAK6X,eAAejN,YVokFrBpE,IUjkFP,SAAoBO,GAEnB/G,KAAK6X,eAAejN,WAAa7D,GVkkF3BhG,WAAY,KACZC,aAAc,MUjjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,eVwjFJM,IUxjFP,WAEC,MAAOb,MAAKqY,cVyjFNtX,WAAY,KACZC,aAAc,MUpjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,YV0jFJM,IU1jFP,WAEC,MAAOb,MAAK6X,eAAejN,WAAWoB,UV2jFhCxF,IUxjFP,SAAoBC,GAEnBzG,KAAK6X,eAAe3Q,EAAIT,EAAMS,CAC9BlH,MAAK6X,eAAezQ,EAAIX,EAAMW,CAC9BpH,MAAK6X,eAAexQ,EAAIZ,EAAMY,GVyjFxBtG,WAAY,KACZC,aAAc,MUpjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,eV0jFJM,IU1jFP,WAEC,MAAO6B,GAAc0V,SAASpY,KAAK6X,eAAejN,aV2jF5C7J,WAAY,KACZC,aAAc,MUtjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,YV4jFJM,IU5jFP,WAEC,MAAO,IAAI+B,GAAS5C,KAAK6X,eAAe5O,UAAWjJ,KAAK6X,eAAe3O,UAAWlJ,KAAK6X,eAAe1O,YV6jFhG3C,IU1jFP,SAAoBC,GAEnBzG,KAAK6X,eAAe5O,UAAYxC,EAAMS,CACtClH,MAAK6X,eAAe3O,UAAYzC,EAAMW,CACtCpH,MAAK6X,eAAe1O,UAAY1C,EAAMY,GV2jFhCtG,WAAY,KACZC,aAAc,MUtjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,SV4jFJM,IU5jFP,WAEC,MAAO,IAAI+B,GAAS5C,KAAK6X,eAAeS,OAAQtY,KAAK6X,eAAeU,OAAQvY,KAAK6X,eAAeW,SV6jF1FhS,IU1jFP,SAAiBC,GAEhBzG,KAAK6X,eAAeS,OAAS7R,EAAMS,CACnClH,MAAK6X,eAAeU,OAAS9R,EAAMW,CACnCpH,MAAK6X,eAAeW,OAAS/R,EAAMY,GV2jF7BtG,WAAY,KACZC,aAAc,MUtjFrBL,QAAAC,eAAWmC,EAAAxC,UAAA,YV4jFJM,IU5jFP,WAEC,MAAO6B,GAAcyV,MAAMnY,KAAK6X,eAAejN,aV6jFzC7J,WAAY,KACZC,aAAc,MUpiFd+B,GAAAxC,UAAAkY,oBAAP,SAA2BC,GAE1B,MAAO,IAAIjW,GASLM,GAAAxC,UAAAoY,YAAP,SAAmBvJ,GAElBpP,KAAK6X,eAAetI,eAAe3M,EAAS8L,OAAQU,GAQ9CrM,GAAAxC,UAAAqY,aAAP,SAAoBxJ,GAEnBpP,KAAK6X,eAAetI,eAAe3M,EAAS8L,QAASU,GAS/CrM,GAAAxC,UAAAsY,SAAP,SAAgBzJ,GAEfpP,KAAK6X,eAAetI,eAAe3M,EAASoL,QAASoB,GAQ/CrM,GAAAxC,UAAAuY,UAAP,SAAiB1J,GAEhBpP,KAAK6X,eAAetI,eAAe3M,EAASoL,OAAQoB,GAQ9CrM,GAAAxC,UAAAwY,OAAP,SAAc3J,GAEbpP,KAAK6X,eAAetI,eAAe3M,EAASiK,OAAQuC,GAQ9CrM,GAAAxC,UAAAyY,SAAP,SAAgB5J,GAEfpP,KAAK6X,eAAetI,eAAe3M,EAASiK,QAASuC,GAEvD,OAAArM,KAEmBpD,GAAAJ,QAAVwD,IV2iFN8P,gCAAgCzR,UAAU0R,qCAAqC1R,UAAU6R,gCAAgC7R,YAAY6X,2CAA2C,SAASxa,EAAQkB,EAAOJ,GAC3M,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GWr5FtB,IAAO6Y,GAAmBza,EAAY,2CAItC,IAAOkD,GAAWlD,EAAc,sCX85FhC,IWh5FM0a,GAAe,SAAAzY,GAASX,EAAxBoZ,EAAezY,EA8BpB,SA9BKyY,GA8BOtX,EAAiCC,EAAiBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7DrB,EAAAlB,KAAAQ,KAEAA,MAAKgC,aAAeF,CACpB9B,MAAKiC,aAAeJ,CACpB7B,MAAK+B,SAAWA,EAzBjBpB,OAAAC,eAAWuY,EAAA5Y,UAAA,aXw5FJM,IWx5FP,WAEC,MAAOsY,GAAgBjY,WXy5FjBH,WAAY,KACZC,aAAc,MWp5FrBL,QAAAC,eAAWuY,EAAA5Y,UAAA,eX05FJM,IW15FP,WAEC,MAAOb,MAAKiC,cX25FNlB,WAAY,KACZC,aAAc,MWv4FdmY,GAAA5Y,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,MA1CAmZ,GAAAjY,UAAmB,yBAEnBiY,GAAAjX,WAAyBgX,CA0CxC,OAAAC,IA9C8BxX,EAgD9BhC,GAAyBJ,QAAhB4Z,IX+4FNC,2CAA2ChY,UAAUgB,sCAAsC,wCAAwCiX,oDAAoD,SAAS5a,EAAQkB,EAAOJ,GAClN,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYp9FtB,IAAOqC,GAAajE,EAAc,qCAClC,IAAO6a,GAAmB7a,EAAa,2CAIvC,IAAO8a,GAAkB9a,EAAa,+CAGtC,IAAO+a,GAAmB/a,EAAa,iDZs9FvC,IY/8FMgb,GAAsB,SAAA/Y,GAASX,EAA/B0Z,EAAsB/Y,EAoB3B,SApBK+Y,GAoBO/D,GAEXhV,EAAAlB,KAAAQ,KAAM0V,EAnBC1V,MAAAgF,GAAY,CACZhF,MAAAiF,GAAY,CACZjF,MAAAkF,GAAY,CACZlF,MAAAoJ,OAAgB,CAChBpJ,MAAAyH,QAAiB,CACjBzH,MAAAgH,OAAgB,CAChBhH,MAAA0Z,SAAkB,CAClB1Z,MAAA2Z,SAAkB,CAClB3Z,MAAA4Z,SAAkB,CAClB5Z,MAAA6Z,cAAuB,CACvB7Z,MAAA8Z,cAAuB,CACvB9Z,MAAA+Z,cAAuB,EAcxBN,EAAAlZ,UAAAyZ,QAAP,WAECha,KAAKgF,GAAKhF,KAAKiF,GAAKjF,KAAKkF,GAAK,CAC9BlF,MAAKoJ,OAASpJ,KAAKyH,QAAUzH,KAAKgH,OAAS,CAC3ChH,MAAK0Z,SAAW1Z,KAAK2Z,SAAW3Z,KAAK4Z,SAAW,CAChD5Z,MAAK6Z,cAAgB7Z,KAAK8Z,cAAgB9Z,KAAK+Z,cAAgB,EAMzDN,GAAAlZ,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGna,KAAKoa,cACPpa,KAAKqa,UAEN,KAAK,GAAInb,GAAW,EAAGA,EAAIib,IAAajb,EAAG,CAE1C,GAAIob,GAAgBJ,EAAOhb,EAC3B,IAAID,GAAWqb,EAAMrb,CACrB,IAAIiB,GAAWoa,EAAMpa,CACrB,IAAIqa,GAAWD,EAAMC,CACrB,IAAIC,GAAwBvb,EAAI,GAAIe,KAAK6Z,cAAgB7Z,KAAK6Z,aAC9D,IAAIY,GAAwBva,EAAI,GAAIF,KAAK8Z,cAAgB9Z,KAAK8Z,aAC9D,IAAIY,GAAwBH,EAAI,GAAIva,KAAK+Z,cAAgB/Z,KAAK+Z,aAC9D,IAAIY,GAAkB1b,GAAGe,KAAK0Z,SAAWc,GAAkBta,GAAGF,KAAK2Z,SAAWc,GAAkBF,GAAGva,KAAK4Z,SAAWc,GAAkBJ,EAAMra,CAE3I,IAAI0a,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAAlZ,UAAAqa,gBAAP,SAAuB5O,EAAmB6O,EAAoBC,GAE7D,GAAG9a,KAAKoa,cACPpa,KAAKqa,UAEN,OAAOra,MAAK+a,KAAKH,gBAAgB5O,EAAU6O,EAAWC,GAKhDrB,GAAAlZ,UAAAya,gBAAP,SAAuBV,GAEtB,GAAIrb,GAAWqb,EAAMrb,CACrB,IAAIiB,GAAWoa,EAAMpa,CACrB,IAAIqa,GAAWD,EAAMC,CACrB,IAAIU,GAAwBhc,EAAEe,KAAK0Z,SAAWxZ,EAAEF,KAAK2Z,SAAWY,EAAEva,KAAK4Z,SAAWU,EAAMra,CAExF,IAAIhB,EAAI,EACPA,GAAKA,CAEN,IAAIiB,EAAI,EACPA,GAAKA,CAEN,IAAIqa,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBjc,EAAEe,KAAK6Z,cAAgB3Z,EAAEF,KAAK8Z,cAAgBS,EAAEva,KAAK+Z,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAAlZ,UAAA8Z,SAAP,WAEC3Z,EAAAH,UAAM8Z,SAAQ7a,KAAAQ,KAEdA,MAAK+a,KAAO/a,KAAKsb,SAASzU,QAC1B,IAAI0U,GAAkBvb,KAAKsb,SAASzT,cACpC,IAAI2T,GAAYxb,KAAK+a,KAAKlR,MAAM,CAChC,IAAI4R,GAAYzb,KAAK+a,KAAKvT,OAAO,CACjC,IAAIkU,GAAY1b,KAAK+a,KAAKjU,MAAM,CAChC,IAAI6U,GAAY3b,KAAK+a,KAAK7T,EAAIsU,CAC9B,IAAII,GAAY5b,KAAK+a,KAAK3T,EAAIqU,CAC9B,IAAII,GAAY7b,KAAK+a,KAAK1T,EAAIqU,CAC9B,IAAI9O,GAAelK,EAAcuK,kBAEjCsO,GAAOO,cAAclP,EAErB,IAAImP,GAAanP,EAAI,GAAIoP,EAAapP,EAAI,GAAIqP,EAAarP,EAAI,GAAIsP,EAAatP,EAAI,GACpF,IAAIuP,GAAavP,EAAI,GAAIwP,EAAaxP,EAAI,GAAIyP,EAAazP,EAAI,GAAI0P,EAAa1P,EAAI,GACpF,IAAI2P,GAAa3P,EAAI,GAAI4P,EAAa5P,EAAI,GAAI6P,EAAa7P,EAAI,IAAK8P,EAAa9P,EAAI,GAErF5M,MAAK0Z,SAAWiC,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EAAMC,CAC3Clc,MAAK2Z,SAAWgC,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EAAMC,CAC3Ctc,MAAK4Z,SAAW+B,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAAMC,CAE3C1c,MAAK6Z,cAAgBxK,KAAKsN,IAAInB,EAAGO,EAAMN,EAAGO,EAAMN,EAAGO,EACnDjc,MAAK8Z,cAAgBzK,KAAKsN,IAAInB,EAAGW,EAAMV,EAAGW,EAAMV,EAAGW,EACnDrc,MAAK+Z,cAAgB1K,KAAKsN,IAAInB,EAAGe,EAAMd,EAAGe,EAAMd,EAAGe,EAEnD,IAAIzc,KAAK4c,QAAS,CACjB5c,KAAK4c,QAAQ/S,MAAQ7J,KAAK+a,KAAKlR,KAC/B7J,MAAK4c,QAAQpV,OAASxH,KAAK+a,KAAKvT,MAChCxH,MAAK4c,QAAQ9V,MAAQ9G,KAAK+a,KAAKjU,KAC/B9G,MAAK6c,kBAAkBC,UAAUC,SAAWxB,EAG7Cvb,KAAKoJ,OAASpJ,KAAK6Z,cAAc,CACjC7Z,MAAKyH,QAAUzH,KAAK8Z,cAAc,CAClC9Z,MAAKgH,OAAShH,KAAK+Z,cAAc,CAEjC/Z,MAAKgF,GAAKhF,KAAK0Z,SAAW1Z,KAAK6Z,aAC/B7Z,MAAKiF,GAAKjF,KAAK2Z,SAAW3Z,KAAK8Z,aAC/B9Z,MAAKkF,GAAKlF,KAAK4Z,SAAW5Z,KAAK+Z,cAGzBN,GAAAlZ,UAAAyc,wBAAP,WAEChd,KAAK4c,QAAU,GAAIpD,EACnBxZ,MAAK4c,QAAQK,aAAe,iBAE5B,OAAcjd,MAAK4c,QAAQM,eAE7B,OAAAzD,IAhJqCF,EAkJrC5Z,GAAgCJ,QAAvBka,IZ46FN3G,qCAAqC1R,UAAU+b,2CAA2C/b,UAAUgc,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAAS7e,EAAQkB,EAAOJ,GAC7W,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GallGtB,IAAOiZ,GAAmB7a,EAAa,2CAKvC,IAAO8a,GAAkB9a,EAAa,+CAGtC,IAAO8e,GAAqB9e,EAAY,mDAExC,IAAM+e,GAAc,SAAA9c,GAASX,EAAvByd,EAAc9c,EASnB,SATK8c,GASO9H,GAEXhV,EAAAlB,KAAAQ,KAAM0V,EARC1V,MAAAyd,QAAiB,CACjBzd,MAAA0Z,SAAkB,CAClB1Z,MAAA2Z,SAAkB,CAClB3Z,MAAA4Z,SAAkB,EAQnB4D,EAAAjd,UAAAyZ,QAAP,WAECha,KAAK0Z,SAAW1Z,KAAK2Z,SAAW3Z,KAAK4Z,SAAW,CAChD5Z,MAAKyd,QAAU,EAGTD,GAAAjd,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGna,KAAKoa,cACPpa,KAAKqa,UAEN,KAAK,GAAInb,GAAW,EAAGA,EAAIib,IAAajb,EAAG,CAC1C,GAAIob,GAAgBJ,EAAOhb,EAC3B,IAAIsb,GAAwBF,EAAMrb,EAAI,GAAIe,KAAKyd,QAAUzd,KAAKyd,OAC9D,IAAIhD,GAAwBH,EAAMpa,EAAI,GAAIF,KAAKyd,QAAUzd,KAAKyd,OAC9D,IAAI/C,GAAwBJ,EAAMC,EAAI,GAAIva,KAAKyd,QAAUzd,KAAKyd,OAC9D,IAAI9C,GAAkBL,EAAMrb,GAAIe,KAAK0Z,SAAWc,GAAmBF,EAAMpa,GAAIF,KAAK2Z,SAAWc,GAAkBH,EAAMC,GAAIva,KAAK4Z,SAAWc,GAAmBJ,EAAMra,CAClK,IAAI0a,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD6C,GAAAjd,UAAAqa,gBAAP,SAAuB5O,EAAmB6O,EAAoBC,GAE7D,GAAG9a,KAAKoa,cACPpa,KAAKqa,UAEN,OAAOra,MAAK0d,QAAQ9C,gBAAgB5O,EAAU6O,EAAWC,GAInD0C,GAAAjd,UAAAya,gBAAP,SAAuBV,GAEtB,GAAIrb,GAAWqb,EAAMrb,CACrB,IAAIiB,GAAWoa,EAAMpa,CACrB,IAAIqa,GAAWD,EAAMC,CACrB,IAAIoD,GAAY1e,EAAEe,KAAK0Z,SAAWxZ,EAAEF,KAAK2Z,SAAWY,EAAEva,KAAK4Z,SAAWU,EAAMra,CAE5E,IAAIhB,EAAI,EACPA,GAAKA,CAEN,IAAIiB,EAAI,EACPA,GAAKA,CAEN,IAAIqa,EAAI,EACPA,GAAKA,CAEN,IAAIqD,IAAa3e,EAAIiB,EAAIqa,GAAGva,KAAKyd,OAEjC,OAAOE,GAAKC,EAAItE,EAAoB6B,MAAQwC,GAAMC,EAAItE,EAAoB8B,KAAO9B,EAAoB+B,UAG/FmC,GAAAjd,UAAA8Z,SAAP,WAEC3Z,EAAAH,UAAM8Z,SAAQ7a,KAAAQ,KAEdA,MAAK0d,QAAU1d,KAAKsb,SAAS5P,WAC7B,IAAI6P,GAAkBvb,KAAKsb,SAASzT,cAEpC,IAAI8T,GAAY3b,KAAK0d,QAAQxW,CAC7B,IAAI0U,GAAY5b,KAAK0d,QAAQtW,CAC7B,IAAIyU,GAAY7b,KAAK0d,QAAQrW,CAC7B,IAAIxI,GAAWmB,KAAK0d,QAAQG,MAE5B,IAAIjR,GAAoB,GAAI/G,OAAc,GAC1C0V,GAAOO,cAAclP,EAErB,IAAImP,GAAanP,EAAI,GAAIoP,EAAapP,EAAI,GAAIqP,EAAarP,EAAI,GAAIsP,EAAatP,EAAI,GACpF,IAAIuP,GAAavP,EAAI,GAAIwP,EAAaxP,EAAI,GAAIyP,EAAazP,EAAI,GAAI0P,EAAa1P,EAAI,GACpF,IAAI2P,GAAa3P,EAAI,GAAI4P,EAAa5P,EAAI,GAAI6P,EAAa7P,EAAI,IAAK8P,EAAa9P,EAAI,GAErF5M,MAAK0Z,SAAWiC,EAAGI,EAAMH,EAAGI,EAAMH,EAAGI,EAAMC,CAC3Clc,MAAK2Z,SAAWgC,EAAGQ,EAAMP,EAAGQ,EAAMP,EAAGQ,EAAMC,CAC3Ctc,MAAK4Z,SAAW+B,EAAGY,EAAMX,EAAGY,EAAMX,EAAGY,EAAMC,CAE3C,IAAIoB,GAAY/B,EAAMC,EAAMC,CAC5B,IAAI8B,GAAY5B,EAAMC,EAAMC,CAC5B,IAAI2B,GAAYzB,EAAMC,EAAMC,CAC5Bzc,MAAKyd,QAAU5e,EAAEwQ,KAAKC,MAAMwO,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIhe,KAAK4c,QAAS,CACjB5c,KAAK4c,QAAQiB,OAAShf,CACtBmB,MAAK6c,kBAAkB3V,EAAIyU,CAC3B3b,MAAK6c,kBAAkBzV,EAAIwU,CAC3B5b,MAAK6c,kBAAkBxV,EAAIwU,CAC3B7b,MAAK6c,kBAAkBC,UAAUC,SAAWxB,GAIvCiC,GAAAjd,UAAAyc,wBAAP,WAEChd,KAAK4c,QAAU,GAAIW,EACnBvd,MAAK4c,QAAQK,aAAe,iBAE5B,OAAcjd,MAAK4c,QAAQM,eAE7B,OAAAM,IAhH6BjE,EAkH7B5Z,GAAwBJ,QAAfie,IbgjGNL,2CAA2C/b,UAAUgc,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAAS3e,EAAQkB,EAAOJ,Gc1qGtU,GAAOsD,GAAmBpE,EAAa,6CAKvC,IAAM8a,GAAkB,WAMvB,QANKA,GAMO7D,GAFL1V,KAAAoa,cAAwB,IAI9Bpa,MAAKsb,SAAW5F,EAGjB/U,OAAAC,eAAW2Y,EAAAhZ,UAAA,mBdkqGJM,IclqGP,WAEC,GAAIb,KAAK6c,mBAAqB,KAAM,CACnC7c,KAAK6c,kBAAoB7c,KAAKgd,yBAE9Bhd,MAAKqa,WAGN,MAAOra,MAAK6c,mBdiqGN9b,WAAY,KACZC,aAAc,Mc/pGduY,GAAAhZ,UAAAyZ,QAAP,WAEC,KAAM,IAAInX,GAGJ0W,GAAAhZ,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAItX,GAGJ0W,GAAAhZ,UAAAuI,MAAP,WAEC,KAAM,IAAIjG,GAGJ0W,GAAAhZ,UAAAqa,gBAAP,SAAuB5O,EAAmB6O,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAAhZ,UAAAya,gBAAP,SAAuBV,GAEtB,KAAM,IAAIzX,GAGJ0W,GAAAhZ,UAAA8Z,SAAP,WAECra,KAAKoa,cAAgB,MAGfb,GAAAhZ,UAAA2d,WAAP,WAECle,KAAKoa,cAAgB,KAGfb,GAAAhZ,UAAAyc,wBAAP,WAEC,KAAM,IAAIna,GAEZ,OAAA0W,KAEA5Z,GAA4BJ,QAAnBga,IdopGN7G,6CAA6CtR,YAAY+c,wCAAwC,SAAS1f,EAAQkB,EAAOJ,GAI5H,Ge7tGM6e,GAAU,WAAhB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,iBAA0B,gBAK1BF,GAAAG,KAAc,MAC7B,OAAAH,KAEoBze,GAAAJ,QAAX6e,Of8tGHI,wCAAwC,SAAS/f,EAAQkB,EAAOJ,GACtE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgBxvGtB,IAAOiZ,GAAmB7a,EAAa,2CAGvC,IAAO8a,GAAkB9a,EAAa,+CAGtC,IAAMggB,GAAU,SAAA/d,GAASX,EAAnB0e,EAAU/d,EAIf,SAJK+d,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEXhe,EAAAlB,KAAAQ,KAAM,KAENA,MAAK2e,UAAYD,EAIXD,EAAAle,UAAAuI,MAAP,WAEC,MAAO,IAAI2V,GAAWze,KAAK2e,WAIrBF,GAAAle,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOna,MAAK2e,UAGNF,GAAAle,UAAAya,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAAoD,IA3ByBlF,EA6BL5Z,GAAAJ,QAAXkf,IhB+uGNtB,2CAA2C/b,UAAUgc,+CAA+C,iDAAiDzH,wDAAwD,SAASlX,EAAQkB,EAAOJ,GACxO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiBrxGtB,IAAOue,GAAangB,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAOogB,GAAUpgB,EAAe,oCAEhC,IAAO0E,GAAa1E,EAAc,wCjB4yGlC,IiBnxGMoV,GAAsB,SAAAnT,GAASX,EAA/B8T,EAAsBnT,EAqF3B,SArFKmT,KAuFJnT,EAAAlB,KAAAQ,KAnFOA,MAAA8e,eAAyB,IACzB9e,MAAA+e,UAAiC,GAAIlZ,OAM7ClF,OAAAC,eAAWiT,EAAAtT,UAAA,ajB6xGJM,IiB7xGP,WAEC,MAAOgT,GAAuB3S,WjB8xGxBH,WAAY,KACZC,aAAc,MiBvwGrBL,QAAAC,eAAWiT,EAAAtT,UAAA,iBjB+xGJM,IiB/xGP,WAEC,MAAOb,MAAK8e,gBjBgyGNtY,IiB7xGP,SAAyBC,GAExB,GAAIzG,KAAK8e,gBAAkBrY,EAC1B,MAEDzG,MAAK8e,eAAiBrY,CAEtBzG,MAAKmI,6BAA6BnI,KAAK0H,SAAU1H,KAAK0H,SAASU,cAAgB,OjB4xGzErH,WAAY,KACZC,aAAc,MiBvxGrBL,QAAAC,eAAWiT,EAAAtT,UAAA,ejB6xGJM,IiB7xGP,WAEC,MAAOb,MAAK+e,UAAUtf,QjB8xGhBsB,WAAY,KACZC,aAAc,MiBhuGd6S,GAAAtT,UAAAye,SAAP,SAAgBC,GAEf,GAAIA,GAAS,KACZ,KAAM,IAAI7f,GAAM,kCAGjB,IAAI6f,EAAMvX,SACTuX,EAAMvX,SAASwX,oBAAoBD,EAEpCA,GAAMpP,WAAW7P,KAEjBA,MAAK+e,UAAU9N,KAAKgO,EAEpB,OAAOA,GAiCDpL,GAAAtT,UAAA4e,WAAP,SAAkBF,EAAqB9N,GAEtC,MAAO8N,GAGDpL,GAAAtT,UAAA6e,YAAP,WAAmB,GAAAC,KjByvGZ,KiBzvGY,GAAAC,GAAA,EAAAA,EAAAjJ,UAAA5W,OAAA6f,IAAkC,CAAlCD,EAAAC,EAAA,GAAAjJ,UAAAiJ,GAElB,GAAI3Y,GAAa0Y,EAAW5f,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKyH,EAAKzH,IAChCc,KAAKgf,SAASK,EAAWngB,IAMpB2U,GAAAtT,UAAAuI,MAAP,WAEC,GAAIA,GAA+B,GAAI+K,EACvC/K,GAAMD,MAAQ7I,KAAK6I,KACnBC,GAAM8B,WAAa5K,KAAK4K,UACxB9B,GAAMmH,UAAYjQ,KAAKiQ,SACvBnH,GAAM+B,KAAOA,IAEb,IAAIlE,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjC4J,EAAMkW,SAAShf,KAAK+e,UAAU7f,GAAG4J,QAGlC,OAAOA,GAeD+K,GAAAtT,UAAAgf,SAAP,SAAgBN,GAEf,MAAOjf,MAAK+e,UAAU3N,QAAQ6N,IAAU,EAMlCpL,GAAAtT,UAAAif,oBAAP,WAECxf,KAAKiB,SAEL,OAAOjB,KAAKyf,YAAc,EACzBzf,KAAK0f,WAAW,GAAGze,UAYd4S,GAAAtT,UAAAmf,WAAP,SAAkBvO,GAEjB,GAAI8N,GAAsBjf,KAAK+e,UAAU5N,EAEzC,IAAI8N,GAAS,KACZ,KAAM,IAAIJ,GAAW,uDAEtB,OAAOI,GAiBDpL,GAAAtT,UAAAof,eAAP,SAAsB9U,GAErB,GAAIlE,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjC,GAAIc,KAAK+e,UAAU7f,GAAG2L,MAAQA,EAC7B,MAAO7K,MAAK+e,UAAU7f,EAExB,OAAO,MAWD2U,GAAAtT,UAAAoH,cAAP,SAAqBsX,GAEpB,GAAIW,GAAoB5f,KAAK+e,UAAU3N,QAAQ6N,EAE/C,IAAIW,IAAe,EAClB,KAAM,IAAIhB,GAAc,+CAEzB,OAAOgB,GAsBD/L,GAAAtT,UAAAsf,qBAAP,SAA4B/T,GAE3B,MAAO,IAAIjG,OAsBLgO,GAAAtT,UAAAyK,YAAP,SAAmBiU,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAI7f,GAAM,iCAEjBY,MAAKkf,oBAAoBD,EAEzBA,GAAMpP,WAAW,KAEjB,OAAOoP,GAyBDpL,GAAAtT,UAAAuf,cAAP,SAAqB3O,GAEpB,MAAOnR,MAAKgL,YAAYhL,KAAK+e,UAAU5N,IAmBjC0C,GAAAtT,UAAAwf,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAInB,GAAW,+CAEtB,IAAIoB,EAAWjgB,KAAK+e,UAAUtf,OAC7B,KAAM,IAAIof,GAAW,6CAEtB,KAAI,GAAI3f,GAAoB8gB,EAAY9gB,EAAI+gB,EAAU/gB,IACrDc,KAAKgL,YAAYhL,KAAK+e,UAAU7f,IA+B3B2U,GAAAtT,UAAA2f,cAAP,SAAqBjB,EAAqB9N,IAenC0C,GAAAtT,UAAA4f,aAAP,SAAoBC,EAAsBC,IAcnCxM,GAAAtT,UAAA+f,eAAP,SAAsBC,EAAuBC,IAStC3M,GAAAtT,UAAAyH,0BAAP,WAECtH,EAAAH,UAAMyH,0BAAyBxI,KAAAQ,KAE/B,IAAI2G,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAK+e,UAAU7f,GAAG8I,4BAMb6L,GAAAtT,UAAA4H,6BAAP,SAAoC1B,GAEnC/F,EAAAH,UAAM4H,6BAA4B3I,KAAAQ,KAACyG,EAEnC,IAAIE,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAK+e,UAAU7f,GAAGiJ,6BAA6BnI,KAAK8e,gBAM/CjL,GAAAtT,UAAAoJ,2BAAP,SAAkClD,GAEjC/F,EAAAH,UAAMoJ,2BAA0BnK,KAAAQ,KAACyG,EAEjC,IAAIE,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAK+e,UAAU7f,GAAGyK,2BAA2B3J,KAAKiE,sBAM7C4P,GAAAtT,UAAAkI,0BAAP,SAAiChC,EAAiByJ,GAEjDxP,EAAAH,UAAMkI,0BAAyBjJ,KAAAQ,KAACyG,EAAOyJ,EAEvC,IAAIvJ,GAAa3G,KAAK+e,UAAUtf,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAK+e,UAAU7f,GAAGuJ,0BAA0BzI,KAAKyP,oBAAqBS,GAQhE2D,GAAAtT,UAAA2e,oBAAR,SAA4BD,GAE3Bjf,KAAK+e,UAAU1N,OAAOrR,KAAK2H,cAAcsX,GAAQ,EAEjD,OAAOA,GAlgBMpL,GAAA3S,UAAmB,gCAogBlC,OAAA2S,IAtgBqC1Q,EAwgBLxD,GAAAJ,QAAvBsU,IjBwsGN4M,uCAAuCrf,UAAUsf,+BAA+Btf,UAAUuf,oCAAoCvf,UAAUiB,wCAAwC,0CAA0Cue,wCAAwC,SAASniB,EAAQkB,EAAOJ,GAC7R,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkBpvHtB,IAAOwgB,GAAkBpiB,EAAa,6CACtC,IAAOqiB,GAAWriB,EAAe,sCAIjC,IAAOsiB,GAAUtiB,EAAe,oCAEhC,IAAOuiB,GAAYviB,EAAe,sCAClC,IAAOwiB,GAAWxiB,EAAe,qCACjC,IAAOyiB,GAAWziB,EAAe,qCAGjC,IAAOoV,GAAsBpV,EAAY,uDlBgzHzC,IkB7uHM0iB,GAAM,SAAAzgB,GAASX,EAAfohB,EAAMzgB,EAsHX,SAtHKygB,GAsHOC,EAAgCC,GAtH7C,GAAAC,GAAAthB,IAsHa,IAAAohB,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3C3gB,EAAAlB,KAAAQ,KAEAA,MAAKuhB,iBAAmB,GAAI1b,MAC5B7F,MAAKwhB,aAAeJ,CACpBphB,MAAKyhB,YAAcJ,CAEnBrhB,MAAK0hB,4BAA8B,SAACC,GAAsB,MAAAL,GAAKM,mBAAmBD,GAClF3hB,MAAK6hB,yBAA2B,SAACF,GAAqB,MAAAL,GAAKQ,gBAAgBH,IAnF5EhhB,OAAAC,eAAWugB,EAAA5gB,UAAA,WlBgxHJM,IkBhxHP,WAEC,MAAOb,MAAKyW,UlBixHN1V,WAAY,KACZC,aAAc,MkB/vHrBL,QAAAC,eAAWugB,EAAA5gB,UAAA,qBlBkxHJM,IkBlxHP,WAEC,MAAOb,MAAK+hB,oBlBmxHNhhB,WAAY,KACZC,aAAc,MkBhtHdmgB,GAAA5gB,UAAAyhB,MAAP,WAEC,GAAIhiB,KAAKwhB,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYliB,KAAKyhB,YAC1CQ,GAAIE,wBACJniB,MAAKuhB,iBAAmB,IACxB,QAED,GAAIriB,EACJ,IAAIO,GAAwBO,KAAKuhB,iBAAiB9hB,MAClD,KAAKP,EAAI,EAAGA,EAAIO,EAAQP,IAAK,CAC5Bc,KAAKoiB,gBAAgBpiB,KAAKuhB,iBAAiBriB,GAC3Cc,MAAKuhB,iBAAiBriB,GAAGmjB,MACzBriB,MAAKuhB,iBAAiBriB,GAAK,KAE5Bc,KAAKuhB,iBAAmB,KA0KlBJ,GAAA5gB,UAAA+hB,KAAP,SAAYC,EAAoBC,EAAmCC,EAAkBC,GAArD,GAAAF,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEpF,GAAIC,EAEJ,IAAI3iB,KAAKwhB,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYliB,KAAKyhB,YAC1CkB,GAAQV,EAAIK,KAAKC,EAASC,EAASC,EAAIC,OACjC,CACN,GAAIE,GAAqB,GAAI9B,EAC7B9gB,MAAKuhB,iBAAiBtQ,KAAK2R,EAC3BD,GAAQC,EAAON,KAAKC,EAASC,EAASC,EAAIC,GAG3CC,EAAM5Y,iBAAiBkX,EAAY4B,kBAAmB7iB,KAAK0hB,4BAC3DiB,GAAM5Y,iBAAiBgX,EAAW+B,eAAgB9iB,KAAK6hB,yBAGvDc,GAAMI,SAASC,kBAAkBhjB,KAAKijB,YACtCN,GAAMI,SAASG,uBAAuBljB,KAAKmjB,aAE3C,OAAOR,GAyFDxB,GAAA5gB,UAAA6iB,SAAP,SAAgBC,EAAUb,EAAmCC,EAAkBC,GAArD,GAAAF,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE9E,GAAIC,EAEJ,IAAI3iB,KAAKwhB,aAAc,CACtB,GAAIS,EACJA,GAAMpB,EAAmBqB,YAAYliB,KAAKyhB,YAC1CkB,GAAQV,EAAImB,SAASC,EAAMb,EAASC,EAAIC,OAClC,CACN,GAAIE,GAAqB,GAAI9B,EAC7B9gB,MAAKuhB,iBAAiBtQ,KAAK2R,EAC3BD,GAAQC,EAAOQ,SAASC,EAAM,GAAIb,EAASC,EAAIC,GAGhDC,EAAM5Y,iBAAiBkX,EAAY4B,kBAAmB7iB,KAAK0hB,4BAC3DiB,GAAM5Y,iBAAiBgX,EAAW+B,eAAgB9iB,KAAK6hB,yBAGvDc,GAAMI,SAASC,kBAAkBhjB,KAAKijB,YACtCN,GAAMI,SAASG,uBAAuBljB,KAAKmjB,aAE3C,OAAOR,GA0BDxB,GAAA5gB,UAAA+iB,OAAP,YAccnC,GAAAoC,aAAd,SAA2BC,GAE1B1C,EAAYyC,aAAaC,GAYZrC,GAAAsC,cAAd,SAA4BC,GAE3B5C,EAAY2C,cAAcC,GAInBvC,GAAA5gB,UAAA6hB,gBAAR,SAAwBuB,GAEvBA,EAAW1U,oBAAoBgS,EAAY4B,kBAAmB7iB,KAAK0hB,4BACnEiC,GAAW1U,oBAAoB8R,EAAW+B,eAAgB9iB,KAAK6hB,0BAGxDV,GAAA5gB,UAAAuhB,gBAAR,SAAwBH,GAEvB3hB,KAAKoQ,cAAcuR,GAMZR,GAAA5gB,UAAA0iB,YAAR,SAAoBtB,GAEnB,GAAI3hB,KAAKkP,iBAAiB8R,EAAa4C,UAAW,CACjD5jB,KAAKoQ,cAAcuR,EACnB,OAAO,UACD,CACN,MAAO,QAODR,GAAA5gB,UAAA4iB,aAAR,SAAqBxB,GAEpB,GAAI3hB,KAAKkP,iBAAiBgS,EAAY2C,aAAc,CACnD7jB,KAAKoQ,cAAcuR,EACnB,OAAO,UACD,CACN,MAAO,QAODR,GAAA5gB,UAAAqhB,mBAAR,SAA2BD,GAE1B3hB,KAAKyW,SAA2BkL,EAAMmC,OAEtC,IAAI9jB,KAAKyW,SACRzW,KAAKgf,SAAShf,KAAKyW,SAEpBzW,MAAKoQ,cAAcuR,GAErB,OAAAR,IAjjBqBtN,EAmjBLlU,GAAAJ,QAAP4hB,IlBmsHN4C,oCAAoC3iB,UAAU4iB,sCAAsC5iB,UAAU6iB,qCAAqC7iB,UAAU8iB,qCAAqC9iB,UAAU+iB,6CAA6C/iB,UAAUgjB,sCAAsChjB,UAAUuU,uDAAuD,yDAAyD0O,uCAAuC,SAAS5lB,EAAQkB,EAAOJ,GACrd,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmB10ItB,IAAO6V,GAAezX,EAAc,yCAGpC,IAAOoV,GAAsBpV,EAAY,uDACzC,IAAOyE,GAAUzE,EAAe,uCAChC,IAAO6lB,GAAQ7lB,EAAgB,wCAC/B,IAAO8lB,GAAS9lB,EAAe,yCAG/B,IAAM+lB,GAAK,SAAA9jB,GAASX,EAAdykB,EAAK9jB,EASV,SATK8jB,KAWJ9jB,EAAAlB,KAAAQ,KATOA,MAAAykB,oBAAuC,GAAI5e,MAC3C7F,MAAA0kB,YAA+B,GAAI7e,MAIpC7F,MAAA2kB,iBAAmB,CAMzB3kB,MAAK4kB,WAAa,GAAIL,GAAU,GAAID,GAEpCtkB,MAAK6kB,iBAAmB,GAAIhR,EAE5B7T,MAAK6kB,iBAAiBhT,WAAW7R,KACjCA,MAAK6kB,iBAAiBhU,SAAW,IACjC7Q,MAAK6kB,iBAAiB5U,UAAYjQ,KAAK4kB,WAGjCJ,EAAAjkB,UAAAukB,mBAAP,SAA0BC,GAEzB,GAAI7lB,GAAW,CACf,IAAIyH,GAAa3G,KAAK0kB,YAAYjlB,MAElCslB,GAAU7U,MAAQlQ,IAElBA,MAAK2kB,kBAEL,OAAOzlB,EAAIyH,EACV3G,KAAK0kB,YAAYxlB,KAAK8lB,SAASD,GAGjCpkB,QAAAC,eAAW4jB,EAAAjkB,UAAA,anB2zIJM,ImB3zIP,WAEC,MAAOb,MAAK6kB,iBAAiB5U,WnB4zIvBzJ,ImBzzIP,SAAqBC,GAEpBzG,KAAK6kB,iBAAiB5U,UAAYxJ,CAElCzG,MAAKoQ,cAAc,GAAIlN,GAAWA,EAAW+hB,kBAAmBjlB,KAAK6kB,oBnByzI/D9jB,WAAY,KACZC,aAAc,MmBvzIdwjB,GAAAjkB,UAAAgf,SAAP,SAAgBN,GAEf,MAAOjf,MAAK6kB,iBAAiBtF,SAASN,GAGhCuF,GAAAjkB,UAAAye,SAAP,SAAgBC,GAEf,MAAOjf,MAAK6kB,iBAAiB7F,SAASC,GAGhCuF,GAAAjkB,UAAAyK,YAAP,SAAmBiU,GAElBjf,KAAK6kB,iBAAiB7Z,YAAYiU,GAG5BuF,GAAAjkB,UAAAuf,cAAP,SAAqB3O,GAEpBnR,KAAK6kB,iBAAiB/E,cAAc3O,GAI9BqT,GAAAjkB,UAAAmf,WAAP,SAAkBvO,GAEjB,MAAOnR,MAAK6kB,iBAAiBnF,WAAWvO,GAGzCxQ,QAAAC,eAAW4jB,EAAAjkB,UAAA,enB+yIJM,ImB/yIP,WAEC,MAAOb,MAAK6kB,iBAAiBpF,anBgzIvB1e,WAAY,KACZC,aAAc,MmB3yIdwjB,GAAAjkB,UAAAiQ,oBAAP,SAA2BP,GAE1BjQ,KAAKykB,oBAAoBxT,KAAKhB,EAG9B,IAAIjQ,KAAK0kB,YAAYtT,QAAQnB,KAAe,EAC3CjQ,KAAK0kB,YAAYzT,KAAKhB,GAMjBuU,GAAAjkB,UAAA+P,sBAAP,SAA6BL,GAE5BjQ,KAAKykB,oBAAoBpT,OAAOrR,KAAKykB,oBAAoBrT,QAAQnB,GAAY,EAG7E,IAAIjQ,KAAKykB,oBAAoBrT,QAAQnB,KAAe,EACnDjQ,KAAK0kB,YAAYrT,OAAOrR,KAAK0kB,YAAYtT,QAAQnB,GAAY,GAEhE,OAAAuU,IArGoBtO,EAuGLvW,GAAAJ,QAANilB,InB6yIN3N,yCAAyCzV,UAAUuU,uDAAuD,uDAAuDtC,uCAAuC,uCAAuC6R,wCAAwC,wCAAwCC,yCAAyC,2CAA2CC,sCAAsC,SAAS3mB,EAAQkB,EAAOJ,GoBz5Ipd,GAAO8lB,GAAQ5mB,EAAgB,iCAG/B,IAAO+lB,GAAK/lB,EAAgB,sCAG5B,IAAO6mB,GAAa7mB,EAAc,wCAElC,IAAO8mB,GAAM9mB,EAAgB,qCAC7B,IAAO+mB,GAAW/mB,EAAe,wCACjC,IAAOyE,GAAUzE,EAAe,uCAChC,IAAOgnB,GAAahnB,EAAc,0CAClC,IAAOinB,GAAYjnB,EAAe,2CAElC,IAAMknB,GAAI,WA0DT,QA1DKA,GA0DOC,EAAoB1V,EAAoBhC,GA1DrD,GAAAoT,GAAAthB,IA0DiC,IAAAkQ,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAhC,QAAA,GAAoB,CAApBA,EAAA,KAjC5ClO,KAAAoJ,OAAgB,CAChBpJ,MAAAyH,QAAiB,CAEjBzH,MAAA6lB,MAAe,CACf7lB,MAAA8lB,WAAoB,CACpB9lB,MAAA+lB,iBAA0B,CAC1B/lB,MAAAgmB,iBAA0B,CAE1BhmB,MAAAimB,eAAyB,IACzBjmB,MAAAkmB,cAAwB,IAOxBlmB,MAAAmmB,aAAuB,GAAIb,EAmBlCtlB,MAAKomB,iCAAmC,SAACzE,GAAqB,MAAAL,GAAK+E,wBAAwB1E,GAC3F3hB,MAAKsmB,6BAA+B,SAAC3E,GAAsB,MAAAL,GAAKiF,oBAAoB5E,GACpF3hB,MAAKwmB,2BAA6B,SAAC7E,GAAwB,MAAAL,GAAKmF,kBAAkB9E,GAClF3hB,MAAK0mB,0BAA4B,SAAC/E,GAAwB,MAAAL,GAAKqF,iBAAiBhF,GAEhF3hB,MAAKkQ,MAAQA,GAAS,GAAIsU,EAC1BxkB,MAAKkO,OAASA,GAAU,GAAIqX,EAC5BvlB,MAAK4lB,SAAWA,CAGhBgB,UAASC,KAAKC,MAAMC,OAAS,KAE7B/mB,MAAKgnB,aAAeJ,SAASK,cAAc,MAC3CjnB,MAAKgnB,aAAaF,MAAM9a,SAAW,UAEnC4a,UAASC,KAAKK,YAAYlnB,KAAKgnB,aAE/BhnB,MAAKmnB,cAAgBzB,EAAaxD,aAClCliB,MAAKmnB,cAAcC,aAAapnB,MAUzB2lB,EAAAplB,UAAA8lB,wBAAR,SAAgC1E,GAE/B,GAAI3hB,KAAKqnB,SACRrnB,KAAK2I,QAAQsH,UAAUqX,iBAAiBtnB,KAAKqnB,UAK/C1mB,QAAAC,eAAW+kB,EAAAplB,UAAA,UpBs2IJM,IoBt2IP,WAEC,MAAOb,MAAKunB,UpBu2INxmB,WAAY,KACZC,aAAc,MoBr2IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,UpBw2IJM,IoBx2IP,WAEC,MAAOb,MAAKwnB,UpBy2INzmB,WAAY,KACZC,aAAc,MoBp2IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,epB02IJM,IoB12IP,WAEC,MAAOb,MAAKgnB,cpB22INjmB,WAAY,KACZC,aAAc,MoBv2IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,YpB62IJM,IoB72IP,WAEC,MAAOb,MAAKynB,YpB82INjhB,IoB32IP,SAAoBC,GAEnB,GAAIzG,KAAKynB,YAAchhB,EACtB,MAED,IAAIzG,KAAKynB,WAAY,CACpBznB,KAAKynB,WAAWxmB,SAChBjB,MAAKynB,WAAWxY,oBAAoBwW,EAAciC,iBAAkB1nB,KAAKwmB,2BACzExmB,MAAKynB,WAAWxY,oBAAoBwW,EAAckC,gBAAiB3nB,KAAK0mB,2BAGzE1mB,KAAKynB,WAAahhB,CAElBzG,MAAKynB,WAAW1d,iBAAiB0b,EAAciC,iBAAkB1nB,KAAKwmB,2BACtExmB,MAAKynB,WAAW1d,iBAAiB0b,EAAckC,gBAAiB3nB,KAAK0mB,0BAGrE1mB,MAAK4nB,kBAAoB5nB,KAAKynB,WAAWI,yBAEzC,IAAI7nB,KAAKqnB,SACRrnB,KAAK4nB,kBAAkB1Z,OAASlO,KAAKqnB,QAGtCrnB,MAAKynB,WAAWK,eAAkB9nB,KAAK+lB,kBAAoB,GAAM,KAAM,GACvE/lB,MAAKynB,WAAWM,eAAkB/nB,KAAK+lB,kBAAoB,EAAK,KAAM,GACtE/lB,MAAKynB,WAAWO,eAAiBhoB,KAAK+lB,iBAAmB,KAAM,GAC/D/lB,MAAKynB,WAAWQ,kBAAoBjoB,KAAKgmB,gBACzChmB,MAAKynB,WAAW5d,MAAQ7J,KAAKoJ,MAC7BpJ,MAAKynB,WAAWjgB,OAASxH,KAAKyH,OAC9BzH,MAAKynB,WAAWS,aAAeloB,KAAKmoB,epBs2I9BpnB,WAAY,KACZC,aAAc,MoBj2IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,gBpBu2IJM,IoBv2IP,WAEC,MAAOb,MAAKmoB,epBw2IN3hB,IoBr2IP,SAAwBC,GAEvB,GAAIzG,KAAKmoB,eAAiB1hB,EACzB,MAEDzG,MAAKmoB,cAAgB1hB,CAErB,IAAIzG,KAAKynB,WACRznB,KAAKynB,WAAWS,aAAeloB,KAAKmoB,epBo2I/BpnB,WAAY,KACZC,aAAc,MoB/1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,mBpBq2IJM,IoBr2IP,WAEC,MAAOb,MAAK+lB,kBpBs2INvf,IoBn2IP,SAA2BC,GAE1B,GAAIzG,KAAK+lB,kBAAoBtf,EAC5B,MAEDzG,MAAK+lB,iBAAmBtf,CAExBzG,MAAKynB,WAAWK,eAAkBrhB,GAAS,GAAM,KAAM,GACvDzG,MAAKynB,WAAWM,eAAkBthB,GAAS,EAAK,KAAM,GACtDzG,MAAKynB,WAAWO,eAAiBvhB,EAAQ,KAAM,KpBk2IzC1F,WAAY,KACZC,aAAc,MoB51IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,mBpBm2IJM,IoBn2IP,WAEC,MAAOb,MAAKgmB,kBpBw2INxf,IoBj2IP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIzG,KAAKgmB,kBAAoBvf,EAC5B,MAEDzG,MAAKynB,WAAWQ,kBAAoBjoB,KAAKgmB,iBAAmBvf,GpBg2ItD1F,WAAY,KACZC,aAAc,MoB11IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,UpBi2IJM,IoBj2IP,WAEC,MAAOb,MAAKqnB,UpBq2IN7gB,IoB/1IP,SAAkBC,GAEjB,GAAIzG,KAAKqnB,UAAY5gB,EACpB,MAED,IAAIzG,KAAKqnB,SACRrnB,KAAKqnB,SAASpY,oBAAoBuW,EAAY4C,mBAAoBpoB,KAAKsmB,6BAExEtmB,MAAKqnB,SAAW5gB,CAEhB,IAAIzG,KAAK4nB,kBACR5nB,KAAK4nB,kBAAkB1Z,OAASlO,KAAKqnB,QAEtC,IAAIrnB,KAAK2I,QACR3I,KAAK2I,QAAQsH,UAAUqX,iBAAiBtnB,KAAKqnB,SAE9CrnB,MAAKqnB,SAAStd,iBAAiByb,EAAY4C,mBAAoBpoB,KAAKsmB,6BACpEtmB,MAAKkmB,cAAgB,IACrBlmB,MAAKimB,eAAiB,MpB21IhBllB,WAAY,KACZC,aAAc,MoBr1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,SpB41IJM,IoB51IP,WAEC,MAAOb,MAAK2I,SpBg2INnC,IoB11IP,SAAiBC,GAEhB,GAAIzG,KAAK2I,SAAWlC,EACnB,MAED,IAAIzG,KAAK2I,QACR3I,KAAK2I,QAAQsG,oBAAoB/L,EAAW+hB,kBAAmBjlB,KAAKomB,iCAErEpmB,MAAK2I,QAAUlC,CAEfzG,MAAK2I,QAAQoB,iBAAiB7G,EAAW+hB,kBAAmBjlB,KAAKomB,iCAEjE,IAAIpmB,KAAKqnB,SACRrnB,KAAK2I,QAAQsH,UAAUqX,iBAAiBtnB,KAAKqnB,WpBu1IxCtmB,WAAY,KACZC,aAAc,MoBj1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,apBw1IJM,IoBx1IP,WAEC,MAAOb,MAAK8lB,YpBy1IN/kB,WAAY,KACZC,aAAc,MoBp1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,SpB01IJM,IoB11IP,WAEC,MAAOb,MAAKoJ,QpB21IN5C,IoBx1IP,SAAiBC,GAEhB,GAAIzG,KAAKoJ,QAAU3C,EAClB,MAEDzG,MAAKoJ,OAAS3C,CACdzG,MAAKqoB,aAAeroB,KAAKoJ,OAAOpJ,KAAKyH,OACrCzH,MAAKqnB,SAASiB,WAAWC,cAAgBvoB,KAAKqoB,YAC9CroB,MAAKynB,WAAW5d,MAAQpD,CACxBzG,MAAKgnB,aAAaF,MAAMjd,MAAQpD,EAAQ,MpBw1IlC1F,WAAY,KACZC,aAAc,MoBn1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,UpBy1IJM,IoBz1IP,WAEC,MAAOb,MAAKyH,SpB01INjB,IoBv1IP,SAAkBC,GAEjB,GAAIzG,KAAKyH,SAAWhB,EACnB,MAEDzG,MAAKyH,QAAUhB,CACfzG,MAAKqoB,aAAeroB,KAAKoJ,OAAOpJ,KAAKyH,OACrCzH,MAAKqnB,SAASiB,WAAWC,cAAgBvoB,KAAKqoB,YAC9CroB,MAAKynB,WAAWjgB,OAASf,CACzBzG,MAAKgnB,aAAaF,MAAMtf,OAASf,EAAQ,MpBu1InC1F,WAAY,KACZC,aAAc,MoBl1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,epBw1IJM,IoBx1IP,WAEC,MAAOb,MAAKmmB,cpBy1IN3f,IoBt1IP,SAAuBC,GAEtB,GAAIzG,KAAKmmB,cAAgB1f,EACxB,MAED,IAAIA,GAAS,KACZzG,KAAKmmB,aAAe,GAAIb,OAExBtlB,MAAKmmB,aAAe1f,GpBs1If1F,WAAY,KACZC,aAAc,MoBj1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,KpBu1IJM,IoBv1IP,WAEC,MAAOb,MAAKynB,WAAWvgB,GpBw1IjBV,IoBr1IP,SAAaC,GAEZ,GAAIzG,KAAKynB,WAAWvgB,GAAKT,EACxB,MAEDzG,MAAKynB,WAAWvgB,GAAKT,CACrBzG,MAAKgnB,aAAaF,MAAM0B,KAAO/hB,EAAQ,MpBq1IjC1F,WAAY,KACZC,aAAc,MoBh1IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,KpBs1IJM,IoBt1IP,WAEC,MAAOb,MAAKynB,WAAWrgB,GpBu1IjBZ,IoBp1IP,SAAaC,GAEZ,GAAIzG,KAAKynB,WAAWrgB,GAAKX,EACxB,MAEDzG,MAAKynB,WAAWrgB,GAAKX,CACrBzG,MAAKgnB,aAAaF,MAAM2B,IAAMhiB,EAAQ,MpBo1IhC1F,WAAY,KACZC,aAAc,MoB/0IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,WpBq1IJM,IoBr1IP,WAEC,MAAQb,MAAKgnB,aAAaF,MAAM4B,YAAc,WpBs1IxCliB,IoBn1IP,SAAmBC,GAElBzG,KAAKgnB,aAAaF,MAAM4B,WAAajiB,EAAO,UAAY,UpBq1IlD1F,WAAY,KACZC,aAAc,MoB90IrBL,QAAAC,eAAW+kB,EAAAplB,UAAA,sBpBq1IJM,IoBr1IP,WAEC,MAAO,IpBu1IDE,WAAY,KACZC,aAAc,MoBj1Id2kB,GAAAplB,UAAAooB,OAAP,WAEC3oB,KAAK4oB,aAGL5oB,MAAKqnB,SAASiB,WAAWC,cAAgBvoB,KAAKqoB,YAE9C,IAAIroB,KAAKkmB,cAAe,CACvBlmB,KAAKkmB,cAAgB,KACrBlmB,MAAKqnB,SAASiB,WAAWO,oBAAoB7oB,KAAKynB,WAAWqB,YAAY5hB,EAAGlH,KAAKynB,WAAWqB,YAAY1hB,EAAGpH,KAAKynB,WAAWqB,YAAYjf,MAAO7J,KAAKynB,WAAWqB,YAAYthB,QAG3K,GAAIxH,KAAKimB,eAAgB,CACxBjmB,KAAKimB,eAAiB,KACtBjmB,MAAKqnB,SAASiB,WAAWS,iBAAiB/oB,KAAKynB,WAAWuB,SAAS9hB,EAAGlH,KAAKynB,WAAWuB,SAAS5hB,EAAGpH,KAAKynB,WAAWuB,SAASnf,MAAO7J,KAAKynB,WAAWuB,SAASxhB,QAI5J,IAAKxH,KAAKmoB,cAAe,CACxB,GAAInoB,KAAKipB,gBAAkBjpB,KAAKgnB,cAAgBhnB,KAAKmnB,cAAc+B,cAAgBlpB,KAAKmnB,cAAcgC,cACrGnpB,KAAKmnB,cAAciC,kBAAoBppB,KAAKqpB,YAAYC,iBAAiBtpB,KAAKunB,SAAUvnB,KAAKwnB,SAAUxnB,KAExGA,MAAKmnB,cAAcoC,gBAAgBvpB,KAAKipB,gBAMzCjpB,KAAK4nB,kBAAkB4B,OAGvBxpB,MAAK2I,QAAQmc,mBAAmB9kB,KAAK4nB,kBAGrC5nB,MAAKynB,WAAWkB,OAAO3oB,KAAK4nB,mBAMtBjC,GAAAplB,UAAAqoB,YAAP,WAEC,GAAIa,GAAcpE,GAElB,IAAIrlB,KAAK6lB,OAAS,EACjB7lB,KAAK6lB,MAAQ4D,CAEdzpB,MAAK8lB,WAAa2D,EAAOzpB,KAAK6lB,KAC9B7lB,MAAK6lB,MAAQ4D,EAMP9D,GAAAplB,UAAAU,QAAP,WAECjB,KAAKynB,WAAWxmB,SAGhBjB,MAAKmnB,cAAcuC,eAAe1pB,KAKlCA,MAAKmnB,cAAgB,IAGrBnnB,MAAKynB,WAAa,IAClBznB,MAAK4nB,kBAAoB,KAM1BjnB,QAAAC,eAAW+kB,EAAAplB,UAAA,oBpBk0IJM,IoBl0IP,WAEC,MAAOb,MAAK4nB,mBpBm0IN7mB,WAAY,KACZC,aAAc,MoB9zIb2kB,GAAAplB,UAAAgmB,oBAAR,SAA4B5E,GAE3B3hB,KAAKkmB,cAAgB,IACrBlmB,MAAKimB,eAAiB,KAMfN,GAAAplB,UAAAkmB,kBAAR,SAA0B9E,GAEzB3hB,KAAKimB,eAAiB,KAMfN,GAAAplB,UAAAomB,iBAAR,SAAyBhF,GAExB3hB,KAAKkmB,cAAgB;CAGfP,GAAAplB,UAAAopB,QAAP,SAAeC,GAEd,GAAIC,GAAa7pB,KAAKqnB,SAASsC,QAAQC,EACvCC,GAAE3iB,EAAI2iB,EAAE3iB,EAAElH,KAAKynB,WAAWuB,SAASnf,MAAM,EAAI7J,KAAKoJ,OAAOpJ,KAAKqnB,SAASiB,WAAWwB,OAClFD,GAAEziB,EAAIyiB,EAAEziB,EAAEpH,KAAKynB,WAAWuB,SAASxhB,OAAO,EAAIxH,KAAKyH,QAAQzH,KAAKqnB,SAASiB,WAAWyB,OAEpF,OAAOF,GAGDlE,GAAAplB,UAAAypB,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,MAAOnqB,MAAKqnB,SAAS2C,UAAU,GAAGC,EAAKjqB,KAAKoJ,OAAOpJ,KAAKqnB,SAASiB,WAAWwB,SAAS9pB,KAAKynB,WAAWuB,SAASnf,MAAO,GAAGqgB,EAAKlqB,KAAKyH,QAAQzH,KAAKqnB,SAASiB,WAAWyB,SAAS/pB,KAAKynB,WAAWuB,SAASxhB,OAAQ2iB,GAIvMxE,GAAAplB,UAAA6pB,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOnqB,MAAKqnB,SAAS+C,QAAQH,EAAG,EAAIjqB,KAAKoJ,QAAQpJ,KAAKoJ,QAAS8gB,EAAG,EAAIlqB,KAAKyH,SAASzH,KAAKyH,QAAS0iB,GAiC5FxE,GAAAplB,UAAA8pB,eAAP,WAEC,IAAKrqB,KAAKmoB,cAAe,CACxB,GAAInoB,KAAKgnB,cAAgBhnB,KAAKmnB,cAAc+B,YAC3ClpB,KAAKmnB,cAAciC,kBAAoBppB,KAAKqpB,YAAYC,iBAAiBtpB,KAAKunB,SAAUvnB,KAAKwnB,SAAUxnB,UAClG,CACN,GAAIsqB,GAAqCtqB,KAAKqpB,YAAYC,iBAAiBtpB,KAAKunB,SAAUvnB,KAAKwnB,SAAUxnB,KAEzG,IAAIA,KAAKuqB,aAAevqB,KAAKmnB,cAAciC,mBAAqB,MAAQkB,EAAgBE,iBAAmBxqB,KAAKmnB,cAAciC,kBAAkBoB,iBAC/IxqB,KAAKmnB,cAAciC,kBAAoBkB,GAG3C,OAAA3E,KAEAhmB,GAAcJ,QAALomB,IpBsyIN8E,iCAAiCrpB,UAAUijB,sCAAsC,sCAAsCqG,qCAAqC,qCAAqCC,wCAAwC,wCAAwCC,0CAA0C,0CAA0CvX,uCAAuC,uCAAuCwX,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAAStsB,EAAQkB,EAAOJ,GqBx3JvqB,GAAOsD,GAAmBpE,EAAY,6CAItC,IAAMusB,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLjrB,KAAAkrB,aAAuB,IAK7BlrB,MAAKirB,aAAeA,EAGdD,EAAAzqB,UAAA4qB,cAAP,WAEC,GAAInrB,KAAKorB,gBAAkBprB,KAAKkrB,aAAc,CAC7ClrB,KAAKorB,eAAerb,uBAItBpP,QAAAC,eAAWoqB,EAAAzqB,UAAA,gBrBg3JJM,IqBh3JP,WAEC,MAAOb,MAAKorB,gBrBi3JN5kB,IqB92JP,SAAwBO,GAEvB,GAAI/G,KAAKorB,gBAAkBrkB,EAAK,CAC/B,OAGD,GAAI/G,KAAKorB,gBAAkBprB,KAAKkrB,aAAc,CAC7ClrB,KAAKorB,eAAe1Z,aAAe,KAEpC1R,KAAKorB,eAAiBrkB,CAEtB,IAAI/G,KAAKorB,gBAAkBprB,KAAKkrB,aAAc,CAC7ClrB,KAAKorB,eAAe1Z,aAAe1R,KAEpCA,KAAKmrB,iBrB62JCpqB,WAAY,KACZC,aAAc,MqB32JrBL,QAAAC,eAAWoqB,EAAAzqB,UAAA,crB82JJM,IqB92JP,WAEC,MAAOb,MAAKkrB,crB+2JN1kB,IqB52JP,SAAsBO,GAErB,GAAI/G,KAAKkrB,cAAgBnkB,EAAK,CAC7B,OAED/G,KAAKkrB,aAAenkB,CAEpB,IAAI/G,KAAKorB,eAAgB,CACxB,GAAIprB,KAAKorB,eAAgB,CACxBprB,KAAKorB,eAAe1Z,aAAe1R,SAC7B,CACNA,KAAKorB,eAAe1Z,aAAe,QrB+2J/B3Q,WAAY,KACZC,aAAc,MqB32JdgqB,GAAAzqB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAIxoB,GAEZ,OAAAmoB,KAEArrB,GAAwBJ,QAAfyrB,IrB+2JNtY,6CAA6CtR,YAAYkqB,wDAAwD,SAAS7sB,EAAQkB,EAAOJ,GAC5I,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsB37JtB,IAAOmC,GAAU/D,EAAc,kCAE/B,IAAOusB,GAAcvsB,EAAa,gDtBk8JlC,IsB17JM8sB,GAAqB,SAAA7qB,GAASX,EAA9BwrB,EAAqB7qB,EA6I1B,SA7IK6qB,GA6ION,EAAmCO,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAO,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKnrB,EAAAlB,KAAAQ,KAAMirB,EA7IAjrB,MAAA8rB,kBAA2B,CAC1B9rB,MAAA+rB,mBAA4B,EAE5B/rB,MAAAgsB,UAAmB,CACnBhsB,MAAAisB,WAAoB,EACpBjsB,MAAAksB,eAAwB,EACxBlsB,MAAAmsB,cAAuB,EACvBnsB,MAAAosB,OAAgB,CAChBpsB,MAAAqsB,eAAwB,CACxBrsB,MAAAssB,iBAA0B,CAC1BtsB,MAAAusB,cAAwB,KAEzBvsB,MAAAwsB,IAAc,KAmIpBxsB,MAAKwrB,SAAWA,CAChBxrB,MAAKyrB,UAAYA,CACjBzrB,MAAK0rB,aAAeA,CACpB1rB,MAAK2rB,aAAeA,CACpB3rB,MAAK4rB,MAAQA,CACb5rB,MAAK6rB,aAAeA,CAGpB7rB,MAAK8rB,kBAAoB9rB,KAAKgsB,SAC9BhsB,MAAK+rB,mBAAqB/rB,KAAKisB,WAlIhCtrB,OAAAC,eAAW2qB,EAAAhrB,UAAA,StB88JJM,IsB98JP,WAEC,MAAOb,MAAKosB,QtB+8JN5lB,IsB58JP,SAAiBO,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI/G,KAAKosB,QAAUrlB,EAClB,MAED/G,MAAKosB,OAASrlB,CAEd/G,MAAKmrB,iBtB08JCpqB,WAAY,KACZC,aAAc,MsBr8JrBL,QAAAC,eAAW2qB,EAAAhrB,UAAA,YtB28JJM,IsB38JP,WAEC,MAAOb,MAAKgsB,WtB48JNxlB,IsBz8JP,SAAoBO,GAEnB,GAAI/G,KAAKgsB,WAAajlB,EACrB,MAED/G,MAAKgsB,UAAYjlB,CAEjB/G,MAAKmrB,iBtBw8JCpqB,WAAY,KACZC,aAAc,MsBn8JrBL,QAAAC,eAAW2qB,EAAAhrB,UAAA,atBy8JJM,IsBz8JP,WAEC,MAAOb,MAAKisB,YtB08JNzlB,IsBv8JP,SAAqBO,GAEpBA,EAAMsI,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAeplB,GAEhE,IAAI/G,KAAKisB,YAAcllB,EACtB,MAED/G,MAAKisB,WAAallB,CAElB/G,MAAKmrB,iBtBq8JCpqB,WAAY,KACZC,aAAc,MsB97JrBL,QAAAC,eAAW2qB,EAAAhrB,UAAA,gBtBs8JJM,IsBt8JP,WAEC,MAAOb,MAAKksB,etBu8JN1lB,IsBp8JP,SAAwBO,GAEvB,GAAI/G,KAAKksB,eAAiBnlB,EACzB,MAED/G,MAAKksB,cAAgBnlB,CAErB/G,MAAKyrB,UAAYpc,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAensB,KAAKisB,ctBm8J1ElrB,WAAY,KACZC,aAAc,MsB57JrBL,QAAAC,eAAW2qB,EAAAhrB,UAAA,gBtBo8JJM,IsBp8JP,WAEC,MAAOb,MAAKmsB,etBq8JN3lB,IsBl8JP,SAAwBO,GAEvB,GAAI/G,KAAKmsB,eAAiBplB,EACzB,MAED/G,MAAKmsB,cAAgBplB,CAErB/G,MAAKyrB,UAAYpc,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAensB,KAAKisB,ctBi8J1ElrB,WAAY,KACZC,aAAc,MsB37JrBL,QAAAC,eAAW2qB,EAAAhrB,UAAA,gBtBi8JJM,IsBj8JP,WAEC,MAAOb,MAAKusB,etBk8JN/lB,IsB/7JP,SAAwBO,GAEvB,GAAI/G,KAAKusB,eAAiBxlB,EACzB,MAED/G,MAAKusB,cAAgBxlB,CAErB/G,MAAKmrB,iBtB87JCpqB,WAAY,KACZC,aAAc,MsB95JduqB,GAAAhrB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIrrB,KAAKisB,YAAcjsB,KAAK+rB,oBAAsB/rB,KAAKgsB,WAAahsB,KAAK8rB,kBAAmB,CAE3F9rB,KAAKmrB,eAEL,IAAInrB,KAAKusB,cAAe,CACvB,GAAIvsB,KAAKgsB,UAAY,EAAG,CACvBhsB,KAAK8rB,mBAAqB9rB,KAAKgsB,UAAU,IAAM,IAAMhsB,KAAKgsB,SAC1DhsB,MAAKgsB,UAAYhsB,KAAKgsB,UAAU,IAAM,QAChC,CACNhsB,KAAK8rB,mBAAqB9rB,KAAKgsB,UAAU,IAAMhsB,KAAKgsB,SACpDhsB,MAAKgsB,UAAYhsB,KAAKgsB,UAAU,IAGjC,MAAOhsB,KAAKgsB,UAAYhsB,KAAK8rB,mBAAqB,IACjD9rB,KAAK8rB,mBAAqB,GAE3B,OAAO9rB,KAAKgsB,UAAYhsB,KAAK8rB,kBAAoB,IAChD9rB,KAAK8rB,mBAAqB,IAG5B,GAAIT,EAAa,CAChBrrB,KAAK+rB,qBAAuB/rB,KAAKisB,WAAajsB,KAAK+rB,qBAAqB/rB,KAAK4rB,MAAQ,EACrF5rB,MAAK8rB,oBAAsB9rB,KAAKgsB,UAAYhsB,KAAK8rB,oBAAoB9rB,KAAK4rB,MAAQ,OAC5E,CACN5rB,KAAK+rB,mBAAqB/rB,KAAKisB,UAC/BjsB,MAAK8rB,kBAAoB9rB,KAAKgsB,UAI/B,GAAK3c,KAAKsN,IAAI3c,KAAKyrB,UAAYzrB,KAAK+rB,oBAAsB,KAAU1c,KAAKsN,IAAI3c,KAAKgsB,UAAYhsB,KAAK8rB,mBAAqB,IAAO,CAC9H9rB,KAAK+rB,mBAAqB/rB,KAAKisB,UAC/BjsB,MAAK8rB,kBAAoB9rB,KAAKgsB,WAIhChsB,KAAKirB,aAAahiB,UAAYjJ,KAAK+rB,kBACnC/rB,MAAKirB,aAAa/hB,UAAYlJ,KAAK8rB,iBAEnC,IAAI9rB,KAAKqsB,eAAgB,CACxB,GAAIrsB,KAAKwsB,IAAK,CACbxsB,KAAKirB,aAAanO,UAAUnE,YAAY3Y,KAAKqsB,oBACvC,CACNrsB,KAAKirB,aAAa/jB,GAAKlH,KAAKqsB,eAAehd,KAAKsd,IAAI3sB,KAAKgsB,UAAUxpB,EAAW8E,mBAC9EtH,MAAKirB,aAAa5jB,GAAKrH,KAAKqsB,eAAehd,KAAKud,IAAI5sB,KAAKgsB,UAAUxpB,EAAW8E,oBAE/EtH,KAAKqsB,eAAiB,EAGvB,GAAIrsB,KAAKssB,iBAAkB,CAC1BtsB,KAAKirB,aAAanO,UAAUhE,UAAU9Y,KAAKssB,iBAC3CtsB,MAAKssB,iBAAmB,GAKnBf,GAAAhrB,UAAAssB,cAAP,SAAqB9lB,GAEpB,GAAIA,GAAO,EACV,MAED/G,MAAKqsB,gBAAkBtlB,CAEvB/G,MAAKmrB,gBAGCI,GAAAhrB,UAAAusB,gBAAP,SAAuB/lB,GAEtB,GAAIA,GAAO,EACV,MAED/G,MAAKssB,kBAAoBvlB,CAEzB/G,MAAKmrB,gBAGP,OAAAI,IArPoCP,EAuPLrrB,GAAAJ,QAAtBgsB,ItB65JN3Y,kCAAkCxR,UAAU2pB,gDAAgD,kDAAkDgC,mDAAmD,SAAStuB,EAAQkB,EAAOJ,GAC5N,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuBlqKtB,IAAO2sB,GAAevuB,EAAa,iDvB2qKnC,IuBnqKMwuB,GAAgB,SAAAvsB,GAASX,EAAzBktB,EAAgBvsB,EAErB,SAFKusB,GAEOhC,EAAmCiC,EAAmCzB,EAAuBrc,GAA7F,GAAA6b,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAzB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAArc,QAAA,GAAqB,CAArBA,EAAA,IAExG1O,EAAAlB,KAAAQ,KAAMirB,EAAciC,EAAc,EAAGzB,EAAWrc,GAG1C6d,EAAA1sB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEbA,EAAcA,CAEd,KAAKrrB,KAAKktB,aACT,MAEDltB,MAAKwrB,SAAWxrB,KAAKmtB,eAAejkB,UAAY,GAChDxI,GAAAH,UAAMoR,OAAMnS,KAAAQ,MAEd,OAAAitB,IAjB+BD,EAmBLrtB,GAAAJ,QAAjB0tB,IvBqqKNG,iDAAiD,mDAAmDA,kDAAkD,SAAS3uB,EAAQkB,EAAOJ,GACjL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwBtsKtB,IAAOmC,GAAU/D,EAAc,kCAC/B,IAAOmE,GAAQnE,EAAe,gCAG9B,IAAO4uB,GAAgB5uB,EAAa,kDxB4sKpC,IwBrsKMuuB,GAAe,SAAAtsB,GAASX,EAAxBitB,EAAetsB,EA6NpB,SA7NKssB,GA6NO/B,EAAmCiC,EAAmC1B,EAAqBC,EAAuBrc,EAAwBsc,EAA2BC,EAA0B2B,EAA2BC,EAA2B3B,EAAkB4B,EAAoB3B,GAA3R,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA1B,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAArc,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAAsc,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA2B,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAA3B,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA4B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAA3B,QAAA,GAA4B,CAA5BA,EAAA,MAEtSnrB,EAAAlB,KAAAQ,KAAMirB,EAAciC,EA7NdltB,MAAA8rB,kBAA2B,CAC3B9rB,MAAA+rB,mBAA4B,EAE3B/rB,MAAAgsB,UAAmB,CACnBhsB,MAAAisB,WAAoB,EACpBjsB,MAAAytB,UAAmB,GACnBztB,MAAA0tB,cAAuBC,QACvB3tB,MAAA4tB,aAAsBD,QACtB3tB,MAAAksB,eAAwB,EACxBlsB,MAAAmsB,cAAuB,EACvBnsB,MAAAosB,OAAgB,CAChBpsB,MAAA6tB,SAAkB,CAClB7tB,MAAAusB,cAAwB,KACxBvsB,MAAA8tB,QAAmB,GAAIlrB,EAkN9B5C,MAAKoP,SAAWA,CAChBpP,MAAKwrB,SAAWA,CAChBxrB,MAAKyrB,UAAYA,CACjBzrB,MAAKstB,YAAgBA,GAAe,KAAQA,GAAeK,QAC3D3tB,MAAKutB,YAAgBA,GAAe,KAAQA,EAAcI,QAC1D3tB,MAAK0rB,aAAeA,CACpB1rB,MAAK2rB,aAAeA,CACpB3rB,MAAK4rB,MAAQA,CACb5rB,MAAKwtB,QAAUA,CACfxtB,MAAK6rB,aAAeA,CAGpB7rB,MAAK8rB,kBAAoB9rB,KAAKgsB,SAC9BhsB,MAAK+rB,mBAAqB/rB,KAAKisB,WArNhCtrB,OAAAC,eAAWosB,EAAAzsB,UAAA,SxBmuKJM,IwBnuKP,WAEC,MAAOb,MAAKosB,QxBouKN5lB,IwBjuKP,SAAiBO,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI/G,KAAKosB,QAAUrlB,EAClB,MAED/G,MAAKosB,OAASrlB,CAEd/G,MAAKmrB,iBxB+tKCpqB,WAAY,KACZC,aAAc,MwB1tKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,YxBguKJM,IwBhuKP,WAEC,MAAOb,MAAKgsB,WxBiuKNxlB,IwB9tKP,SAAoBO,GAEnBA,EAAMsI,KAAKod,IAAIzsB,KAAK0tB,aAAcre,KAAKqd,IAAI1sB,KAAK4tB,aAAc7mB,GAE9D,IAAI/G,KAAKgsB,WAAajlB,EACrB,MAED/G,MAAKgsB,UAAYjlB,CAEjB/G,MAAKmrB,iBxB4tKCpqB,WAAY,KACZC,aAAc,MwBvtKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,axB6tKJM,IwB7tKP,WAEC,MAAOb,MAAKisB,YxB8tKNzlB,IwB3tKP,SAAqBO,GAEpBA,EAAMsI,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAeplB,GAEhE,IAAI/G,KAAKisB,YAAcllB,EACtB,MAED/G,MAAKisB,WAAallB,CAElB/G,MAAKmrB,iBxBytKCpqB,WAAY,KACZC,aAAc,MwBptKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,YxB0tKJM,IwB1tKP,WAEC,MAAOb,MAAKytB,WxB2tKNjnB,IwBxtKP,SAAoBO,GAEnB,GAAI/G,KAAKytB,WAAa1mB,EACrB,MAED/G,MAAKytB,UAAY1mB,CAEjB/G,MAAKmrB,iBxButKCpqB,WAAY,KACZC,aAAc,MwBhtKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,exBwtKJM,IwBxtKP,WAEC,MAAOb,MAAK0tB,cxBytKNlnB,IwBttKP,SAAuBO,GAEtB,GAAI/G,KAAK0tB,cAAgB3mB,EACxB,MAED/G,MAAK0tB,aAAe3mB,CAEpB/G,MAAKwrB,SAAWnc,KAAKod,IAAIzsB,KAAK0tB,aAAcre,KAAKqd,IAAI1sB,KAAK4tB,aAAc5tB,KAAKgsB,axBqtKvEjrB,WAAY,KACZC,aAAc,MwB9sKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,exBstKJM,IwBttKP,WAEC,MAAOb,MAAK4tB,cxButKNpnB,IwBptKP,SAAuBO,GAEtB,GAAI/G,KAAK4tB,cAAgB7mB,EACxB,MAED/G,MAAK4tB,aAAe7mB,CAEpB/G,MAAKwrB,SAAWnc,KAAKod,IAAIzsB,KAAK0tB,aAAcre,KAAKqd,IAAI1sB,KAAK4tB,aAAc5tB,KAAKgsB,axBmtKvEjrB,WAAY,KACZC,aAAc,MwB5sKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,gBxBotKJM,IwBptKP,WAEC,MAAOb,MAAKksB,exBqtKN1lB,IwBltKP,SAAwBO,GAEvB,GAAI/G,KAAKksB,eAAiBnlB,EACzB,MAED/G,MAAKksB,cAAgBnlB,CAErB/G,MAAKyrB,UAAYpc,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAensB,KAAKisB,cxBitK1ElrB,WAAY,KACZC,aAAc,MwB1sKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,gBxBktKJM,IwBltKP,WAEC,MAAOb,MAAKmsB,exBmtKN3lB,IwBhtKP,SAAwBO,GAEvB,GAAI/G,KAAKmsB,eAAiBplB,EACzB,MAED/G,MAAKmsB,cAAgBplB,CAErB/G,MAAKyrB,UAAYpc,KAAKod,IAAIzsB,KAAKksB,cAAe7c,KAAKqd,IAAI1sB,KAAKmsB,cAAensB,KAAKisB,cxB+sK1ElrB,WAAY,KACZC,aAAc,MwBxsKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,WxBgtKJM,IwBhtKP,WAEC,MAAOb,MAAK6tB,UxBitKNrnB,IwB9sKP,SAAmBO,GAElB,GAAI/G,KAAK6tB,UAAY9mB,EACpB,MAED/G,MAAK6tB,SAAW9mB,CAEhB/G,MAAKmrB,iBxB6sKCpqB,WAAY,KACZC,aAAc,MwBxsKrBL,QAAAC,eAAWosB,EAAAzsB,UAAA,gBxB8sKJM,IwB9sKP,WAEC,MAAOb,MAAKusB,exB+sKN/lB,IwB5sKP,SAAwBO,GAEvB,GAAI/G,KAAKusB,eAAiBxlB,EACzB,MAED/G,MAAKusB,cAAgBxlB,CAErB/G,MAAKmrB,iBxB2sKCpqB,WAAY,KACZC,aAAc,MwBvqKdgsB,GAAAzsB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIrrB,KAAKisB,YAAcjsB,KAAK+rB,oBAAsB/rB,KAAKgsB,WAAahsB,KAAK8rB,kBAAmB,CAE3F9rB,KAAKmrB,eAEL,IAAInrB,KAAKusB,cAAe,CACvB,GAAIvsB,KAAKgsB,UAAY,EAAG,CACvBhsB,KAAK8rB,mBAAqB9rB,KAAKgsB,UAAU,IAAM,IAAMhsB,KAAKgsB,SAC1DhsB,MAAKgsB,UAAYhsB,KAAKgsB,UAAU,IAAM,QAChC,CACNhsB,KAAK8rB,mBAAqB9rB,KAAKgsB,UAAU,IAAMhsB,KAAKgsB,SACpDhsB,MAAKgsB,UAAYhsB,KAAKgsB,UAAU,IAGjC,MAAOhsB,KAAKgsB,UAAYhsB,KAAK8rB,mBAAqB,IACjD9rB,KAAK8rB,mBAAqB,GAE3B,OAAO9rB,KAAKgsB,UAAYhsB,KAAK8rB,kBAAoB,IAChD9rB,KAAK8rB,mBAAqB,IAG5B,GAAIT,EAAa,CAChBrrB,KAAK+rB,qBAAuB/rB,KAAKisB,WAAajsB,KAAK+rB,qBAAqB/rB,KAAK4rB,MAAQ,EACrF5rB,MAAK8rB,oBAAsB9rB,KAAKgsB,UAAYhsB,KAAK8rB,oBAAoB9rB,KAAK4rB,MAAQ,OAC5E,CACN5rB,KAAK8rB,kBAAoB9rB,KAAKgsB,SAC9BhsB,MAAK+rB,mBAAqB/rB,KAAKisB,WAIhC,GAAK5c,KAAKsN,IAAI3c,KAAKyrB,UAAYzrB,KAAK+rB,oBAAsB,KAAU1c,KAAKsN,IAAI3c,KAAKgsB,UAAYhsB,KAAK8rB,mBAAqB,IAAO,CAC9H9rB,KAAK+rB,mBAAqB/rB,KAAKisB,UAC/BjsB,MAAK8rB,kBAAoB9rB,KAAKgsB,WAIhC,GAAI+B,GAAgB/tB,KAAiB,aAAGA,KAAKktB,aAAapQ,UAAU9Q,SAAYhM,KAAmB,eAAGA,KAAKguB,eAAiBhuB,KAAKiuB,QACjIjuB,MAAKirB,aAAa/jB,EAAI6mB,EAAI7mB,EAAIlH,KAAKoP,SAASC,KAAKsd,IAAI3sB,KAAK8rB,kBAAkBtpB,EAAW8E,oBAAoB+H,KAAKud,IAAI5sB,KAAK+rB,mBAAmBvpB,EAAW8E,mBACvJtH,MAAKirB,aAAa7jB,EAAI2mB,EAAI3mB,EAAIpH,KAAKoP,SAASC,KAAKsd,IAAI3sB,KAAK+rB,mBAAmBvpB,EAAW8E,oBAAoBtH,KAAKwtB,OACjHxtB,MAAKirB,aAAa5jB,EAAI0mB,EAAI1mB,EAAIrH,KAAKoP,SAASC,KAAKud,IAAI5sB,KAAK8rB,kBAAkBtpB,EAAW8E,oBAAoB+H,KAAKud,IAAI5sB,KAAK+rB,mBAAmBvpB,EAAW8E,mBAEvJtH,MAAK8tB,QAAQ5mB,GAAKmI,KAAKsd,IAAI3sB,KAAK8rB,kBAAkBtpB,EAAW8E,oBAAoB+H,KAAKsd,IAAI3sB,KAAK+rB,mBAAmBvpB,EAAW8E,mBAC7HtH,MAAK8tB,QAAQ1mB,EAAIiI,KAAKud,IAAI5sB,KAAK+rB,mBAAmBvpB,EAAW8E,mBAC7DtH,MAAK8tB,QAAQzmB,GAAKgI,KAAKud,IAAI5sB,KAAK8rB,kBAAkBtpB,EAAW8E,oBAAoB+H,KAAKsd,IAAI3sB,KAAK+rB,mBAAmBvpB,EAAW8E,mBAE7H,IAAItH,KAAKorB,eAAgB,CACxB,GAAIprB,KAAKkuB,iBACRluB,KAAKorB,eAAe9e,OAAOtM,KAAKkuB,iBAAkBluB,KAAK8tB,aACnD,IAAI9tB,KAAKmtB,eACbntB,KAAKorB,eAAe9e,OAAOtM,KAAKmtB,eAAejd,MAAOlQ,KAAKmtB,eAAe7e,cAAgBtO,KAAKmtB,eAAerQ,UAAU9Q,SAAUhM,KAAK8tB,UAG3I,OAAAd,IAjT8BK,EAmT9B1tB,GAAyBJ,QAAhBytB,IxB+qKNpa,kCAAkCxR,UAAU6R,gCAAgC7R,UAAU+sB,kDAAkD,oDAAoDA,mDAAmD,SAAS1vB,EAAQkB,EAAOJ,GAC1Q,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyBl/KtB,IAAOuC,GAAQnE,EAAe,gCAG9B,IAAOusB,GAAcvsB,EAAa,gDAClC,IAAOwE,GAAkBxE,EAAY,+CAErC,IAAM4uB,GAAgB,SAAA3sB,GAASX,EAAzBstB,EAAgB3sB,EAQrB,SARK2sB,GAQOpC,EAAmCiC,GARhD,GAAA5L,GAAAthB,IAQa,IAAAirB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAE9CxsB,EAAAlB,KAAAQ,KAAMirB,EANAjrB,MAAAiuB,SAAoB,GAAIrrB,GAAS,EAAK,EAAK,EAQjD5C,MAAKouB,+BAAiC,SAACzM,GAA6B,MAAAL,GAAK+M,sBAAsB1M,GAE/F,IAAIuL,EACHltB,KAAKktB,aAAeA,MAEpBltB,MAAKguB,eAAiB,GAAIprB,GAG5BjC,OAAAC,eAAWysB,EAAA9sB,UAAA,kBzB4+KJM,IyB5+KP,WAEC,MAAOb,MAAKkuB,kBzB6+KN1nB,IyB1+KP,SAA0BO,GAEzB,GAAI/G,KAAKmtB,eAAgB,CACxBntB,KAAKmtB,eAAele,oBAAoBhM,EAAmByH,uBAAwB1K,KAAKouB,+BACxFpuB,MAAKmtB,eAAiB,KAGvBntB,KAAKkuB,iBAAmBnnB,CACxB/G,MAAKmrB,iBzB0+KCpqB,WAAY,KACZC,aAAc,MyBx+KrBL,QAAAC,eAAWysB,EAAA9sB,UAAA,gBzB2+KJM,IyB3+KP,WAEC,MAAOb,MAAKmtB,gBzB4+KN3mB,IyBz+KP,SAAwBO,GAEvB,GAAI/G,KAAKkuB,iBACRluB,KAAKkuB,iBAAmB,IAEzB,IAAIluB,KAAKmtB,gBAAkBpmB,EAC1B,MAED,IAAI/G,KAAKmtB,eACRntB,KAAKmtB,eAAele,oBAAoBhM,EAAmByH,uBAAwB1K,KAAKouB,+BAEzFpuB,MAAKmtB,eAAiBpmB,CAEtB,IAAI/G,KAAKmtB,eACRntB,KAAKmtB,eAAepjB,iBAAiB9G,EAAmByH,uBAAwB1K,KAAKouB,+BAEtFpuB,MAAKmrB,iBzBq+KCpqB,WAAY,KACZC,aAAc,MyBl+KdqsB,GAAA9sB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIrrB,KAAKorB,eAAgB,CACxB,GAAIprB,KAAKkuB,iBACRluB,KAAKorB,eAAe9e,OAAOtM,KAAKkuB,sBAC5B,IAAIluB,KAAKmtB,eACbntB,KAAKorB,eAAe9e,OAAOtM,KAAKmtB,eAAejd,MAAOlQ,KAAKmtB,eAAe7e,cAAgBtO,KAAKmtB,eAAerQ,UAAU9Q,WAInHqhB,GAAA9sB,UAAA8tB,sBAAR,SAA8B1M,GAE7B3hB,KAAKmrB,gBAEP,OAAAkC,IA3E+BrC,EA6ELrrB,GAAAJ,QAAjB8tB,IzBq+KNpa,gCAAgC7R,UAAU2pB,gDAAgD,gDAAgD3X,+CAA+C,iDAAiDkb,mDAAmD,SAAS7vB,EAAQkB,EAAOJ,GACxT,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0B7jLtB,IAAOuC,GAAQnE,EAAe,gCAG9B,IAAO4uB,GAAgB5uB,EAAa,kD1BmkLpC,I0B5jLM8vB,GAAgB,SAAA7tB,GAASX,EAAzBwuB,EAAgB7tB,EA+BrB,SA/BK6tB,GA+BOtD,EAAmCiC,EAAmCsB,EAAsBC,EAAkBC,GAA9G,GAAAzD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAsB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzHhuB,EAAAlB,KAAAQ,KAAMirB,EAAciC,EAJdltB,MAAA2uB,eAA0B,GAAI/rB,GAAS,EAAG,KAAM,IAMtD5C,MAAKwuB,UAAYA,CACjBxuB,MAAK0uB,QAAUA,CACf1uB,MAAKyuB,KAAOA,CAEZzuB,MAAK4uB,UAAY,GAAIhsB,EACrB5C,MAAK6uB,IAAM,GAAIjsB,EACf5C,MAAK8uB,SAAW,GAAIlsB,EACpB5C,MAAK+uB,OAAS,GAAInsB,EAClB5C,MAAKgvB,cAAgB,GAAIpsB,EACzB5C,MAAKivB,iBAAmB,GAAIrsB,GAItB2rB,EAAAhuB,UAAAoR,OAAP,SAAc0Z,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI6D,EAEJ,KAAKlvB,KAAKmtB,iBAAmBntB,KAAKorB,eACjC,MAED8D,GAAOlvB,KAAKmtB,eAAerQ,UAAUC,SAASoS,qBAAqBnvB,KAAK2uB,eACxE3uB,MAAKivB,iBAAiB/nB,EAAIlH,KAAKmtB,eAAejmB,EAAIgoB,EAAKhoB,CACvDlH,MAAKivB,iBAAiB7nB,EAAIpH,KAAKmtB,eAAe/lB,EAAI8nB,EAAK9nB,CACvDpH,MAAKivB,iBAAiB5nB,EAAIrH,KAAKmtB,eAAe9lB,EAAI6nB,EAAK7nB,CAEvDrH,MAAK8uB,SAAW9uB,KAAKorB,eAAetO,UAAU9Q,SAASojB,IAAIpvB,KAAKivB,iBAChEjvB,MAAK8uB,SAASO,SAASrvB,KAAKwuB,UAE5BxuB,MAAK6uB,IAAIjnB,SAAS5H,KAAK4uB,UACvB5uB,MAAK6uB,IAAIQ,QAAQrvB,KAAK0uB,QAEtB1uB,MAAK+uB,OAAO7nB,EAAIlH,KAAK8uB,SAAS5nB,EAAIlH,KAAK6uB,IAAI3nB,CAC3ClH,MAAK+uB,OAAO3nB,EAAIpH,KAAK8uB,SAAS1nB,EAAIpH,KAAK6uB,IAAIznB,CAC3CpH,MAAK+uB,OAAO1nB,EAAIrH,KAAK8uB,SAASznB,EAAIrH,KAAK6uB,IAAIxnB,CAE3CrH,MAAKgvB,cAAcpnB,SAAS5H,KAAK+uB,OACjC/uB,MAAKgvB,cAAcK,QAAQ,EAAErvB,KAAKyuB,KAElCzuB,MAAK4uB,UAAUU,YAAYtvB,KAAKgvB,cAEhChvB,MAAKorB,eAAetO,UAAU9Q,SAAWhM,KAAKorB,eAAetO,UAAU9Q,SAASojB,IAAIpvB,KAAK4uB,UAEzFluB,GAAAH,UAAMoR,OAAMnS,KAAAQ,MAEd,OAAAuuB,IA/E+BlB,EAiF/B1tB,GAA0BJ,QAAjBgvB,I1B4hLNtb,gCAAgC7R,UAAU+sB,kDAAkD,oDAAoDoB,qCAAqC,SAAS9wB,EAAQkB,EAAOJ,GAQhN,G2BxnLMiwB,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEmB7vB,GAAAJ,QAAViwB,O3BynLHI,wCAAwC,SAASnxB,EAAQkB,EAAOJ,GAOtE,G4BtpLMswB,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEsBlwB,GAAAJ,QAAbswB,O5BwpLHG,+CAA+C,SAASvxB,EAAQkB,EAAOJ,GAW7E,G6B5qLM0wB,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAE6BtwB,GAAAJ,QAApB0wB,O7B+qLHG,oCAAoC,SAAS3xB,EAAQkB,EAAOJ,GAelE,G8BnrLM8wB,GAAQ,WAAd,QAAMA,MAuCEA,EAAA9vB,UAAA+vB,gBAAP,SAAuBC,EAAsBhV,EAAsBiV,EAAuBC,GAA7C,GAAAlV,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAiV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAA9vB,UAAAmwB,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAA9vB,UAAAswB,kBAAP,SAAyB7mB,EAAmB8mB,EAA8BC,EAAsBC,EAA8BzV,EAAsB0V,EAA6BC,EAAoCC,GAAvF,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA0V,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Md,GAAA9vB,UAAAipB,MAAP,YAYO6G,GAAA9vB,UAAAqH,SAAP,SAAgBwpB,IAuDTf,GAAA9vB,UAAA8wB,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGtB,GAAA9vB,UAAAqxB,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DtB,GAAA9vB,UAAAwxB,WAAP,SAAkB7qB,EAAUE,EAAUyW,IAqB/BwS,GAAA9vB,UAAAyxB,YAAP,SAAmB9qB,EAAUE,EAAUyC,EAAcrC,IAiB9C6oB,GAAA9vB,UAAA0xB,iBAAP,SAAwBC,IAkDjB7B,GAAA9vB,UAAA4xB,SAAP,SAAgBC,EAAgC/O,EAAoBgP,IAsB7DhC,GAAA9vB,UAAA+xB,SAAP,SAAgBprB,EAAUE,EAAUyC,EAAcrC,IA+B3C6oB,GAAA9vB,UAAAgyB,cAAP,SAAqBrrB,EAAUE,EAAUyC,EAAcrC,EAAegrB,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFrC,GAAA9vB,UAAAoyB,cAAP,SAAqBC,EAAwBC,EAAsCC,EAA8BC,GAApE,GAAAF,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1G1C,GAAA9vB,UAAAyyB,QAAP,YAkCO3C,GAAA9vB,UAAA0yB,gBAAP,SAAuB1C,EAAsBhV,EAAsBiV,EAAuBC,GAA7C,GAAAlV,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAiV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAA9vB,UAAA2yB,kBAAP,SAAyBlpB,EAAmB8mB,EAA8BC,EAAsBC,EAAsBzV,EAAsB0V,EAAkCC,EAAgDC,GAAxG,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA0V,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNd,GAAA9vB,UAAA4yB,UAAP,SAAiBC,EAAsBzC,EAA0BC,EAAkByC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAL,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAzC,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAyC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LpD,GAAA9vB,UAAAmzB,OAAP,SAAcxsB,EAAUE,IAejBipB,GAAA9vB,UAAAiN,OAAP,SAActG,EAAUE,IAIzB,OAAAipB,KAEkB1wB,GAAAJ,QAAT8wB,O9BmpLHsD,yCAAyC,SAASl1B,EAAQkB,EAAOJ,SAEjEq0B,+CAA+C,SAASn1B,EAAQkB,EAAOJ,GAQ7E,G+B3/MMs0B,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEAl0B,GAA6BJ,QAApBs0B,O/B4/MHG,sCAAsC,SAASv1B,EAAQkB,EAAOJ,GASpE,GgCpiNM00B,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAAxE,MAAe,OAC9B,OAAAwE,KAEAt0B,GAAoBJ,QAAX00B,OhCqiNHG,yCAAyC,SAAS31B,EAAQkB,EAAOJ,GAKvE,GiCnkNM80B,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAA3E,KAAc,MAOd2E,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEuB10B,GAAAJ,QAAd80B,OjCmkNHI,yCAAyC,SAASh2B,EAAQkB,EAAOJ,GAMvE,GkC9mNMm1B,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEuB/0B,GAAAJ,QAAdm1B,OlC+mNHI,wCAAwC,SAASr2B,EAAQkB,EAAOJ,GAStE,GmChpNMw1B,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAp1B,GAAsBJ,QAAbw1B,OnCipNHI,2CAA2C,SAAS12B,EAAQkB,EAAOJ,GAsBzE,GoC5qNM61B,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAA1F,KAAc,MAMd0F,GAAAE,SAAkB,UACjC,OAAAF,KAEAz1B,GAAyBJ,QAAhB61B,OpC6qNHG,yCAAyC,SAAS92B,EAAQkB,EAAOJ,GACvE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqCxtNtB,IAAOm1B,GAAS/2B,EAAe,iCAE/B,IAAOg3B,GAAch3B,EAAc,sCAInC,IAAO0E,GAAa1E,EAAc,wCAElC,IAAO2f,GAAU3f,EAAe,uCAGhC,IAAOi3B,GAAaj3B,EAAc,0CrCsvNlC,IqChtNMk3B,GAAS,SAAAj1B,GAASX,EAAlB41B,EAASj1B,EA+Ld,SA/LKi1B,GA+LO5zB,EAAuB6zB,EAA+BC,GA/LnE,GAAAvU,GAAAthB,IA+LoC,IAAA41B,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjEn1B,EAAAlB,KAAAQ,KAEAA,MAAKiI,WAAa,IAElBjI,MAAK81B,sBAAwB,SAACnU,GAAwB,MAAAL,GAAKyU,cAAcpU,GAEzE3hB,MAAK+B,SAAWA,CAEhB/B,MAAKg2B,gBAAkBj0B,EAAS8H,KAChC7J,MAAKi2B,iBAAmBl0B,EAASyF,MAEjCxH,MAAKk2B,eAAiBl2B,KAAKkX,UAAUif,WAAa,GAAIX,GAAU,EAAG,EAAGx1B,KAAKg2B,gBAAiBh2B,KAAKi2B,iBAGjGj2B,MAAKuG,YAAc6X,EAAWE,gBAE9Bte,MAAKg2B,gBAAkBj0B,EAAS8H,MA9LjClJ,OAAAC,eAAW+0B,EAAAp1B,UAAA,YrCktNJM,IqCltNP,WAEC,MAAOb,MAAKo2B,WrCmtNNr1B,WAAY,KACZC,aAAc,MqC9sNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,arCotNJM,IqCptNP,WAEC,MAAO80B,GAAUz0B,WrCqtNXH,WAAY,KACZC,aAAc,MqC3sNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,iBrCitNJM,IqCjtNP,WAEC,MAAOb,MAAKk2B,gBrCktNNn1B,WAAY,KACZC,aAAc,MqC7sNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,mBrCmtNJM,IqCntNP,WAEC,MAAOb,MAAKi2B,kBrCotNNl1B,WAAY,KACZC,aAAc,MqC/sNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,kBrCqtNJM,IqCrtNP,WAEC,MAAOb,MAAKg2B,iBrCstNNj1B,WAAY,KACZC,aAAc,MqCjtNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,YrCutNJM,IqCvtNP,WAEC,MAAOb,MAAKkX,WrCwtNN1Q,IqCrtNP,SAAoBC,GAEnB,GAAIA,GAASzG,KAAKkX,UACjB,MAED,IAAIlX,KAAKkX,UAAW,CACnBlX,KAAKkX,UAAUC,aAAanX,KAC5BA,MAAKkX,UAAUjI,oBAAoBymB,EAAcW,aAAcr2B,KAAK81B,uBAIrE91B,KAAKkX,UAAYzQ,CAEjB,IAAIzG,KAAKkX,UAAW,CACnBlX,KAAKkX,UAAUE,UAAUpX,KACzBA,MAAKkX,UAAUnN,iBAAiB2rB,EAAcW,aAAcr2B,KAAK81B,yBrCmtN5D/0B,WAAY,KACZC,aAAc,MqCprNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,erC0rNJM,IqC1rNP,WAEC,MAAOb,MAAKqX,crC2rNN7Q,IqCxrNP,SAAuBC,GAEtBzG,KAAKqX,aAAe5Q,GrCyrNd1F,WAAY,KACZC,aAAc,MqCrrNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,kBrC2rNJM,IqC3rNP,WAGC,MAAOb,MAAKuX,iBrC4rNN/Q,IqCzrNP,SAA0BC,GAGzBzG,KAAK8c,UAAUwZ,eAAiB7vB,CAEhCzG,MAAKu2B,wBrC0rNCx1B,WAAY,KACZC,aAAc,MqCvrNrBL,QAAAC,eAAW+0B,EAAAp1B,UAAA,wBrC0rNJM,IqC1rNP,WAEC,MAAOb,MAAKw2B,uBrC2rNNhwB,IqCxrNP,SAAgCC,GAG/BzG,KAAKw2B,sBAAwB/vB,CAC7BzG,MAAKu2B,wBrCyrNCx1B,WAAY,KACZC,aAAc,MqCvrNb20B,GAAAp1B,UAAAg2B,qBAAR,WAECv2B,KAAKuX,gBAAgB,GAAIke,EACzB,IAAKz1B,KAA0B,uBAAIA,KAAK8c,UAAwB,eAAE,CAEjE9c,KAAKuX,gBAAgBkf,gBAAoBz2B,KAAK8c,UAAUwZ,eAAeG,gBAAkBz2B,KAAKw2B,sBAAsBC,eACpHz2B,MAAKuX,gBAAgBmf,cAAoB12B,KAAK8c,UAAUwZ,eAAeI,cAAgB12B,KAAKw2B,sBAAsBE,aAClH12B,MAAKuX,gBAAgBof,eAAoB32B,KAAK8c,UAAUwZ,eAAeK,eAAiB32B,KAAKw2B,sBAAsBG,cACnH32B,MAAKuX,gBAAgBqf,gBAAoB52B,KAAK8c,UAAUwZ,eAAeM,gBAAkB52B,KAAKw2B,sBAAsBI,eACpH52B,MAAKuX,gBAAgBsf,YAAoB72B,KAAK8c,UAAUwZ,eAAeO,YAAc72B,KAAKw2B,sBAAsBK,WAChH72B,MAAKuX,gBAAgBuf,UAAoB92B,KAAK8c,UAAUwZ,eAAeQ,UAAY92B,KAAKw2B,sBAAsBM,SAC9G92B,MAAKuX,gBAAgBwf,WAAoB/2B,KAAK8c,UAAUwZ,eAAeS,WAAa/2B,KAAKw2B,sBAAsBO,UAC/G/2B,MAAKuX,gBAAgByf,YAAoBh3B,KAAK8c,UAAUwZ,eAAeU,YAAch3B,KAAKw2B,sBAAsBQ,gBAE5G,IAAIh3B,KAAK8c,UAAUwZ,eAAe,CACtCt2B,KAAKuX,gBAAgBkf,gBAAoBz2B,KAAK8c,UAAUwZ,eAAeG,eACvEz2B,MAAKuX,gBAAgBmf,cAAoB12B,KAAK8c,UAAUwZ,eAAeI,aACvE12B,MAAKuX,gBAAgBof,eAAoB32B,KAAK8c,UAAUwZ,eAAeK,cACvE32B,MAAKuX,gBAAgBqf,gBAAoB52B,KAAK8c,UAAUwZ,eAAeM,eACvE52B,MAAKuX,gBAAgBsf,YAAoB72B,KAAK8c,UAAUwZ,eAAeO,WACvE72B,MAAKuX,gBAAgBuf,UAAoB92B,KAAK8c,UAAUwZ,eAAeQ,SACvE92B,MAAKuX,gBAAgBwf,WAAoB/2B,KAAK8c,UAAUwZ,eAAeS,UACvE/2B,MAAKuX,gBAAgByf,YAAoBh3B,KAAK8c,UAAUwZ,eAAeU,gBAEnE,IAAIh3B,KAAKw2B,sBAAsB,CACnCx2B,KAAKuX,gBAAgBkf,gBAAoBz2B,KAAKw2B,sBAAsBC,eACpEz2B,MAAKuX,gBAAgBmf,cAAoB12B,KAAKw2B,sBAAsBE,aACpE12B,MAAKuX,gBAAgBof,eAAoB32B,KAAKw2B,sBAAsBG,cACpE32B,MAAKuX,gBAAgBqf,gBAAoB52B,KAAKw2B,sBAAsBI,eACpE52B,MAAKuX,gBAAgBsf,YAAoB72B,KAAKw2B,sBAAsBK,WACpE72B,MAAKuX,gBAAgBuf,UAAoB92B,KAAKw2B,sBAAsBM,SACpE92B,MAAKuX,gBAAgBwf,WAAoB/2B,KAAKw2B,sBAAsBO,UACpE/2B,MAAKuX,gBAAgByf,YAAoBh3B,KAAKw2B,sBAAsBQ,aA4B/DrB,GAAAp1B,UAAAiL,kBAAP,WAEC9K,EAAAH,UAAMiL,kBAAiBhM,KAAAQ,KAEvBA,MAAKyL,YAAY5B,MAAQ7J,KAAKk2B,eAAersB,KAC7C7J,MAAKyL,YAAYjE,OAASxH,KAAKk2B,eAAe1uB,OAGxCmuB,GAAAp1B,UAAAuI,MAAP,WAEC,GAAIA,GAAkB,GAAI6sB,GAAU31B,KAAK+B,SACzC,OAAO+G,GAWD6sB,GAAAp1B,UAAA+Q,gBAAP,SAAuBC,EAAkCC,GAExD,MAAOxR,MAAK4I,kBAAkBquB,uBAAuBj3B,KAAMA,KAAK4P,qBAAsB2B,GAM/EokB,GAAAp1B,UAAAw1B,cAAR,SAAsBpU,GAErB3hB,KAAKg2B,gBAAkBh2B,KAAKkX,UAAUrN,KACtC7J,MAAKi2B,iBAAmBj2B,KAAKkX,UAAU1P,MAEvCxH,MAAKk2B,eAAiBl2B,KAAKkX,UAAUif,WAAa,GAAIX,GAAU,EAAG,EAAGx1B,KAAKg2B,gBAAiBh2B,KAAKi2B,iBAEjGj2B,MAAK0G,oBAEL,IAAIC,GAAa3G,KAAK4F,cAAcnG,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAK4F,cAAc1G,GAAGuY,qBAGjBke,GAAAp1B,UAAA22B,eAAP,SAAsBtR,GAKrB,GAAI5lB,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErBqa,GAASuR,uBAAuBn3B,MAG1B21B,GAAAp1B,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUmnB,iBAAiBp3B,MAGrB21B,GAAAp1B,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUonB,mBAAmBr3B,MAnRhB21B,GAAAz0B,UAAmB,mBAqRlC,OAAAy0B,IAvRwBxyB,EAyRLxD,GAAAJ,QAAVo2B,IrCopNN2B,sCAAsCl2B,UAAUm2B,iCAAiCn2B,UAAUiB,wCAAwC,wCAAwC8b,uCAAuC,uCAAuCqZ,0CAA0C,4CAA4C9M,sCAAsC,SAASjsB,EAAQkB,EAAOJ,GAChZ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsCr+NtB,IAAOoC,GAAQhE,EAAgB,gCAC/B,IAAOg5B,GAAOh5B,EAAgB,+BAE9B,IAAOi5B,GAAej5B,EAAc,yCAEpC,IAAOk5B,GAAqBl5B,EAAY,oDAGxC,IAAO2f,GAAU3f,EAAe,uCAChC,IAAOoV,GAAsBpV,EAAY,uDAGzC,IAAO+mB,GAAW/mB,EAAe,wCAGjC,IAAM8mB,GAAM,SAAA7kB,GAASX,EAAfwlB,EAAM7kB,EAWX,SAXK6kB,GAWO+C,GAXb,GAAAhH,GAAAthB,IAWa,IAAAsoB,QAAA,GAA6B,CAA7BA,EAAA,KAEX5nB,EAAAlB,KAAAQ,KATOA,MAAA43B,gBAA2B,GAAIn1B,EAC/BzC,MAAA63B,qBAA+B,IAG/B73B,MAAA83B,oBAA8B,IAOrC93B,MAAKiI,WAAa,IAElBjI,MAAK+3B,mCAAqC,SAACpW,GAA0B,MAAAL,GAAK0W,0BAA0BrW,GAEpG3hB,MAAKi4B,YAAc3P,GAAc,GAAIqP,EACrC33B,MAAKi4B,YAAYluB,iBAAiB2tB,EAAgBQ,eAAgBl4B,KAAK+3B,mCAEvE/3B,MAAKm4B,iBAEL,KAAK,GAAIj5B,GAAW,EAAGA,EAAI,IAAKA,EAC/Bc,KAAKm4B,eAAej5B,GAAK,GAAIu4B,EAE9Bz3B,MAAKqH,GAAK,GAGVrH,MAAKuG,YAAc6X,EAAWG,KAI/B5d,OAAAC,eAAW2kB,EAAAhlB,UAAA,atCm9NJM,IsCn9NP,WAEC,MAAO0kB,GAAOrkB,WtCo9NRH,WAAY,KACZC,aAAc,MsCl9NbukB,GAAAhlB,UAAAy3B,0BAAR,SAAkCrW,GAEjC3hB,KAAK63B,qBAAuB,IAC5B73B,MAAK83B,oBAAsB,IAC3B93B,MAAKoQ,cAAcuR,GAGpBhhB,QAAAC,eAAW2kB,EAAAhlB,UAAA,iBtCm9NJM,IsCn9NP,WAEC,GAAIb,KAAK83B,oBACR93B,KAAKo4B,eAEN,OAAOp4B,MAAKm4B,gBtCm9NNp3B,WAAY,KACZC,aAAc,MsCj9NbukB,GAAAhlB,UAAA63B,cAAR,WAEC,GAAIn5B,GAAUiB,EAAUqa,CtCo9NlB,IsCl9NF8d,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIj5B,EACJ,IAAIyM,GAAe,GAAI/G,OAAc,GAErC,IAAIwzB,EACJr5B,MAAKs5B,eAAexd,cAAclP,EAElCyrB,GAAMzrB,EAAI,EACV0rB,GAAM1rB,EAAI,EACV2rB,GAAM3rB,EAAI,EACV4rB,GAAM5rB,EAAI,GACV6rB,GAAM7rB,EAAI,EACV8rB,GAAM9rB,EAAI,EACV+rB,GAAM/rB,EAAI,EACVgsB,GAAMhsB,EAAI,GACVisB,GAAMjsB,EAAI,EACVksB,GAAMlsB,EAAI,EACVmsB,GAAMnsB,EAAI,GACVosB,GAAMpsB,EAAI,GACVqsB,GAAMrsB,EAAI,EACVssB,GAAMtsB,EAAI,EACVusB,GAAMvsB,EAAI,GACVwsB,GAAMxsB,EAAI,GAGVzM,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAIg6B,EAAMZ,CACVn4B,GAAIg5B,EAAMZ,CACV/d,GAAI4e,EAAMZ,CACVc,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,IAAMm5B,EAAMZ,GAAKa,CAGnBl5B,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAIg6B,EAAMZ,CACVn4B,GAAIg5B,EAAMZ,CACV/d,GAAI4e,EAAMZ,CACVc,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,GAAKu4B,EAAMY,GAAKC,CAGlBl5B,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAIg6B,EAAMR,CACVv4B,GAAIg5B,EAAMR,CACVne,GAAI4e,EAAMR,CACVU,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,IAAMm5B,EAAMR,GAAKS,CAGnBl5B,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAIg6B,EAAMR,CACVv4B,GAAIg5B,EAAMR,CACVne,GAAI4e,EAAMR,CACVU,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,GAAK24B,EAAMQ,GAAKC,CAGlBl5B,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAI45B,CACJ34B,GAAI44B,CACJve,GAAIwe,CACJM,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,GAAK+4B,EAAIK,CAGXl5B,GAAIH,KAAKm4B,eAAe,EACxBl5B,GAAIg6B,EAAMJ,CACV34B,GAAIg5B,EAAMJ,CACVve,GAAI4e,EAAMJ,CACVM,GAAS,EAAEhqB,KAAKC,KAAKrQ,EAAEA,EAAIiB,EAAEA,EAAIqa,EAAEA,EACnCpa,GAAElB,EAAIA,EAAEo6B,CACRl5B,GAAED,EAAIA,EAAEm5B,CACRl5B,GAAEoa,EAAIA,EAAE8e,CACRl5B,GAAEF,GAAK+4B,EAAMI,GAAKC,CAElBr5B,MAAK83B,oBAAsB,MAOrBvS,GAAAhlB,UAAAyH,0BAAP,WAECtH,EAAAH,UAAMyH,0BAAyBxI,KAAAQ,KAE/BA,MAAK63B,qBAAuB,IAC5B73B,MAAK83B,oBAAsB,KAM5Bn3B,QAAAC,eAAW2kB,EAAAhlB,UAAA,ctCs8NJM,IsCt8NP,WAEC,MAAOb,MAAKi4B,atCu8NNzxB,IsCp8NP,SAAsBC,GAErB,GAAIzG,KAAKi4B,aAAexxB,EACvB,MAED,KAAKA,EACJ,KAAM,IAAIrH,OAAM,6BAEjBY,MAAKi4B,YAAYhpB,oBAAoByoB,EAAgBQ,eAAgBl4B,KAAK+3B,mCAC1E/3B,MAAKi4B,YAAcxxB,CACnBzG,MAAKi4B,YAAYluB,iBAAiB2tB,EAAgBQ,eAAgBl4B,KAAK+3B,mCACvE/3B,MAAKoQ,cAAc,GAAIoV,GAAYA,EAAY4C,mBAAoBpoB,QtCm8N7De,WAAY,KACZC,aAAc,MsC97NrBL,QAAAC,eAAW2kB,EAAAhlB,UAAA,kBtCo8NJM,IsCp8NP,WAEC,GAAIb,KAAK63B,qBAAsB,CAC9B73B,KAAK43B,gBAAgBhwB,SAAS5H,KAAKiM,sBACnCjM,MAAK43B,gBAAgB2B,OAAOv5B,KAAKi4B,YAAY1c,OAC7Cvb,MAAK63B,qBAAuB,MAG7B,MAAO73B,MAAK43B,iBtCo8NN72B,WAAY,KACZC,aAAc,MsC17NdukB,GAAAhlB,UAAA6pB,OAAP,SAAcoP,EAAWC,EAAWtP,GAEnC,MAAOnqB,MAAK6H,eAAesnB,qBAAqBnvB,KAAKi4B,YAAYjO,UAAUwP,EAAIC,EAAItP,IAS7E5E,GAAAhlB,UAAAopB,QAAP,SAAeC,GAEd,MAAO5pB,MAAKi4B,YAAYtO,QAAQ3pB,KAAKiM,sBAAsB5C,gBAAgBugB,IAWrErE,GAAAhlB,UAAAypB,UAAP,SAAiBwP,EAAWC,EAAWtP,GAEtC,MAAOnqB,MAAK6H,eAAewB,gBAAgBrJ,KAAKi4B,YAAYjO,UAAUwP,EAAIC,EAAItP,IAGxE5E,GAAAhlB,UAAA22B,eAAP,SAAsBtR,GAKrB,GAAI5lB,KAAKsL,eACRtL,KAAKsL,eAAeC,aAKfga,GAAAhlB,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUqX,iBAAiBtnB,MAGrBulB,GAAAhlB,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUypB,mBAAmB15B,MA/PhBulB,GAAArkB,UAAmB,gBAiQlC,OAAAqkB,IAnQqB1R,EAqQrBlU,GAAgBJ,QAAPgmB,ItC27NNoU,yCAAyCv4B,UAAUyR,gCAAgCzR,UAAUw4B,+BAA+Bx4B,UAAUy4B,oDAAoDz4B,UAAU+c,uCAAuC,uCAAuCxI,uDAAuD,uDAAuDgV,wCAAwC,0CAA0CmP,gDAAgD,SAASr7B,EAAQkB,EAAOJ,GAC7hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuCptOtB,IAAOoC,GAAQhE,EAAgB,gCAC/B,IAAOmE,GAAQnE,EAAgB,gCAG/B,IAAOsV,GAAStV,EAAe,oCAC/B,IAAO2f,GAAU3f,EAAe,uCAIhC,IAAOs7B,GAAuBt7B,EAAY,qEAE1C,IAAMu7B,GAAgB,SAAAt5B,GAASX,EAAzBi6B,EAAgBt5B,EAQrB,SARKs5B,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9Cz5B,EAAAlB,KAAAQ,KALOA,MAAAo6B,aAA6B,GAAIv0B,OAAc,GAOtD7F,MAAKiI,WAAa,IAElBjI,MAAK6a,UAAY,GAAIjY,GAASq3B,EAAMC,EAAMC,EAE1Cn6B,MAAKq6B,gBAAkB,GAAIz3B,EAG3B5C,MAAKuG,YAAc6X,EAAWG,KAG/B5d,OAAAC,eAAWo5B,EAAAz5B,UAAA,kBvCysOJM,IuCzsOP,WAEC,GAAIb,KAAKuD,sBACRvD,KAAKuJ,uBAEN,OAAOvJ,MAAKq6B,iBvCysONt5B,WAAY,KACZC,aAAc,MuCvsOrBL,QAAAC,eAAWo5B,EAAAz5B,UAAA,avC0sOJM,IuC1sOP,WAEC,MAAOb,MAAKs6B,YvC2sON9zB,IuCxsOP,SAAqBC,GAEpBzG,KAAKs6B,WAAa7zB,CAElB,KAAKzG,KAAKu6B,WACTv6B,KAAKu6B,WAAa,GAAI33B,EAEvB5C,MAAKu6B,WAAWrzB,EAAIlH,KAAKkH,EAAIlH,KAAKs6B,WAAWpzB,CAC7ClH,MAAKu6B,WAAWnzB,EAAIpH,KAAKoH,EAAIpH,KAAKs6B,WAAWlzB,CAC7CpH,MAAKu6B,WAAWlzB,EAAIrH,KAAKqH,EAAIrH,KAAKs6B,WAAWjzB,CAE7CrH,MAAKsM,OAAOtM,KAAKu6B,avCssOXx5B,WAAY,KACZC,aAAc,MuCnsOdg5B,GAAAz5B,UAAAgJ,sBAAP,WAEC7I,EAAAH,UAAMgJ,sBAAqB/J,KAAAQ,KAC3BA,MAAK6H,eAAeyB,aAAa,EAAGtJ,KAAKq6B,gBACzCr6B,MAAKq6B,gBAAgBvtB,YAIfktB,GAAAz5B,UAAA4U,oBAAP,WAEC,MAAO,IAAI4kB,GAILC,GAAAz5B,UAAAkV,2BAAP,SAAkCC,EAAgBxH,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAoB,GAAI/G,MAC5B,IAAIqH,GAAa,GAAIzK,EAErByK,GAAEtF,SAAS8N,EAAOzH,wBAAwBC,GAC1ChB,GAAEqsB,OAAOv5B,KAAKiM,sBAEd,KAAKjM,KAAKw6B,gBACTx6B,KAAKw6B,kBAENttB,GAAEutB,iBAAiBz6B,KAAKo6B,aAAcp6B,KAAKw6B,gBAE3C,IAAIE,GAAc/M,SAAUgN,GAAehN,QAC3C,IAAIiN,GAAcjN,SAAUkN,GAAelN,QAC3C,IAAImN,GAAcnN,SAAUoN,GAAepN,QAC3C,IAAI1tB,EACJ,KAAK,GAAIf,GAAW,EAAGA,EAAI,IAAK,CAC/Be,EAAID,KAAKw6B,gBAAgBt7B,IAEzB,IAAIe,EAAIy6B,EACPA,EAAOz6B,CAER,IAAIA,EAAI06B,EACPA,EAAO16B,CAERA,GAAID,KAAKw6B,gBAAgBt7B,IAEzB,IAAIe,EAAI26B,EACPA,EAAO36B,CAER,IAAIA,EAAI46B,EACPA,EAAO56B,CAERA,GAAID,KAAKw6B,gBAAgBt7B,IAEzB,IAAIe,EAAI66B,EACPA,EAAO76B,CAER,IAAIA,EAAI86B,EACPA,EAAO96B,EAGT,GAAI+6B,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCluB,GAAI,GAAK,EAAEouB,CACXpuB,GAAI,GAAK,EAAEquB,CACXruB,GAAI,IAAMsuB,CACVtuB,GAAI,MAAQ+tB,EAAOD,GAAMM,CACzBpuB,GAAI,MAAQiuB,EAAOD,GAAMK,CACzBruB,GAAI,KAAOkuB,EAAKI,CAChBtuB,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAKL,EACJA,EAAS,GAAI9J,EAEd8J,GAAOY,gBAAgBP,EACvBL,GAAOuE,QAAQ5D,EAEf,OAAOX,GAGDytB,GAAAz5B,UAAA22B,eAAP,SAAsBtR,IAKfoU,GAAAz5B,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUkrB,2BAA2Bn7B,MAG/Bg6B,GAAAz5B,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUmrB,6BAA6Bp7B,MASjCg6B,GAAAz5B,UAAAiL,kBAAP,WAEC9K,EAAAH,UAAMiL,kBAAiBhM,KAAAQ,KvC2qOjB,IuCxqOFq7B,GAAcr7B,KAAKyL,YAAYvE,CACnC,IAAIo0B,GAAct7B,KAAKyL,YAAYrE,EAAIpH,KAAKyL,YAAYjE,MACxD,IAAI+zB,GAAcv7B,KAAKyL,YAAYpE,CACnC,IAAIm0B,GAAcx7B,KAAKyL,YAAYvE,EAAIlH,KAAKyL,YAAY5B,KACxD,IAAI4xB,GAAcz7B,KAAKyL,YAAYrE,CACnC,IAAIs0B,GAAc17B,KAAKyL,YAAYpE,EAAIrH,KAAKyL,YAAY3E,KAExD9G,MAAKo6B,aAAa,GAAKiB,CACvBr7B,MAAKo6B,aAAa,GAAKkB,CACvBt7B,MAAKo6B,aAAa,GAAKmB,CACvBv7B,MAAKo6B,aAAa,GAAKoB,CACvBx7B,MAAKo6B,aAAa,GAAKkB,CACvBt7B,MAAKo6B,aAAa,GAAKmB,CACvBv7B,MAAKo6B,aAAa,GAAKiB,CACvBr7B,MAAKo6B,aAAa,GAAKqB,CACvBz7B,MAAKo6B,aAAa,GAAKmB,CACvBv7B,MAAKo6B,aAAa,GAAKoB,CACvBx7B,MAAKo6B,aAAa,IAAMqB,CACxBz7B,MAAKo6B,aAAa,IAAMmB,CACxBv7B,MAAKo6B,aAAa,IAAMiB,CACxBr7B,MAAKo6B,aAAa,IAAMkB,CACxBt7B,MAAKo6B,aAAa,IAAMsB,CACxB17B,MAAKo6B,aAAa,IAAMoB,CACxBx7B,MAAKo6B,aAAa,IAAMkB,CACxBt7B,MAAKo6B,aAAa,IAAMsB,CACxB17B,MAAKo6B,aAAa,IAAMiB,CACxBr7B,MAAKo6B,aAAa,IAAMqB,CACxBz7B,MAAKo6B,aAAa,IAAMsB,CACxB17B,MAAKo6B,aAAa,IAAMoB,CACxBx7B,MAAKo6B,aAAa,IAAMqB,CACxBz7B,MAAKo6B,aAAa,IAAMsB,EAE1B,OAAA1B,IA1L+BjmB,EA4LLpU,GAAAJ,QAAjBy6B,IvCyqONnnB,gCAAgCzR,UAAU6R,gCAAgC7R,UAAUwS,oCAAoC,oCAAoCuK,uCAAuC,uCAAuCwd,qEAAqE,uEAAuEC,uCAAuC,SAASn9B,EAAQkB,EAAOJ,SAElbs8B,0CAA0C,SAASp9B,EAAQkB,EAAOJ,GACxE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwCp3OtB,IAAOjB,GAAKX,EAAgB,+BAG5B,IAAOsV,GAAStV,EAAe,oCAC/B,IAAO2f,GAAU3f,EAAe,uCAKhC,IAAMq9B,GAAU,SAAAp7B,GAASX,EAAnB+7B,EAAUp7B,EAKf,SALKo7B,GAKOC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjCt7B,EAAAlB,KAAAQ,KAEAA,MAAKiI,WAAa,IAElBjI,MAAKi8B,YAAcF,CACnB/7B,MAAKk8B,aAAeF,CAGpBh8B,MAAKuG,YAAc6X,EAAWG,KAG/B5d,OAAAC,eAAWk7B,EAAAv7B,UAAA,cxC02OJM,IwC12OP,WAEC,MAAOb,MAAKi8B,axC22ONz1B,IwCx2OP,SAAsBC,GAErBzG,KAAKi8B,YAAcx1B,GxCy2Ob1F,WAAY,KACZC,aAAc,MwCv2OrBL,QAAAC,eAAWk7B,EAAAv7B,UAAA,exC02OJM,IwC12OP,WAEC,MAAOb,MAAKk8B,cxC22ON11B,IwCx2OP,SAAuBC,GAEtBzG,KAAKk8B,aAAez1B,GxCy2Od1F,WAAY,KACZC,aAAc,MwCt2Od86B,GAAAv7B,UAAAkV,2BAAP,SAAkCC,EAAgBxH,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAInN,GAAM,wEAGV08B,GAAAv7B,UAAA22B,eAAP,SAAsBtR,IAKfkW,GAAAv7B,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUksB,qBAAqBn8B,MAGzB87B,GAAAv7B,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUmsB,uBAAuBp8B,MAEnC,OAAA87B,IA1DyB/nB,EA4DLpU,GAAAJ,QAAXu8B,IxCq2ONpb,+BAA+Btf,UAAUwS,oCAAoC,oCAAoCuK,uCAAuC,yCAAyCke,2CAA2C,SAAS59B,EAAQkB,EAAOJ,GACvQ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyC36OtB,IAAO8C,GAAa1E,EAAc,wCAElC,IAAO2f,GAAU3f,EAAe,uCzCg7OhC,IyCv6OM69B,GAAW,SAAA57B,GAASX,EAApBu8B,EAAW57B,EAsIhB,SAtIK47B,GAsIOv6B,EAAuBw6B,EAAwBC,EAAsBpJ,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhF1yB,EAAAlB,KAAAQ,KAEAA,MAAKiI,WAAa,IAElBjI,MAAK+B,SAAWA,CAEhB/B,MAAKy8B,eAAiBF,CACtBv8B,MAAK08B,aAAeF,CACpBx8B,MAAK28B,eAAiBvJ,EAAU,EAGhCpzB,MAAKuG,YAAc6X,EAAWE,iBAnI/B3d,OAAAC,eAAW07B,EAAA/7B,UAAA,YzC+6OJM,IyC/6OP,WAEC,MAAOb,MAAKo2B,WzCg7ONr1B,WAAY,KACZC,aAAc,MyC36OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,azCi7OJM,IyCj7OP,WAEC,MAAOy7B,GAAYp7B,WzCk7ObH,WAAY,KACZC,aAAc,MyC76OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,gBzCm7OJM,IyCn7OP,WAEC,MAAOb,MAAKy8B,gBzCo7ON17B,WAAY,KACZC,aAAc,MyCl7OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,iBzCq7OJiG,IyCr7OP,SAAyBC,GAExB,GAAIzG,KAAKy8B,gBAAkBh2B,EAC1B,MAEDzG,MAAKy8B,eAAiBh2B,CAEtBzG,MAAK48B,0BzCo7OC77B,WAAY,KACZC,aAAc,MyC/6OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,ezCq7OJM,IyCr7OP,WAEC,MAAOb,MAAK08B,czCs7ONl2B,IyCn7OP,SAAuBC,GAEtB,GAAIzG,KAAK08B,cAAgBj2B,EACxB,MAEDzG,MAAK08B,aAAej2B,CAEpBzG,MAAK48B,0BzCk7OC77B,WAAY,KACZC,aAAc,MyC76OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,YzCm7OJM,IyCn7OP,WAEC,MAAOb,MAAKkX,WzCo7ON1Q,IyCj7OP,SAAoBC,GAEnB,GAAIzG,KAAK+B,SACR/B,KAAK+B,SAASoV,aAAanX,KAE5BA,MAAKkX,UAAYzQ,CAEjB,IAAIzG,KAAK+B,SACR/B,KAAK+B,SAASqV,UAAUpX,OzCg7OnBe,WAAY,KACZC,aAAc,MyC36OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,azCi7OJM,IyCj7OP,WAEC,MAAOb,MAAK28B,eAAe,GzCk7OrBn2B,IyC/6OP,SAAqBC,GAEpB,GAAIzG,KAAK28B,gBAAkBl2B,EAC1B,MAEDzG,MAAK28B,eAAiBl2B,EAAM,EAE5BzG,MAAK48B,0BzC86OC77B,WAAY,KACZC,aAAc,MyCz6OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,ezC+6OJM,IyC/6OP,WAEC,MAAOb,MAAKqX,czCg7ON7Q,IyC76OP,SAAuBC,GAEtBzG,KAAKqX,aAAe5Q,GzC86Od1F,WAAY,KACZC,aAAc,MyC16OrBL,QAAAC,eAAW07B,EAAA/7B,UAAA,kBzCg7OJM,IyCh7OP,WAEC,MAAOb,MAAKuX,iBzCi7ON/Q,IyC96OP,SAA0BC,GAEzBzG,KAAKuX,gBAAkB9Q,GzC+6OjB1F,WAAY,KACZC,aAAc,MyCt5Ods7B,GAAA/7B,UAAAU,QAAP,WAECjB,KAAKy8B,eAAiB,IACtBz8B,MAAK08B,aAAe,KAMdJ,GAAA/7B,UAAAiL,kBAAP,WAEC9K,EAAAH,UAAMiL,kBAAiBhM,KAAAQ,KAEvBA,MAAKyL,YAAYvE,EAAImI,KAAKqd,IAAI1sB,KAAKy8B,eAAev1B,EAAGlH,KAAK08B,aAAax1B,EACvElH,MAAKyL,YAAYrE,EAAIiI,KAAKqd,IAAI1sB,KAAKy8B,eAAer1B,EAAGpH,KAAK08B,aAAat1B,EACvEpH,MAAKyL,YAAYpE,EAAIgI,KAAKqd,IAAI1sB,KAAKy8B,eAAep1B,EAAGrH,KAAK08B,aAAar1B,EACvErH,MAAKyL,YAAY5B,MAAQwF,KAAKsN,IAAI3c,KAAKy8B,eAAev1B,EAAIlH,KAAK08B,aAAax1B,EAC5ElH,MAAKyL,YAAYjE,OAAS6H,KAAKsN,IAAI3c,KAAKy8B,eAAer1B,EAAIpH,KAAK08B,aAAat1B,EAC7EpH,MAAKyL,YAAY3E,MAAQuI,KAAKsN,IAAI3c,KAAKy8B,eAAep1B,EAAIrH,KAAK08B,aAAar1B,GAGtEi1B,GAAA/7B,UAAAoL,qBAAP,WAECjL,EAAAH,UAAMoL,qBAAoBnM,KAAAQ,KAE1BA,MAAKwL,mBAEL,IAAIqxB,IAAoB78B,KAAK08B,aAAax1B,EAAIlH,KAAKy8B,eAAev1B,GAAG,CACrE,IAAI41B,IAAqB98B,KAAK08B,aAAat1B,EAAIpH,KAAKy8B,eAAer1B,GAAG,CACtE,IAAI21B,IAAoB/8B,KAAK08B,aAAar1B,EAAIrH,KAAKy8B,eAAep1B,GAAG,CACrErH,MAAK4L,eAAe1E,EAAIlH,KAAKy8B,eAAev1B,EAAI21B,CAChD78B,MAAK4L,eAAexE,EAAIpH,KAAKy8B,eAAer1B,EAAI01B,CAChD98B,MAAK4L,eAAevE,EAAIrH,KAAKy8B,eAAep1B,EAAI01B,CAChD/8B,MAAK4L,eAAeiS,OAASxO,KAAKC,KAAKutB,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFT,GAAA/7B,UAAAq8B,uBAAR,WAEC,GAAIj2B,GAAa3G,KAAK4F,cAAcnG,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAK4F,cAAc1G,GAAGuY,qBAGjB6kB,GAAA/7B,UAAA22B,eAAP,SAAsBtR,GAKrB,GAAI5lB,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErBqa,GAASuR,uBAAuBn3B,MAG1Bs8B,GAAA/7B,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUmnB,iBAAiBp3B,MAGrBs8B,GAAA/7B,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUonB,mBAAmBr3B,MApNhBs8B,GAAAp7B,UAAmB,qBAsNlC,OAAAo7B,IAxN0Bn5B,EA0N1BxD,GAAqBJ,QAAZ+8B,IzC04ONj6B,wCAAwC,wCAAwC8b,uCAAuC,yCAAyC6e,oCAAoC,SAASv+B,EAAQkB,EAAOJ,GAC/N,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0C3nPrB,IAAO48B,GAAQx+B,EAAgB,gCAGhC,IAAOy+B,GAAaz+B,EAAc,uCAUlC,IAAO2f,GAAU3f,EAAe,uCAChC,IAAOoV,GAAsBpV,EAAY,uDAEzC,IAAO0+B,GAAW1+B,EAAe,sC1CunPjC,I0C9mPM2+B,GAAI,SAAA18B,GAASX,EAAbq9B,EAAI18B,EAgNT,SAhNK08B,GAgNOC,EAAmBt7B,GAhNhC,GAAAuf,GAAAthB,IAgNgC,IAAA+B,QAAA,GAA4B,CAA5BA,EAAA,KAE9BrB,EAAAlB,KAAAQ,KAvMOA,MAAAiV,cAAwB,IACxBjV,MAAAs9B,wBAAkC,IAwMzCt9B,MAAKiI,WAAa,IAElBjI,MAAKu9B,WAAa,GAAI13B,MAEtB7F,MAAKw9B,iCAAmC,SAAC7b,GAAwB,MAAAL,GAAKmc,wBAAwB9b,GAC9F3hB,MAAK09B,4BAA8B,SAAC/b,GAAwB,MAAAL,GAAKqc,mBAAmBhc,GACpF3hB,MAAK49B,8BAAgC,SAACjc,GAAwB,MAAAL,GAAKuc,qBAAqBlc,GAGxF3hB,MAAKq9B,SAAWA,GAAY,GAAIJ,EAEhCj9B,MAAK+B,SAAWA,CAGhB/B,MAAKuG,YAAc6X,EAAWE,iBA7M/B3d,OAAAC,eAAWw8B,EAAA78B,UAAA,Y1CsnPJM,I0CtnPP,WAEC,MAAOb,MAAKo2B,W1CunPN5vB,I0CpnPP,SAAoBC,GAEnB,GAAIzG,KAAKo2B,UACRp2B,KAAKo2B,UAAU0H,YAAY99B,KAE5BA,MAAKo2B,UAAY3vB,CAEjB,IAAIE,GAAa3G,KAAKu9B,WAAW99B,MACjC,IAAIs+B,EAEJ,KAAK,GAAI7+B,GAAW,EAAGA,EAAIyH,IAAOzH,EAAG,CACpC6+B,EAAU/9B,KAAKu9B,WAAWr+B,EAG1B,IAAI6+B,EAAQh8B,SAAU,CACrBg8B,EAAQh8B,SAASoV,aAAa4mB,EAC9BA,GAAQh8B,SAASqV,UAAU2mB,GAI5BA,EAAQvmB,iCAGT,GAAIxX,KAAKo2B,UACRp2B,KAAKo2B,UAAU4H,SAASh+B,O1C+mPnBe,WAAY,KACZC,aAAc,M0C1mPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,a1CgnPJM,I0ChnPP,WAEC,MAAOu8B,GAAKl8B,W1CinPNH,WAAY,KACZC,aAAc,M0C5mPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,gB1CknPJM,I0ClnPP,WAEC,MAAOb,MAAKiV,e1CmnPNzO,I0ChnPP,SAAwBC,GAEvBzG,KAAKiV,cAAgBxO,G1CinPf1F,WAAY,KACZC,aAAc,M0C5mPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,Y1CknPJM,I0ClnPP,WAEC,GAAIb,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErB,OAAOvL,MAAKi+B,W1CknPNz3B,I0C/mPP,SAAoBC,GAEnB,GAAIvH,EAEJ,IAAIc,KAAKi+B,UAAW,CACnBj+B,KAAKi+B,UAAUhvB,oBAAoBiuB,EAAcgB,eAAgBl+B,KAAKw9B,iCACtEx9B,MAAKi+B,UAAUhvB,oBAAoBiuB,EAAciB,mBAAoBn+B,KAAK09B,4BAC1E19B,MAAKi+B,UAAUhvB,oBAAoBiuB,EAAckB,qBAAsBp+B,KAAK49B,8BAE5E,KAAK1+B,EAAI,EAAGA,EAAIc,KAAKu9B,WAAW99B,SAAUP,EACzCc,KAAKu9B,WAAWr+B,GAAG+B,SAEpBjB,MAAKu9B,WAAW99B,OAAS,EAG1BO,KAAKi+B,UAAYx3B,CAEjB,IAAIzG,KAAKi+B,UAAW,CAEnBj+B,KAAKi+B,UAAUl0B,iBAAiBmzB,EAAcgB,eAAgBl+B,KAAKw9B,iCACnEx9B,MAAKi+B,UAAUl0B,iBAAiBmzB,EAAciB,mBAAoBn+B,KAAK09B,4BACvE19B,MAAKi+B,UAAUl0B,iBAAiBmzB,EAAckB,qBAAsBp+B,KAAK49B,8BAEzE,IAAIS,GAAkCr+B,KAAKi+B,UAAUK,aAErD,KAAKp/B,EAAI,EAAGA,EAAIm/B,EAAS5+B,SAAUP,EAClCc,KAAKu+B,WAAWF,EAASn/B,M1CymPrB6B,WAAY,KACZC,aAAc,M0CnmPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,Y1CymPJM,I0CzmPP,WAEC,MAAOb,MAAKkX,W1C0mPN1Q,I0CvmPP,SAAoBC,GAEnB,GAAIA,GAASzG,KAAKkX,UACjB,MAED,IAAIhY,EACJ,IAAIyH,GAAa3G,KAAKu9B,WAAW99B,MACjC,IAAIs+B,EAEJ,KAAK7+B,EAAI,EAAGA,EAAIyH,EAAKzH,IACpB,GAAIc,KAAKkX,YAAc6mB,EAAU/9B,KAAKu9B,WAAWr+B,IAAI6C,UAAY/B,KAAKkX,UACrElX,KAAKkX,UAAUC,aAAa4mB,EAE9B/9B,MAAKkX,UAAYzQ,CAEjB,KAAKvH,EAAI,EAAGA,EAAIyH,EAAKzH,IACpB,GAAIc,KAAKkX,YAAc6mB,EAAU/9B,KAAKu9B,WAAWr+B,IAAI6C,UAAY/B,KAAKkX,UACrElX,KAAKkX,UAAUE,UAAU2mB,I1ComPrBh9B,WAAY,KACZC,aAAc,M0C/lPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,0B1CqmPJM,I0CrmPP,WAEC,MAAOb,MAAKs9B,yB1CsmPN92B,I0CnmPP,SAAkCC,GAEjCzG,KAAKs9B,wBAA0B72B,G1ComPzB1F,WAAY,KACZC,aAAc,M0C9lPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,a1CqmPJM,I0CrmPP,WAKC,GAAIb,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErB,OAAOvL,MAAKu9B,Y1CqmPNx8B,WAAY,KACZC,aAAc,M0ChmPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,e1CsmPJM,I0CtmPP,WAEC,MAAOb,MAAKqX,c1CumPN7Q,I0CpmPP,SAAuBC,GAEtBzG,KAAKqX,aAAe5Q,G1CqmPd1F,WAAY,KACZC,aAAc,M0ChmPrBL,QAAAC,eAAWw8B,EAAA78B,UAAA,kB1CsmPJM,I0CtmPP,WAEC,MAAOb,MAAKuX,iB1CumPN/Q,I0CpmPP,SAA0BC,GAEzBzG,KAAKuX,gBAAkB9Q,CACvB,IAAIE,GAAa3G,KAAKu9B,WAAW99B,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EAAE,CACnCc,KAAKu9B,WAAWr+B,GAAGo3B,eAAiB7vB,I1CsmP/B1F,WAAY,KACZC,aAAc,M0CpkPdo8B,GAAA78B,UAAAi+B,oBAAP,WAECx+B,KAAKq9B,SAASoB,oBAAoBz+B,KAAK4K,WACvC5K,MAAK4K,WAAWvE,WAMV+2B,GAAA78B,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,KAEbA,MAAK+B,SAAW,IAChB/B,MAAKq9B,SAAW,KAOVD,GAAA78B,UAAAm+B,+BAAP,WAEC1+B,KAAKwf,qBAEJ,IAAIxf,KAAKo2B,UACTp2B,KAAKo2B,UAAUn1B,UAmBVm8B,GAAA78B,UAAAuI,MAAP,WAEC,GAAIA,GAAa,GAAIs0B,GAAK,KAAM,KAE1Bp9B,MAAK2+B,aAAa71B,EAExB,OAAOA,GAGEs0B,GAAA78B,UAAAo+B,aAAP,SAAoB71B,GAEhBA,EAAMu0B,SAAWr9B,KAAKi+B,SACtBn1B,GAAM/G,SAAW/B,KAAKkX,SACtBpO,GAAM8B,WAAa5K,KAAK4K,UACxB9B,GAAMD,MAAQ7I,KAAK6I,KACnBC,GAAMmH,UAAYjQ,KAAKiQ,SACvBnH,GAAM81B,WAAa5+B,KAAK4+B,UAGxB91B,GAAM+B,KAAO7K,KAAK6K,IAClB/B,GAAM9C,aAAehG,KAAKgG,YAC1B8C,GAAM+1B,uBAAyB7+B,KAAK6+B,sBACpC/1B,GAAMg2B,aAAe9+B,KAAK8+B,YAC1Bh2B,GAAMV,cAAgBpI,KAAKoI,aAG3BU,GAAMi2B,MAAQ/+B,KAAK++B,KACnBj2B,GAAMrF,QAAUzD,KAAKyD,OACrBqF,GAAMtF,SAAWxD,KAAKwD,QAEtB,IAAImD,GAAa3G,KAAKu9B,WAAW99B,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EAC9B4J,EAAMy0B,WAAWr+B,GAAG6C,SAAW/B,KAAKu9B,WAAWr+B,GAAGwY,uBAGtD/Q,GAAM3G,KAAKyf,WACX,IAAItT,EAEJ,KAAKjN,EAAI,EAAGA,EAAIyH,IAAOzH,EAAG,CACtBiN,EAAMnM,KAAK0f,WAAWxgB,GAAG4J,OACzBA,GAAMkW,SAAkC7S,GAG5C,GAAInM,KAAKo2B,UACLttB,EAAMmO,SAAWjX,KAAKo2B,UAAUttB,QASpCs0B,GAAA78B,UAAAy+B,0BAAP,SAAiCn9B,GAEhC,MAAO7B,MAAKu9B,WAAWv9B,KAAKi+B,UAAUK,cAAcltB,QAAQvP,IAQtDu7B,GAAA78B,UAAAiL,kBAAP,WAEC9K,EAAAH,UAAMiL,kBAAiBhM,KAAAQ,KAEvB,IAAId,GAAU+/B,EAAU9+B,EAAUwG,CAClC,IAAI03B,GAAkCr+B,KAAKi+B,UAAUK,aACrD,IAAIY,EACJ,IAAIC,EACJ,IAAIC,GAAqBf,EAAS5+B,MAClC,IAAI47B,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,IAAI0D,EAAc,EAAG,CACpBlgC,EAAI,CACJggC,GAAUb,EAAS,EACnBc,GAAoBD,EAAQG,sBAC5BhE,GAAOG,EAAO2D,EAAkBjgC,EAChCo8B,GAAOG,EAAO0D,EAAkBjgC,EAAI,EACpCq8B,GAAOG,EAAOyD,EAAkBjgC,EAAI,EAEpC,KAAK+/B,EAAI,EAAGA,EAAIG,EAAaH,IAAK,CACjCC,EAAUb,EAASY,EACnBE,GAAoBD,EAAQG,sBAC5B14B,GAAMw4B,EAAkB1/B,MAExB,KAAKP,EAAI,EAAGA,EAAIyH,EAAKzH,GAAG,EAAG,CAC1BiB,EAAIg/B,EAAkBjgC,EACtB,IAAIiB,EAAIk7B,EACPA,EAAOl7B,MACH,IAAIA,EAAIq7B,EACZA,EAAOr7B,CAERA,GAAIg/B,EAAkBjgC,EAAI,EAE1B,IAAIiB,EAAIm7B,EACPA,EAAOn7B,MACH,IAAIA,EAAIs7B,EACZA,EAAOt7B,CAERA,GAAIg/B,EAAkBjgC,EAAI,EAE1B,IAAIiB,EAAIo7B,EACPA,EAAOp7B,MACH,IAAIA,EAAIu7B,EACZA,EAAOv7B,GAIVH,KAAKyL,YAAY5B,MAAQ2xB,GAAQx7B,KAAKyL,YAAYvE,EAAIm0B,EACtDr7B,MAAKyL,YAAYjE,OAASi0B,GAAQz7B,KAAKyL,YAAYrE,EAAIk0B,EACvDt7B,MAAKyL,YAAY3E,MAAQ40B,GAAQ17B,KAAKyL,YAAYpE,EAAIk0B,OAChD,CACNv7B,KAAKyL,YAAY6zB,YAKZlC,GAAA78B,UAAAoL,qBAAP,WAECjL,EAAAH,UAAMoL,qBAAoBnM,KAAAQ,KAE1B,IAAIu/B,GAAUv/B,KAAK6G,QACnB,IAAI24B,GAAiBD,EAAIr4B,EAAIq4B,EAAI11B,MAAM,CACvC,IAAI41B,GAAiBF,EAAIn4B,EAAIm4B,EAAI/3B,OAAO,CACxC,IAAIk4B,GAAiBH,EAAIl4B,EAAIk4B,EAAIz4B,MAAM,CAEvC,IAAI5H,GAAU+/B,EAAU9+B,EAAUwG,CAClC,IAAI03B,GAAkCr+B,KAAKi+B,UAAUK,aACrD,IAAIY,EACJ,IAAIC,EACJ,IAAIC,GAAqBf,EAAS5+B,MAClC,IAAIkgC,GAA0B,CAC9B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIX,EAAc,EAAG,CACpBlgC,EAAI,CACJggC,GAAUb,EAAS,EACnBc,GAAoBD,EAAQG,sBAC5B,KAAKJ,EAAI,EAAGA,EAAIG,EAAaH,IAAK,CACjCC,EAAUb,EAASY,EACnBE,GAAoBD,EAAQG,sBAC5B14B,GAAMw4B,EAAkB1/B,MAExB,KAAKP,EAAI,EAAGA,EAAIyH,EAAKzH,GAAK,EAAG,CAC5B2gC,EAAYV,EAAkBjgC,GAAKsgC,CACnCM,GAAYX,EAAkBjgC,EAAI,GAAKugC,CACvCM,GAAYZ,EAAkBjgC,EAAI,GAAKwgC,CACvCE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,IAKvB5/B,KAAK4L,eAAe1E,EAAIs4B,CACxBx/B,MAAK4L,eAAexE,EAAIq4B,CACxBz/B,MAAK4L,eAAevE,EAAIq4B,CACxB1/B,MAAK4L,eAAeiS,OAASxO,KAAKC,KAAKqwB,GAQhCvC,GAAA78B,UAAAk9B,wBAAR,SAAgC9b,GAE/B3hB,KAAK0G,qBAQE02B,GAAA78B,UAAAo9B,mBAAR,SAA2Bhc,GAE1B3hB,KAAKu+B,WAAW5c,EAAM9f,aAQfu7B,GAAA78B,UAAAs9B,qBAAR,SAA6Blc,GAE5B,GAAIoc,EACJ,IAAImB,GAA0Bvd,EAAM9f,WACpC,IAAI8E,GAAa3G,KAAKu9B,WAAW99B,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIyH,IAAOzH,EAAG,CAEzB6+B,EAAU/9B,KAAKu9B,WAAWr+B,EAE1B,IAAI6+B,EAAQl8B,aAAeq9B,EAAS,CACnCnB,EAAQ98B,SAERjB,MAAKu9B,WAAWlsB,OAAOnS,EAAG,EAE1B,UAIAyH,CACF,MAAOzH,EAAIyH,IAAOzH,EACjBc,KAAKu9B,WAAWr+B,GAAG6X,QAAU7X,EAQvBk+B,GAAA78B,UAAAg+B,WAAR,SAAmB18B,GAElB,GAAIm+B,GAA6B7C,EAAY8C,SAASp+B,EAEtD,IAAIk8B,GAAmB,GAAIiC,GAAan+B,EAAa7B,KAAM,KAC3D,IAAI2G,GAAa3G,KAAKu9B,WAAW99B,MAEjCs+B,GAAQhnB,QAAUpQ,CAElB3G,MAAKu9B,WAAW52B,GAAOo3B,CAEvB/9B,MAAK0G,qBAYC02B,GAAA78B,UAAA+Q,gBAAP,SAAuBC,EAAkCC,GAExD,MAAOxR,MAAK4I,kBAAkBs3B,kBAAkBlgC,KAAMA,KAAK4P,qBAAsB2B,EAA2BC,GAStG4rB,GAAA78B,UAAA22B,eAAP,SAAsBtR,GAKrB,GAAI5lB,KAAKsL,eACRtL,KAAKsL,eAAeC,YAErB,IAAI5E,GAAsB3G,KAAKu9B,WAAW99B,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIyH,EAAKzH,IACxC0mB,EAASuR,uBAAuBn3B,KAAKu9B,WAAWr+B,IAG3Ck+B,GAAA78B,UAAA4/B,iCAAP,WAEC,GAAIx5B,GAAa3G,KAAKu9B,WAAW99B,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAKu9B,WAAWr+B,GAAGsY,iCAGd4lB,GAAA78B,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUmnB,iBAAiBp3B,MAGrBo9B,GAAA78B,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUonB,mBAAmBr3B,MAljBhBo9B,GAAAl8B,UAAmB,cAojBlC,OAAAk8B,IAtjBmBvpB,EAwjBLlU,GAAAJ,QAAL69B,I1CkgPNgD,gCAAgCh/B,UAAUi/B,uCAAuCj/B,UAAU+c,uCAAuC,uCAAuCxI,uDAAuD,uDAAuD2qB,sCAAsC,wCAAwCC,0CAA0C,SAAS9hC,EAAQkB,EAAOJ,GAC1a,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CvlQtB,IAAOoC,GAAQhE,EAAgB,gCAC/B,IAAOmE,GAAQnE,EAAgB,gCAG/B,IAAOsV,GAAStV,EAAe,oCAC/B,IAAO2f,GAAU3f,EAAe,uCAIhC,IAAO+hC,GAAmB/hC,EAAa,iEAEvC,IAAMgiC,GAAU,SAAA//B,GAASX,EAAnB0gC,EAAU//B,EAMf,SANK+/B,KAQJ//B,EAAAlB,KAAAQ,KANMA,MAAA0gC,SAAkB,GAClB1gC,MAAA2gC,UAAmB,GAOzB3gC,MAAKiI,WAAa,IAElBjI,MAAK4gC,gBAAkB,GAAG5gC,KAAK2gC,UAAU3gC,KAAK2gC,UAAY3gC,KAAK0gC,SAAS1gC,KAAK0gC,SAG7E1gC,MAAKuG,YAAc6X,EAAWC,OAGxBoiB,EAAAlgC,UAAA4U,oBAAP,WAEC,MAAO,IAAIqrB,GAGZ7/B,QAAAC,eAAW6/B,EAAAlgC,UAAA,U3C2kQJM,I2C3kQP,WAEC,MAAOb,MAAK0gC,U3C4kQNl6B,I2CzkQP,SAAkBC,GAEjBzG,KAAK0gC,SAAWj6B,CAEhB,IAAIzG,KAAK0gC,SAAW,EAAG,CACtB1gC,KAAK0gC,SAAW,MACV,IAAI1gC,KAAK0gC,SAAW1gC,KAAK2gC,UAAW,CAC1C3gC,KAAK2gC,UAAY3gC,KAAK0gC,QACtB1gC,MAAK0G,qBAEN1G,KAAK4gC,gBAAkB,GAAI5gC,KAAK2gC,UAAU3gC,KAAK2gC,UAAY3gC,KAAK0gC,SAAS1gC,KAAK0gC,W3C0kQxE3/B,WAAY,KACZC,aAAc,M2CxkQdy/B,GAAAlgC,UAAAsgC,eAAP,WAEC,MAAO7gC,MAAK4gC,gBAGbjgC,QAAAC,eAAW6/B,EAAAlgC,UAAA,W3CykQJM,I2CzkQP,WAEC,MAAOb,MAAK2gC,W3C0kQNn6B,I2CvkQP,SAAmBC,GAElBzG,KAAK2gC,UAAYl6B,CAEjB,IAAIzG,KAAK2gC,UAAY,EACpB3gC,KAAK2gC,UAAY,CAElB,IAAI3gC,KAAK2gC,UAAY3gC,KAAK0gC,SACzB1gC,KAAK0gC,SAAW1gC,KAAK2gC,SAEtB3gC,MAAK4gC,gBAAkB,GAAI5gC,KAAK2gC,UAAU3gC,KAAK2gC,UAAY3gC,KAAK0gC,SAAS1gC,KAAK0gC,SAC9E1gC,MAAK0G,sB3CqkQC3F,WAAY,KACZC,aAAc,M2CnkQdy/B,GAAAlgC,UAAAoL,qBAAP,WAECjL,EAAAH,UAAMoL,qBAAoBnM,KAAAQ,KAE1BA,MAAK4L,eAAeiS,OAAS7d,KAAK2gC,UAG5BF,GAAAlgC,UAAAkV,2BAAP,SAAkCC,EAAgBxH,EAAe3B,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAe,GAAI/G,OAAc,GACrC,IAAIqH,GAAa,GAAIzK,EAGrByK,GAAEtF,SAAS8N,EAAOzH,wBAAwBC,GAC1ChB,GAAEqsB,OAAOv5B,KAAK0H,SAASuE,sBACvBjM,MAAKsM,OAAOY,EAAElB,SAEdkB,GAAEtF,SAAS8N,EAAOzH,wBAAwBC,GAC1ChB,GAAEqsB,OAAOv5B,KAAKiM,sBAEd,IAAIszB,GAAU7pB,EAAO7O,QACrB,IAAIi6B,GAAc5zB,EAAEiiB,qBAAqB,GAAIvsB,GAAS28B,EAAI/W,KAAM+W,EAAIwB,OAAQxB,EAAIyB,OAChF,IAAIC,GAAc/zB,EAAEiiB,qBAAqB,GAAIvsB,GAAS28B,EAAI2B,MAAO3B,EAAI9W,IAAK8W,EAAI4B,MAC9E,IAAIC,GAAYN,EAAG55B,EAAE45B,EAAG55B,EAAI45B,EAAG15B,EAAE05B,EAAG15B,EAAI05B,EAAGz5B,EAAEy5B,EAAGz5B,CAChD,IAAIg6B,GAAYJ,EAAG/5B,EAAE+5B,EAAG/5B,EAAI+5B,EAAG75B,EAAE65B,EAAG75B,EAAI65B,EAAG55B,EAAE45B,EAAG55B,CAChD,IAAIpH,GAAWoP,KAAKC,KAAK8xB,EAAKC,EAAID,EAAKC,EACvC,IAAIvG,EACJ,IAAIC,EAEJ,IAAI1zB,GAAW6F,EAAEo0B,QAAQ,GACzBxG,GAAOzzB,EAAIpH,CACX86B,GAAO1zB,EAAIpH,CAEX2M,GAAI,GAAKA,EAAI,GAAKkuB,EAAK76B,CACvB2M,GAAI,IAAMmuB,GAAMA,EAAOD,EACvBluB,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOkuB,EAAKluB,EAAI,GAEpB,KAAKL,EACJA,EAAS,GAAI9J,EAEd8J,GAAOY,gBAAgBP,EACvBL,GAAOuE,QAAQ5D,EAEf,OAAOX,GAGDk0B,GAAAlgC,UAAA22B,eAAP,SAAsBtR,IAKf6a,GAAAlgC,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAUsxB,qBAAqBvhC,MAGzBygC,GAAAlgC,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUuxB,uBAAuBxhC,MAEnC,OAAAygC,IA/HyB1sB,EAiIzBpU,GAAoBJ,QAAXkhC,I3CsjQN5tB,gCAAgCzR,UAAU6R,gCAAgC7R,UAAUwS,oCAAoC,oCAAoCuK,uCAAuC,uCAAuCsjB,iEAAiE,mEAAmEC,qCAAqC,SAASjjC,EAAQkB,EAAOJ,GAC9a,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4CxsQtB,IAAO8C,GAAa1E,EAAc,wC5CytQlC,I4CxsQMkjC,GAAK,SAAAjhC,GAASX,EAAd4hC,EAAKjhC,EAgBV,SAhBKihC,KAkBJjhC,EAAAlB,KAAAQ,MAVDW,OAAAC,eAAI+gC,EAAAphC,UAAA,Y5C6sQGM,I4C7sQP,WAEC,MAAOb,MAAK4hC,W5C8sQN7gC,WAAY,KACZC,aAAc,M4CrsQtB,OAAA2gC,IApBoBx+B,EAsBpBxD,GAAeJ,QAANoiC,I5CysQNt/B,wCAAwC,0CAA0Cw/B,sCAAsC,SAASpjC,EAAQkB,EAAOJ,GACnJ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6CrvQtB,IAAOyhC,GAASrjC,EAAe,iCAO/B,IAAO0E,GAAa1E,EAAc,wCAGlC,IAAO2f,GAAU3f,EAAe,uC7CqvQhC,I6CvuQMsjC,GAAM,SAAArhC,GAASX,EAAfgiC,EAAMrhC,EA4MX,SA5MKqhC,GA4MOC,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEXthC,EAAAlB,KAAAQ,KAzMMA,MAAAiiC,iBAA0B,CAG1BjiC,MAAAkiC,YAAqBJ,EAAUvN,MAC9Bv0B,MAAAmiC,SAA0B,GAAIt8B,MAC9B7F,MAAAgX,aAAkC,GAAInR,MAItC7F,MAAAoiC,QAAkB,KAClBpiC,MAAAqiC,QAAkB,IAiMzBriC,MAAKiI,WAAa,IAClBjI,MAAKsiC,QAAU,GAAIz8B,OAAwB7F,KAE3CA,MAAKgiC,QAAUA,CAGfhiC,MAAKuG,YAAc6X,EAAWG,KA9L/B5d,OAAAC,eAAWmhC,EAAAxhC,UAAA,kB7C2uQJM,I6C3uQP,WAEC,MAAOb,MAAKiiC,kB7C4uQNz7B,I6CzuQP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIzG,KAAKiiC,kBAAoBx7B,EAC5B,MAEDzG,MAAKiiC,iBAAmBx7B,CAExBzG,MAAKuiC,uB7CuuQCxhC,WAAY,KACZC,aAAc,M6CluQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,U7CwuQJM,I6CxuQP,WAEC,MAAOb,MAAKoiC,S7CyuQN57B,I6CtuQP,SAAkBC,GAEjB,GAAIzG,KAAKoiC,SAAW37B,EACnB,MAEDzG,MAAKoiC,QAAU37B,CAEfzG,MAAKuiC,uB7CquQCxhC,WAAY,KACZC,aAAc,M6ChuQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,U7CsuQJM,I6CtuQP,WAEC,MAAOb,MAAKqiC,S7CuuQN77B,I6CpuQP,SAAkBC,GAEjB,GAAIzG,KAAKqiC,SAAW57B,EACnB,MAEDzG,MAAKqiC,QAAU57B,CAEfzG,MAAKuiC,uB7CmuQCxhC,WAAY,KACZC,aAAc,M6C3tQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,e7CouQJM,I6CpuQP,WAEC,MAAOb,MAAKwiC,e7CquQNzhC,WAAY,KACZC,aAAc,M6ChuQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,gB7CsuQJM,I6CtuQP,WAEC,MAAOb,MAAKyiC,e7CuuQN1hC,WAAY,KACZC,aAAc,M6C3tQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,a7CwuQJM,I6CxuQP,WAEC,MAAOb,MAAKkiC,a7CyuQN17B,I6CtuQP,SAAqBC,GAEpB,GAAIzG,KAAKkiC,aAAez7B,EACvB,MAEDzG,MAAKkiC,YAAcz7B,CAEnBzG,MAAK0iC,sB7CquQC3hC,WAAY,KACZC,aAAc,M6CnuQd+gC,GAAAxhC,UAAAmiC,mBAAP,WAEC,GAAI/7B,GAAa3G,KAAKmiC,SAAS1iC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKmiC,SAASjjC,GAAGyjC,mBAQZZ,GAAAxhC,UAAAgiC,oBAAP,WAEC,GAAI57B,GAAa3G,KAAKmiC,SAAS1iC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKmiC,SAASjjC,GAAG0jC,mBAQnBjiC,QAAAC,eAAWmhC,EAAAxhC,UAAA,W7CkuQJM,I6CluQP,WAEC,MAAOb,MAAKsiC,S7CmuQNvhC,WAAY,KACZC,aAAc,M6CjuQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,Y7CouQJM,I6CpuQP,WAEC,MAAOb,MAAKo2B,W7CquQNr1B,WAAY,KACZC,aAAc,M6ChuQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,e7CsuQJM,I6CtuQP,WAEC,MAAOb,MAAKqX,c7CuuQN7Q,I6CpuQP,SAAuBC,GAEtBzG,KAAKqX,aAAe5Q,G7CquQd1F,WAAY,KACZC,aAAc,M6CjuQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,kB7CuuQJM,I6CvuQP,WAEC,MAAOb,MAAKuX,iB7CwuQN/Q,I6CruQP,SAA0BC,GAEzBzG,KAAKuX,gBAAkB9Q,G7CsuQjB1F,WAAY,KACZC,aAAc,M6CluQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,W7CwuQJM,I6CxuQP,WAEC,MAAOb,MAAK6iC,U7CyuQNr8B,I6CtuQP,SAAmBC,GAGlB,GAAIA,GAASzG,KAAK6iC,SACjB7iC,KAAK0iC,oBAEN1iC,MAAK6iC,SAAWp8B,G7CsuQV1F,WAAY,KACZC,aAAc,M6CltQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,a7CqtQJM,I6CrtQP,WAEC,MAAOkhC,GAAO7gC,W7CstQRH,WAAY,KACZC,aAAc,M6CptQrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,gB7CutQJM,I6CvtQP,WAEC,MAAO,Q7CwtQDE,WAAY,KACZC,aAAc,M6CltQd+gC,GAAAxhC,UAAAU,QAAP,WAEC,GAAI/B,EACJ,IAAIyH,EAEJA,GAAM3G,KAAKmiC,SAAS1iC,MACpB,KAAKP,EAAI,EAAGA,EAAIyH,EAAKzH,IACpBc,KAAKmiC,SAASjjC,GAAG+B,SAElBjB,MAAKmiC,SAAW,GAAIt8B,MAEpB,IAAIc,GAAa3G,KAAKgX,aAAavX,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKgX,aAAa9X,GAAG+B,SAEtBjB,MAAKgX,aAAe,GAAInR,OAGlBk8B,GAAAxhC,UAAA22B,eAAP,SAAsBtR,IAKfmc,GAAAxhC,UAAAuiC,YAAP,SAAmBna,GAElB3oB,KAAKmiC,SAASlxB,KAAK0X,EAEnB,OAAOA,GAGDoZ,GAAAxhC,UAAAwiC,eAAP,SAAsBpa,GAErB3oB,KAAKmiC,SAAS9wB,OAAOrR,KAAKmiC,SAAS/wB,QAAQuX,GAAS,EAEpD,OAAOA,GAGDoZ,GAAAxhC,UAAAwQ,gBAAP,SAAuBC,GAEtBhR,KAAKgX,aAAa/F,KAAKD,EAEvB,OAAOA,GAID+wB,GAAAxhC,UAAA2Q,mBAAP,SAA0BF,GAEzB,GAAIG,GAAenR,KAAKgX,aAAa5F,QAAQJ,EAE7ChR,MAAKgX,aAAa3F,OAAOF,EAAO,EAEhC,OAAOH,GAGD+wB,GAAAxhC,UAAAkQ,iBAAP,SAAwBR,GAEvBA,EAAU+yB,iBAAiBhjC,MAGrB+hC,GAAAxhC,UAAAgQ,mBAAP,SAA0BN,GAEzBA,EAAUgzB,mBAAmBjjC,MAlShB+hC,GAAA7gC,UAAmB,gBAoSlC,OAAA6gC,IAtSqB5+B,EAwSrBxD,GAAgBJ,QAAPwiC,I7CksQNmB,iCAAiC9hC,UAAUiB,wCAAwC,wCAAwC8b,uCAAuC,yCAAyCglB,yCAAyC,SAAS1kC,EAAQkB,EAAOJ,GAC/Q,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8C3/QtB,IAAO+8B,GAAI3+B,EAAiB,mCAC5B,IAAOw+B,GAAQx+B,EAAgB,gCAE/B,IAAOiD,GAAgBjD,EAAc,wC9C4kRrC,I8C1/QM2kC,GAAS,SAAA1iC,GAASX,EAAlBqjC,EAAS1iC,EA6mBd,SA7mBK0iC,KA+mBJ1iC,EAAAlB,KAAAQ,KAAM,GAAIi9B,GAnmBHj9B,MAAAqjC,MAAe,GAuFvB1iC,OAAAC,eAAWwiC,EAAA7iC,UAAA,a9C06QJM,I8C16QP,WAEC,MAAOuiC,GAAUliC,W9C26QXH,WAAY,KACZC,aAAc,M8C33QrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,iB9Cu4QJM,I8Cv4QP,WAEC,MAAOb,MAAKsjC,gB9Cw4QNviC,WAAY,KACZC,aAAc,M8C73QrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,c9Cy4QJM,I8Cz4QP,WAEC,MAAOb,MAAKujC,a9C04QNxiC,WAAY,KACZC,aAAc,M8C/xQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,U9CsyQJM,I8CtyQP,WAEC,MAAOb,MAAKwjC,S9CuyQNziC,WAAY,KACZC,aAAc,M8CvxQdoiC,GAAA7iC,UAAAkjC,WAAP,WAEC,MAAOzjC,MAAK0jC,YAMNN,GAAA7iC,UAAAojC,WAAP,WAEC,MAAO3jC,MAAK4jC,YA+BbjjC,QAAAC,eAAWwiC,EAAA7iC,UAAA,Y9CkwQJM,I8ClwQP,WAEC,MAAOb,MAAK6jC,W9CmwQN9iC,WAAY,KACZC,aAAc,M8CrpQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,uB9C8pQJM,I8C9pQP,WAEC,MAAOb,MAAK8jC,sB9C+pQN/iC,WAAY,KACZC,aAAc,M8CvpQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,qB9CgqQJM,I8ChqQP,WAEC,MAAOb,MAAK+jC,oB9CiqQNhjC,WAAY,KACZC,aAAc,M8CvnQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,Q9CkoQJM,I8CloQP,WAEC,MAAOb,MAAKqjC,O9CmoQN78B,I8ChoQP,SAAgBC,GAEf,GAAIzG,KAAKqjC,OAAS58B,EACjB,MAEDzG,MAAKqjC,MAAQ58B,CACbzG,MAAKgkC,e9CgoQCjjC,WAAY,KACZC,aAAc,M8C/nQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,c9CkoQJM,I8CloQP,WAEC,MAAOb,MAAKikC,a9CmoQNz9B,I8ChoQP,SAAsBC,GAErB,GAAIzG,KAAKikC,aAAex9B,EACvB,MACDzG,MAAKikC,YAAcx9B,CACnBzG,MAAKgkC,e9CioQCjjC,WAAY,KACZC,aAAc,M8CjnQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,c9CunQJM,I8CvnQP,WAEC,MAAOb,MAAKkkC,a9CwnQNnjC,WAAY,KACZC,aAAc,M8C9mQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,uB9CynQJM,I8CznQP,WAEC,MAAOb,MAAKmkC,sB9C0nQNpjC,WAAY,KACZC,aAAc,M8CrnQrBL,QAAAC,eAAWwiC,EAAA7iC,UAAA,a9C2nQJM,I8C3nQP,WAEC,MAAOb,MAAKokC,Y9C4nQNrjC,WAAY,KACZC,aAAc,M8C9jQdoiC,GAAA7iC,UAAAyjC,YAAP,WAEC,IAAK,GAAI9kC,GAASc,KAAKq9B,SAASiB,cAAc7+B,OAAO,EAAGP,GAAG,EAAGA,IAC7Dc,KAAKq9B,SAASgH,kBAAkBrkC,KAAKq9B,SAASiB,cAAcp/B,GAE7D,IAAGc,KAAKikC,aAAa,KAAK,CACzB,OAED,GAAGjkC,KAAKqjC,OAAO,GAAG,CACjB,OAED,GAAIxQ,GAAwB,GAAIhtB,MAChC,IAAIy+B,GAA0B,GAAIz+B,MAClC,IAAI0+B,GAA0B,GAAI1+B,MAClC,IAAI2+B,GAAoB,GAAI3+B,MAE5B,IAAI4+B,GAAkBzkC,KAAKikC,YAAYS,KAAK1kC,KAAKikC,YAAYU,WAAWC,kBACxE,IAAIC,GAAsB,CAC1B,IAAIC,GAAe,CACnB,IAAIC,GAAgB,CACpB,IAAIC,GAAgB,CACpB,IAAIC,GAA+B,IACnC,KAAK,GAAI/lC,GAAI,EAAGA,EAAIc,KAAKklC,KAAKzlC,OAAQP,IAAK,CAE1C,GAAIimC,GAAoDnlC,KAAKikC,YAAYU,WAAWS,oBAAoBplC,KAAKqjC,MAAMgC,WAAWnmC,GAAGomC,WACjI,IAAGH,GAAY,KAAM,CACpB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CACzBT,EAAU,CACV,IAAIW,GAAyBF,EAAa1S,OAC1C,IAAI6S,GAA2BH,EAAajB,SAC5C,IAAIqB,GAA2BJ,EAAaK,MAC5C,KAAK,GAAI/b,GAAI,EAAGA,EAAI4b,EAAShmC,OAAQoqB,IAAK,CACzCgJ,EAAQ5hB,KAAKw0B,EAAS5b,GAAKgb,EAC3BC,KAEDD,GAAkBC,CAClB,KAAKjb,EAAI,EAAGA,EAAI6b,EAAWjmC,OAAS,EAAGoqB,IAAK,CAC3Cya,EAAUrzB,KAAMy0B,EAAW7b,EAAI,GAAK4a,EAAcM,EAClDT,GAAUrzB,KAAMy0B,EAAW7b,EAAI,EAAI,GAAK4a,EAAcO,EACtDV,GAAUrzB,KAAKy0B,EAAW7b,EAAI,EAAI,GAClC0a,GAAUtzB,KAAK00B,EAAW9b,EAAI,GAC9B0a,GAAUtzB,KAAK00B,EAAW9b,EAAI,EAAI,GAClC2a,GAAIvzB,KAAKjR,KAAKikC,YAAY4B,UAAU,GACpCrB,GAAIvzB,KAAKjR,KAAKikC,YAAY4B,UAAU,I9CkkQtB,G8C/jQXC,GAAqB,CACzB,IAAGb,GAAW,KAAK,CAClB,IAAI,GAAIc,GAAS,EAAGA,EAAEd,EAAUe,iBAAiBvmC,OAAOsmC,IAAI,CAC3D,GAAGd,EAAUe,iBAAiBD,IAAI/lC,KAAKqjC,MAAMgC,WAAWnmC,GAAG,CAC1D4mC,EAAcb,EAAUgB,cAAcF,EACtC,SAIHhB,IAAcI,EAAUe,WAAWJ,GAAiBrB,EAAczkC,KAAKikC,YAAYkC,kBAE/E,CAEJpB,GAAY/kC,KAAKikC,YAAYU,WAAWC,mBAAqBH,OAG1D,CAEJM,GAAY/kC,KAAKikC,YAAYU,WAAWC,mBAAqBH,GAG/D,GAAI2B,GAAkC,GAAI1kC,GAAiB,KAC3D0kC,GAAeC,cAAcxT,EAC7BuT,GAAeE,gBAAgBhC,EAC/B8B,GAAeG,aAAahC,EAC5B6B,GAAeI,UAAUhC,EACzBxkC,MAAKq9B,SAASoJ,eAAeL,EAC7BpmC,MAAK0mC,UAAU,GAAG3kC,SAAS/B,KAAKikC,YAAYliC,SAWtCqhC,GAAA7iC,UAAAomC,WAAP,SAAkBC,GACjB5mC,KAAKqjC,OAAOuD,EAONxD,GAAA7iC,UAAAsmC,eAAP,YAcOzD,GAAA7iC,UAAAumC,kBAAP,SAAyBC,GAExB,MAAO/mC,MAAKgnC,gBAaN5D,GAAA7iC,UAAA0mC,oBAAP,SAA2B//B,EAAUE,GAEpC,MAAOpH,MAAKknC,kBAcN9D,GAAA7iC,UAAA4mC,wBAAP,SAA+BJ,GAE9B,MAAO/mC,MAAKonC,sBAuBNhE,GAAA7iC,UAAA8mC,kBAAP,SAAyBC,GAExB,MAAOtnC,MAAKunC,gBAaNnE,GAAA7iC,UAAAinC,oBAAP,SAA2BtgC,EAAUE,GAEpC,MAAOpH,MAAKynC,kBAaNrE,GAAA7iC,UAAAmnC,mBAAP,SAA0BX,GAEzB,MAAO/mC,MAAK2nC,iBAUNvE,GAAA7iC,UAAAqnC,cAAP,SAAqBC,GAEpB,MAAO7nC,MAAK8nC,YAUN1E,GAAA7iC,UAAAwnC,eAAP,SAAsBF,GAErB,MAAO7nC,MAAKgoC,aAYN5E,GAAA7iC,UAAA0nC,cAAP,SAAqBJ,GAEpB,MAAO7nC,MAAKkoC,YAYN9E,GAAA7iC,UAAA4nC,YAAP,SAAmBN,GAElB,MAAO7nC,MAAKooC,UAeNhF,GAAA7iC,UAAA8nC,mBAAP,SAA0BtB,GAEzB,MAAO/mC,MAAKsoC,iBAqBNlF,GAAA7iC,UAAAgoC,cAAP,SAAqBvoB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOjgB,MAAKikC,YAoBNb,GAAA7iC,UAAAioC,oBAAP,SAA2B/hC,IAuBpB28B,GAAA7iC,UAAAkoC,YAAP,SAAmBzoB,EAA2BC,EAAyB2mB,IAkBhExD,GAAA7iC,UAAAmoC,aAAP,SAAoB1oB,EAA2BC,IAkDxCmjB,GAAA7iC,UAAAooC,cAAP,SAAqBC,EAAmB5oB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrFmjB,GAAAyF,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGE3F,GAAA7iC,UAAAuI,MAAP,WAEI,GAAIA,GAAQ,GAAIs6B,EAChBpjC,MAAKgpC,kBAAkBlgC,EACvB,OAAOA,GAGJs6B,GAAA7iC,UAAAyoC,kBAAP,SAAyBlgC,GAErB9I,KAAK2+B,aAAa71B,EAClBA,GAAMmgC,WAAangC,EAAMmgC,UACzBngC,GAAMogC,UAAYpgC,EAAMogC,SACxBpgC,GAAMo8B,KAAOp8B,EAAMo8B,KApjCZ9B,GAAAliC,UAAmB,mBAsjClC,OAAAkiC,IAxjCwBhG,EA0jCxBz9B,GAAmBJ,QAAV6jC,I9C0hQNjhC,wCAAwCf,UAAUg/B,gCAAgCh/B,UAAU47B,mCAAmC,qCAAqCmM,uCAAuC,SAAS1qC,EAAQkB,EAAOJ,GACtO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C1rStB,IAAOjB,GAAKX,EAAe,+BAE3B,IAAM2qC,GAAS,SAAA1oC,GAASX,EAAlBqpC,EAAS1oC,EAEd,SAFK0oC,GAEOC,GAEX3oC,EAAAlB,KAAAQ,KAAMqpC,GAER,MAAAD,IANwBhqC,EAQxBO,GAAmBJ,QAAV6pC,I/C4rSN1oB,+BAA+Btf,YAAYupB,yCAAyC,SAASlsB,EAAQkB,EAAOJ,GAC/G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgD3sStB,IAAOipC,GAAK7qC,EAAe,+BhDitS3B,IgD1sSM+mB,GAAW,SAAA9kB,GAASX,EAApBylB,EAAW9kB,EAMhB,SANK8kB,GAMOxb,EAAakE,GAExBxN,EAAAlB,KAAAQ,KAAMgK,EAENhK,MAAKupC,QAAUr7B,EAGhBvN,OAAAC,eAAW4kB,EAAAjlB,UAAA,UhDosSJM,IgDpsSP,WAEC,MAAOb,MAAKupC,ShDqsSNxoC,WAAY,KACZC,aAAc,MgDntSPwkB,GAAA4C,mBAA4B,mBAe3C,OAAA5C,IAjB0B8jB,EAmBL3pC,GAAAJ,QAAZimB,IhDysSNgkB,+BAA+BpoC,YAAYgS,gDAAgD,SAAS3U,EAAQkB,EAAOJ,GACtH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDxuStB,IAAOipC,GAAK7qC,EAAe,+BAI3B,IAAMwE,GAAkB,SAAAvC,GAASX,EAA3BkD,EAAkBvC,EAWvB,SAXKuC,GAWO+G,EAAay/B,GAExB/oC,EAAAlB,KAAAQ,KAAMgK,EACNhK,MAAKypC,OAASA,EAZDxmC,EAAAymC,kBAA2B,kBAC3BzmC,GAAAyH,uBAAgC,uBAChCzH,GAAAuH,cAAuB,cACvBvH,GAAAiH,iBAA0B,iBAC1BjH,GAAAmH,iBAA0B,iBAC1BnH,GAAAqH,cAAuB,cAStC,OAAArH,IAhBiCqmC,EAkBL3pC,GAAAJ,QAAnB0D,IjDquSNumC,+BAA+BpoC,YAAYwU,wCAAwC,SAASnX,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDhwStB,IAAOipC,GAAK7qC,EAAe,+BAE3B,IAAMqV,GAAU,SAAApT,GAASX,EAAnB+T,EAAUpT,EAKf,SALKoT,GAKO9J,GAEXtJ,EAAAlB,KAAAQ,KAAMgK,GAIA8J,EAAAvT,UAAAuI,MAAP,WAEC,MAAO,IAAIgL,GAAW9T,KAAKgK,MAVd8J,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyBw1B,EAiBL3pC,GAAAJ,QAAXuU,IlD8vSN01B,+BAA+BpoC,YAAYo2B,2CAA2C,SAAS/4B,EAAQkB,EAAOJ,GACjH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDtxStB,IAAOipC,GAAK7qC,EAAe,+BAE3B,IAAMi3B,GAAa,SAAAh1B,GAASX,EAAtB21B,EAAah1B,EAIlB,SAJKg1B,GAIO1rB,GAEXtJ,EAAAlB,KAAAQ,KAAMgK,GAJO0rB,EAAAW,aAAsB,aAMrC,OAAAX;EAR4B4T,EAU5B3pC,GAAuBJ,QAAdm2B,InDuxSN8T,+BAA+BpoC,YAAYuoC,wCAAwC,SAASlrC,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDtyStB,IAAOipC,GAAK7qC,EAAe,+BpD6yS3B,IoDlySMmrC,GAAU,SAAAlpC,GAASX,EAAnB6pC,EAAUlpC,EAuIf,SAvIKkpC,GAuIO5/B,GAEXtJ,EAAAlB,KAAAQ,KAAMgK,EAtIAhK,MAAA6pC,qBAA+B,KA4ItClpC,OAAAC,eAAWgpC,EAAArpC,UAAA,WpDkqSJM,IoDlqSP,WAEC,GAAIipC,GAAqB9pC,KAAK6pC,oBAC9B7pC,MAAK6pC,qBAAuB,IAG5B,OAAOC,IpDkqSD/oC,WAAY,KACZC,aAAc,MoD7pSd4oC,GAAArpC,UAAAwpC,gBAAP,WAEC/pC,KAAK6pC,qBAAuB,KAE5B,IAAI7pC,KAAKgqC,cACRhqC,KAAKgqC,cAAcD,kBAMdH,GAAArpC,UAAA0pC,yBAAP,WAECjqC,KAAK6pC,qBAAuB,KAE5B,IAAI7pC,KAAKgqC,cACRhqC,KAAKgqC,cAAcC,2BAMdL,GAAArpC,UAAAuI,MAAP,WAEC,GAAIohC,GAAoB,GAAIN,GAAW5pC,KAAKgK,KAO5CkgC,GAAOC,QAAUnqC,KAAKmqC,OACtBD,GAAOE,QAAUpqC,KAAKoqC,OAEtBF,GAAOG,KAAOrqC,KAAKqqC,IACnBH,GAAOT,OAASzpC,KAAKypC,MACrBS,GAAOI,gBAAkBtqC,KAAKsqC,eAC9BJ,GAAOnoC,SAAW/B,KAAK+B,QACvBmoC,GAAOK,GAAKvqC,KAAKuqC,EACjBL,GAAOM,cAAgBxqC,KAAKwqC,aAC5BN,GAAOO,YAAczqC,KAAKyqC,WAC1BP,GAAO/4B,MAAQnR,KAAKmR,KACpB+4B,GAAOQ,iBAAmB1qC,KAAK0qC,gBAC/BR,GAAOS,MAAQ3qC,KAAK2qC,KAEpBT,GAAOU,QAAU5qC,KAAK4qC,OACtBV,GAAOW,SAAW7qC,KAAK6qC,QAEvBX,GAAOF,cAAgBhqC,IACvBkqC,GAAOL,qBAAuB7pC,KAAK6pC,oBAEnC,OAAOK,GAMRvpC,QAAAC,eAAWgpC,EAAArpC,UAAA,iBpDqpSJM,IoDrpSP,WAEC,MAAOb,MAAKypC,OAAO5hC,eAAewB,gBAAgBrJ,KAAKwqC,gBpDspSjDzpC,WAAY,KACZC,aAAc,MoDjpSrBL,QAAAC,eAAWgpC,EAAArpC,UAAA,epDupSJM,IoDvpSP,WAEC,GAAIiqC,GAAuB9qC,KAAKypC,OAAO5hC,eAAesnB,qBAAqBnvB,KAAKyqC,YAChFK,GAAYh+B,WAEZ,OAAOg+B,IpDupSD/pC,WAAY,KACZC,aAAc,MoDh3SP4oC,GAAAmB,WAAoB,aAKpBnB,GAAAoB,UAAmB,YAKnBpB,GAAAqB,SAAkB,WAKlBrB,GAAAsB,WAAoB,aAKpBtB,GAAAuB,WAAoB,aAepBvB,GAAAwB,MAAe,SAKfxB,GAAAyB,aAAsB,eAKtBzB,GAAA0B,YAAqB,cA6KpC,OAAA1B,IAnOyBN,EAqOzB3pC,GAAoBJ,QAAXqqC,IpDksSNJ,+BAA+BpoC,YAAYmqC,kDAAkD,SAAS9sC,EAAQkB,EAAOJ,GACxH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDz7StB,IAAOipC,GAAK7qC,EAAgB,+BrDk8S5B,IqDx7SM+sC,GAAoB,SAAA9qC,GAASX,EAA7ByrC,EAAoB9qC,EAczB,SAdK8qC,GAcOxhC,EAAayhC,GAExB/qC,EAAAlB,KAAAQ,KAAMgK,EAENhK,MAAK0rC,aAAeD,EAMrB9qC,OAAAC,eAAW4qC,EAAAjrC,UAAA,erD+6SJM,IqD/6SP,WAEC,MAAOb,MAAK0rC,crDg7SN3qC,WAAY,KACZC,aAAc,MqDz6SdwqC,GAAAjrC,UAAAuI,MAAP,WAEC,MAAO,IAAI0iC,GAAqBxrC,KAAKgK,KAAMhK,KAAK0rC,cA/BnCF,GAAAG,qBAA8B,oBAiC7C,OAAAH,IAtCmClC,EAwCL3pC,GAAAJ,QAArBisC,IrDq7SNhC,+BAA+BpoC,YAAYwpB,2CAA2C,SAASnsB,EAAQkB,EAAOJ,GACjH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsD5+StB,IAAOipC,GAAK7qC,EAAe,+BAE3B,IAAMgnB,GAAa,SAAA/kB,GAASX,EAAtB0lB,EAAa/kB,EAKlB,SALK+kB,GAKOzb,GAEXtJ,EAAAlB,KAAAQ,KAAMgK,GALOyb,EAAAiC,iBAA0B,iBAC1BjC,GAAAkC,gBAAyB,gBAMxC,OAAAlC,IAT4B6jB,EAWL3pC,GAAAJ,QAAdkmB,ItD6+SN+jB,+BAA+BpoC,YAAYwqC,yCAAyC,SAASntC,EAAQkB,EAAOJ,GAC/G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuD//StB,IAAOipC,GAAK7qC,EAAe,+BAE3B,IAAMotC,GAAW,SAAAnrC,GAASX,EAApB8rC,EAAWnrC,EAOhB,SAPKmrC,GAOO7hC,EAAa8hC,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAApZ,IAAwB,GAAAqZ,QAAA,GAAqB,CAArBA,EAAArZ,IAEhDhyB,EAAAlB,KAAAQ,KAAMgK,EAENhK,MAAKgsC,WAAaF,CAClB9rC,MAAKisC,UAAYF,EAGlBprC,OAAAC,eAAWirC,EAAAtrC,UAAA,avD2/SJM,IuD3/SP,WAEC,MAAOb,MAAKgsC,YvD4/SNjrC,WAAY,KACZC,aAAc,MuD1/SrBL,QAAAC,eAAWirC,EAAAtrC,UAAA,YvD6/SJM,IuD7/SP,WAEC,MAAOb,MAAKisC,WvD8/SNlrC,WAAY,KACZC,aAAc,MuDnhTP6qC,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0BvC,EA0BL3pC,GAAAJ,QAAZssC,IvDkgTNrC,+BAA+BpoC,YAAYiS,wCAAwC,SAAS5U,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwDniTtB,IAAOipC,GAAK7qC,EAAe,+BAI3B,IAAMyE,GAAU,SAAAxC,GAASX,EAAnBmD,EAAUxC,EAsBf,SAtBKwC,GAsBO8G,EAAa2N,GAExBjX,EAAAlB,KAAAQ,KAAMgK,EAENhK,MAAK2X,cAAgBA,EArBRzU,EAAAwN,eAAwB,cAKxBxN,GAAAmN,mBAA4B,kBAK5BnN,GAAA+hB,kBAA2B,kBAa1C,OAAA/hB,IA5ByBomC,EA8BzB3pC,GAAoBJ,QAAX2D,IxD0hTNsmC,+BAA+BpoC,YAAY+qC,sDAAsD,SAAS1tC,EAAQkB,EAAOJ,GyD5jT5H,GAAO6sC,GAAa3tC,EAAc,qCAGlC,IAAOsX,GAAWtX,EAAe,sCAEjC,IAAO4tC,GAAa5tC,EAAc,6CAClC,IAAO6tC,GAAe7tC,EAAc,8CAEpC,IAAM8tC,GAAsB,WAA5B,QAAMA,MAOSA,EAAAC,mBAAd,SAAiClC,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgBmC,QAAQ12B,GAAc,CACpE,IAAKw2B,EAAuBG,qBAC3BH,EAAuBI,2BAExB,OAAOJ,GAAuBG,yBACxB,CACN,IAAKH,EAAuBK,yBAC3BL,EAAuBM,+BAExB,OAAON,GAAuBK,0BAIlBL,GAAAO,kBAAd,SAAgCxC,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,IAAKiC,EAAuBQ,gBAC3BR,EAAuBS,sBAExB,OAAOT,GAAuBQ,gBAGhBR,GAAAS,qBAAf,WAECT,EAAuBU,sBAAwBV,EAAuBW,8BACtEX,GAAuBQ,gBAAkB,GAAIT,GAAgBC,EAAuBU,sBACpFV,GAAuBQ,gBAAgBliC,KAAO,iBAGjC0hC,GAAAW,6BAAd,WAEC,GAAIhtC,GAAkB,GAAIksC,GAAc,EAAG,EAAG,MAAO,EzDgjT/C,IyD7iTFltC,GAAU+/B,CACd,KAAK//B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAK+/B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAM//B,EAAI,EAAI,CACtBgB,EAAEitC,SAASjuC,EAAG+/B,EAAG,YAKpB,MAAO/+B,GAGOqsC,GAAAM,8BAAf,WAEC,IAAKN,EAAuBQ,gBAC3BR,EAAuBS,sBAExBT,GAAuBK,yBAA2B,GAAIP,GAAcE,EAAuBQ,gBAC3FR,GAAuBK,yBAAyBQ,OAAS,KACzDb,GAAuBK,yBAAyBnc,OAAS,KACzD8b,GAAuBK,yBAAyB/hC,KAAO,0BAGzC0hC,GAAAI,0BAAf,WAECJ,EAAuBG,qBAAuB,GAAIL,EAClDE,GAAuBG,qBAAqB7hC,KAAO,sBAErD,OAAA0hC,KAEA5sC,GAAgCJ,QAAvBgtC,IzDyiTNc,qCAAqCjsC,UAAUyU,sCAAsC,sCAAsCy3B,6CAA6C,6CAA6CC,8CAA8C,gDAAgD1iB,4CAA4C,SAASpsB,EAAQkB,EAAOJ,G0DznT1X,GAAOqD,GAAQnE,EAAgB,gCAK/B,IAAO+uC,GAAc/uC,EAAc,uC1D2nTnC,I0DrnTMinB,GAAY,WAqCjB,QArCKA,KAAN,GAAApE,GAAAthB,IAISA,MAAAytC,YAA0B,GAAI5nC,MAM9B7F,MAAA0tC,YAAuB,GAAI9qC,EAE3B5C,MAAA2tC,cAAsC,GAAI9nC,MAI1C7F,MAAA4tC,SAA0B,GAAIJ,GAAeA,EAAevC,SAC5DjrC,MAAA6tC,YAA6B,GAAIL,GAAeA,EAAepC,MAC/DprC,MAAA8tC,UAA2B,GAAIN,GAAeA,EAAexC,UAC7DhrC,MAAA+tC,WAA4B,GAAIP,GAAeA,EAAetC,WAC9DlrC,MAAAguC,WAA4B,GAAIR,GAAeA,EAAerC,WAC9DnrC,MAAAiuC,WAA4B,GAAIT,GAAeA,EAAezC,WAC9D/qC,MAAAkuC,YAA6B,GAAIV,GAAeA,EAAelC,YAC/DtrC,MAAAmuC,kBAAmC,GAAIX,GAAeA,EAAenC,aAgB5ErrC,MAAKouC,gBAAkB,SAACzsB,GAAqB,MAAAL,GAAK+sB,QAAQ1sB,GAC1D3hB,MAAKsuC,sBAAwB,SAAC3sB,GAAqB,MAAAL,GAAKitB,cAAc5sB,GACtE3hB,MAAKwuC,oBAAsB,SAAC7sB,GAAqB,MAAAL,GAAKmtB,YAAY9sB,GAClE3hB,MAAK0uC,oBAAsB,SAAC/sB,GAAqB,MAAAL,GAAKqtB,YAAYhtB,GAClE3hB,MAAK4uC,kBAAoB,SAACjtB,GAAqB,MAAAL,GAAKutB,UAAUltB,GAC9D3hB,MAAK8uC,qBAAuB,SAACntB,GAAqB,MAAAL,GAAKytB,aAAaptB,GACpE3hB,MAAKgvC,oBAAsB,SAACrtB,GAAqB,MAAAL,GAAK2tB,YAAYttB,GAClE3hB,MAAKkvC,mBAAqB,SAACvtB,GAAqB,MAAAL,GAAK6tB,WAAWxtB,IAGnD+D,EAAAxD,YAAd,WAEC,GAAIliB,KAAKovC,UACR,MAAOpvC,MAAKovC,SAEb,OAAQpvC,MAAKovC,UAAY,GAAI1pB,GAGvBA,GAAAnlB,UAAAgpB,gBAAP,SAAuBN,GAGtB,GAAIjpB,KAAKopB,mBAAqBppB,KAAKqvC,yBAA0B,CAC5D,GAAIrvC,KAAKqvC,yBACRrvC,KAAKsvC,cAActvC,KAAK8tC,UAAW9tC,KAAKuvC,gBAAiBvvC,KAAKqvC,yBAE/D,IAAIrvC,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAKiuC,WAAYjuC,KAAKuvC,iBAI3C,GAAItmB,GAAkBjpB,KAAKopB,kBAC1BppB,KAAKsvC,cAAetvC,KAAKguC,WAAYhuC,KAAKuvC,gBAE3C,IAAI5tB,EACJ,IAAIgC,E1DylTE,I0DtlTFhd,GAAa3G,KAAK2tC,cAAcluC,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EAAG,CAEpCyiB,EAAQ3hB,KAAK2tC,cAAczuC,EAC3BykB,GAAahC,EAAM8nB,MAEnB,OAAO9lB,IAAeA,EAAW/R,mBAChC+R,EAAaA,EAAW5Y,MAEzB,IAAI4Y,EACHA,EAAWvT,cAAcuR,GAG3B3hB,KAAK2tC,cAAcluC,OAAS,CAE5BO,MAAKqvC,yBAA2BrvC,KAAKopB,iBAErCppB,MAAKmpB,cAAgB,MAmBfzD,GAAAnlB,UAAA6mB,aAAP,SAAoBijB,GAEnBA,EAAKmF,YAAYzlC,iBAAiB,QAAS/J,KAAKouC,gBAChD/D,GAAKmF,YAAYzlC,iBAAiB,WAAY/J,KAAKsuC,sBACnDjE,GAAKmF,YAAYzlC,iBAAiB,YAAa/J,KAAKwuC,oBACpDnE,GAAKmF,YAAYzlC,iBAAiB,YAAa/J,KAAK0uC,oBACpDrE,GAAKmF,YAAYzlC,iBAAiB,UAAW/J,KAAK4uC,kBAClDvE,GAAKmF,YAAYzlC,iBAAiB,aAAc/J,KAAK8uC,qBACrDzE,GAAKmF,YAAYzlC,iBAAiB,YAAa/J,KAAKgvC,oBACpD3E,GAAKmF,YAAYzlC,iBAAiB,WAAY/J,KAAKkvC,mBAEnDlvC,MAAKytC,YAAYx8B,KAAKo5B,GAGhB3kB,GAAAnlB,UAAAmpB,eAAP,SAAsB2gB,GAErBA,EAAKmF,YAAYvgC,oBAAoB,QAASjP,KAAKouC,gBACnD/D,GAAKmF,YAAYvgC,oBAAoB,WAAYjP,KAAKsuC,sBACtDjE,GAAKmF,YAAYvgC,oBAAoB,YAAajP,KAAKwuC,oBACvDnE,GAAKmF,YAAYvgC,oBAAoB,YAAajP,KAAK0uC,oBACvDrE,GAAKmF,YAAYvgC,oBAAoB,UAAWjP,KAAK4uC,kBACrDvE,GAAKmF,YAAYvgC,oBAAoB,aAAcjP,KAAK8uC,qBACxDzE,GAAKmF,YAAYvgC,oBAAoB,YAAajP,KAAKgvC,oBACvD3E,GAAKmF,YAAYvgC,oBAAoB,WAAYjP,KAAKkvC,mBAEtDlvC,MAAKytC,YAAYgC,MAAMzvC,KAAKytC,YAAYr8B,QAAQi5B,GAAO,GAOhD3kB,GAAAnlB,UAAA+uC,cAAR,SAAsB3tB,EAAsB+tB,EAAwBC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGnE,GAAID,EAAa,CAChB/tB,EAAMipB,QAAU8E,EAAY9E,OAC5BjpB,GAAMiuB,OAASF,EAAYE,MAC3BjuB,GAAMkpB,SAAW6E,EAAY7E,QAC7BlpB,GAAMwoB,QAAUuF,EAAYG,OAC5BluB,GAAMyoB,QAAUsF,EAAYI,QAG7B,GAAIH,GAAY,KACfA,EAAW3vC,KAAKopB,iBAGjB,IAAIumB,EAAU,CAEbhuB,EAAM8nB,OAASkG,EAASh4B,aACxBgK,GAAM2oB,gBAAkBqF,EAASrF,eAEjC3oB,GAAM4oB,GAAKoF,EAASpF,EAEpB5oB,GAAM6oB,cAAgBmF,EAASnF,cAAemF,EAASnF,cAAc1hC,QAAU,IAE/E6Y,GAAM8oB,YAAckF,EAASlF,YAAakF,EAASlF,YAAY3hC,QAAU,IAEzE6Y,GAAMxQ,MAAQw+B,EAASx+B,UACjB,CAENwQ,EAAM4oB,GAAK,IACX5oB,GAAM8nB,OAAS,IACf9nB,GAAM6oB,cAAgBxqC,KAAK0tC,WAC3B/rB,GAAM8oB,YAAczqC,KAAK0tC,WACzB/rB,GAAMxQ,MAAQ,CACdwQ,GAAM+oB,iBAAmB,EAI1B1qC,KAAK2tC,cAAc18B,KAAK0Q,GAOjB+D,GAAAnlB,UAAAouC,YAAR,SAAoBhtB,GAEnB3hB,KAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAKguC,WAAYhuC,KAAKuvC,gBAAkB5tB,GAGrD+D,GAAAnlB,UAAA4uC,WAAR,SAAmBxtB,GAElB3hB,KAAKkpB,YAAc,IAEnBlpB,MAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAK8tC,UAAWnsB,GAG7B+D,GAAAnlB,UAAA0uC,YAAR,SAAoBttB,GAEnB3hB,KAAKkpB,YAA+BvH,EAAMpV,MAE1CvM,MAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAAetvC,KAAKiuC,WAAYtsB,GAG/B+D,GAAAnlB,UAAA8tC,QAAR,SAAgB1sB,GAEf3hB,KAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAK6tC,YAAalsB,GAG/B+D,GAAAnlB,UAAAguC,cAAR,SAAsB5sB,GAErB3hB,KAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAKmuC,kBAAmBxsB,GAGrC+D,GAAAnlB,UAAAkuC,YAAR,SAAoB9sB,GAEnB3hB,KAAKkpB,YAA+BvH,EAAMpV,MAE1CvM,MAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAK+tC,WAAYpsB,GAG9B+D,GAAAnlB,UAAAsuC,UAAR,SAAkBltB,GAEjB3hB,KAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAK4tC,SAAWjsB,GAG7B+D,GAAAnlB,UAAAwuC,aAAR,SAAqBptB,GAEpB3hB,KAAK+vC,gBAAgBpuB,EAErB,IAAI3hB,KAAKopB,kBACRppB,KAAKsvC,cAActvC,KAAKkuC,YAAavsB,GAI/B+D,GAAAnlB,UAAAwvC,gBAAR,SAAwBpuB,GAEvB,GAAI3hB,KAAKmpB,cACR,MAED,IAAIkhB,EACJ,IAAI2F,EACJ,IAAIC,GAAgBtuB,EAAMkuB,OAC1B,IAAIK,GAAgBvuB,EAAMmuB,OAC1B,IAAInpC,GAAa3G,KAAKytC,YAAYhuC,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAAK,CACpCmrC,EAAOrqC,KAAKytC,YAAYvuC,EACxB8wC,GAAS3F,EAAKmF,YAAYW,uBAC1B,IAAIF,EAASD,EAAOxnB,MAAQynB,EAASD,EAAO9O,OAASgP,EAASF,EAAOvnB,KAAOynB,EAASF,EAAOjP,OAAQ,CACnGsJ,EAAK9iB,SAAW,IAChB8iB,GAAK7iB,SAAW,SACV,CACN6iB,EAAK9iB,SAAW0oB,EAASD,EAAOxnB,IAChC6hB,GAAK7iB,SAAW0oB,EAASF,EAAOvnB,GAChC4hB,GAAKhgB,gBAEL,IAAIggB,EAAK9f,aAAevqB,KAAKopB,kBAC5B,OAIHppB,KAAKmpB,cAAgB,KAEvB,OAAAzD,KAEA/lB,GAAsBJ,QAAbmmB,I1DuiTNzS,gCAAgC7R,UAAUuoC,uCAAuC,yCAAyC2D,8CAA8C,SAAS7uC,EAAQkB,EAAOJ,GACnM,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2Dz1TtB,IAAO+vC,GAAO3xC,EAAgB,+BAE9B,IAAO4xC,GAAY5xC,EAAe,4CAElC,IAAO6tC,GAAe7tC,EAAc,8CACpC,IAAO6xC,GAAW7xC,EAAe,0C3D81TjC,I2Dx1TM4tC,GAAa,SAAA3rC,GAASX,EAAtBssC,EAAa3rC,EAyBlB,SAzBK2rC,GAyBOkE,EAAyBC,EAAwBhgB,EAAwB4c,GAAzE,GAAAmD,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAhgB,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAA4c,QAAA,GAAsB,CAAtBA,EAAA,MAEpF1sC,EAAAlB,KAAAQ,KAvBUA,MAAAywC,eAAyB,KAyBnC,IAAIF,YAAwBH,GAC3BG,EAAe,GAAIjE,GAAgBiE,EAEpC,IAAIA,YAAwBD,GAAa,CACxCtwC,KAAK0wC,QAAwBH,CAE7BvwC,MAAKywB,OAAU+f,GAAe,KAAO,KAAO,KAC5CxwC,MAAKwwB,OAASA,CACdxwB,MAAKotC,OAASA,MACR,CACNptC,KAAK2wB,MAAQ4f,EAAcI,OAAOJ,GAAgB,QAClDvwC,MAAK4wB,MAAS4f,GAAe,KAAO,EAAIG,OAAOH,IA/BjD7vC,OAAAC,eAAWyrC,EAAA9rC,UAAA,a3Dy2TJM,I2Dz2TP,WAEC,MAAOwrC,GAAcnrC,W3D02TfH,WAAY,KACZC,aAAc,M2Dx0TlBL,QAAAC,eAAWyrC,EAAA9rC,UAAA,iB3D80TPM,I2D90TJ,WAEI,MAAOb,MAAKywC,gB3D+0TZjqC,I2D70TJ,SAAyBC,GAErB,GAAIzG,KAAKywC,gBAAkBhqC,EACvB,MACJzG,MAAKywC,eAAiBhqC,CACtBzG,MAAK0iC,sB3D80TL3hC,WAAY,KACZC,aAAc,M2Dp4TPqrC,GAAAnrC,UAAmB,2BAuDlC,OAAAmrC,IAzD4BgE,EA2D5B1wC,GAAuBJ,QAAd8sC,I3Dk1TNuE,+BAA+BxvC,UAAUyvC,4CAA4C,4CAA4CtD,8CAA8C,8CAA8CuD,0CAA0C,4CAA4CC,6CAA6C,SAAStyC,EAAQkB,EAAOJ,GAY3X,G4Dz5TMyxC,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAG,IAAa,CAC5B,OAAAH,KAEsBrxC,GAAAJ,QAAbyxC,O5D05THH,6CAA6C,SAASpyC,EAAQkB,EAAOJ,GAC3E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6D/7TtB,IAAOyhC,GAASrjC,EAAe,iCAC/B,IAAOg3B,GAAch3B,EAAc,sCAInC,IAAO6qC,GAAK7qC,EAAgB,+BAE5B,IAAO+B,GAAS/B,EAAe,oCAQ/B,IAAOi3B,GAAaj3B,EAAc,0CAClC,IAAO+sC,GAAoB/sC,EAAa,iDAGxC,IAAO6tC,GAAe7tC,EAAc,8C7Dg8TpC,I6Dl7TM4xC,GAAY,SAAA3vC,GAASX,EAArBswC,EAAY3vC,EAqEjB,SArEK2vC,KAAN,GAAA/uB,GAAAthB,IAuEEU,GAAAlB,KAAAQ,KApEOA,MAAAoxC,oBAA8B,KAE9BpxC,MAAAqxC,eAAyB,KACzBrxC,MAAAsxC,OAAgB,CAGhBtxC,MAAAmiC,SAA0B,GAAIt8B,MAE/B7F,MAAAiiC,iBAA0B,CAC1BjiC,MAAAuxC,aAAuB,KACtBvxC,MAAAwxC,oBAA8B,IAC9BxxC,MAAAyxC,sBAA+B,CAC/BzxC,MAAA0xC,qBAA8B,CAsB/B1xC,MAAA2xC,aAAsB,CAEtB3xC,MAAA4xC,sBAA+B,CAE9B5xC,MAAA6xC,WAAqB,KAUtB7xC,MAAAkiC,YAAqBJ,EAAUvN,MAE9Bv0B,MAAAoiC,QAAkB,IAClBpiC,MAAAqiC,QAAkB,IAClBriC,MAAA8xC,QAAkB,KAClB9xC,MAAAgU,OAAgB,QAKjBhU,MAAA+xC,SAAkB,CAClB/xC,MAAAgyC,QAAiB,CAWvBhyC,MAAK2xC,aAAehB,OAAO3wC,KAAKsnC,GAEhCtnC,MAAKsiC,QAAU,GAAIz8B,MAEnB7F,MAAKiyC,uBAAyB,SAACtwB,GAAgB,MAAAL,GAAK4wB,eAAevwB,GAEnE3hB,MAAKmyC,mBAAqB,MAM3BxxC,OAAAC,eAAWyvC,EAAA9vC,UAAA,S7Ds4TJM,I6Dt4TP,WAEC,MAAOb,MAAKsxC,Q7Du4TN9qC,I6Dp4TP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIzG,KAAKsxC,QAAU7qC,EAClB,MAEDzG,MAAKsxC,OAAS7qC,CAEd,IAAIzG,KAAKuX,iBAAmB,KAC3BvX,KAAKuX,gBAAkB,GAAIke,EAE5Bz1B,MAAKuX,gBAAgBkf,gBAAkBhwB,CAEvCzG,MAAK0iC,sB7Dg4TC3hC,WAAY,KACZC,aAAc,M6D33TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,kB7Di4TJM,I6Dj4TP,WAEC,MAAOb,MAAKuX,iB7Dk4TN/Q,I6D/3TP,SAA0BC,GAEzBzG,KAAKuX,gBAAkB9Q,CAEvBzG,MAAK0iC,sB7D+3TC3hC,WAAY,KACZC,aAAc,M6Dz3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,iB7Dg4TJM,I6Dh4TP,WAEC,MAAOb,MAAKqxC,gB7Di4TN7qC,I6D93TP,SAAyBC,GAExB,GAAIzG,KAAKqxC,gBAAkB5qC,EAC1B,MAEDzG,MAAKqxC,eAAiB5qC,CAEtBzG,MAAK0iC,sB7D63TC3hC,WAAY,KACZC,aAAc,M6D33TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,a7D83TJM,I6D93TP,WAEC,MAAOb,MAAKoyC,Y7D+3TNrxC,WAAY,KACZC,aAAc,M6D13TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,U7Dg4TJM,I6Dh4TP,WAEC,MAAOb,MAAK+xC,U7Di4TNhxC,WAAY,KACZC,aAAc,M6D53TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,gB7Dk4TJM,I6Dl4TP,WAEC,MAAOb,MAAKyiC,e7Dm4TN1hC,WAAY,KACZC,aAAc,M6D13TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,e7Dm4TJM,I6Dn4TP,WAEC,MAAOb,MAAKwiC,e7Do4TNh8B,I6Dj4TP,SAAuBC,GAEtB,GAAIzG,KAAKwiC,eAAiB/7B,EACzB,MAED,IAAIzG,KAAKwiC,cACRxiC,KAAKwiC,cAAcvzB,oBAAoBq6B,EAAM+I,OAAQryC,KAAKiyC,uBAE3DjyC,MAAKwiC,cAAgB/7B,CAErB,IAAIzG,KAAKwiC,cACRxiC,KAAKwiC,cAAcz4B,iBAAiBu/B,EAAM+I,OAAQryC,KAAKiyC,uBAExDjyC,MAAK0iC,sB7D83TC3hC,WAAY,KACZC,aAAc,M6Dz3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,U7D+3TJM,I6D/3TP,WAEC,MAAOb,MAAKoiC,S7Dg4TN57B,I6D73TP,SAAkBC,GAEjB,GAAIzG,KAAKoiC,SAAW37B,EACnB,MAEDzG,MAAKoiC,QAAU37B,CAEfzG,MAAKsyC,sB7D43TCvxC,WAAY,KACZC,aAAc,M6Dv3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,U7D63TJM,I6D73TP,WAEC,MAAOb,MAAKqiC,S7D83TN77B,I6D33TP,SAAkBC,GAEjB,GAAIzG,KAAKqiC,SAAW57B,EACnB,MAEDzG,MAAKqiC,QAAU57B,CAEfzG,MAAKsyC,sB7D03TCvxC,WAAY,KACZC,aAAc,M6Dp3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,U7D23TJM,I6D33TP,WAEC,MAAOb,MAAK8xC,S7D43TNtrC,I6Dz3TP,SAAkBC,GAEjB,GAAIzG,KAAK8xC,SAAWrrC,EACnB,MAEDzG,MAAK8xC,QAAUrrC,CAEfzG,MAAKsyC,sB7Dw3TCvxC,WAAY,KACZC,aAAc,M6Dn3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,S7Dy3TJM,I6Dz3TP,WAEC,MAAOb,MAAKgU,Q7D03TNxN,I6Dv3TP,SAAiBC,GAEhB,GAAIzG,KAAKgU,QAAUvN,EAClB,MAEDzG,MAAKgU,OAASvN,CAEdzG,MAAKsyC,sB7Ds3TCvxC,WAAY,KACZC,aAAc,M6Dj3TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,W7Du3TJM,I6Dv3TP,WAEC,MAAOb,MAAKuyC,W7Dw3TN/rC,I6Dr3TP,SAAmBC,GAElB,GAAIzG,KAAKuyC,WAAa9rC,EACrB,MAEDzG,MAAKuyC,UAAY9rC,CAEjBzG,MAAKsyC,oBAEL,IAAItyC,KAAKuyC,UAAU9F,QAAQH,GAAkB,CAC5C,GAAIkG,GAAoDxyC,KAAKuyC,SAC7DvyC,MAAKoyC,WAAaI,EAAgBC,UAAUtc,SAE5Cn2B,MAAK+xC,SAAWS,EAAgBC,UAAUC,KAAKlrC,MAC/CxH,MAAKgyC,QAAUQ,EAAgBC,UAAUC,KAAK7oC,UACxC,CACN7J,KAAKoyC,WAAa,IAClBpyC,MAAK+xC,SAAW,CAChB/xC,MAAKgyC,QAAU,EAIhBhyC,KAAK2yC,uB7Di3TC5xC,WAAY,KACZC,aAAc,M6D52TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,c7Dk3TJM,I6Dl3TP,WAEC,MAAOb,MAAKuxC,c7Dm3TN/qC,I6Dh3TP,SAAsBC,GAErB,GAAIzG,KAAKuxC,cAAgB9qC,EACxB,MAEDzG,MAAKuxC,aAAe9qC,CAEpBzG,MAAKsyC,sB7D+2TCvxC,WAAY,KACZC,aAAc,M6D12TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,qB7Dg3TJM,I6Dh3TP,WAEC,MAAOb,MAAKoxC,qB7Di3TN5qC,I6D92TP,SAA6BC,GAE5B,GAAIzG,KAAKoxC,qBAAuB3qC,EAC/B,MACDzG,MAAKoxC,oBAAsB3qC,CAC3BzG,MAAKsyC,sB7D+2TCvxC,WAAY,KACZC,aAAc,M6Dz2TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,sB7Dg3TJM,I6Dh3TP,WAEC,MAAOb,MAAKwxC,qB7Di3TNhrC,I6D92TP,SAA8BC,GAE7B,GAAIzG,KAAKwxC,qBAAuB/qC,EAC/B,MAEDzG,MAAKwxC,oBAAsB/qC,CAE3BzG,MAAKsyC,sB7D62TCvxC,WAAY,KACZC,aAAc,M6Dr2TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,uB7D82TJM,I6D92TP,WAEC,MAAOb,MAAK0xC,sB7D+2TNlrC,I6D52TP,SAA+BC,GAE9B,GAAIzG,KAAK0xC,sBAAwBjrC,EAChC,MAEDzG,MAAK0xC,qBAAuBjrC,CAE5BzG,MAAKsyC,sB7D22TCvxC,WAAY,KACZC,aAAc,M6Dn2TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,wB7D42TJM,I6D52TP,WAEC,MAAOb,MAAKyxC,uB7D62TNjrC,I6D12TP,SAAgCC,GAE/B,GAAIzG,KAAKyxC,uBAAyBhrC,EACjC,MAEDzG,MAAKyxC,sBAAwBhrC,CAE7BzG,MAAKsyC,sB7Dy2TCvxC,WAAY,KACZC,aAAc,M6Dn2TdqvC,GAAA9vC,UAAAU,QAAP,WAEC,GAAI/B,EACJ,IAAIyH,EAEJA,GAAM3G,KAAKmiC,SAAS1iC,MACpB,KAAKP,EAAI,EAAGA,EAAIyH,EAAKzH,IACpBc,KAAKmiC,SAASjjC,GAAG+B,SAElBjB,MAAKmiC,SAAW,GAAIt8B,OAMrBlF,QAAAC,eAAWyvC,EAAA9vC,UAAA,a7Ds2TJM,I6Dt2TP,WAEC,MAAOb,MAAK6xC,Y7Du2TNrrC,I6Dp2TP,SAAqBC,GAEpB,GAAIzG,KAAK6xC,WAAaprC,EACrB,MAEDzG,MAAK6xC,WAAaprC,CAElBzG,MAAKsyC,sB7Dm2TCvxC,WAAY,KACZC,aAAc,M6Dv1TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,a7Do2TJM,I6Dp2TP,WAEC,MAAOb,MAAKkiC,a7Dq2TN17B,I6Dl2TP,SAAqBC,GAEpB,GAAIzG,KAAKkiC,aAAez7B,EACvB,MAEDzG,MAAKkiC,YAAcz7B,CAEnBzG,MAAK0iC,sB7Di2TC3hC,WAAY,KACZC,aAAc,M6D11TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,sB7Dk2TJM,I6Dl2TP,WAEC,MAAOb,MAAK4yC,qB7Dm2TNpsC,I6Dh2TP,SAA8BC,GAE7B,GAAIzG,KAAK4yC,qBAAuBnsC,EAC/B,MAEDzG,MAAK4yC,oBAAsBnsC,CAE3BzG,MAAKsyC,sB7D+1TCvxC,WAAY,KACZC,aAAc,M6Dx1TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,kB7Dg2TJM,I6Dh2TP,WAEC,MAAOb,MAAKiiC,kB7Di2TNz7B,I6D91TP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAIzG,KAAKiiC,kBAAoBx7B,EAC5B,MAEDzG,MAAKiiC,iBAAmBx7B,CAExBzG,MAAKsyC,sB7D41TCvxC,WAAY,KACZC,aAAc,M6Dv1TrBL,QAAAC,eAAWyvC,EAAA9vC,UAAA,S7D61TJM,I6D71TP,WAEC,MAAOb,MAAKgyC,S7D81TNjxC,WAAY,KACZC,aAAc,M6Dh1TdqvC,GAAA9vC,UAAA6W,UAAP,SAAiBy7B,GAEhB7yC,KAAKsiC,QAAQrxB,KAAK4hC,EAElB,IAAIC,EACJ,IAAI77B,GAAiC47B,EAAM57B,QAE3C,IAAIA,EACH67B,EAA+B77B,EAAS67B,YAEzC,IAAID,EAAM57B,SAAU,CACnB,GAAIjX,KAAKyiC,eAAiBqQ,GAAgB9yC,KAAKyiC,cAAe,CAC7D,KAAM,IAAIrjC,OAAM,iGACV,CACN,GAAIY,KAAKyiC,eAAiBqQ,EAAc,CAEvC9yC,KAAKyiC,cAAgBqQ,CAErB9yC,MAAK+yC,wBAKRF,EAAMziC,cAAc,GAAIo7B,GAAqBA,EAAqBG,qBAAsB3rC,OASlFqwC,GAAA9vC,UAAA4W,aAAP,SAAoB07B,GAEnB7yC,KAAKsiC,QAAQjxB,OAAOrR,KAAKsiC,QAAQlxB,QAAQyhC,GAAQ,EAEjD,IAAI7yC,KAAKsiC,QAAQ7iC,QAAU,EAAG,CAC7BO,KAAKyiC,cAAgB,IAErBziC,MAAK+yC,sBAGNF,EAAMziC,cAAc,GAAIo7B,GAAqBA,EAAqBG,qBAAsB3rC,OAQzFW,QAAAC,eAAWyvC,EAAA9vC,UAAA,W7Dm1TJM,I6Dn1TP,WAEC,MAAOb,MAAKsiC,S7Do1TNvhC,WAAY,KACZC,aAAc,M6D70TdqvC,GAAA9vC,UAAA+xC,mBAAP,WAEC,GAAI3rC,GAAa3G,KAAKmiC,SAAS1iC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKmiC,SAASjjC,GAAG0jC,mBAGXyN,GAAA9vC,UAAAwyC,oBAAR,WAEC,GAAIpsC,GAAa3G,KAAKmiC,SAAS1iC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKmiC,SAASjjC,GAAG6zC,sBAGZ1C,GAAA9vC,UAAAmiC,mBAAP,WAEC,GAAI/7B,GAAa3G,KAAKmiC,SAAS1iC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKmiC,SAASjjC,GAAGyjC,mBAMX0N,GAAA9vC,UAAA2xC,eAAR,SAAuBvwB,GAEtB3hB,KAAK0iC,qBAGC2N,GAAA9vC,UAAAoyC,oBAAP,WAEC,IAAK3yC,KAAKgzC,aACThzC,KAAKgzC,aAAe,GAAItd,GAAcA,EAAcW,aAErDr2B,MAAKoQ,cAAcpQ,KAAKgzC,cAGlB3C,GAAA9vC,UAAAuiC,YAAP,SAAmBna,GAElB3oB,KAAKmiC,SAASlxB,KAAK0X,EAEnB,OAAOA,GAGD0nB,GAAA9vC,UAAAwiC,eAAP,SAAsBpa,GAErB3oB,KAAKmiC,SAAS9wB,OAAOrR,KAAKmiC,SAAS/wB,QAAQuX,GAAS,EAEpD,OAAOA,GAET,OAAA0nB,IApnB2B7vC,EAsnB3Bb,GAAsBJ,QAAb8wC,I7Ds0TNnN,iCAAiC9hC,UAAUooC,+BAA+BpoC,UAAUk2B,sCAAsCl2B,UAAUD,oCAAoCC,UAAUo2B,0CAA0C,0CAA0C+T,iDAAiD,iDAAiDgC,8CAA8C,gDAAgD0F,6DAA6D,SAASx0C,EAAQkB,EAAOJ,GAC9hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Dj+UtB,IAAOG,GAAS/B,EAAe,oC9D2+U/B,I8D19UMy0C,GAAe,SAAAxyC,GAASX,EAAxBmzC,EAAexyC,EAqBpB,SArBKwyC,KAuBJxyC,EAAAlB,KAAAQ,KAnBMA,MAAAmzC,iBAA0B,CAC1BnzC,MAAAozC,uBAAgC,CAChCpzC,MAAAqzC,wBAAiC,CACjCrzC,MAAAszC,8BAAuC,CACvCtzC,MAAAuzC,iBAA0B,EAqB1BL,EAAA3yC,UAAAU,QAAP,YAOAN,QAAAC,eAAWsyC,EAAA3yC,UAAA,a9D48UJM,I8D58UP,WAEC,MAAOqyC,GAAgBhyC,W9D68UjBH,WAAY,KACZC,aAAc,M8Dx8UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,wB9D88UJM,I8D98UP,WAEC,MAAOb,MAAKozC,wB9D+8UNryC,WAAY,KACZC,aAAc,M8D18UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,kB9Dg9UJM,I8Dh9UP,WAEC,MAAOb,MAAKmzC,kB9Di9UNpyC,WAAY,KACZC,aAAc,M8D58UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,+B9Dk9UJM,I8Dl9UP,WAEC,MAAOb,MAAKszC,+B9Dm9UNvyC,WAAY,KACZC,aAAc,M8D98UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,yB9Do9UJM,I8Dp9UP,WAEC,MAAOb,MAAKqzC,yB9Dq9UNtyC,WAAY,KACZC,aAAc,M8Dh9UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,kB9Ds9UJM,I8Dt9UP,WAEC,MAAOb,MAAKuzC,kB9Du9UNxyC,WAAY,KACZC,aAAc,M8Dl9UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,e9Dw9UJM,I8Dx9UP,WAEC,MAAOb,MAAKwzC,e9Dy9UNzyC,WAAY,KACZC,aAAc,M8Dp9UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,qB9D09UJM,I8D19UP,WAEC,MAAOb,MAAKyzC,qB9D29UN1yC,WAAY,KACZC,aAAc,M8Dt9UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,sB9D49UJM,I8D59UP,WAEC,MAAOb,MAAK0zC,sB9D69UN3yC,WAAY,KACZC,aAAc,M8Dx9UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,4B9D89UJM,I8D99UP,WAEC,MAAOb,MAAK2zC,4B9D+9UN5yC,WAAY,KACZC,aAAc,M8D19UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,e9Dg+UJM,I8Dh+UP,WAEC,MAAOb,MAAK4zC,e9Di+UN7yC,WAAY,KACZC,aAAc,M8D59UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,qB9Dk+UJM,I8Dl+UP,WAEC,MAAOb,MAAK6zC,qB9Dm+UN9yC,WAAY,KACZC,aAAc,M8D99UrBL,QAAAC,eAAWsyC,EAAA3yC,UAAA,mB9Do+UJM,I8Dp+UP,WAEC,MAAOb,MAAK8zC,mB9Dq+UN/yC,WAAY,KACZC,aAAc,M8Dh+UdkyC,GAAA3yC,UAAAwzC,cAAP,SAAqB/iC,GAEpBhR,KAAKg0C,mBAAmBhjC,GAOjBkiC,GAAA3yC,UAAAyzC,mBAAR,SAA2BhjC,G9Dq+UpB,G8Dl+UFijC,GAAqBjjC,EAAWkjC,aAAa5lC,aACjD,IAAI6lC,EAEJ,IAAIr2B,GAAYm2B,EAAU/sC,EAAG6W,EAAYk2B,EAAU7sC,EAAG4W,EAAYi2B,EAAU5sC,CAC5E,IAAIoG,GAAWC,EAAWC,CAC1B,IAAIymC,GAAUC,EAAe,CAC7B,IAAIn1C,EAGJ,KAAKA,EAAI,EAAGA,EAAIc,KAAKuzC,mBAAoBr0C,EAAG,CAE3Ci1C,EAAWn0C,KAAK4zC,cAAc10C,GAAGoP,aACjCb,GAAKqQ,EAAKq2B,EAASjtC,CACnBwG,GAAKqQ,EAAKo2B,EAAS/sC,CACnBuG,GAAKqQ,EAAKm2B,EAAS9sC,CAEnB+sC,GAAI3mC,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAGvBymC,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtBp0C,MAAK6zC,oBAAoB30C,GAAKk1C,CAC9BC,IAASD,EAIVC,EAAQ,EAAEA,CAEV,KAAKn1C,EAAI,EAAGA,EAAIc,KAAKuzC,mBAAoBr0C,EACxCc,KAAK6zC,oBAAoB30C,IAAMm1C,EAlLnBnB,GAAAhyC,UAAmB,qBAoLlC,OAAAgyC,IAtL8B1yC,EAwLLb,GAAAJ,QAAhB2zC,I9D89UN/xC,oCAAoCC,YAAYkzC,+DAA+D,SAAS71C,EAAQkB,EAAOJ,GAC1I,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+D7qVtB,IAAOipC,GAAK7qC,EAAgB,+BAG5B,IAAOu7B,GAAgBv7B,EAAc,+CACrC,IAAOq9B,GAAUr9B,EAAe,yCAChC,IAAOgiC,GAAUhiC,EAAe,yCAChC,IAAOqV,GAAUrV,EAAe,uCAChC,IAAOy0C,GAAez0C,EAAc,4D/DmrVpC,I+D5qVM81C,GAAiB,SAAA7zC,GAASX,EAA1Bw0C,EAAiB7zC,EAStB,SATK6zC,GASOC,GATb,GAAAlzB,GAAAthB,IAWEU,GAAAlB,KAAAQ,KAEAA,MAAKy0C,4BAA8B,SAAC9yB,GAAqB,MAAAL,GAAKozB,mBAAmB/yB,GAEjF3hB,MAAKw0C,OAASA,EAMf7zC,OAAAC,eAAW2zC,EAAAh0C,UAAA,U/DuqVJM,I+DvqVP,WAEC,MAAOb,MAAK20C,S/DwqVNnuC,I+DrqVP,SAAkBC,GAEjB,GAAImuC,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAI5/B,EAEJ,IAAIpV,KAAK20C,QACR30C,KAAKi1C,gBAENj1C,MAAK20C,QAAUluC,CACfzG,MAAK8zC,kBAAoBrtC,CACzBzG,MAAKwzC,cAAgB,GAAI3tC,MACzB7F,MAAK0zC,qBAAuB,GAAI7tC,MAChC7F,MAAKyzC,oBAAsB,GAAI5tC,MAC/B7F,MAAK2zC,2BAA6B,GAAI9tC,MACtC7F,MAAK4zC,cAAgB,GAAI/tC,MAEzB,IAAIc,GAAaF,EAAMhH,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EAAG,CACpCkW,EAAQ3O,EAAMvH,EACdkW,GAAMrL,iBAAiB+J,EAAWuB,oBAAqBrV,KAAKy0C,4BAE5D,IAAIr/B,YAAiBqrB,GAAY,CAChC,GAAIrrB,EAAMpP,aACThG,KAAK0zC,qBAAqBoB,KAAwC1/B,MAElEpV,MAAKwzC,cAAcoB,KAAiCx/B,MAE/C,IAAIA,YAAiB4kB,GAAkB,CAC7C,GAAI5kB,EAAMpP,aACThG,KAAK2zC,2BAA2BoB,KAAoD3/B,MAEpFpV,MAAKyzC,oBAAoBoB,KAA6Cz/B,MAEjE,IAAIA,YAAiB0mB,GAAY,CACvC97B,KAAK4zC,cAAcoB,KAAiC5/B,GAItD,GAAIpV,KAAKozC,wBAA0ByB,GAAwB70C,KAAKmzC,kBAAoByB,GAAkB50C,KAAKuzC,kBAAoByB,GAAkBh1C,KAAKqzC,yBAA2ByB,GAAyB90C,KAAKszC,+BAAiCyB,EAC/O,MAED/0C,MAAKozC,uBAAyByB,CAC9B70C,MAAKszC,8BAAgCyB,CACrC/0C,MAAKmzC,iBAAmByB,CACxB50C,MAAKqzC,wBAA0ByB,CAC/B90C,MAAKuzC,iBAAmByB,CAGxBh1C,MAAK6zC,oBAAsB,GAAIhuC,OAAcwJ,KAAK6lC,KAAKF,EAAe,GAAG,EAGzEh1C,MAAKoQ,cAAc,GAAIk5B,GAAMA,EAAM+I,U/D6pV7BtxC,WAAY,KACZC,aAAc,M+DvpVbuzC,GAAAh0C,UAAA00C,eAAR,WAEC,GAAItuC,GAAa3G,KAAK20C,QAAQl1C,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EACjCc,KAAK20C,QAAQz1C,GAAG+P,oBAAoB6E,EAAWuB,oBAAqBrV,KAAKy0C,6BAMnEF,GAAAh0C,UAAAm0C,mBAAR,SAA2B/yB,GAK1B,GAAIvM,GAA8BuM,EAAMpV,MAExC,IAAI6I,YAAiBqrB,GACpBzgC,KAAKm1C,mBAAgC//B,OACjC,IAAIA,YAAiB4kB,GACzBh6B,KAAKo1C,yBAA4ChgC,EAElDpV,MAAKoQ,cAAc,GAAIk5B,GAAMA,EAAM+I,SAM5BkC,GAAAh0C,UAAA60C,yBAAR,SAAiChgC,GAEhC,GAAIigC,GAAyCjgC,CAE7C,IAAIA,EAAMpP,aAAc,GACrBhG,KAAKozC,yBACLpzC,KAAKszC,6BAGPtzC,MAAKyzC,oBAAoBpiC,OAAOrR,KAAKyzC,oBAAoBriC,QAAQikC,GAAK,EACtEr1C,MAAK2zC,2BAA2B1iC,KAAKmE,OAE/B,GACJpV,KAAKozC,yBACLpzC,KAAKszC,6BAEPtzC,MAAK2zC,2BAA2BtiC,OAAOrR,KAAK2zC,2BAA2BviC,QAAQikC,GAAK,EACpFr1C,MAAKyzC,oBAAoBxiC,KAAKmE,IAOxBm/B,GAAAh0C,UAAA40C,mBAAR,SAA2B//B,GAE1B,GAAIkgC,GAA6BlgC,CAEjC,IAAIA,EAAMpP,aAAc,GACrBhG,KAAKmzC,mBACLnzC,KAAKqzC,uBACPrzC,MAAKwzC,cAAcniC,OAAOrR,KAAKwzC,cAAcpiC,QAAQkkC,GAAK,EAC1Dt1C,MAAK0zC,qBAAqBziC,KAAKmE,OACzB,GACJpV,KAAKmzC,mBACLnzC,KAAKqzC,uBAEPrzC,MAAK0zC,qBAAqBriC,OAAOrR,KAAK0zC,qBAAqBtiC,QAAQkkC,GAAK,EACxEt1C,MAAKwzC,cAAcviC,KAAKmE,IAG3B,OAAAm/B,IA9JgCrB,EAgKhCvzC,GAA2BJ,QAAlBg1C,I/D+oVN/K,+BAA+BpoC,UAAU04B,+CAA+C,+CAA+C+B,yCAAyC,yCAAyC0E,yCAAyC,yCAAyC3qB,uCAAuC,uCAAuCq9B,4DAA4D,8DAA8DsC,kEAAkE,SAAS92C,EAAQkB,EAAOJ,GAChlB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEj0VtB,IAAOqC,GAAajE,EAAc,qCAClC,IAAO+2B,GAAS/2B,EAAe,iCAC/B,IAAO6qC,GAAK7qC,EAAgB,+BAC5B,IAAOyX,GAAezX,EAAc,yCAEpC,IAAO+2C,GAAoB/2C,EAAa,mDAKxC,IAAO8mB,GAAM9mB,EAAgB,qCAC7B,IAAOs7B,GAAuBt7B,EAAY,qEAG1C,IAAMg3C,GAAmB,SAAA/0C,GAASX,EAA5B01C,EAAmB/0C,EAgBxB,SAhBK+0C,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXh1C,EAAAlB,KAAAQ,KAfOA,MAAA21C,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAIt2C,OAAM,iDAEjBY,MAAK41C,aAAeF,CACpB11C,MAAK61C,kBAAoB,GAAI3/B,GAAgBlW,KAC7CA,MAAK81C,OAGCL,EAAAl1C,UAAAw1C,cAAP,SAAqB5kC,GAEpB,MAAOnR,MAAKg2C,aAAa7kC,GAGnBskC,GAAAl1C,UAAA01C,cAAP,SAAqB9kC,EAAuB1K,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI0K,GAASnR,KAAK41C,aACjB,KAAM,IAAIx2C,OAAM,qDAEjBY,MAAKg2C,aAAa7kC,GAAS1K,EAGrBgvC,GAAAl1C,UAAA21C,oBAAP,SAA2BjmC,GAE1B,MAAOjQ,MAAKm2C,cAAclmC,GAAWqpB,eAG9Bmc,GAAAl1C,UAAAu1C,KAAR,WAEC91C,KAAKg2C,aAAe,GAAInwC,OAAc7F,KAAK41C,aAC3C51C,MAAKo2C,oBAAsB,GAAIvwC,OAAc7F,KAAK41C,aAElD,IAAI92C,GAAW,CACf,KAAK,GAAII,GAAmBc,KAAK41C,aAAe,EAAG12C,GAAK,IAAKA,EAAG,CAC/Dc,KAAKg2C,aAAa92C,GAAKJ,CACvBA,IAAK,GAGNkB,KAAKq2C,aAAexwC,OAAe,EAAG,GAAI,EAAG,EAC7C7F,MAAKs2C,aAAezwC,MAAc,EAAG,GAAI,GAAI,EAC7C7F,MAAKu2C,eAAiB,GAAI1wC,OAAiB,EAC3C7F,MAAKw2C,aAAe,GAAI3wC,MACxB7F,MAAKm2C,cAAgB,GAAItwC,MAEzB,KAAK3G,EAAI,EAAGA,EAAIc,KAAK41C,eAAgB12C,EAAG,CACvCc,KAAKw2C,aAAat3C,GAAK,GAAIs2C,EAC3Bx1C,MAAKm2C,cAAcj3C,GAAK,GAAIqmB,GAAOvlB,KAAKw2C,aAAat3C,KAIhDu2C,GAAAl1C,UAAAk2C,kBAAP,SAAyBhwC,GAExB/F,EAAAH,UAAMk2C,kBAAiBj3C,KAAAQ,KAACyG,EAExBzG,MAAK02C,yBAGEjB,GAAAl1C,UAAAm2C,uBAAR,WAEC12C,KAAK21C,sBAAwB,KAG9Bh1C,QAAAC,eAAW60C,EAAAl1C,UAAA,ehE2xVJM,IgE3xVP,WAEC,MAAOb,MAAK41C,chE4xVNpvC,IgEzxVP,SAAuBC,GAEtB,GAAIA,GAASzG,KAAK41C,aACjB,MAED,IAAInvC,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAIrH,OAAM,iDAEjBY,MAAK41C,aAAenvC,CACpBzG,MAAK02C,wBACL12C,MAAK81C,MACL91C,MAAKoQ,cAAc,GAAIk5B,GAAMA,EAAM+I,UhEwxV7BtxC,WAAY,KACZC,aAAc,MgEtxVdy0C,GAAAl1C,UAAAo2C,cAAP,SAAqBpqC,EAAwB2D,EAAa0V,GAEzD,GAAI5lB,KAAK21C,sBACR31C,KAAK42C,oBAEN52C,MAAK62C,kBAAkBC,WAAa92C,KAAK+2C,YACzC/2C,MAAK62C,kBAAkB3oC,OAASlO,KAAKg3C,oBACrCh3C,MAAK62C,kBAAkBrtB,OACvBtZ,GAAM4U,mBAAmB9kB,KAAK62C,kBAE9BjxB,GAASqxB,iBAAiBj3C,KAAK62C,kBAAmBtqC,EAAOkmC,UAAUyE,QAASl3C,KAAK41C,aAAc51C,KAAKu2C,eAAgBv2C,KAAKm2C,eAGlHV,GAAAl1C,UAAAq2C,mBAAR,WAEC,GAAIO,GAAcn3C,KAAKo3C,eAAe,EAEtCp3C,MAAKu2C,eAAe,GAAK,GAAI/gB,GAAU,EAAG,EAAG2hB,EAAMA,EACnDn3C,MAAKu2C,eAAe,GAAK,GAAI/gB,GAAU2hB,EAAM,EAAGA,EAAMA,EACtDn3C,MAAKu2C,eAAe,GAAK,GAAI/gB,GAAU,EAAG2hB,EAAMA,EAAMA,EACtDn3C,MAAKu2C,eAAe,GAAK,GAAI/gB,GAAU2hB,EAAMA,EAAMA,EAAMA,EAEzDn3C,MAAK21C,sBAAwB,MAGvBF,GAAAl1C,UAAA82C,uBAAP,SAA8BC,GAE7B,GAAI/7B,EACJ,IAAI+M,GAAyBgvB,EAAWhvB,UACxC,IAAIivB,GAAwBjvB,EAAWkvB,IACvC,IAAIC,GAAyBnvB,EAAWovB,IAAMH,CAE9Cv3C,MAAK23C,oCAAoCL,EAAYA,EAAWhvB,WAAWsvB,eAAgB53C,KAAK63C,SAChG73C,MAAK63C,SAASvxC,YAAY,IAAK,IAAK,EACpCtG,MAAK83C,yBAAyBv8B,OAASvb,KAAK63C,QAC5C73C,MAAK+3C,kBAAkBT,EAEvB,KAAK,GAAIp4C,GAAmB,EAAGA,EAAIc,KAAK41C,eAAgB12C,EAAG,CAC1Dqc,EAASvb,KAAKw2C,aAAat3C,GAAGqc,MAE9Bvb,MAAKo2C,oBAAoBl3C,GAAKq4C,EAAiBv3C,KAAKg2C,aAAa92C,GAAGu4C,CACpEz3C,MAAKm2C,cAAcj3C,GAAG4d,UAAUC,SAAW/c,KAAKg3C,qBAAqBl6B,UAAUC,QAE/E/c,MAAKg4C,0BAA0Bz8B,EAAQvb,KAAKg2C,aAAa92C,GAAIc,KAAKq2C,aAAan3C,GAAIc,KAAKs2C,aAAap3C,GAErGc,MAAKw2C,aAAat3C,GAAGqc,OAASA,GAIxBk6B,GAAAl1C,UAAAy3C,0BAAR,SAAkCz8B,EAAiB08B,EAAmBC,EAAmBC,GAExF,GAAIvrC,GAAoBlK,EAAcuK,kBACtC,IAAImrC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIpd,GAAcsV,OAAO+H,kBAAmBpd,EAAcqV,OAAO+H,kBAAmBnd,CACpF,IAAIC,GAAcmV,OAAOgI,kBAAmBld,EAAckV,OAAOgI,kBAAmBjd,EAAciV,OAAOgI,iBACzG,IAAIz5C,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACdk5C,EAAKp4C,KAAK44C,eAAe15C,EACzBm5C,GAAKr4C,KAAK44C,eAAe15C,EAAI,EAC7Bo5C,GAAKt4C,KAAK44C,eAAe15C,EAAI,EAC7Bq5C,GAAKH,GAAMp4C,KAAK44C,eAAe15C,EAAI,IAAMk5C,GAAIH,CAC7CO,GAAKH,GAAMr4C,KAAK44C,eAAe15C,EAAI,IAAMm5C,GAAIJ,CAC7CQ,GAAKH,GAAMt4C,KAAK44C,eAAe15C,EAAI,IAAMo5C,GAAIL,CAC7C,IAAIG,EAAK/c,EACRA,EAAO+c,CACR,IAAIA,EAAK5c,EACRA,EAAO4c,CACR,IAAIC,EAAK/c,EACRA,EAAO+c,CACR,IAAIA,EAAK5c,EACRA,EAAO4c,CACR,IAAIC,EAAK5c,EACRA,EAAO4c,CACR,IAAIC,EAAKld,EACRA,EAAOkd,CACR,IAAIA,EAAK/c,EACRA,EAAO+c,CACR,IAAIC,EAAKld,EACRA,EAAOkd,CACR,IAAIA,EAAK/c,EACRA,EAAO+c,CACR;GAAIC,EAAK/c,EACRA,EAAO+c,CACRv5C,IAAK,EAGNq8B,EAAO,CAEP,IAAI6Y,GAAY5Y,EAAOH,CACvB,IAAIwd,GAAYpd,EAAOH,CACvB,IAAIr7B,GAAW,GAAGy7B,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQr7B,KAAK84C,MACd,IAAIxd,EAAO,EACVA,GAAQt7B,KAAK84C,MACdzd,GAAOhsB,KAAK0pC,MAAM1d,EAAKr7B,KAAK84C,QAAQ94C,KAAK84C,MACzCxd,GAAOjsB,KAAK0pC,MAAMzd,EAAKt7B,KAAK84C,QAAQ94C,KAAK84C,MAEzC,IAAIE,GAAe,EAAEh5C,KAAK84C,MAC1B1E,GAAI/kC,KAAK0pC,MAAM3E,EAAE4E,EAAQ,GAAGA,CAC5BH,GAAIxpC,KAAK0pC,MAAMF,EAAEG,EAAQ,GAAGA,CAE5Bxd,GAAOH,EAAO+Y,CACd3Y,GAAOH,EAAOud,CAEdzE,GAAI,EAAEA,CACNyE,GAAI,EAAEA,CAENjsC,GAAI,GAAK,EAAEwnC,CACXxnC,GAAI,GAAK,EAAEisC,CACXjsC,GAAI,IAAM3M,CACV2M,GAAI,MAAQ4uB,EAAOH,GAAM+Y,CACzBxnC,GAAI,MAAQ6uB,EAAOH,GAAMud,CACzBjsC,GAAI,KAAO2uB,EAAKt7B,CAChB2M,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF2O,GAAOpO,gBAAgBP,EACvB2O,GAAOjV,YAAY,IAAK,IAAK,EAC7BiV,GAAO3K,kBAAkBsnC,EAAYC,EAAY,EACjD58B,GAAOjV,YAAY,GAAI,GAAI,GAGrBmvC,GAAAl1C,UAAAwJ,iBAAP,SAAwBC,EAAaC,GAEpCjK,KAAK61C,kBAAkB9rC,iBAAiBC,EAAMC,GAGxCwrC,GAAAl1C,UAAA0O,oBAAP,SAA2BjF,EAAaC,GAEvCjK,KAAK61C,kBAAkB5mC,oBAAoBjF,EAAMC,GAG3CwrC,GAAAl1C,UAAA6P,cAAP,SAAqBuR,GAEpB,MAAO3hB,MAAK61C,kBAAkBzlC,cAAcuR,GAGtC8zB,GAAAl1C,UAAA2O,iBAAP,SAAwBlF,GAEvB,MAAOhK,MAAK61C,kBAAkB3mC,iBAAiBlF,GAGhDrJ,QAAAC,eAAI60C,EAAAl1C,UAAA,wBhEuvVGM,IgEvvVP,WAEC,MAAOb,MAAKo2C,qBhEwvVNr1C,WAAY,KACZC,aAAc,MgEvvVtB,OAAAy0C,IA/PkC1b,EAiQLp6B,GAAAJ,QAApBk2C,IhE2vVNjM,+BAA+BpoC,UAAUyV,yCAAyCzV,UAAU0R,qCAAqC1R,UAAUm2B,iCAAiCn2B,UAAU63C,mDAAmD73C,UAAUspB,qCAAqC,qCAAqCiR,qEAAqE,uEAAuE8F,kEAAkE,SAAShjC,EAAQkB,EAAOJ,GACtiB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiEhhWtB,IAAO64C,GAASz6C,EAAe,iCAM/B,IAAO8mB,GAAM9mB,EAAgB,qCAE7B,IAAO06C,GAAgB16C,EAAc,8DAErC,IAAO26C,GAAiB36C,EAAa,gDAErC,IAAM+hC,GAAmB,SAAA9/B,GAASX,EAA5BygC,EAAmB9/B,EAMxB,SANK8/B,KAQJ9/B,EAAAlB,KAAAQ,KAEAA,MAAKo3C,eAAiB,GACtBp3C,MAAKq5C,aAAe,GAAIxzC,MACxB7F,MAAKs5C,cAGE9Y,EAAAjgC,UAAA+4C,YAAR,WAECt5C,KAAKm2C,cAAgB,GAAItwC,MACzB7F,MAAKu5C,aAAe,GAAI1zC,MAGxB7F,MAAKw5C,UAAU,EAAG,GAAI,EACtBx5C,MAAKw5C,UAAU,GAAI,GAAI,EACvBx5C,MAAKw5C,WAAW,GAAI,EAAG,EACvBx5C,MAAKw5C,UAAU,GAAI,EAAG,EACtBx5C,MAAKw5C,UAAU,EAAG,EAAG,EACrBx5C,MAAKw5C,UAAU,EAAG,IAAK,GAGhBhZ,GAAAjgC,UAAAi5C,UAAR,SAAkBvwC,EAAkBC,EAAkBC,GAErD,GAAIswC,GAAa,GAAIl0B,EACrBk0B,GAAIxwC,UAAYA,CAChBwwC,GAAIvwC,UAAYA,CAChBuwC,GAAItwC,UAAYA,CAChBswC,GAAInxB,WAAWkvB,KAAO,GAEtB,IAAIlvB,GAA2DmxB,EAAInxB,UACnEA,GAAWoxB,YAAc,EACzB15C,MAAKu5C,aAAatoC,KAAKqX,EACvBmxB,GAAInxB,WAAWC,cAAgB,CAC/BvoB,MAAKm2C,cAAcllC,KAAKwoC,GAIlBjZ,GAAAjgC,UAAAo5C,oBAAP,WAEE,MAAO,IAAIP,GAAkB,GAAIF,GAAUl5C,KAAKo3C,iBAI3C5W,GAAAjgC,UAAA82C,uBAAP,SAA8BC,GAE7B,GAAIliC,GAAgCpV,KAAY,OAChD,IAAI45C,GAAqBxkC,EAAMurB,SAC/B,IAAI5S,GAAe/tB,KAAK65C,QAAQvrC,aAGhC,KAAK,GAAIpP,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCc,KAAKu5C,aAAar6C,GAAGw4C,IAAMkC,CAC3B55C,MAAKm2C,cAAcj3C,GAAG4d,UAAU9Q,SAAW+hB,CAC3C/tB,MAAKq5C,aAAan6C,GAAK,MAKlBshC,GAAAjgC,UAAAo2C,cAAP,SAAqBpqC,EAA0B2D,EAAa0V,GAE3D,IAAK,GAAI1mB,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIc,KAAKq5C,aAAan6C,GAAI,CACzBc,KAAK62C,kBAAkB3oC,OAASlO,KAAKm2C,cAAcj3C,EACnDc,MAAK62C,kBAAkBrtB,OACvBtZ,GAAM4U,mBAAmB9kB,KAAK62C,kBAC9BjxB,GAASk0B,SAAS95C,KAAK62C,kBAAmBtqC,EAAOwtC,YAAYC,UAAW,KAAM96C,KAIlF,OAAAshC,IA7EkC2Y,EA+ELx5C,GAAAJ,QAApBihC,IjEw/VNyZ,iCAAiC74C,UAAUspB,qCAAqC,qCAAqCwvB,8DAA8D,8DAA8DC,gDAAgD,kDAAkDxe,sEAAsE,SAASl9B,EAAQkB,EAAOJ,GACpb,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkExlWtB,IAAO+vC,GAAO3xC,EAAgB,+BAC9B,IAAOgE,GAAQhE,EAAgB,gCAG/B,IAAO+2C,GAAoB/2C,EAAa,mDAIxC,IAAO8mB,GAAM9mB,EAAgB,qCAE7B,IAAO06C,GAAgB16C,EAAc,8DACrC,IAAO6tC,GAAe7tC,EAAc,8CAEpC,IAAMs7B,GAAuB,SAAAr5B,GAASX,EAAhCg6B,EAAuBr5B,EAc5B,SAdKq5B,KAgBJr5B,EAAAlB,KAAAQ,KAXMA,MAAAo6C,cAAuB,GAGvBp6C,MAAA84C,OAAgB,EAUtB94C,MAAK+2C,eACL/2C,MAAK83C,yBAA2B,GAAItC,EACpCx1C,MAAKg3C,qBAAuB,GAAIzxB,GAAOvlB,KAAK83C,yBAC5C93C,MAAK44C,iBACL54C,MAAK63C,SAAW,GAAIp1C,GAGrB9B,OAAAC,eAAWm5B,EAAAx5B,UAAA,QlEukWJM,IkEvkWP,WAEC,MAAOb,MAAK84C,QlEwkWNtyC,IkErkWP,SAAgBC,GAEfzG,KAAK84C,OAASryC,GlEskWR1F,WAAY,KACZC,aAAc,MkEpkWrBL,QAAAC,eAAWm5B,EAAAx5B,UAAA,elEukWJM,IkEvkWP,WAEC,MAAOb,MAAKo6C,elEwkWN5zC,IkErkWP,SAAuBC,GAEtBzG,KAAKo6C,cAAgB3zC,GlEskWf1F,WAAY,KACZC,aAAc,MkEnkWrBL,QAAAC,eAAWm5B,EAAAx5B,UAAA,oBlEukWJM,IkEvkWP,WAEC,MAAOb,MAAKg3C,qBAAqB1d,gBlEwkW3Bv4B,WAAY,KACZC,aAAc,MkErkWrBL,QAAAC,eAAWm5B,EAAAx5B,UAAA,SlEykWJM,IkEzkWP,WAEC,MAAOb,MAAKq6C,OAASr6C,KAAKs6C,QlE0kWpBv5C,WAAY,KACZC,aAAc,MkExkWd+4B,GAAAx5B,UAAAg6C,aAAP,SAAoBC,GAEnB,GAAIx6C,KAAKy6C,WAAaD,EACrB,MAED95C,GAAAH,UAAMg6C,aAAY/6C,KAAAQ,KAACw6C,EAEnB,IAAIx6C,KAAKy6C,UAAW,CACnBz6C,KAAK06C,kBAAoB,IACzB16C,MAAKo3C,eAAiBoD,EAAS3wC,UACzB,CACN7J,KAAK06C,kBAAoB,OAIpB3gB,GAAAx5B,UAAAo5C,oBAAP,WAEC,MAAO,IAAIrN,GAAgB,GAAI8D,GAAQpwC,KAAKo3C,eAAgBp3C,KAAKo3C,iBAI3Drd,GAAAx5B,UAAAo2C,cAAP,SAAqBpqC,EAAwB2D,EAAa0V,GAEzD5lB,KAAK62C,kBAAkB3oC,OAASlO,KAAKg3C,oBACrCh3C,MAAK62C,kBAAkBC,WAAa92C,KAAK+2C,YACzC/2C,MAAK62C,kBAAkBrtB,OACvBtZ,GAAM4U,mBAAmB9kB,KAAK62C,kBAC9BjxB,GAASk0B,SAAS95C,KAAK62C,kBAAmBtqC,EAAOkmC,UAAUyE,SAIrDnd,GAAAx5B,UAAAw3C,kBAAP,SAAyBT,GAExB,GAAIqD,GAAoC36C,KAAKg3C,qBAAqB4D,aAClE,IAAIC,GAAmCvD,EAAWsD,aAClD56C,MAAK+2C,aAAat3C,OAAS,CAE3BO,MAAK+2C,aAAa,GAAK4D,EAAmB,EAC1C36C,MAAK+2C,aAAa,GAAK4D,EAAmB,EAC1C36C,MAAK+2C,aAAa,GAAK4D,EAAmB,EAC1C36C,MAAK+2C,aAAa,GAAK4D,EAAmB,EAE1C,IAAIvlC,GAA4CpV,KAAK65C,OACrD,IAAIiB,GAAe1lC,EAAM2lC,cACzB,IAAIC,GAAcF,EAAI5zC,CACtB,IAAI+zC,GAAcH,EAAI1zC,CACtB,IAAI8zC,GAAcJ,EAAIzzC,CACtB,IAAI43B,GAAW,CACf,KAAK,GAAI//B,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIob,GAAgBugC,EAAkB37C,EACtC,IAAIob,EAAMrb,EAAE+7C,EAAO1gC,EAAMpa,EAAE+6C,EAAO3gC,EAAMC,EAAE2gC,EAAO,EAChDl7C,KAAK+2C,aAAa9X,KAAO3kB,GAKrByf,GAAAx5B,UAAA82C,uBAAP,SAA8BC,GAE7Bt3C,KAAK23C,oCAAoCL,EAAYA,EAAWhvB,WAAWsvB,eAAgB53C,KAAK63C,SAChG73C,MAAK83C,yBAAyBv8B,OAASvb,KAAK63C,QAC5C73C,MAAK+3C,kBAAkBT,GAGjBvd,GAAAx5B,UAAAo3C,oCAAP,SAA2CL,EAAmB6D,EAAuB5/B,GAEpF,GAAI3O,GAAoB,GAAI/G,MAC5B,IAAIi1C,EACJ,IAAI5zC,GAAUE,EAAUC,CACxB,IAAIg0B,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAIv8B,EAEJ,IAAIkW,GAA4CpV,KAAK65C,OACrDiB,GAAM1lC,EAAM2lC,cACZ/6C,MAAKg3C,qBAAqBl6B,UAAUC,SAAW/c,KAAK65C,QAAQhyC,cAC5DX,GAAImI,KAAK0pC,OAAOzB,EAAWpwC,EAAI4zC,EAAI5zC,EAAElH,KAAKo6C,eAAep6C,KAAK84C,QAAQ94C,KAAK84C,MAC3E1xC,GAAIiI,KAAK0pC,OAAOzB,EAAWlwC,EAAI0zC,EAAI1zC,EAAEpH,KAAKo6C,eAAep6C,KAAK84C,QAAQ94C,KAAK84C,MAC3EzxC,GAAIgI,KAAK0pC,OAAOzB,EAAWjwC,EAAIyzC,EAAIzzC,EAAErH,KAAKo6C,eAAep6C,KAAK84C,QAAQ94C,KAAK84C,MAC3E94C,MAAKg3C,qBAAqB9vC,EAAIA,CAC9BlH,MAAKg3C,qBAAqB5vC,EAAIA,CAC9BpH,MAAKg3C,qBAAqB3vC,EAAIA,CAE9BrH,MAAK63C,SAASjwC,SAAS5H,KAAKg3C,qBAAqB/qC,sBACjDjM,MAAK63C,SAAS/mC,QAAQwmC,EAAWzvC,eACjC7H,MAAK63C,SAASpd,iBAAiB0gB,EAASn7C,KAAK44C,eAE7Cvd,GAAOG,EAAOx7B,KAAK44C,eAAe,EAClCtd,GAAOG,EAAOz7B,KAAK44C,eAAe,EAClC54C,MAAKq6C,OAASr6C,KAAK44C,eAAe,EAElC15C,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdgI,EAAIlH,KAAK44C,eAAe15C,EACxBkI,GAAIpH,KAAK44C,eAAe15C,EAAI,EAC5BmI,GAAIrH,KAAK44C,eAAe15C,EAAI,EAC5B,IAAIgI,EAAIm0B,EACPA,EAAOn0B,CACR,IAAIA,EAAIs0B,EACPA,EAAOt0B,CACR,IAAIE,EAAIk0B,EACPA,EAAOl0B,CACR,IAAIA,EAAIq0B,EACPA,EAAOr0B,CACR,IAAIC,EAAIrH,KAAKq6C,OACZr6C,KAAKq6C,OAAShzC,CACfnI,IAAK,EAGNc,KAAKs6C,OAAS,CAEd,IAAIlG,GAAW5Y,EAAOH,CACtB,IAAIwd,GAAWpd,EAAOH,CACtB,IAAIr7B,GAAW,GAAGD,KAAKq6C,OAASr6C,KAAKs6C,OAErC,IAAIjf,EAAO,EACVA,GAAQr7B,KAAK84C,MAEd,IAAIxd,EAAO,EACVA,GAAQt7B,KAAK84C,MAEdzd,GAAOhsB,KAAK0pC,MAAM1d,EAAKr7B,KAAK84C,QAAQ94C,KAAK84C,MACzCxd,GAAOjsB,KAAK0pC,MAAMzd,EAAKt7B,KAAK84C,QAAQ94C,KAAK84C,MAEzC,IAAIE,GAAe,EAAEh5C,KAAK84C,MAC1B1E,GAAI/kC,KAAK0pC,MAAM3E,EAAE4E,EAAQ,GAAGA,CAC5BH,GAAIxpC,KAAK0pC,MAAMF,EAAEG,EAAQ,GAAGA,CAE5Bxd,GAAOH,EAAO+Y,CACd3Y,GAAOH,EAAOud,CAEdzE,GAAI,EAAEA,CACNyE,GAAI,EAAEA,CAENjsC,GAAI,GAAK,EAAEwnC,CACXxnC,GAAI,GAAK,EAAEisC,CACXjsC,GAAI,IAAM3M,CACV2M,GAAI,MAAQ4uB,EAAOH,GAAM+Y,CACzBxnC,GAAI,MAAQ6uB,EAAOH,GAAMud,CACzBjsC,GAAI,KAAO5M,KAAKs6C,OAAOr6C,CACvB2M,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF2O,GAAOpO,gBAAgBP,GAEzB,OAAAmtB,IAzMsCof,EA2MtCx5C,GAAiCJ,QAAxBw6B,IlEgjWN6W,+BAA+BxvC,UAAUyR,gCAAgCzR,UAAU63C,mDAAmD73C,UAAUspB,qCAAqC,qCAAqCwvB,8DAA8D,8DAA8D3M,8CAA8C,gDAAgD6N,0EAA0E,SAAS38C,EAAQkB,EAAOJ,GACzhB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmE5wWtB,IAAO05B,GAAuBt7B,EAAY,qEAE1C,IAAM48C,GAA2B,SAAA36C,GAASX,EAApCs7C,EAA2B36C,EAIhC,SAJK26C,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEX56C,EAAAlB,KAAAQ,KAEAA,MAAKs7C,cAAgBA,EAMtB36C,OAAAC,eAAWy6C,EAAA96C,UAAA,iBnE0wWJM,ImE1wWP,WAEC,MAAOb,MAAKu7C,gBnE2wWN/0C,ImExwWP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAETzG,MAAKu7C,eAAiB90C,GnEywWhB1F,WAAY,KACZC,aAAc,MmEvwWdq6C,GAAA96C,UAAA82C,uBAAP,SAA8BC,GAE7B,GAAI6D,GAAwB7D,EAAWhvB,WAAWsvB,cAElD,KAAK,GAAI14C,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAI2qB,GAAWsxB,EAAQj8C,EACvBc,MAAK44C,eAAe15C,GAAK2qB,CACzB7pB,MAAK44C,eAAe15C,EAAI,IAAM2qB,GAAKsxB,EAAQj8C,EAAI,IAAM2qB,GAAG7pB,KAAKu7C,eAG9Dv7C,KAAK23C,oCAAoCL,EAAYt3C,KAAK44C,eAAgB54C,KAAK63C,SAC/E73C,MAAK83C,yBAAyBv8B,OAASvb,KAAK63C,SAE9C,OAAAwD,IAzC0CthB,EA2C1Cp6B,GAAqCJ,QAA5B87C,InEwwWN1f,qEAAqE,uEAAuEue,+DAA+D,SAASz7C,EAAQkB,EAAOJ,GoEtzWtO,GAAOsD,GAAmBpE,EAAa,6CAMvC,IAAO+8C,GAAqB/8C,EAAY,oDAIxC,IAAM06C,GAAgB,WAYrB,QAZKA,KAMEn5C,KAAAo3C,eAAwB,IAGvBp3C,MAAAy7C,mBAA6B,IAKpCz7C,MAAK62C,kBAAoB72C,KAAK07C,yBAGxBvC,EAAA54C,UAAAm7C,uBAAP,WAEC,MAAO,IAAIF,GAGZ76C,QAAAC,eAAWu4C,EAAA54C,UAAA,qBpEmyWJM,IoEnyWP,WAEC,MAAOb,MAAKy7C,oBpEoyWNj1C,IoEjyWP,SAA6BC,GAE5BzG,KAAKy7C,mBAAqBh1C,GpEkyWpB1F,WAAY,KACZC,aAAc,MoEhyWdm4C,GAAA54C,UAAAo7C,cAAP,WAEC37C,KAAK47C,iBAAmB,KAGlBzC,GAAA54C,UAAAg6C,aAAP,SAAoBC,GAEnB,GAAIx6C,KAAKy6C,YAAcz6C,KAAK06C,kBAC3B16C,KAAKy6C,UAAUx5C,SAEhBjB,MAAKy6C,UAAYD,EAGlB75C,QAAAC,eAAWu4C,EAAA54C,UAAA,SpE8xWJM,IoE9xWP,WAEC,MAAOb,MAAK65C,SpE+xWNrzC,IoE5xWP,SAAiBC,GAEhBzG,KAAK65C,QAAUpzC,GpE6xWT1F,WAAY,KACZC,aAAc,MoE3xWrBL,QAAAC,eAAWu4C,EAAA54C,UAAA,YpE8xWJM,IoE9xWP,WAEC,IAAKb,KAAKy6C,UACTz6C,KAAKy6C,UAAYz6C,KAAK25C,qBAEvB,OAAO35C,MAAKy6C,WpE8xWN15C,WAAY,KACZC,aAAc,MoE5xWrBL,QAAAC,eAAWu4C,EAAA54C,UAAA,gBpE+xWJM,IoE/xWP,WAEC,MAAOb,MAAKo3C,gBpEgyWN5wC,IoE7xWP,SAAwBC,GAEvB,GAAIA,GAASzG,KAAKo3C,eACjB,MAEDp3C,MAAKy2C,kBAAkBhwC,IpE6xWjB1F,WAAY,KACZC,aAAc,MoE3xWdm4C,GAAA54C,UAAAU,QAAP,WAECjB,KAAK62C,kBAAoB,IAEzB,IAAI72C,KAAKy6C,YAAcz6C,KAAK06C,kBAC3B16C,KAAKy6C,UAAUx5C,SAEhBjB,MAAKy6C,UAAY,KAGXtB,GAAA54C,UAAAo5C,oBAAP,WAEC,KAAM,IAAI92C,GAGJs2C,GAAA54C,UAAAs7C,gBAAP,SAAuBC,EAAiCl2B,GAEvD5lB,KAAK47C,iBAAmB,KAExB57C,MAAKq3C,uBAAuByE,EAAgB5tC,OAE5C,KAAKlO,KAAKy6C,UACTz6C,KAAKy6C,UAAYz6C,KAAK25C,qBAEvB35C,MAAK22C,cAAc32C,KAAKy6C,UAAWqB,EAAgB5rC,MAAO0V,GAGpDuzB,GAAA54C,UAAA82C,uBAAP,SAA8BC,GAE7B,KAAM,IAAIz0C,GAGJs2C,GAAA54C,UAAAo2C,cAAP,SAAqBpqC,EAAoB2D,EAAa0V,GAErD,KAAM,IAAI/iB,GAGJs2C,GAAA54C,UAAAk2C,kBAAP,SAAyBhwC,GAExBzG,KAAKo3C,eAAiB3wC,CAEtB,IAAIzG,KAAK06C,kBAAmB,CAC3B,KAAMt7C,OAAM,2DACN,IAAIY,KAAKy6C,UAAW,CAC1Bz6C,KAAKy6C,UAAUx5C,SACfjB,MAAKy6C,UAAY,MAGpB,OAAAtB,KAEAx5C,GAA0BJ,QAAjB45C,IpE+wWNzmC,6CAA6CtR,UAAU26C,oDAAoD,sDAAsDC,2CAA2C,SAASv9C,EAAQkB,EAAOJ,GACvO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqE55WtB,IAAO47C,GAAUx9C,EAAe,0CrEk6WhC,IqEz5WMy9C,GAAU,SAAAx7C,GAASX,EAAnBm8C,EAAUx7C,EAIf,SAJKw7C,GAIOC,EAAqBjuC,EAAgB+B,GAEhDvP,EAAAlB,KAAAQ,KAAMm8C,EAAMjuC,EAAQ+B,GAMdisC,EAAA37C,UAAA67C,gBAAP,SAAuBr3B,IAVTm3B,GAAA5U,GAAY,YAc3B,OAAA4U,IAhByBD,EAkBzBt8C,GAAoBJ,QAAX28C,IrEu5WNG,0CAA0C,4CAA4CC,qDAAqD,SAAS79C,EAAQkB,EAAOJ,GACtK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsEv7WtB,IAAO47C,GAAUx9C,EAAe,0CtE67WhC,IsEp7WM89C,GAAoB,SAAA77C,GAASX,EAA7Bw8C,EAAoB77C,EAUzB,SAVK67C,GAUOJ,EAAqBK,EAA0BvsC,GAE1DvP,EAAAlB,KAAAQ,KAAMm8C,EAAMK,EAAkBvsC,EAE9BjQ,MAAKy8C,kBAAoBD,EAMnBD,EAAAh8C,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAIA,EAAU23B,UAAU18C,MACvB+kB,EAAU43B,sBAAsB38C,KAAKy8C,mBAOhCF,GAAAh8C,UAAAq8C,gBAAP,WAEC,MAAO,OA9BML,GAAAjV,GAAY,sBAgC3B,OAAAiV,IAlCmCN,EAoCnCt8C,GAA8BJ,QAArBg9C,ItE66WNF,0CAA0C,4CAA4CA,2CAA2C,SAAS59C,EAAQkB,EAAOJ,GAC5J,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuE99WtB,IAAOuC,GAAQnE,EAAgB,gCAE/B,IAAOgb,GAAsBhb,EAAY,mDACzC,IAAO+e,GAAc/e,EAAc,2CAEnC,IAAO2f,GAAU3f,EAAe,uCAChC,IAAOggB,GAAUhgB,EAAe,uCAEhC,IAAO6lB,GAAQ7lB,EAAgB,wCvEi+W/B,IuEv9WMw9C,GAAU,SAAAv7C,GAASX,EAAnBk8C,EAAUv7C,EAUf,SAVKu7C,GAUOE,EAAqBzmC,EAAgBzF,GAEhDvP,EAAAlB,KAAAQ,KACAA,MAAK68C,MAAQV,CACbn8C,MAAK88C,QAAUpnC,CACf1V,MAAK4kB,WAAa3U,CAClBjQ,MAAK+8C,cAAgB,CAErB/8C,MAAK4G,cAEL5G,MAAK0J,aAAe1J,KAAK88C,QAAQpzC,aAGlC/I,OAAAC,eAAWq7C,EAAA17C,UAAA,UvE48WJM,IuE58WP,WAEC,MAAOb,MAAK88C,SvE68WN/7C,WAAY,KACZC,aAAc,MuE38Wdi7C,GAAA17C,UAAAy8C,iBAAP,WAEC,GAAIh9C,KAAKi9C,SACRj9C,KAAKi9C,SAASC,YAAYl9C,KAE3BA,MAAKi9C,SAAW,KAOVhB,GAAA17C,UAAAq8C,gBAAP,WAEC,MAAO58C,MAAK0V,OAAO1P,aASbi2C,GAAA17C,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKna,KAAK88C,QAAQlzC,cACjB,MAAO,MAER,OAAO5J,MAAKoL,QAAQ6O,YAAYC,EAAQC,GAMlC8hC,GAAA17C,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAIA,EAAU23B,UAAU18C,MAAO,CAC9B+kB,EAAUo4B,YAAYn9C,KAAK88C,QAE3B,IAAI98C,KAAKo9C,wBAA0Br4B,EAAUs4B,kBAC5Ct4B,EAAUo4B,YAAYn9C,KAAKs9C,gBAOvBrB,GAAA17C,UAAAg9C,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAKz9C,KAAK88C,QAAQlzC,cACjB,MAAO,MAER,IAAI8zC,GAAwC19C,KAAK88C,QAAQa,oBACzDD,GAAmBE,iBAAmB59C,KAAK88C,QAAQ7wC,sBAAsB5C,gBAAgBm0C,EACzFE,GAAmBG,kBAAoB79C,KAAK88C,QAAQ7wC,sBAAsBkjB,qBAAqBsuB,EAE/F,KAAKC,EAAmBjT,YACvBiT,EAAmBjT,YAAc,GAAI7nC,EAEtC,IAAI4nB,GAA0BxqB,KAAKoL,QAAQwP,gBAAgB8iC,EAAmBE,iBAAkBF,EAAmBG,kBAAmBH,EAAmBjT,YAEzJ,IAAIjgB,EAAmB,EACtB,MAAO,MAERkzB,GAAmBlzB,iBAAmBA,CACtCkzB,GAAmBF,YAAcA,CACjCE,GAAmBD,aAAeA,CAClCC,GAAmBI,wBAA0BtzB,GAAoB,CAEjE,OAAO,MAODyxB,GAAA17C,UAAAw9C,oBAAP,WAEC,MAAO/9C,MAAKoL,QAAQ4yC,gBAGd/B,GAAA17C,UAAAwP,oBAAP,WAEC/P,KAAKoL,QAAQ8S,YAEble,MAAK4kB,WAAWq5B,eAAej+C,MAGzBi8C,GAAA17C,UAAAqG,aAAP,WAEC,GAAI5G,KAAK88C,QAAQle,YAAcxgB,EAAWE,iBACzCte,KAAKoL,QAAU,GAAIqO,GAAuBzZ,KAAK88C,aAC3C,IAAI98C,KAAK88C,QAAQle,YAAcxgB,EAAWC,OAC9Cre,KAAKoL,QAAU,GAAIoS,GAAexd,KAAK88C,aACnC,IAAI98C,KAAK88C,QAAQle,YAAcxgB,EAAWG,KAC9Cve,KAAKoL,QAAU,GAAIqT,EAEpBze,MAAKk+C,oBA3HQjC,GAAA3U,GAAY,YA6H3B,OAAA2U,IA/HyB33B,EAiIL3kB,GAAAJ,QAAX08C,IvEs7WNhpC,gCAAgC7R,UAAUiY,mDAAmD,mDAAmDiE,2CAA2C,2CAA2Ca,uCAAuC,uCAAuCK,uCAAuC,uCAAuC0G,wCAAwC,0CAA0Ci5B,+CAA+C,SAAS1/C,EAAQkB,EAAOJ,GAC9hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwE/kXtB,IAAO47C,GAAUx9C,EAAe,0CxEqlXhC,IwE5kXM2/C,GAAc,SAAA19C,GAASX,EAAvBq+C,EAAc19C,EAUnB,SAVK09C,GAUOjC,EAAqBkC,EAAoBpuC,GAEpDvP,EAAAlB,KAAAQ,KAAMm8C,EAAMkC,EAAYpuC,EAExBjQ,MAAKs+C,YAAcD,EAMbD,EAAA79C,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAIA,EAAU23B,UAAU18C,MACvB+kB,EAAUw5B,gBAAgBv+C,KAAKs+C,aAO1BF,GAAA79C,UAAAq8C,gBAAP,WAEC,MAAO,OA9BMwB,GAAA9W,GAAY,gBAgC3B,OAAA8W,IAlC6BnC,EAoC7Bt8C,GAAwBJ,QAAf6+C,IxEqkXN/B,0CAA0C,4CAA4Cn3B,yCAAyC,SAASzmB,EAAQkB,EAAOJ,GyEhnX1J,GAAOsD,GAAmBpE,EAAa,6CzEqnXvC,IyE7mXM6lB,GAAQ,WAqEb,QArEKA,KAOEtkB,KAAAw+C,gBAAyB,CAIzBx+C,MAAA+8C,cAAuB,CA4D7B/8C,MAAKy+C,aAAe,GAAI54C,OAtDzBlF,OAAAC,eAAW0jB,EAAA/jB,UAAA,gBzEymXJM,IyEzmXP,WAEC,MAAOb,MAAK0+C,uBzE0mXNl4C,IyEvmXP,SAAwBC,GAEvB,GAAIzG,KAAK0+C,uBAAyBj4C,EACjC,MAEDzG,MAAK0+C,sBAAwBj4C,CAE7BzG,MAAK2+C,6BAA6B3+C,KAAKi9C,SAAUj9C,KAAKi9C,SAAS2B,qBAAuB,QzEsmXhF79C,WAAY,KACZC,aAAc,MyEnmXrBL,QAAAC,eAAW0jB,EAAA/jB,UAAA,wBzEsmXJM,IyEtmXP,WAEC,MAAOb,MAAK6+C,uBzEumXNr4C,IyEpmXP,SAAgCC,GAE/B,GAAIzG,KAAK6+C,uBAAyBp4C,EACjC,MAEDzG,MAAK6+C,sBAAwBp4C,CAE7B,KAAK,GAAIvH,GAAW,EAAGA,EAAIc,KAAKw+C,kBAAmBt/C,EAClDc,KAAKy+C,aAAav/C,GAAGy/C,6BAA6B3+C,KAAK6+C,wBzEmmXlD99C,WAAY,KACZC,aAAc,MyE9lXrBL,QAAAC,eAAW0jB,EAAA/jB,UAAA,UzEomXJM,IyEpmXP,WAEC,MAAOb,MAAKi9C,UzEqmXNl8C,WAAY,KACZC,aAAc,MyE/lXrBL,QAAAC,eAAW0jB,EAAA/jB,UAAA,iBzEsmXJM,IyEtmXP,WAEC,MAAOb,MAAK+8C,ezEumXNh8C,WAAY,KACZC,aAAc,MyEtlXdsjB,GAAA/jB,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASDmK,GAAA/jB,UAAAg9C,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAODn5B,GAAA/jB,UAAAq8C,gBAAP,WAEC,MAAO,MAQDt4B,GAAA/jB,UAAAu+C,uBAAP,SAA8BppC,GAE7B,MAAO1V,MAODskB,GAAA/jB,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAI/kB,KAAK++C,eAAiB,IAAM/+C,KAAKo9C,uBACpC,MAED,IAAIr4B,EAAU23B,UAAU18C,MAAO,CAC9B,GAAId,GAAW,CAEf,OAAOA,EAAIc,KAAKw+C,gBACfx+C,KAAKy+C,aAAav/C,KAAKk9C,gBAAgBr3B,EAExC,IAAI/kB,KAAKo9C,wBAA0Br4B,EAAUs4B,kBAC5Ct4B,EAAUo4B,YAAYn9C,KAAKs9C,gBAQvBh5B,GAAA/jB,UAAAy+C,iBAAP,SAAwBj6B,GAEvB,GAAI/kB,KAAKs9C,eAAiB,KACzBt9C,KAAKs9C,cAAgBt9C,KAAK+9C,qBAE3Bh5B,GAAUo4B,YAAYn9C,KAAKs9C,eAQrBh5B,GAAA/jB,UAAA0+C,SAAP,SAAgBC,GAEfA,EAAKjC,SAAWj9C,IAChBA,MAAK+8C,eAAiBmC,EAAKH,aAC3B/+C,MAAKy+C,aAAcz+C,KAAKw+C,mBAAsBU,CAE9CA,GAAKP,6BAA6B3+C,KAAK4+C,qBAEvC,IAAIO,GAAqBD,EAAKH,aAC9BG,GAAOl/C,IAEP,GAAG,CACFk/C,EAAKnC,eAAiBoC,SACbD,EAAOA,EAAKjC,WAAa,MAQ7B34B,GAAA/jB,UAAA28C,YAAP,SAAmBgC,GAElB,GAAI/tC,GAAenR,KAAKy+C,aAAartC,QAAQ8tC,EAC7Cl/C,MAAKy+C,aAAattC,GAASnR,KAAKy+C,eAAez+C,KAAKw+C,gBACpDx+C,MAAKy+C,aAAaW,KAElBF,GAAKP,6BAA6B,MAElC,IAAIQ,GAAqBD,EAAKH,aAC9BG,GAAOl/C,IAEP,GAAG,CACFk/C,EAAKH,eAAiBI,SACbD,EAAOA,EAAKjC,WAAa,MAG5B34B,GAAA/jB,UAAAo+C,6BAAR,SAAqCl4C,GAEpC,GAAIzG,KAAKo9C,wBAA0Bp9C,KAAK0+C,uBAAyBj4C,EAChE,MAEDzG,MAAKo9C,uBAAyBp9C,KAAK0+C,uBAAyBj4C,CAE5D,KAAK,GAAIvH,GAAW,EAAGA,EAAIc,KAAKw+C,kBAAmBt/C,EAClDc,KAAKy+C,aAAav/C,GAAGy/C,6BAA6B3+C,KAAK6+C,sBAExD,IAAI7+C,KAAKo9C,uBAAwB,CAChCp9C,KAAKs9C,cAAgBt9C,KAAK+9C,0BACpB,CAEN/9C,KAAKs9C,cAAgB,MAKhBh5B,GAAA/jB,UAAA29C,kBAAP,WAEC,GAAIl+C,KAAKo9C,uBAAwB,CAEhCp9C,KAAKs9C,cAAgBt9C,KAAK+9C,uBAIrBz5B,GAAA/jB,UAAAw9C,oBAAP,WAEC,KAAM,IAAIl7C,GAEZ,OAAAyhB,KAEA3kB,GAAkBJ,QAAT+kB,IzE+jXN5R,6CAA6CtR,YAAYi+C,yCAAyC,SAAS5gD,EAAQkB,EAAOJ,GAI7H,G0EzyXM+/C,GAAQ,WAEb,QAFKA,MAKN,MAAAA,KAEA3/C,GAAkBJ,QAAT+/C,O1EyyXHn6B,0CAA0C,SAAS1mB,EAAQkB,EAAOJ,G2E7yXxE,GAAO28C,GAAUz9C,EAAe,0CAChC,IAAO89C,GAAoB99C,EAAa,oDACxC,IAAOw9C,GAAUx9C,EAAe,0CAChC,IAAO2/C,GAAc3/C,EAAc,8CACnC,IAAO8gD,GAAc9gD,EAAc,8CACnC,IAAO+gD,GAAU/gD,EAAe,0CAEhC,IAAO6gD,GAAQ7gD,EAAgB,wCAC/B,IAAOghD,GAAchhD,EAAc,yC3EizXnC,I2E3yXM8lB,GAAS,WAad,QAbKA,GAaOm7B,GAHJ1/C,KAAA2/C,aAAuB,KAK9B3/C,MAAK4/C,UAAYF,GAAuB,GAAIJ,EAE5Ct/C,MAAK6/C,gBAAkB,GAAIJ,GAAevD,EAAYl8C,KACtDA,MAAK8/C,0BAA4B,GAAIL,GAAelD,EAAsBv8C,KAC1EA,MAAK+/C,gBAAkB,GAAIN,GAAexD,EAAYj8C,KACtDA,MAAKggD,oBAAsB,GAAIP,GAAerB,EAAgBp+C,KAC9DA,MAAKigD,oBAAsB,GAAIR,GAAeF,EAAgBv/C,KAC9DA,MAAKkgD,gBAAkB,GAAIT,GAAeD,EAAYx/C,MAGvDW,OAAAC,eAAW2jB,EAAAhkB,UAAA,Y3E8xXJM,I2E9xXP,WAEC,MAAOb,MAAK4/C,W3E+xXN7+C,WAAY,KACZC,aAAc,M2E7xXdujB,GAAAhkB,UAAAykB,SAAP,SAAgBD,GAEf,GAAI/kB,KAAK2/C,aACR3/C,KAAKmgD,gBAENngD,MAAK4/C,UAAUxD,gBAAgBr3B,GAGzBR,GAAAhkB,UAAA09C,eAAP,SAAsBiB,GAErB,GAAIvgD,GAAeqB,KAAKogD,YAExB,OAAOzhD,EAAG,CACT,GAAIugD,GAAQvgD,EACX,MAEDA,GAAIA,EAAE0hD,kBAGPnB,EAAKmB,kBAAoBrgD,KAAKogD,YAE9BpgD,MAAKogD,aAAelB,CACpBl/C,MAAK2/C,aAAe,KAGdp7B,GAAAhkB,UAAA+/C,cAAP,SAAqBpB,GAEpB,GAAIvgD,EAEJugD,GAAKlC,kBAEL,IAAIkC,GAAQl/C,KAAKogD,aAAc,CAC9BpgD,KAAKogD,aAAelB,EAAKmB,sBACnB,CACN1hD,EAAIqB,KAAKogD,YACT,OAAOzhD,GAAKA,EAAE0hD,mBAAqBnB,EAClCvgD,EAAIA,EAAE0hD,iBAEP,IAAI1hD,EACHA,EAAE0hD,kBAAoBnB,EAAKmB,kBAG7BnB,EAAKmB,kBAAoB,IAEzB,KAAKrgD,KAAKogD,aACTpgD,KAAK2/C,aAAe,MAGdp7B,GAAAhkB,UAAA4/C,eAAR,WAEC,GAAIjB,GAAkBl/C,KAAKogD,YAC3B,IAAIG,EACJ,IAAI5hD,EACJqB,MAAKogD,aAAe,IACpBpgD,MAAK2/C,aAAe,KAEpB,GAAG,CACFY,EAAavgD,KAAK4/C,UAAUd,uBAAuBI,EAAKxpC,OAExD,IAAIwpC,EAAKn0C,QAAUw1C,EAAY,CAC9B,GAAIrB,EACHA,EAAKlC,kBAENuD,GAAWtB,SAASC,GAGrBvgD,EAAIugD,EAAKmB,iBACTnB,GAAKmB,kBAAoB,IAGzBnB,GAAKxpC,OAAOjE,0BAEHytC,EAAOvgD,IAAM,MAOjB4lB,GAAAhkB,UAAA+mB,iBAAP,SAAwBpZ,GAEvBlO,KAAKi+C,eAAej+C,KAAK6/C,gBAAgBW,QAAQtyC,IAM3CqW,GAAAhkB,UAAA46B,2BAAP,SAAkCqhB,GAEjCx8C,KAAKi+C,eAAej+C,KAAK8/C,0BAA0BU,QAAQhE,IAMrDj4B,GAAAhkB,UAAA62B,iBAAP,SAAwB1hB,GAEvB1V,KAAKi+C,eAAej+C,KAAK+/C,gBAAgBS,QAAQ9qC,IAM3C6O,GAAAhkB,UAAA47B,qBAAP,SAA4BkiB,GAE3Br+C,KAAKi+C,eAAej+C,KAAKggD,oBAAoBQ,QAAQnC,IAM/C95B,GAAAhkB,UAAAghC,qBAAP,SAA4Bkf,GAE3BzgD,KAAKi+C,eAAej+C,KAAKigD,oBAAoBO,QAAQC,IAM/Cl8B,GAAAhkB,UAAAyiC,iBAAP,SAAwB0d,GAEvB1gD,KAAKi+C,eAAej+C,KAAKkgD,gBAAgBM,QAAQE,IAM3Cn8B,GAAAhkB,UAAAm5B,mBAAP,SAA0BxrB,GAEzBlO,KAAKsgD,cAActgD,KAAK6/C,gBAAgBc,YAAYzyC,IAM9CqW,GAAAhkB,UAAA66B,6BAAP,SAAoCohB,GAEnCx8C,KAAKsgD,cAActgD,KAAK8/C,0BAA0Ba,YAAYnE,IAMxDj4B,GAAAhkB,UAAA82B,mBAAP,SAA0B3hB,GAEzB1V,KAAKsgD,cAActgD,KAAK+/C,gBAAgBY,YAAYjrC,IAM9C6O,GAAAhkB,UAAA67B,uBAAP,SAA8BiiB,GAE7Br+C,KAAKsgD,cAActgD,KAAKggD,oBAAoBW,YAAYtC,IAMlD95B,GAAAhkB,UAAAihC,uBAAP,SAA8Bif,GAE7BzgD,KAAKsgD,cAActgD,KAAKigD,oBAAoBU,YAAYF,IAMlDl8B,GAAAhkB,UAAA0iC,mBAAP,SAA0Byd,GAEzB1gD,KAAKsgD,cAActgD,KAAKkgD,gBAAgBS,YAAYD,IAEtD,OAAAn8B,KAEmB5kB,GAAAJ,QAAVglB,I3EkvXNy3B,0CAA0C,0CAA0CM,oDAAoD,oDAAoDD,0CAA0C,0CAA0C8B,8CAA8C,8CAA8CkB,wCAAwC,wCAAwCuB,8CAA8C,8CAA8CC,0CAA0C,0CAA0CC,yCAAyC,2CAA2CF,+CAA+C,SAASniD,EAAQkB,EAAOJ,GAC1wB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Er9XtB,IAAO47C,GAAUx9C,EAAe,0C5E29XhC,I4El9XM8gD,GAAc,SAAA7+C,GAASX,EAAvBw/C,EAAc7+C,EAUnB,SAVK6+C,GAUOpD,EAAqBsE,EAAoBxwC,GAEpDvP,EAAAlB,KAAAQ,KAAMm8C,EAAMsE,EAAYxwC,EAExBjQ,MAAK+gD,YAAcN,EAMblB,EAAAh/C,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAIA,EAAU23B,UAAU18C,MACvB+kB,EAAUi8B,gBAAgBhhD,KAAK+gD,aAO1BxB,GAAAh/C,UAAAq8C,gBAAP,WAEC,MAAO,OA9BM2C,GAAAjY,GAAY,gBAgC3B,OAAAiY,IAlC6BtD,EAoC7Bt8C,GAAwBJ,QAAfggD,I5E28XNlD,0CAA0C,4CAA4CwE,2CAA2C,SAASpiD,EAAQkB,EAAOJ,GAC5J,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6E3/XtB,IAAO47C,GAAUx9C,EAAe,0C7EmgYhC,I6Ex/XM+gD,GAAU,SAAA9+C,GAASX,EAAnBy/C,EAAU9+C,EAUf,SAVK8+C,GAUOrD,EAAqB8E,EAAgBhxC,GAEhDvP,EAAAlB,KAAAQ,KAAMm8C,EAAM8E,EAAQhxC,EAEpBjQ,MAAKkhD,QAAUD,EAMTzB,EAAAj/C,UAAA67C,gBAAP,SAAuBr3B,GAEtB,GAAIA,EAAU23B,UAAqB18C,MAClC+kB,EAAUo8B,YAAYnhD,KAAKkhD,SAStB1B,GAAAj/C,UAAA0Z,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKna,KAAKkhD,QAAQt3C,YACjB,MAAO,MAGR,OAAO,MApCM41C,GAAAlY,GAAY,YAsC3B,OAAAkY,IAxCyBvD,EA0CzBt8C,GAAoBJ,QAAXigD,I7Eg/XNnD,0CAA0C,4CAA4C+E,mCAAmC,SAAS3iD,EAAQkB,EAAOJ,SAE9I8hD,4CAA4C,SAAS5iD,EAAQkB,EAAOJ,SAEpE+T,8CAA8C,SAAS7U,EAAQkB,EAAOJ,GAS5E,G8EviYMyD,GAAkB,WA0EvB,QA1EKA,GA0EO2U,GAEX3X,KAAK2X,cAAgBA,EAGvB,MAAA3U,KAE4BrD,GAAAJ,QAAnByD,O9Em+XH8nB,yCAAyC,SAASrsB,EAAQkB,EAAOJ,G+ElkYvE,GAAOqD,GAAQnE,EAAgB,gCAQ/B,IAAO6iD,GAAgB7iD,EAAc,+C/EokYrC,I+E1jYM6mB,GAAa,WA8BlB,QA9BKA,GA8BOi8B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJvhD,KAAAwhD,mBACAxhD,MAAAyhD,kBAA4B,IAG5BzhD,MAAA0hD,aAAsB,CAwB7B1hD,MAAK2hD,kBAAoB,GAAIL,EAE7BthD,MAAK4hD,sBAAwBL,CAC7BvhD,MAAK6hD,UAAY,GAAIh8C,OArBtBlF,OAAAC,eAAW0kB,EAAA/kB,UAAA,oB/EgkYJM,I+EhkYP,WAEC,MAAOb,MAAKyhD,mB/EikYNj7C,I+E9jYP,SAA4BC,GAE3BzG,KAAKyhD,kBAAoBh7C,G/E+jYnB1F,WAAY,KACZC,aAAc,M+E5iYdskB,GAAA/kB,UAAA+oB,iBAAP,SAAwBpiB,EAAUE,EAAUijC,G/EmjYrC,G+EhjYFmT,GAAuBnT,EAAKrgB,UAAU9iB,EAAGE,EAAG,EAChD,IAAIq2C,GAAwBpT,EAAKrgB,UAAU9iB,EAAGE,EAAG,GAAG2F,SAASywC,EAE7D,OAAOx9C,MAAK8hD,kBAAkBtE,EAAaC,EAAcpT,EAAKn6B,OAMxDoV,GAAA/kB,UAAAuhD,kBAAP,SAAyBtE,EAAsBC,EAAuBvtC,GAGrElQ,KAAK2hD,kBAAkBn4B,OAGvBxpB,MAAK2hD,kBAAkBnE,YAAcA,CACrCx9C,MAAK2hD,kBAAkBlE,aAAeA,CAGtCvtC,GAAM4U,mBAAmB9kB,KAAK2hD,kBAE9B3hD,MAAK0hD,aAAe,CACpB,IAAIxC,GAAsBl/C,KAAK2hD,kBAAkBI,UACjD,IAAIrsC,EAEJ,OAAOwpC,EAAM,CACZ,IAAKl/C,KAAKgiD,UAAUtsC,EAASwpC,EAAKxpC,QACjC1V,KAAK6hD,UAAU7hD,KAAK0hD,gBAAkBhsC,CAEvCwpC,GAAOA,EAAK+C,KAIb,IAAKjiD,KAAK0hD,aACT,MAAO,KAER,OAAO1hD,MAAKkiD,sBAAsBliD,KAAK2hD,mBAoBjCr8B,GAAA/kB,UAAA4hD,cAAP,SAAqBC,GAEpBpiD,KAAKwhD,iBAAmBY,EAGjB98B,GAAA/kB,UAAAyhD,UAAR,SAAkBtsC,GAEjB,GAAI1V,KAAKyhD,oBAAsB/rC,EAAO9D,mBACrC,MAAO,KAER,IAAIjL,GAAa3G,KAAKwhD,iBAAiB/hD,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/B,GAAIc,KAAKwhD,iBAAiBtiD,IAAMwW,EAC/B,MAAO,KAET,OAAO,OAGA4P,GAAA/kB,UAAA8hD,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQ3E,qBAAqBnzB,iBAAmB+3B,EAAQ5E,qBAAqBnzB,iBAAkB,GAAK,EAGpGlF,GAAA/kB,UAAA2hD,sBAAR,SAA8BM,GAG7BxiD,KAAK6hD,UAAUpiD,OAASO,KAAK0hD,YAG7B1hD,MAAK6hD,UAAY7hD,KAAK6hD,UAAUY,KAAKziD,KAAKqiD,Y/E+hYpC,I+ExhYF9wC,GAAmCo/B,OAAO+R,SAC9C,IAAIC,EACJ,IAAIjF,EACJ,IAAIhoC,EACJ,IAAIxW,EAEJ,KAAKA,EAAI,EAAGA,EAAIc,KAAK0hD,eAAgBxiD,EAAG,CACvCwW,EAAS1V,KAAK6hD,UAAU3iD,EACxBw+C,GAAqBhoC,EAAOioC,oBAC5B,IAAIjoC,EAAOktC,gBAAiB,CAE3B,IAAKD,GAAmB,MAAQjF,EAAmBlzB,iBAAmBm4B,EAAgBn4B,mBAAqB9U,EAAOpE,gBAAgBC,EAA2BvR,KAAK4hD,uBAAwB,CACzLrwC,EAA4BmsC,EAAmBlzB,gBAC/Cm4B,GAAkBjF,CAClB,KAAK19C,KAAK4hD,sBAAuB,CAChC5hD,KAAK6iD,oBAAoBnF,EACzB,OAAOA,SAGH,IAAIiF,GAAmB,MAAQjF,EAAmBlzB,iBAAmBm4B,EAAgBn4B,iBAAkB,CAK7G,IAAKkzB,EAAmBI,wBAAyB,CAChD99C,KAAK6iD,oBAAoBnF,EACzB,OAAOA,KAKV,MAAOiF,GAGAr9B,GAAA/kB,UAAAsiD,oBAAR,SAA4BnF,GAE3B,GAAIoF,GAA0BpF,EAAmBlT,eAAiB,KAASkT,EAAmBlT,cAAgB,GAAI5nC,GAAc86C,EAAmBlT,aAEnJ,IAAIuY,GAAkBrF,EAAmBG,iBACzC,IAAImF,GAAkBtF,EAAmBE,gBACzC,IAAIj/C,GAAW++C,EAAmBlzB,gBAClCs4B,GAAa57C,EAAI87C,EAAO97C,EAAIvI,EAAEokD,EAAO77C,CACrC47C,GAAa17C,EAAI47C,EAAO57C,EAAIzI,EAAEokD,EAAO37C,CACrC07C,GAAaz7C,EAAI27C,EAAO37C,EAAI1I,EAAEokD,EAAO17C,EAG/Bie,GAAA/kB,UAAAU,QAAP,YAID,OAAAqkB,KAEA3lB,GAAuBJ,QAAd+lB,I/EohYNrS,gCAAgC7R,UAAU6hD,+CAA+C,iDAAiDC,8CAA8C,SAASzkD,EAAQkB,EAAOJ,GgFluYnN,GAAO4jD,GAAc1kD,EAAc,yChFuuYnC,IgFluYM2kD,GAAkB,WASvB,QATKA,KAGGpjD,KAAAqjD,OAAgB,CAChBrjD,MAAAsjD,UAAmB,CAO1BtjD,MAAK68C,MAAQ,GAAIh3C,OAMXu9C,EAAA7iD,UAAAigD,QAAP,WAEC,GAAI+C,EACJ,IAAIvjD,KAAKqjD,QAAUrjD,KAAKsjD,UAAW,CAClCC,EAAO,GAAIJ,EACXnjD,MAAK68C,MAAM78C,KAAKqjD,UAAYE,IAC1BvjD,KAAKsjD,cACD,CACNC,EAAOvjD,KAAK68C,MAAM78C,KAAKqjD,UAExB,MAAOE,GAMDH,GAAA7iD,UAAAijD,QAAP,WAECxjD,KAAKqjD,OAAS,EAGRD,GAAA7iD,UAAAU,QAAP,WAECjB,KAAK68C,MAAMp9C,OAAS,EAEtB,OAAA2jD,KAEAzjD,GAA4BJ,QAAnB6jD,IhF2tYNK,yCAAyC,2CAA2CA,0CAA0C,SAAShlD,EAAQkB,EAAOJ,GAIzJ,GiF3wYM4jD,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEAxjD,GAAwBJ,QAAf4jD,OjFqwYHrC,0CAA0C,SAASriD,EAAQkB,EAAOJ,GAIxE,GkFnxYMkgD,GAAc,WAWnB,QAXKA,GAWOiE,EAAkCzzC,GATtCjQ,KAAA+/C,gBAAyB,GAAIp/C,OAWpCX,MAAK2jD,iBAAmBD,CACxB1jD,MAAK4kB,WAAa3U,EASZwvC,EAAAl/C,UAAAigD,QAAP,SAAe9qC,GAEd,MAAQ1V,MAAK+/C,gBAAgBrqC,EAAO4xB,MAAQtnC,KAAK+/C,gBAAgBrqC,EAAO4xB,IAAM5xB,EAAOnD,gBAAgB,GAAIvS,MAAK2jD,iBAAiB3jD,KAAM0V,EAAQ1V,KAAK4kB,cAQ5I66B,GAAAl/C,UAAAogD,YAAP,SAAmBjrC,GAElB,GAAIlD,GAAwBxS,KAAK+/C,gBAAgBrqC,EAAO4xB,GAExD,IAAI90B,EAAY,CACfkD,EAAOjD,mBAAmBD,EAE1BxS,MAAK+/C,gBAAgBrqC,EAAO4xB,IAAM,KAGnC,MAAO90B,GAET,OAAAitC,KAEA9/C,GAAwBJ,QAAfkgD,OlFywYHmE,4CAA4C,SAASnlD,EAAQkB,EAAOJ,SAEpEskD,uCAAuC,SAASplD,EAAQkB,EAAOJ,SAE/DukD,mCAAmC,SAASrlD,EAAQkB,EAAOJ,SAE3DwkD,sCAAsC,SAAStlD,EAAQkB,EAAOJ,SAE9D+gC,uCAAuC,SAAS7hC,EAAQkB,EAAOJ,GmFl0YrE,GAAOwW,GAAWtX,EAAe,sCACjC,IAAO0a,GAAe1a,EAAc,0CACpC,IAAOmD,GAAYnD,EAAe,uCnFu0YlC,ImFl0YM0+B,GAAW,WAAjB,QAAMA,MAQSA,EAAA6mB,cAAd,SAA4BC,GAE3B9mB,EAAY+mB,UAAUD,EAAa/hD,WAAWhB,WAAa+iD,EAO9C9mB,GAAA8C,SAAd,SAAuBp+B,GAEtB,MAAOs7B,GAAY+mB,UAAUriD,EAAYX,WAK3Bi8B,GAAAgnB,YAAf,WAEChnB,EAAY6mB,cAAcjuC,EAC1BonB,GAAY6mB,cAAc7qC,EAC1BgkB,GAAY6mB,cAAcpiD,GA1BZu7B,GAAA+mB,UAAmB,GAAIvjD,OAoBvBw8B,GAAAinB,KAAOjnB,EAAYgnB,aAQnC,OAAAhnB,KAEqBx9B,GAAAJ,QAAZ49B,InF8zYN17B,uCAAuC,uCAAuCoU,sCAAsC,sCAAsCoD,0CAA0C,4CAA4CorC,yCAAyC,SAAS5lD,EAAQkB,EAAOJ,GACpT,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoFh3YtB,IAAOG,GAAS/B,EAAc,oCAC9B,IAAOoE,GAAmBpE,EAAY,6CpFs3YtC,IoF/2YM6lD,GAAU,SAAA5jD,GAASX,EAAnBukD,EAAU5jD,EASf,SATK4jD,KAWJ5jD,EAAAlB,KAAAQ,KATMA,MAAAukD,UAAiC,GAAI1+C,OAerCy+C,EAAA/jD,UAAA2c,aAAP,WAEC,GAAIusB,GAAuBzpC,KAAKwkD,gBAEhCxkD,MAAKukD,UAAUtzC,KAAKw4B,EAEpB,OAAOA,GAYD6a,GAAA/jD,UAAAikD,eAAP,WAEC,KAAM,IAAI3hD,GAGJyhD,GAAA/jD,UAAAgL,WAAP,YAID,OAAA+4C,IA5CyB9jD,EA8CzBb,GAAoBJ,QAAX+kD,IpFq2YN5xC,6CAA6CtR,UAAUD,oCAAoCC,YAAYqjD,qDAAqD,SAAShmD,EAAQkB,EAAOJ,GACvL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqF35YtB,IAAOqkD,GAAmBjmD,EAAY,iDrFi6YtC,IqF55YMkmD,GAAsB,SAAAjkD,GAASX,EAA/B4kD,EAAsBjkD,EA6F3B,SA7FKikD,GA6FO9mC,EAAoBrW,EAAqBo9C,EAAuBC,EAAuBC,GAAvF,GAAAjnC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAArW,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAo9C,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElGpkD,EAAAlB,KAAAQ,KAxFOA,MAAA+kD,aAAsB,CA0F7B/kD,MAAKyd,QAAUI,CACf7d,MAAKyH,QAAUD,CACfxH,MAAKglD,WAAaJ,CAClB5kD,MAAKilD,WAAcJ,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtD7kD,MAAKklD,KAAOJ,EAzFbnkD,OAAAC,eAAW+jD,EAAApkD,UAAA,UrF46YJM,IqF56YP,WAEC,MAAOb,MAAKyd,SrF66YNjX,IqF16YP,SAAkBC,GAEjBzG,KAAKyd,QAAUhX,CAEfzG,MAAKmlD,wBrF06YCpkD,WAAY,KACZC,aAAc,MqFr6YrBL,QAAAC,eAAW+jD,EAAApkD,UAAA,UrF26YJM,IqF36YP,WAEC,MAAOb,MAAKyH,SrF46YNjB,IqFz6YP,SAAkBC,GAEjBzG,KAAKyH,QAAUhB,CACfzG,MAAKmlD,wBrF06YCpkD,WAAY,KACZC,aAAc,MqFr6YrBL,QAAAC,eAAW+jD,EAAApkD,UAAA,arF26YJM,IqF36YP,WAEC,MAAOb,MAAKglD,YrF46YNx+C,IqFz6YP,SAAqBC,GAEpBzG,KAAKglD,WAAav+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBrFy6YCrkD,WAAY,KACZC,aAAc,MqFp6YrBL,QAAAC,eAAW+jD,EAAApkD,UAAA,arF06YJM,IqF16YP,WAEC,MAAOb,MAAKilD,YrF26YNz+C,IqFx6YP,SAAqBC,GAEpBzG,KAAKilD,WAAcx+C,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9CzG,MAAKmlD,sBACLnlD,MAAKolD,mBrFw6YCrkD,WAAY,KACZC,aAAc,MqFn6YrBL,QAAAC,eAAW+jD,EAAApkD,UAAA,OrFy6YJM,IqFz6YP,WAEC,MAAOb,MAAKklD,MrF06YN1+C,IqFv6YP,SAAeC,GAEdzG,KAAKklD,KAAOz+C,CAEZzG,MAAKmlD,wBrFu6YCpkD,WAAY,KACZC,aAAc,MqF/4Yd2jD,GAAApkD,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAIyR,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAIrmD,EACJ,IAAI+/B,EACJ,IAAIumB,GAAkB,CACtB,IAAIr0C,GAAe,CACnB,IAAIs0C,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIC,GAAoB,CAExB,IAAI7oC,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjEvM,MAAK+kD,cAAgB/kD,KAAKilD,WAAa,IAAIjlD,KAAKglD,WAAa,EAC7Dc,IAAc9lD,KAAKilD,WAAa,GAAGjlD,KAAKglD,WAAW,CAGnD,IAAIhlD,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CACtDnzB,EAAUkzB,EAAiBlzB,OAC3ByR,GAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACNrzB,EAAU,GAAIhtB,OAAcigD,EAC5BxhB,GAAY,GAAIz+B,OAAc7F,KAAK+kD,aAAa,EAChDO,GAAU,GAAIz/C,OAAc7F,KAAK+kD,aAAa,EAC9CQ,GAAW,GAAI1/C,OAAc7F,KAAK+kD,aAAa,EAE/C/kD,MAAKolD,kBAGN,IAAKnmB,EAAI,EAAGA,GAAKj/B,KAAKilD,aAAchmB,EAAG,CAEtC,GAAIknB,GAAkB92C,KAAK+2C,GAAGnnB,EAAEj/B,KAAKilD,UACrC,IAAI59C,IAAYrH,KAAKyd,QAAQpO,KAAKud,IAAIu5B,EACtC,IAAIE,GAAoBrmD,KAAKyd,QAAQpO,KAAKsd,IAAIw5B,EAE9CV;EAAat0C,CAEb,KAAKjS,EAAI,EAAGA,GAAKc,KAAKglD,aAAc9lD,EAAG,CACtC,GAAIonD,GAAkB,EAAEj3C,KAAK+2C,GAAGlnD,EAAEc,KAAKglD,UACvC,IAAI99C,GAAWm/C,EAAWh3C,KAAKud,IAAI05B,EACnC,IAAIC,GAAgBtnB,EAAIj/B,KAAKilD,WAAW,EAAGjlD,KAAKyH,QAAQ,GAAKzH,KAAKyH,QAAQ,CAC1E,IAAIL,GAAWi/C,EAAWh3C,KAAKsd,IAAI25B,EACnC,IAAIE,GAAiB,EAAEn3C,KAAKC,KAAKpI,EAAEA,EAAIE,EAAEA,EAAIC,EAAEA,EAC/C,IAAIo/C,GAAgBp3C,KAAKC,KAAKlI,EAAEA,EAAIF,EAAEA,EAEtC,IAAIlH,KAAKklD,KAAM,CACdU,EAAK,CACLC,GAAKY,EAAS,KAAMv/C,EAAEu/C,EAAS,CAC/Bf,IAASr+C,CACTs+C,GAAQv+C,MAEF,CACNw+C,EAAKa,EAAS,KAAMv/C,EAAEu/C,EAAS,CAC/BZ,GAAK,CACLH,GAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,GAAKc,KAAKglD,WAAY,CAEzB1gB,EAAUnzB,GAASmzB,EAAUmhB,EAC7BnhB,GAAUnzB,EAAQ,GAAKmzB,EAAUmhB,EAAa,EAC9CnhB,GAAUnzB,EAAQ,GAAKmzB,EAAUmhB,EAAa,EAC9CH,GAAQn0C,IAAUm0C,EAAQG,GAAev+C,EAAEs/C,GAAU,EACrDlB,GAAQn0C,EAAQ,IAAMm0C,EAAQG,EAAa,GAAOC,EAAMc,GAAU,EAClElB,GAAQn0C,EAAQ,IAAMm0C,EAAQG,EAAa,GAAME,EAAMa,GAAU,EACjEjB,GAASp0C,IAAUo0C,EAASE,IAAegB,EAAS,MAAOr/C,EAAEq/C,EAAS,IAAI,EAC1ElB,GAASp0C,EAAQ,IAAMo0C,EAASE,EAAa,GAAKG,GAAI,EACtDL,GAASp0C,EAAQ,IAAMo0C,EAASE,EAAa,GAAKI,GAAI,OAEhD,CAENvhB,EAAUnzB,GAASjK,CACnBo9B,GAAUnzB,EAAQ,GAAMnR,KAAS,KAAG0lD,EAAQa,EAASb,CACrDphB,GAAUnzB,EAAQ,GAAMnR,KAAS,KAAG2lD,EAAQA,EAAQY,CAEpDjB,GAAQn0C,GAASjK,EAAEs/C,CACnBlB,GAAQn0C,EAAQ,GAAKu0C,EAAMc,CAC3BlB,GAAQn0C,EAAQ,GAAKw0C,EAAMa,CAE3BjB,GAASp0C,GAASs1C,EAAS,MAAOr/C,EAAEq/C,EAAS,CAC7ClB,GAASp0C,EAAQ,GAAKy0C,CACtBL,GAASp0C,EAAQ,GAAK00C,EAGvB,GAAI3mD,EAAI,GAAK+/B,EAAI,EAAG,CACnB,GAAIhgC,IAAYe,KAAKglD,WAAa,GAAG/lB,EAAI//B,CACzC,IAAIgB,IAAYF,KAAKglD,WAAa,GAAG/lB,EAAI//B,EAAI,CAC7C,IAAIqb,IAAYva,KAAKglD,WAAa,IAAI/lB,EAAI,GAAK//B,EAAI,CACnD,IAAIe,IAAYD,KAAKglD,WAAa,IAAI/lB,EAAI,GAAK//B,CAE/C,IAAI+/B,GAAKj/B,KAAKilD,WAAY,CACzB3gB,EAAUnzB,GAASmzB,EAAUmhB,EAC7BnhB,GAAUnzB,EAAQ,GAAKmzB,EAAUmhB,EAAa,EAC9CnhB,GAAUnzB,EAAQ,GAAKmzB,EAAUmhB,EAAa,EAE9C5yB,GAAQ2yB,KAAcvmD,CACtB4zB,GAAQ2yB,KAAcjrC,CACtBsY,GAAQ2yB,KAAcvlD,MAEhB,IAAIg/B,GAAK,EAAG,CAClBpM,EAAQ2yB,KAAcvmD,CACtB4zB,GAAQ2yB,KAActlD,CACtB2yB,GAAQ2yB,KAAcjrC,MAEhB,CACNsY,EAAQ2yB,KAAcvmD,CACtB4zB,GAAQ2yB,KAActlD,CACtB2yB,GAAQ2yB,KAAcjrC,CACtBsY,GAAQ2yB,KAAcvmD,CACtB4zB,GAAQ2yB,KAAcjrC,CACtBsY,GAAQ2yB,KAAcvlD,GAIxBkR,GAAS,GAKX40C,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,GAQxC0nC,GAAApkD,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,GAAI/d,GAAU+/B,CACd,IAAIuF,EAGJ,IAAIvnB,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjE,IAAIw5C,EAAiBvhB,KAAOxkC,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CAC9ExhB,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAc7F,KAAK+kD,aAAa,GrF83YlC,GqF13YL5zC,GAAe,CAGnB,KAAK8tB,EAAI,EAAGA,GAAKj/B,KAAKilD,aAAchmB,EAAG,CACtC,IAAK//B,EAAI,EAAGA,GAAKc,KAAKglD,aAAc9lD,EAAG,CAEtCslC,EAAIrzB,KAAajS,EAAEc,KAAKglD,WAAae,EAAiBc,MACtDriB,GAAIrzB,KAAa8tB,EAAEj/B,KAAKilD,WAAac,EAAiBe,QAKxDf,EAAiBvf,UAAUhC,OAErB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAA0nC,IA9RqCD,EAgSL/kD,GAAAJ,QAAvBolD,IrFw3YNoC,iDAAiD,mDAAmDC,kDAAkD,SAASvoD,EAAQkB,EAAOJ,GACjL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFrqZtB,IAAO4mD,GAAuBxoD,EAAW,qDtF2qZzC,IsFtqZMyoD,GAAmB,SAAAxmD,GAASX,EAA5BmnD,EAAmBxmD,EA0BxB,SA1BKwmD,GA0BOrpC,EAAoBrW,EAAqBo9C,EAAuBC,EAAsBsC,EAAuBrC,GAA7G,GAAAjnC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAArW,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAo9C,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAsC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAArC,QAAA,GAAkB,CAAlBA,EAAA,KAExHpkD,EAAAlB,KAAAQ,KAAM,EAAG6d,EAAQrW,EAAQo9C,EAAWC,EAAW,MAAOsC,EAAQ,KAAMrC,GAtBrEnkD,OAAAC,eAAWsmD,EAAA3mD,UAAA,UtFurZJM,IsFvrZP,WAEC,MAAOb,MAAKonD,gBtFwrZN5gD,IsFrrZP,SAAkBC,GAEjBzG,KAAKonD,eAAiB3gD,CAEtBzG,MAAKmlD,wBtFqrZCpkD,WAAY,KACZC,aAAc,MsFvqZtB,OAAAkmD,IA9BkCD,EAgCLtnD,GAAAJ,QAApB2nD,ItF2qZNG,qDAAqD,uDAAuDhqC,kDAAkD,SAAS5e,EAAQkB,EAAOJ,GACzL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFltZtB,IAAOqkD,GAAmBjmD,EAAY,iDvFwtZtC,IuFntZM+a,GAAmB,SAAA9Y,GAASX,EAA5ByZ,EAAmB9Y,EAqBxB,SArBK8Y,GAqBO3P,EAAoBrC,EAAqBV,EAAoB89C,EAAsBC,EAAsByC,EAAsBC,GAA/H,GAAA19C,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAArC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAV,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAA89C,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAyC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1I7mD,EAAAlB,KAAAQ,KAEAA,MAAKoJ,OAASS,CACd7J,MAAKyH,QAAUD,CACfxH,MAAKgH,OAASF,CACd9G,MAAKglD,WAAaJ,CAClB5kD,MAAKilD,WAAaJ,CAClB7kD,MAAKwnD,WAAaF,CAClBtnD,MAAKynD,OAASF,EAMf5mD,OAAAC,eAAW4Y,EAAAjZ,UAAA,SvF+sZJM,IuF/sZP,WAEC,MAAOb,MAAKoJ,QvFgtZN5C,IuF7sZP,SAAiBC,GAEhBzG,KAAKoJ,OAAS3C,CAEdzG,MAAKmlD,wBvF6sZCpkD,WAAY,KACZC,aAAc,MuFxsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,UvF8sZJM,IuF9sZP,WAEC,MAAOb,MAAKyH,SvF+sZNjB,IuF5sZP,SAAkBC,GAEjBzG,KAAKyH,QAAUhB,CAEfzG,MAAKmlD,wBvF4sZCpkD,WAAY,KACZC,aAAc,MuFvsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,SvF6sZJM,IuF7sZP,WAEC,MAAOb,MAAKgH,QvF8sZNR,IuF3sZP,SAAiBC,GAEhBzG,KAAKgH,OAASP,CAEdzG,MAAKmlD,wBvF2sZCpkD,WAAY,KACZC,aAAc,MuFjsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,SvF4sZJM,IuF5sZP,WAEC,MAAOb,MAAKynD,QvF6sZNjhD,IuF1sZP,SAAiBC,GAEhBzG,KAAKynD,OAAShhD,CAEdzG,MAAKmlD,wBvF0sZCpkD,WAAY,KACZC,aAAc,MuFrsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,avF2sZJM,IuF3sZP,WAEC,MAAOb,MAAKglD,YvF4sZNx+C,IuFzsZP,SAAqBC,GAEpBzG,KAAKglD,WAAav+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBvFysZCrkD,WAAY,KACZC,aAAc,MuFpsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,avF0sZJM,IuF1sZP,WAEC,MAAOb,MAAKilD,YvF2sZNz+C,IuFxsZP,SAAqBC,GAEpBzG,KAAKilD,WAAax+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBvFwsZCrkD,WAAY,KACZC,aAAc,MuFnsZrBL,QAAAC,eAAW4Y,EAAAjZ,UAAA,avFysZJM,IuFzsZP,WAEC,MAAOb,MAAKwnD,YvF0sZNhhD,IuFvsZP,SAAqBC,GAEpBzG,KAAKwnD,WAAa/gD,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBvFusZCrkD,WAAY,KACZC,aAAc,MuFlsZdwY,GAAAjZ,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAIyR,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAImC,GAAWC,EAAWC,EAAWC,CACrC,IAAI3oD,GAAU+/B,EAAU6oB,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAW1qC,CAE1B,IAAI2qC,EACJ,IAAIxC,EACJ,IAAIE,EAGJiC,GAAKjoD,KAAKoJ,OAAO,CACjB8+C,GAAKloD,KAAKyH,QAAQ,CAClB0gD,GAAKnoD,KAAKgH,OAAO,CAEjB,IAAIiW,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAEjEy5C,KAAgBhmD,KAAKglD,WAAa,IAAIhlD,KAAKilD,WAAa,IAAMjlD,KAAKglD,WAAa,IAAIhlD,KAAKwnD,WAAa,IAAMxnD,KAAKilD,WAAa,IAAIjlD,KAAKwnD,WAAa,IAAI,CAExJ1B,IAAe9lD,KAAKglD,WAAWhlD,KAAKilD,WAAajlD,KAAKglD,WAAWhlD,KAAKwnD,WAAaxnD,KAAKilD,WAAWjlD,KAAKwnD,YAAY,EAEpH,IAAIxB,GAAeD,EAAiBC,aAAeD,EAAiBlzB,SAAW,KAAM,CACpFA,EAAUkzB,EAAiBlzB,OAC3ByR,GAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACNrzB,EAAU,GAAIhtB,OAAcigD,EAC5BxhB,GAAY,GAAIz+B,OAAcmgD,EAAY,EAC1CV,GAAU,GAAIz/C,OAAcmgD,EAAY,EACxCT,GAAW,GAAI1/C,OAAcmgD,EAAY,EAEzChmD,MAAKolD,kBAGN2C,EAAO,CACPC,GAAO,CAGPI,GAAKpoD,KAAKoJ,OAAOpJ,KAAKglD,UACtBqD,GAAKroD,KAAKyH,QAAQzH,KAAKilD,UACvBtnC,GAAK3d,KAAKgH,OAAOhH,KAAKwnD,UAEtB,KAAKtoD,EAAI,EAAGA,GAAKc,KAAKglD,WAAY9lD,IAAK,CACtCopD,GAAaL,EAAK/oD,EAAEkpD,CAEpB,KAAKnpB,EAAI,EAAGA,GAAKj/B,KAAKilD,WAAYhmB,IAAK,CAEtCqF,EAAUyjB,GAAQO,CAClBhkB,GAAUyjB,EAAO,IAAMG,EAAKjpB,EAAEopB,CAC9B/jB,GAAUyjB,EAAO,IAAMI,CACvB7C,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAK,CACpBzC,GAAQyC,EAAO,IAAM,CACrBxC,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAGRzjB,GAAUyjB,GAAQO,CAClBhkB,GAAUyjB,EAAO,IAAMG,EAAKjpB,EAAEopB,CAC9B/jB,GAAUyjB,EAAO,GAAKI,CACtB7C,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAK,CACpBzC,GAAQyC,EAAO,GAAK,CACpBxC,GAASwC,IAAS,CAClBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7oD,GAAK+/B,EAAG,CACXyoB,EAAK,IAAIxoD,EAAI,IAAIc,KAAKilD,WAAa,IAAMhmB,EAAI,GAC7C0oB,GAAK,GAAGzoD,GAAGc,KAAKilD,WAAa,IAAMhmB,EAAI,GACvC2oB,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV90B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUJ,CAClB/0B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUL,CAClB90B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUH,EAAK,CACvBh1B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUN,EAAK,IAK1BI,GAAO,GAAG9nD,KAAKglD,WAAa,IAAIhlD,KAAKilD,WAAa,EAElD,KAAK/lD,EAAI,EAAGA,GAAKc,KAAKglD,WAAY9lD,IAAK,CACtCopD,GAAaL,EAAK/oD,EAAEkpD,CAEpB,KAAKnpB,EAAI,EAAGA,GAAKj/B,KAAKwnD,WAAYvoB,IAAK,CAEtCqF,EAAUyjB,GAAQO,CAClBhkB,GAAUyjB,EAAO,GAAKG,CACtB5jB,GAAUyjB,EAAO,IAAMI,EAAKlpB,EAAEthB,CAC9B2nC,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAK,CACpBzC,GAAQyC,EAAO,GAAK,CACpBxC,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAGRzjB,GAAUyjB,GAAQO,CAClBhkB,GAAUyjB,EAAO,IAAMG,CACvB5jB,GAAUyjB,EAAO,IAAMI,EAAKlpB,EAAEthB,CAC9B2nC,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,IAAM,CACrBzC,GAAQyC,EAAO,GAAK,CACpBxC,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7oD,GAAK+/B,EAAG,CACXyoB,EAAKI,EAAM,IAAI5oD,EAAI,IAAIc,KAAKwnD,WAAa,IAAMvoB,EAAI,GACnD0oB,GAAKG,EAAM,GAAG5oD,GAAGc,KAAKwnD,WAAa,IAAMvoB,EAAI,GAC7C2oB,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV90B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUJ,CAClB/0B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUL,CAClB90B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUH,EAAK,CACvBh1B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUN,EAAK,IAK1BI,GAAO,GAAG9nD,KAAKglD,WAAa,IAAIhlD,KAAKwnD,WAAa,EAElD,KAAKtoD,EAAI,EAAGA,GAAKc,KAAKwnD,WAAYtoD,IAAK,CACtCopD,EAAYH,EAAKjpD,EAAEye,CAEnB,KAAKshB,EAAI,EAAGA,GAAKj/B,KAAKilD,WAAYhmB,IAAK,CAEtCqF,EAAUyjB,IAASE,CACnB3jB,GAAUyjB,EAAK,IAAMG,EAAKjpB,EAAEopB,CAC5B/jB,GAAUyjB,EAAK,GAAKO,CACpBhD,GAAQyC,IAAS,CACjBzC,GAAQyC,EAAK,GAAK,CAClBzC,GAAQyC,EAAK,GAAK,CAClBxC,GAASwC,GAAQ,CACjBxC,GAASwC,EAAK,GAAK,CACnBxC,GAASwC,EAAK,IAAM,CACpBA,IAAQ,CAGRzjB,GAAUyjB,GAAQE,CAClB3jB,GAAUyjB,EAAK,IAAMG,EAAKjpB,EAAEopB,CAC5B/jB,GAAUyjB,EAAK,GAAKO,CACpBhD,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAK,GAAK,CAClBzC,GAAQyC,EAAK,GAAK,CAClBxC,GAASwC,GAAQ,CACjBxC,GAASwC,EAAK,GAAK,CACnBxC,GAASwC,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAI7oD,GAAK+/B,EAAG,CACXyoB,EAAKI,EAAM,IAAI5oD,EAAI,IAAIc,KAAKilD,WAAa,IAAMhmB,EAAI,GACnD0oB,GAAKG,EAAM,GAAG5oD,GAAGc,KAAKilD,WAAa,IAAMhmB,EAAI,GAC7C2oB,GAAKF,EAAK,CACVG,GAAKF,EAAK,CAEV90B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUJ,CAClB/0B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUN,CAClB70B,GAAQm1B,KAAUH,CAClBh1B,GAAQm1B,KAAUL,CAClB90B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUH,EAAK,CACvBh1B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUL,EAAK,CACvB90B,GAAQm1B,KAAUJ,EAAK,CACvB/0B,GAAQm1B,KAAUN,EAAK,IAK1B3B,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,CAC7C,GAAIsrC,GAAiDh8C,CAErD,IAAIi8C,GAAqBxoD,KAAKilD,WAAW,EAAKjlD,KAAKglD,WAAW,EAAIhlD,KAAKwnD,WAAW,CAClF,IAAIiB,EACJ,IAAIC,EACJ,IAAIt1B,EAEJ,IAAIm1B,EAAa11B,SAAW,MAAQ21B,GAAeD,EAAaC,YAAa,CAC5EC,EAAiBF,EAAaE,cAC9BC,GAAeH,EAAaG,YAC5Bt1B,GAAYm1B,EAAan1B,cACnB,CACNq1B,EAAiB,GAAI5iD,OAAc2iD,EAAY,EAC/CE,GAAe,GAAI7iD,OAAc2iD,EAAY,EAC7Cp1B,GAAY,GAAIvtB,OAAc2iD,GAG/BT,EAAO,CAEPC,GAAO,CAGP,KAAK9oD,EAAI,EAAGA,EAAIc,KAAKilD,aAAc/lD,EAAG,CACrCupD,EAAeV,IAASE,CACxBQ,GAAeV,EAAO,GAAK7oD,EAAEc,KAAKyH,QAAQzH,KAAKilD,WAAaiD,CAC5DO,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAK7oD,EAAEc,KAAKyH,QAAQzH,KAAKilD,WAAaiD,CAC1DQ,GAAaX,EAAO,IAAMI,CAE1B/0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,IAASE,CACxBQ,GAAeV,EAAO,GAAKG,EAAKhpD,EAAEc,KAAKyH,QAAQzH,KAAKilD,UACpDwD,GAAeV,EAAO,GAAKI,CAE3BO,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAKG,EAAKhpD,EAAEc,KAAKyH,QAAQzH,KAAKilD,UAClDyD,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAGT,IAAK7oD,EAAI,EAAGA,EAAIc,KAAKglD,aAAc9lD,EAAG,CACrCupD,EAAeV,GAAQ7oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,WAAaiD,CACvDQ,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,GAAQ7oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,WAAaiD,CACrDS,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,IAAMI,CAE1B/0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,GAAQE,EAAK/oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,UAC/CyD,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,GAAKI,CAE3BO,GAAaX,GAAQE,EAAK/oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,UAC7C0D,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAIT,IAAK7oD,EAAI,EAAGA,EAAIc,KAAKilD,aAAc/lD,EAAG,CACrCupD,EAAeV,IAASE,CACxBQ,GAAeV,EAAO,GAAK7oD,EAAEc,KAAKyH,QAAQzH,KAAKilD,WAAaiD,CAC5DO,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,IAASE,CACtBS,GAAaX,EAAO,GAAK7oD,EAAEc,KAAKyH,QAAQzH,KAAKilD,WAAaiD,CAC1DQ,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,GAAQE,CACvBQ,GAAeV,EAAO,GAAKG,EAAKhpD,EAAEc,KAAKyH,QAAQzH,KAAKilD,UACpDwD,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAKG,EAAKhpD,EAAEc,KAAKyH,QAAQzH,KAAKilD,UAClDyD,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAGT,IAAK7oD,EAAI,EAAGA,EAAIc,KAAKwnD,aAActoD,EAAG,CACrCupD,EAAeV,GAAQE,CACvBQ,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,GAAK7oD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,WAAaW,CAE3DO,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,GAAK7oD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,WAAaW,CAEzD/0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,IAASE,CACxBQ,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,GAAKI,EAAKjpD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,UAEnDkB,GAAaX,IAASE,CACtBS,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,GAAKI,EAAKjpD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,UAEjDp0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAKT,IAAK7oD,EAAI,EAAGA,EAAIc,KAAKwnD,aAActoD,EAAG,CACrCupD,EAAeV,IAASE,CACxBQ,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,GAAKI,EAAKjpD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,UAEnDkB,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,IAAMG,CAC1BQ,GAAaX,EAAO,GAAKI,EAAKjpD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,UAEjDp0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,IAASE,CACxBQ,GAAeV,EAAO,GAAKG,CAC3BO,GAAeV,EAAO,GAAK7oD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,WAAaW,CAE3DO,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,GAAK7oD,EAAEc,KAAKgH,OAAOhH,KAAKwnD,WAAaW,CAEzD/0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAGT,IAAK7oD,EAAI,EAAGA,EAAIc,KAAKglD,aAAc9lD,EAAG,CACrCupD,EAAeV,GAAQE,EAAK/oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,UAC/CyD,GAAeV,EAAO,IAAMG,CAC5BO,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,GAAQE,EAAK/oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,UAC7C0D,GAAaX,EAAO,IAAMG,CAC1BQ,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,CAERU,GAAeV,GAAQ7oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,WAAaiD,CACvDQ,GAAeV,EAAO,GAAKG,CAC3BO,GAAeV,EAAO,IAAMI,CAE5BO,GAAaX,GAAQ7oD,EAAEc,KAAKoJ,OAAOpJ,KAAKglD,WAAaiD,CACrDS,GAAaX,EAAO,GAAKG,CACzBQ,GAAaX,EAAO,GAAKI,CAEzB/0B,GAAU40B,KAAU,CAEpBD,IAAQ,EAITQ,EAAajiB,gBAAgBmiB,EAAgBC,EAC7CH,GAAaI,gBAAgBv1B,IAOxB5Z,GAAAjZ,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,GAAI/d,GAAU+/B,EAAU9tB,CACxB,IAAIqzB,EAEJ,IAAIokB,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAIrD,EAEJ,IAAI/oC,GAAgB,sBAAuB,CAE1C+oC,IAAgBhmD,KAAKglD,WAAa,IAAIhlD,KAAKilD,WAAa,IAAMjlD,KAAKglD,WAAa,IAAIhlD,KAAKwnD,WAAa,IAAMxnD,KAAKilD,WAAa,IAAIjlD,KAAKwnD,WAAa,IAAI,CAExJ,IAAIzB,GAA6Dx5C,CAEjE,IAAIy5C,GAAeD,EAAiBC,aAAeD,EAAiBvhB,KAAO,KAAM,CAChFA,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAcmgD,EAAY,GAGrC,GAAIhmD,KAAKynD,OAAQ,CAChBmB,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7B53C,EAAQ,CAGR63C,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW5oD,KAAKglD,UACrBqE,GAAKR,EAAW7oD,KAAKilD,UACrB,KAAK/lD,EAAI,EAAGA,GAAKc,KAAKglD,WAAY9lD,IAAK,CACtC,IAAK+/B,EAAI,EAAGA,GAAKj/B,KAAKilD,WAAYhmB,IAAK,CACtCuF,EAAIrzB,MAAa63C,EAAO9pD,EAAEkqD,GAAKrD,EAAiBc,MAChDriB,GAAIrzB,MAAa83C,GAAQJ,EAAa5pB,EAAEoqB,IAAKtD,EAAiBe,MAE9DtiB,GAAIrzB,MAAa+3C,GAAQN,EAAa1pD,EAAEkqD,IAAKrD,EAAiBc,MAC9DriB,GAAIrzB,MAAag4C,GAAQN,EAAa5pB,EAAEoqB,IAAKtD,EAAiBe,QAKhEkC,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW5oD,KAAKglD,UACrBqE,GAAKR,EAAW7oD,KAAKwnD,UACrB,KAAKtoD,EAAI,EAAGA,GAAKc,KAAKglD,WAAY9lD,IAAK,CACtC,IAAK+/B,EAAI,EAAGA,GAAKj/B,KAAKwnD,WAAYvoB,IAAK,CACtCuF,EAAIrzB,MAAa63C,EAAO9pD,EAAEkqD,GAAIrD,EAAiBc,MAC/CriB,GAAIrzB,MAAa83C,GAAQJ,EAAa5pB,EAAEoqB,IAAKtD,EAAiBe,MAE9DtiB,GAAIrzB,MAAa+3C,EAAOhqD,EAAEkqD,GAAIrD,EAAiBc,MAC/CriB,GAAIrzB,MAAag4C,EAAOlqB,EAAEoqB,GAAItD,EAAiBe,QAKjDkC,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAW5oD,KAAKwnD,UACrB6B,GAAKR,EAAW7oD,KAAKilD,UACrB,KAAK/lD,EAAI,EAAGA,GAAKc,KAAKwnD,WAAYtoD,IAAK,CACtC,IAAK+/B,EAAI,EAAGA,GAAKj/B,KAAKilD,WAAYhmB,IAAK,CACtCuF,EAAIrzB,MAAa63C,EAAO9pD,EAAEkqD,GAAIrD,EAAiBc,MAC/CriB,GAAIrzB,MAAa83C,GAAQJ,EAAa5pB,EAAEoqB,IAAKtD,EAAiBe,MAE9DtiB,GAAIrzB,MAAa+3C,GAAQN,EAAa1pD,EAAEkqD,IAAKrD,EAAiBc,MAC9DriB,GAAIrzB,MAAag4C,GAAQN,EAAa5pB,EAAEoqB,IAAKtD,EAAiBe,QAIhEf,EAAiBvf,UAAUhC,OAErB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAAzD,IAjpBkCkrC,EAmpBL/kD,GAAAJ,QAApBia,IvFimZNutC,iDAAiD,mDAAmDM,sDAAsD,SAAS5oD,EAAQkB,EAAOJ,GACrL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwF9vatB,IAAOqkD,GAAmBjmD,EAAY,iDxFowatC,IwF/vaMwoD,GAAuB,SAAAvmD,GAASX,EAAhCknD,EAAuBvmD,EAyJ5B,SAzJKumD,GAyJOqC,EAAuBC,EAA0B/hD,EAAqBo9C,EAAuBC,EAAsB2E,EAA0BC,EAA6BC,EAA8B5E,GAAxM,GAAAwE,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA/hD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAo9C,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA2E,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA5E,QAAA,GAAkB,CAAlBA,EAAA,KAEnNpkD,EAAAlB,KAAAQ,KA9IOA,MAAA+kD,aAAsB,CAgJ7B/kD,MAAK2pD,WAAaL,CAClBtpD,MAAKonD,eAAiBmC,CACtBvpD,MAAKyH,QAAUD,CACfxH,MAAK4pD,YAAchF,CACnB5kD,MAAK6pD,YAAchF,CACnB7kD,MAAK8pD,WAAaN,CAClBxpD,MAAK+pD,cAAgBN,CACrBzpD,MAAKgqD,eAAiBN,CACtB1pD,MAAKklD,KAAOJ,EAnJbnkD,OAAAC,eAAWqmD,EAAA1mD,UAAA,axFoxaJM,IwFpxaP,WAEC,MAAOb,MAAK2pD,YxFqxaNnjD,IwFlxaP,SAAqBC,GAEpBzG,KAAK2pD,WAAaljD,CAClBzG,MAAKmlD,wBxFmxaCpkD,WAAY,KACZC,aAAc,MwF9warBL,QAAAC,eAAWqmD,EAAA1mD,UAAA,gBxFoxaJM,IwFpxaP,WAEC,MAAOb,MAAKonD,gBxFqxaN5gD,IwFlxaP,SAAwBC,GAEvBzG,KAAKonD,eAAiB3gD,CACtBzG,MAAKmlD,wBxFmxaCpkD,WAAY,KACZC,aAAc,MwF9warBL,QAAAC,eAAWqmD,EAAA1mD,UAAA,UxFoxaJM,IwFpxaP,WAEC,MAAOb,MAAKyH,SxFqxaNjB,IwFlxaP,SAAkBC,GAEjBzG,KAAKyH,QAAUhB,CACfzG,MAAKmlD,wBxFmxaCpkD,WAAY,KACZC,aAAc,MwF9warBL,QAAAC,eAAWqmD,EAAA1mD,UAAA,axFoxaJM,IwFpxaP,WAEC,MAAOb,MAAK4pD,axFqxaNpjD,IwFlxaP,SAAqBC,GAEpBzG,KAAKiqD,aAAaxjD,IxFmxaZ1F,WAAY,KACZC,aAAc,MwFjxadimD,GAAA1mD,UAAA0pD,aAAP,SAAoBxjD,GAEnBzG,KAAK4pD,YAAcnjD,CACnBzG,MAAKmlD,sBACLnlD,MAAKolD,kBAMNzkD,QAAAC,eAAWqmD,EAAA1mD,UAAA,axFkxaJM,IwFlxaP,WAEC,MAAOb,MAAK6pD,axFmxaNrjD,IwFhxaP,SAAqBC,GAGpBzG,KAAKkqD,aAAazjD,IxFgxaZ1F,WAAY,KACZC,aAAc,MwF7wadimD,GAAA1mD,UAAA2pD,aAAP,SAAoBzjD,GAEnBzG,KAAK6pD,YAAcpjD,CACnBzG,MAAKmlD,sBACLnlD,MAAKolD,kBAONzkD,QAAAC,eAAWqmD,EAAA1mD,UAAA,axF6waJM,IwF7waP,WAEC,MAAOb,MAAK8pD,YxF8waNtjD,IwF3waP,SAAqBC,GAEpBzG,KAAK8pD,WAAarjD,CAClBzG,MAAKmlD,wBxF4waCpkD,WAAY,KACZC,aAAc,MwFvwarBL,QAAAC,eAAWqmD,EAAA1mD,UAAA,gBxF6waJM,IwF7waP,WAEC,MAAOb,MAAK+pD,exF8waNvjD,IwF3waP,SAAwBC,GAEvBzG,KAAK+pD,cAAgBtjD,CACrBzG,MAAKmlD,wBxF4waCpkD,WAAY,KACZC,aAAc,MwFvwarBL,QAAAC,eAAWqmD,EAAA1mD,UAAA,OxF6waJM,IwF7waP,WAEC,MAAOb,MAAKklD,MxF8waN1+C,IwF3waP,SAAeC,GAEdzG,KAAKklD,KAAOz+C,CACZzG,MAAKmlD,wBxF4waCpkD,WAAY,KACZC,aAAc,MwF5uadimD,GAAA1mD,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAIyR,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAIrmD,EACJ,IAAI+/B,EACJ,IAAI/3B,EACJ,IAAIE,EACJ,IAAIC,EACJ,IAAI0gD,EACJ,IAAIC,EAEJ,IAAInqC,EACJ,IAAIssC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIxE,GAAoB,CAExB,IAAIJ,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAI8E,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAI5E,EACJ,IAAIC,EAGJ7lD,MAAK+kD,aAAe,CxF4uad,IwFzuaF0F,GAA8B,EAAEp7C,KAAK+2C,GAAGpmD,KAAK4pD,WAEjD,IAAI3sC,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjE,IAAIvM,KAAKgqD,eAAgB,CACxBhqD,KAAK+kD,eAAiB/kD,KAAK6pD,YAAc,IAAI7pD,KAAK4pD,YAAc,EAChE9D,IAAc9lD,KAAK6pD,YAAY7pD,KAAK4pD,YAAY,EAEjD,GAAI5pD,KAAK8pD,WAAY,CACpB9pD,KAAK+kD,cAAgB,GAAG/kD,KAAK4pD,YAAc,EAC3C9D,IAAc9lD,KAAK4pD,YAAY,EAEhC,GAAI5pD,KAAK+pD,cAAe,CACvB/pD,KAAK+kD,cAAgB,GAAG/kD,KAAK4pD,YAAc,EAC3C9D,IAAc9lD,KAAK4pD,YAAY,EAIhC,GAAI5pD,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CACtDnzB,EAAUkzB,EAAiBlzB,OAC3ByR,GAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACNrzB,EAAU,GAAIhtB,OAAcigD,EAC5BxhB,GAAY,GAAIz+B,OAAc7F,KAAK+kD,aAAa,EAChDO,GAAU,GAAIz/C,OAAc7F,KAAK+kD,aAAa,EAC9CQ,GAAW,GAAI1/C,OAAc7F,KAAK+kD,aAAa,EAE/C/kD,MAAKolD,kBAGN2C,EAAO,CACPC,GAAO,CAGP,IAAIhoD,KAAK8pD,YAAc9pD,KAAK2pD,WAAa,EAAG,CAE3CtiD,GAAK,GAAIrH,KAAKyH,OAGd,IAAIzH,KAAKklD,KAAM,CACdU,EAAK,CACLC,GAAK,CACLH,IAASr+C,CACTs+C,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQt+C,EAGTi9B,EAAUyjB,GAAQ,CAClBzjB,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,CACtBL,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAKnC,CACpBN,GAAQyC,EAAO,GAAKlC,CACpBN,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAERwC,IAAmB,CAEnB,KAAKrrD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAGvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAIlH,KAAK2pD,WAAWt6C,KAAKud,IAAIu9B,EAC7B/iD,GAAIpH,KAAK2pD,WAAWt6C,KAAKsd,IAAIw9B,EAE7B,IAAInqD,KAAKklD,KAAM,CACdQ,GAASr+C,CACTs+C,GAAQv+C,MACF,CACNs+C,EAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,GAAKc,KAAK4pD,YAAa,CAC1BtlB,EAAUyjB,GAAQzjB,EAAUmhB,EAAa,EACzCnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,OAEvC,CACNnhB,EAAUyjB,GAAQ7gD,CAClBo9B,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,EAGvBL,EAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAKnC,CACpBN,GAAQyC,EAAO,GAAKlC,CACpBN,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7oD,EAAI,EAAG,CAEV2zB,EAAQm1B,KAAUuC,EAAkB,CACpC13B,GAAQm1B,KAAUwC,CAClB33B,GAAQm1B,KAAUuC,EAGnBA,GAAmB,GAKrB,GAAIvqD,KAAK+pD,eAAiB/pD,KAAKonD,eAAiB,EAAG,CAElD//C,EAAI,GAAIrH,KAAKyH,OAEbg+C,GAAa8E,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAIvqD,KAAKklD,KAAM,CACdU,GAAM,CACNC,GAAK,CACLH,IAASr+C,CACTs+C,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQt+C,EAGT,GAAInI,EAAI,EAAG,CACVolC,EAAUyjB,GAAQ,CAClBzjB,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,CACtBL,GAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAKnC,CACpBN,GAAQyC,EAAO,GAAKlC,CACpBN,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,EAGTwC,GAAmB,CAEnB,KAAKrrD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAGvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAIlH,KAAKonD,eAAe/3C,KAAKud,IAAIu9B,EACjC/iD,GAAIpH,KAAKonD,eAAe/3C,KAAKsd,IAAIw9B,EAEjC,IAAInqD,KAAKklD,KAAM,CACdQ,GAASr+C,CACTs+C,GAAQv+C,MACF,CACNs+C,EAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,GAAKc,KAAK4pD,YAAa,CAC1BtlB,EAAUyjB,GAAQzjB,EAAUmhB,EAAa,EACzCnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,OACvC,CACNnhB,EAAUyjB,GAAQ7gD,CAClBo9B,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,EAGvBL,EAAQyC,GAAQ,CAChBzC,GAAQyC,EAAO,GAAKnC,CACpBN,GAAQyC,EAAO,GAAKlC,CACpBN,GAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7oD,EAAI,EAAG,CAEV2zB,EAAQm1B,KAAUuC,EAAkB,CACpC13B,GAAQm1B,KAAUuC,CAClB13B,GAAQm1B,KAAUwC,EAGnBD,GAAmB,GAQrBH,EAAMpqD,KAAKonD,eAAiBpnD,KAAK2pD,UACjCU,GAAcD,EAAGpqD,KAAKyH,OACtB6iD,GAAeD,GAAe,EAAI,EAAIrqD,KAAKyH,QAAQ2iD,CAGnD,IAAIpqD,KAAKgqD,eAAgB,CACxB,GAAI/qD,EACJ,IAAIiB,EACJ,IAAIqa,EACJ,IAAIta,EACJ,IAAIyqD,GAAYC,EAAYC,EAAgBC,CAE5C,KAAK5rB,EAAI,EAAGA,GAAKj/B,KAAK6pD,cAAe5qB,EAAG,CACvCphB,EAAS7d,KAAK2pD,WAAe1qB,EAAEj/B,KAAK6pD,aAAc7pD,KAAK2pD,WAAa3pD,KAAKonD,eACzE//C,KAAMrH,KAAKyH,QAAQ,GAAMw3B,EAAEj/B,KAAK6pD,YAAY7pD,KAAKyH,OAEjDg+C,GAAa8E,EAAgB,CAE7B,KAAKrrD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAEvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAI2W,EAAOxO,KAAKud,IAAIu9B,EACpB/iD,GAAIyW,EAAOxO,KAAKsd,IAAIw9B,EACpBO,GAAMJ,EAAYj7C,KAAKud,IAAIu9B,EAC3BQ,GAAML,EAAYj7C,KAAKsd,IAAIw9B,EAE3B,IAAInqD,KAAKklD,KAAM,CACdU,EAAK,CACLC,IAAM6E,CACNhF,IAASr+C,CACTs+C,GAAQv+C,CACRwjD,GAAUP,CACVQ,GAAUF,MAEJ,CACN/E,GAAM8E,CACN7E,GAAK,CACLH,GAAQt+C,CACRu+C,GAAQt+C,CACRujD,GAAUD,CACVE,GAAUR,EAGX,GAAInrD,GAAKc,KAAK4pD,YAAa,CAC1BtlB,EAAUyjB,GAAQzjB,EAAUmhB,EAC5BnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CH,GAAQyC,GAAQ2C,CAChBpF,GAAQyC,EAAO,GAAKsC,CACpB/E,GAAQyC,EAAO,GAAK4C,CACpBpF,GAASwC,GAAQ4C,CACjBpF,GAASwC,EAAO,GAAKnC,CACrBL,GAASwC,EAAO,GAAKlC,MACf,CACNvhB,EAAUyjB,GAAQ7gD,CAClBo9B,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,CACtBL,GAAQyC,GAAQ2C,CAChBpF,GAAQyC,EAAO,GAAK6C,CACpBtF,GAAQyC,EAAO,GAAK8C,CACpBtF,GAASwC,IAAS4C,CAClBpF,GAASwC,EAAO,GAAKnC,CACrBL,GAASwC,EAAO,GAAKlC,EAEtBkC,GAAQ,CAGR,IAAI7oD,EAAI,GAAK+/B,EAAI,EAAG,CACnBhgC,EAAIsrD,CACJrqD,GAAIqqD,EAAkB,CACtBhwC,GAAIra,EAAIF,KAAK4pD,YAAc,CAC3B3pD,GAAIhB,EAAIe,KAAK4pD,YAAc,CAE3B/2B,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAU9nD,CAClB2yB,GAAQm1B,KAAUztC,CAElBsY,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAUztC,CAClBsY,GAAQm1B,KAAU/nD,EAGnBsqD,MAMHxE,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,CAC7C,GAAIsrC,GAAiDh8C,CAErD,IAAIi8C,IAAsBxoD,KAAK6pD,YAAc,GAAI7pD,KAAgB,YAAIA,KAAK4pD,WAC1E,IAAInB,EACJ,IAAIC,EACJ,IAAIt1B,EAEJ,IAAIm1B,EAAa11B,SAAW,MAAQ21B,GAAeD,EAAaC,YAAa,CAC5EC,EAAiBF,EAAaE,cAC9BC,GAAeH,EAAaG,YAC5Bt1B,GAAYm1B,EAAan1B,cACnB,CACNq1B,EAAiB,GAAI5iD,OAAc2iD,EAAY,EAC/CE,GAAe,GAAI7iD,OAAc2iD,EAAY,EAC7Cp1B,GAAY,GAAIvtB,OAAc2iD,GAG/BT,EAAO,CAEPC,GAAO,CAIP,KAAK/oB,EAAI,EAAGA,GAAKj/B,KAAK6pD,cAAe5qB,EAAG,CACvCphB,EAAS7d,KAAK2pD,WAAe1qB,EAAEj/B,KAAK6pD,aAAc7pD,KAAK2pD,WAAa3pD,KAAKonD,eACzE//C,GAAIrH,KAAKyH,SAASw3B,EAAEj/B,KAAK6pD,YAAc,GAEvC,KAAK3qD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAEvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAI2W,EAAOxO,KAAKud,IAAIu9B,EACpB/iD,GAAIyW,EAAOxO,KAAKsd,IAAIw9B,EAEpB,IAAInqD,KAAKklD,KAAM,CACdQ,GAASr+C,CACTs+C,GAAQv+C,MACF,CACNs+C,EAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,EAAI,EAAG,CACVwpD,EAAaX,GAAQ7gD,CACrBwhD,GAAaX,EAAO,GAAKrC,CACzBgD,GAAaX,EAAO,GAAKpC,CAEzBvyB,GAAU40B,KAAU,CAEpBD,IAAQ,CAGRU,GAAeV,GAAQW,EAAaX,EAAO/nD,KAAK4pD,YAAY,EAC5DnB,GAAeV,EAAO,GAAKW,EAAaX,EAAO,EAAI/nD,KAAK4pD,YAAY,EACpEnB,GAAeV,EAAO,GAAKW,EAAaX,EAAO,EAAI/nD,KAAK4pD,YAAY,EAEpElB,GAAaX,GAAQ7gD,CACrBwhD,GAAaX,EAAO,GAAKrC,CACzBgD,GAAaX,EAAO,GAAKpC,CAEzBvyB,GAAU40B,KAAU,CAEpBD,IAAQ,EAGT,GAAI7oD,EAAIc,KAAK4pD,YAAa,CACzBnB,EAAeV,GAAQ7gD,CACvBuhD,GAAeV,EAAO,GAAKrC,CAC3B+C,GAAeV,EAAO,GAAKpC,IAM9B4C,EAAajiB,gBAAgBmiB,EAAgBC,EAC7CH,GAAaI,gBAAgBv1B,IAOxB6zB,GAAA1mD,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,GAAI/d,EACJ,IAAI+/B,EACJ,IAAI/3B,EACJ,IAAIE,EACJ,IAAI+iD,EACJ,IAAI3lB,EAEJ,IAAIvnB,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjE,IAAIw5C,EAAiBvhB,KAAOxkC,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CAC9ExhB,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAc7F,KAAK+kD,aAAa,GxFiralC,GwF7qaL0F,GAA8B,EAAEp7C,KAAK+2C,GAAGpmD,KAAK4pD,WxF+qaxC,IwF5qaLz4C,GAAe,CAGnB,IAAInR,KAAK8pD,WAAY,CAEpBtlB,EAAIrzB,KAAW,GAAI40C,EAAiBc,MACpCriB,GAAIrzB,KAAW,GAAI40C,EAAiBe,MAEpC,KAAK5nD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAEvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAI,GAAM,IAAMmI,KAAKud,IAAIu9B,EACzB/iD,GAAI,GAAM,GAAIiI,KAAKsd,IAAIw9B,EAEvB3lB,GAAIrzB,KAAWjK,EAAE6+C,EAAiBc,MAClCriB,GAAIrzB,KAAW/J,EAAE2+C,EAAiBe,QAKpC,GAAI9mD,KAAK+pD,cAAe,CAEvBvlB,EAAIrzB,KAAW,GAAI40C,EAAiBc,MACpCriB,GAAIrzB,KAAW,GAAI40C,EAAiBe,MAEpC,KAAK5nD,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAEvCirD,EAAkBjrD,EAAEurD,CACpBvjD,GAAI,GAAM,GAAImI,KAAKud,IAAIu9B,EACvB/iD,GAAI,GAAM,GAAIiI,KAAKsd,IAAIw9B,EAEvB3lB,GAAIrzB,KAAWjK,EAAE6+C,EAAiBc,MAClCriB,GAAIrzB,KAAW/J,EAAE2+C,EAAiBe,QAKpC,GAAI9mD,KAAKgqD,eAAgB,CACxB,IAAK/qB,EAAI,EAAGA,GAAKj/B,KAAK6pD,cAAe5qB,EAAG,CACvC,IAAK//B,EAAI,EAAGA,GAAKc,KAAK4pD,cAAe1qD,EAAG,CAEvCslC,EAAIrzB,KAAajS,EAAEc,KAAK4pD,YAAc7D,EAAiBc,MACvDriB,GAAIrzB,KAAa8tB,EAAEj/B,KAAK6pD,YAAc9D,EAAiBe,SAM1Df,EAAiBvf,UAAUhC,OAErB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAAgqC,IAtpBsCvC,EAwpBtC/kD,GAAiCJ,QAAxB0nD,IxFiqaNF,iDAAiD,mDAAmD+D,mDAAmD,SAASrsD,EAAQkB,EAAOJ,GAClL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyFn0btB,IAAOqkD,GAAmBjmD,EAAY,iDzFy0btC,IyFp0bMssD,GAAoB,SAAArqD,GAASX,EAA7BgrD,EAAoBrqD,EAkBzB,SAlBKqqD,GAkBOlhD,EAAoBrC,EAAqBo9C,EAAsBC,EAAsBC,EAAoBkG,GAAzG,GAAAnhD,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAArC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAo9C,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAkG,QAAA,GAA2B,CAA3BA,EAAA,MAGpHtqD,EAAAlB,KAAAQ,KAEAA,MAAKglD,WAAaJ,CAClB5kD,MAAKilD,WAAaJ,CAClB7kD,MAAKklD,KAAOJ,CACZ9kD,MAAKoJ,OAASS,CACd7J,MAAKyH,QAAUD,CACfxH,MAAKirD,aAAeD,EAOrBrqD,OAAAC,eAAWmqD,EAAAxqD,UAAA,azF+zbJM,IyF/zbP,WAEC,MAAOb,MAAKglD,YzFg0bNx+C,IyF7zbP,SAAqBC,GAGpBzG,KAAKglD,WAAav+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBzF4zbCrkD,WAAY,KACZC,aAAc,MyFrzbrBL,QAAAC,eAAWmqD,EAAAxqD,UAAA,azF4zbJM,IyF5zbP,WAEC,MAAOb,MAAKilD,YzF6zbNz+C,IyF1zbP,SAAqBC,GAGpBzG,KAAKilD,WAAax+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mBzFyzbCrkD,WAAY,KACZC,aAAc,MyFnzbrBL,QAAAC,eAAWmqD,EAAAxqD,UAAA,OzFyzbJM,IyFzzbP,WAEC,MAAOb,MAAKklD,MzF0zbN1+C,IyFvzbP,SAAeC,GAEdzG,KAAKklD,KAAOz+C,CAEZzG,MAAKmlD,wBzFuzbCpkD,WAAY,KACZC,aAAc,MyFlzbrBL,QAAAC,eAAWmqD,EAAAxqD,UAAA,ezFwzbJM,IyFxzbP,WAEC,MAAOb,MAAKirD,czFyzbNzkD,IyFtzbP,SAAuBC,GAEtBzG,KAAKirD,aAAexkD,CAEpBzG,MAAKmlD,wBzFszbCpkD,WAAY,KACZC,aAAc,MyFjzbrBL,QAAAC,eAAWmqD,EAAAxqD,UAAA,SzFuzbJM,IyFvzbP,WAEC,MAAOb,MAAKoJ,QzFwzbN5C,IyFrzbP,SAAiBC,GAEhBzG,KAAKoJ,OAAS3C,CAEdzG,MAAKmlD,wBzFqzbCpkD,WAAY,KACZC,aAAc,MyFhzbrBL,QAAAC,eAAWmqD,EAAAxqD,UAAA,UzFszbJM,IyFtzbP,WAEC,MAAOb,MAAKyH,SzFuzbNjB,IyFpzbP,SAAkBC,GAEjBzG,KAAKyH,QAAUhB,CAEfzG,MAAKmlD,wBzFozbCpkD,WAAY,KACZC,aAAc,MyF/ybd+pD,GAAAxqD,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAI3rB,GAAUE,CACd,IAAI0+C,EACJ,IAAIoF,EACJ,IAAIC,GAAYnrD,KAAKglD,WAAa,CAClC,IAAIgB,EAEJ,IAAI+B,GAAaC,CAEjB,IAAIoD,EACJ,IAAIC,EAEJ,IAAIpuC,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAEjE,IAAIy5C,IAAsBhmD,KAAKilD,WAAa,GAAGkG,CAC/C,IAAI7mB,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAIvlD,KAAKirD,aACRjF,GAAe,CAEhBF,GAAa9lD,KAAKilD,WAAWjlD,KAAKglD,WAAW,CAE7C,IAAIhlD,KAAKirD,aACRnF,GAAc,CAEf,IAAIC,EAAiBlzB,SAAW,MAAQizB,GAAcC,EAAiBlzB,QAAQpzB,OAAQ,CACtFozB,EAAUkzB,EAAiBlzB,YACrB,CACNA,EAAU,GAAIhtB,OAAcigD,EAE5B9lD,MAAKolD,kBAGN,GAAIY,GAAeD,EAAiBC,YAAa,CAChD1hB,EAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACN5hB,EAAY,GAAIz+B,OAAcmgD,EAAY,EAC1CV,GAAU,GAAIz/C,OAAcmgD,EAAY,EACxCT,GAAW,GAAI1/C,OAAcmgD,EAAY,EAEzChmD,MAAKolD,kBAGN4C,EAAO,CAEPD,GAAO,CAEP,KAAKsD,EAAK,EAAGA,GAAMrrD,KAAKilD,aAAcoG,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAMprD,KAAKglD,aAAcoG,EAAI,CACzClkD,GAAKkkD,EAAGprD,KAAKglD,WAAa,IAAIhlD,KAAKoJ,MACnChC,IAAKikD,EAAGrrD,KAAKilD,WAAa,IAAIjlD,KAAKyH,OAEnC68B,GAAUyjB,GAAQ7gD,CAClB,IAAIlH,KAAKklD,KAAM,CACd5gB,EAAUyjB,EAAO,GAAK,CACtBzjB,GAAUyjB,EAAO,GAAK3gD,MAChB,CACNk9B,EAAUyjB,EAAO,GAAK3gD,CACtBk9B,GAAUyjB,EAAO,GAAK,EAGvBzC,EAAQyC,GAAQ,CAEhB,IAAI/nD,KAAKklD,KAAM,CACdI,EAAQyC,EAAO,GAAK,CACpBzC,GAAQyC,EAAO,GAAK,MACd,CACNzC,EAAQyC,EAAO,GAAK,CACpBzC,GAAQyC,EAAO,IAAM,EAGtBxC,EAASwC,GAAQ,CACjBxC,GAASwC,EAAO,GAAK,CACrBxC,GAASwC,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAI/nD,KAAKirD,aAAc,CAEtB,IAAK,GAAI/rD,GAAW6oD,EAAM7oD,EAAI6oD,EAAO,IAAK7oD,EAAG,CAC5ColC,EAAUplC,GAAKolC,EAAUplC,EAAI,EAC7BomD,GAAQpmD,IAAMomD,EAAQpmD,EAAI,EAC1BqmD,GAASrmD,IAAMqmD,EAASrmD,EAAI,GAG7B6oD,GAAQ,EAIT,GAAIqD,GAAMprD,KAAKglD,YAAcqG,GAAMrrD,KAAKilD,WAAY,CAEnDiG,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAActrD,KAAKirD,aAAc,EAAI,CAEzCp4B,GAAQm1B,KAAUkD,EAAKI,CACvBz4B,GAAQm1B,MAAWkD,EAAOC,GAAIG,CAC9Bz4B,GAAQm1B,MAAWkD,EAAOC,EAAK,GAAGG,CAClCz4B,GAAQm1B,KAAUkD,EAAKI,CACvBz4B,GAAQm1B,MAAWkD,EAAOC,EAAK,GAAGG,CAClCz4B,GAAQm1B,MAAWkD,EAAO,GAAGI,CAE7B,IAAItrD,KAAKirD,aAAc,CAEtBp4B,EAAQm1B,MAAWkD,EAAOC,EAAK,GAAGG,EAAO,CACzCz4B,GAAQm1B,MAAWkD,EAAOC,GAAIG,EAAO,CACrCz4B,GAAQm1B,KAAUkD,EAAKI,EAAO,CAC9Bz4B,GAAQm1B,MAAWkD,EAAO,GAAGI,EAAO,CACpCz4B,GAAQm1B,MAAWkD,EAAOC,EAAK,GAAGG,EAAO,CACzCz4B,GAAQm1B,KAAUkD,EAAKI,EAAO,KAOlCvF,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,CAC7C,GAAIsrC,GAAiDh8C,CAErD,IAAIi8C,GAAsBxoD,KAAKilD,WAAa,EAAKkG,CACjD,IAAI1C,EACJ,IAAIC,EACJ,IAAIt1B,EAEJ,IAAI60B,GAAYjoD,KAAKoJ,OAAO,CAC5B,IAAI8+C,GAAYloD,KAAKyH,QAAQ,CAG7B,IAAI8gD,EAAa11B,SAAW,MAAQ21B,GAAeD,EAAaC,YAAa,CAC5EC,EAAiBF,EAAaE,cAC9BC,GAAeH,EAAaG,YAC5Bt1B,GAAYm1B,EAAan1B,cACnB,CACNq1B,EAAiB,GAAI5iD,OAAc2iD,EAAY,EAC/CE,GAAe,GAAI7iD,OAAc2iD,EAAY,EAC7Cp1B,GAAY,GAAIvtB,OAAc2iD,GAG/BR,EAAO,CAEPD,GAAO,CAEP,KAAKsD,EAAK,EAAGA,GAAMrrD,KAAKilD,aAAcoG,EAAI,CACzC5C,EAAeV,IAASE,CACxBQ,GAAeV,EAAO,GAAK,CAC3BU,GAAeV,EAAO,GAAKsD,EAAGrrD,KAAKyH,QAAUygD,CAE7CQ,GAAaX,GAAQE,CACrBS,GAAaX,EAAO,GAAK,CACzBW,GAAaX,EAAO,GAAKsD,EAAGrrD,KAAKyH,QAAUygD,CAE3C90B,GAAU40B,KAAU,CAEpBD,IAAQ,EAIT,IAAKqD,EAAK,EAAGA,GAAMprD,KAAKglD,aAAcoG,EAAI,CACzC3C,EAAeV,GAAQqD,EAAGprD,KAAKoJ,OAAS6+C,CACxCQ,GAAeV,EAAO,GAAK,CAC3BU,GAAeV,EAAO,IAAMG,CAE5BQ,GAAaX,GAAQqD,EAAGprD,KAAKoJ,OAAS6+C,CACtCS,GAAaX,EAAO,GAAK,CACzBW,GAAaX,EAAO,GAAKG,CAEzB90B,GAAU40B,KAAU,CAEpBD,IAAQ,EAITQ,EAAajiB,gBAAgBmiB,EAAgBC,EAC7CH,GAAaI,gBAAgBv1B,IAOxB23B,GAAAxqD,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,GAAIunB,EACJ,IAAIwhB,EAEJ,IAAI/oC,GAAgB,sBAAuB,CAE1C+oC,GAAgBhmD,KAAKilD,WAAa,IAAMjlD,KAAKglD,WAAa,EAE1D,IAAIhlD,KAAKirD,aACRjF,GAAe,CAEhB,IAAID,GAA6Dx5C,CAEjE,IAAIw5C,EAAiBvhB,KAAOwhB,GAAeD,EAAiBC,YAAa,CACxExhB,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAcmgD,EAAY,EACpChmD,MAAKmlD,uBAGN,GAAIh0C,GAAe,CAEnB,KAAK,GAAIk6C,GAAY,EAAGA,GAAMrrD,KAAKilD,aAAcoG,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAMprD,KAAKglD,aAAcoG,EAAI,CACpD5mB,EAAIrzB,GAAUi6C,EAAGprD,KAAKglD,WAAYe,EAAiBc,MACnDriB,GAAIrzB,EAAQ,IAAM,EAAIk6C,EAAGrrD,KAAKilD,YAAYc,EAAiBe,MAC3D31C,IAAS,CAET,IAAInR,KAAKirD,aAAc,CACtBzmB,EAAIrzB,GAAUi6C,EAAGprD,KAAKglD,WAAYe,EAAiBc,MACnDriB,GAAIrzB,EAAM,IAAM,EAAIk6C,EAAGrrD,KAAKilD,YAAYc,EAAiBe,MACzD31C,IAAS,IAKZ40C,EAAiBvf,UAAUhC,OAGrB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAA8tC,IApXmCrG,EAsXnC/kD,GAA8BJ,QAArBwrD,IzF4vbNhE,iDAAiD,mDAAmDwE,qDAAqD,SAAS9sD,EAAQkB,EAAOJ,GACpL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0F/nctB,IAAO4mD,GAAuBxoD,EAAW,qD1FqoczC,I0FhocM+sD,GAAsB,SAAA9qD,GAASX,EAA/ByrD,EAAsB9qD,EAiD3B,SAjDK8qD,GAiDO3tC,EAAqB4tC,EAAmB3G,GAAxC,GAAAjnC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA4tC,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA3G,QAAA,GAAkB,CAAlBA,EAAA,KAEnDpkD,EAAAlB,KAAAQ,KAAM6d,EAAQ,EAAG,EAAG4tC,EAAO,EAAG,KAAM,MAAO,MAAO3G,GA7CnDnkD,OAAAC,eAAW4qD,EAAAjrD,UAAA,U1F4ocJM,I0F5ocP,WAEC,MAAOb,MAAKonD,gB1F6ocN5gD,I0F1ocP,SAAkBC,GAEjBzG,KAAKonD,eAAiB3gD,CACtBzG,MAAKmlD,wB1F2ocCpkD,WAAY,KACZC,aAAc,M0FtocrBL,QAAAC,eAAW4qD,EAAAjrD,UAAA,S1F4ocJM,I0F5ocP,WAEC,MAAOb,MAAK4pD,a1F6ocNpjD,I0F1ocP,SAAiBC,GAEhBzG,KAAKiqD,aAAaxjD,I1F2ocZ1F,WAAY,KACZC,aAAc,M0FtocrBL,QAAAC,eAAW4qD,EAAAjrD,UAAA,gB1F4ocJM,I0F5ocP,WAEC,MAAOb,MAAK6pD,a1F6ocNrjD,I0F1ocP,SAAwBC,GAEvBzG,KAAKkqD,aAAazjD,I1F2ocZ1F,WAAY,KACZC,aAAc,M0F/nctB,OAAAwqD,IArDqCvE,EAuDLtnD,GAAAJ,QAAvBisD,I1FmocNnE,qDAAqD,uDAAuDN,kDAAkD,SAAStoD,EAAQkB,EAAOJ,GACzL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2FtsctB,IAAO48B,GAAQx+B,EAAe,gCAE9B,IAAOya,GAAmBza,EAAY,2CACtC,IAAOqX,GAAerX,EAAa,uCACnC,IAAOoE,GAAmBpE,EAAY,6CAGtC,IAAO2+B,GAAI3+B,EAAgB,mCAE3B,IAAO6lD,GAAU7lD,EAAc,wC3Fwsc/B,I2FnscMimD,GAAmB,SAAAhkD,GAASX,EAA5B2kD,EAAmBhkD,EAwExB,SAxEKgkD,GAwEO3iD,EAA8Bkb,GAA9B,GAAAlb,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAkb,QAAA,GAA2C,CAA3CA,EAAA,sBAEzCvc,EAAAlB,KAAAQ,KAtEMA,MAAA0rD,WAAqB,IACrB1rD,MAAA2rD,SAAmB,IAMlB3rD,MAAA4rD,mBAA6B,IAiEpC5rD,MAAKi+B,UAAY,GAAIhB,EACrBj9B,MAAKkX,UAAYnV,CACjB/B,MAAK6rD,cAAgB5uC,EA7DtBtc,OAAAC,eAAW8jD,EAAAnkD,UAAA,a3FwscJM,I2FxscP,WAEC,MAAO6jD,GAAoBxjD,W3FyscrBH,WAAY,KACZC,aAAc,M2FpscrBL,QAAAC,eAAW8jD,EAAAnkD,UAAA,gB3F0scJM,I2F1scP,WAEC,MAAOb,MAAK6rD,e3F2scNrlD,I2FxscP,SAAwBC,GAEvB,GAAIzG,KAAK6rD,eAAiBplD,EACzB,MAEDzG,MAAK6rD,cAAgBplD,CAErBzG,MAAK8rD,0B3FuscC/qD,WAAY,KACZC,aAAc,M2FrscrBL,QAAAC,eAAW8jD,EAAAnkD,UAAA,Y3FwscJM,I2FxscP,WAECb,KAAKuL,YAEL,OAAOvL,MAAKi+B,W3FwscNl9B,WAAY,KACZC,aAAc,M2FnscrBL,QAAAC,eAAW8jD,EAAAnkD,UAAA,Y3FyscJM,I2FzscP,WAEC,MAAOb,MAAKkX,W3F0scN1Q,I2FvscP,SAAoBC,GAEnB,GAAIA,GAASzG,KAAKkX,UACjB,MAEDlX,MAAKkX,UAAYzQ,CAEjB,IAAIE,GAAa3G,KAAKukD,UAAU9kD,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IACvBc,KAAKukD,UAAUrlD,GAAI6C,SAAW/B,KAAKkX,W3FssctCnW,WAAY,KACZC,aAAc,M2Flrcd0jD,GAAAnkD,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,KAAM,IAAIpa,GAOJ6hD,GAAAnkD,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,KAAM,IAAIpa,GAMJ6hD,GAAAnkD,UAAAurD,uBAAP,WAEC9rD,KAAK4rD,mBAAqB,IAC1B5rD,MAAK0rD,WAAa,IAClB1rD,MAAK2rD,SAAW,KAMVjH,GAAAnkD,UAAA4kD,qBAAP,WAECnlD,KAAK0rD,WAAa,KAMZhH,GAAAnkD,UAAA6kD,gBAAP,WAECplD,KAAK2rD,SAAW,KAMTjH,GAAAnkD,UAAAwrD,mBAAR,WAGC,GAAI/rD,KAAKiC,aACRjC,KAAKi+B,UAAUoG,kBAAkBrkC,KAAKiC,aAEvC,IAAIjC,KAAK6rD,eAAiB,sBAAuB,CAChD,GAAI9F,GAAuC,GAAI7sC,GAAoB,KACnE6sC,GAAiBiG,kBAAoB,KACrCjG,GAAiBkG,mBAAqB,KACtClG,GAAiBmG,cAAgB,KACjClsD,MAAKi+B,UAAUwI,eAAesf,EAC9B/lD,MAAKiC,aAAe8jD,MACd,IAAI/lD,KAAK6rD,eAAiB,kBAAmB,CACnD7rD,KAAKi+B,UAAUwI,eAAezmC,KAAKiC,aAAe,GAAI6T,IAGvD9V,KAAK4rD,mBAAqB,MAOnBlH,GAAAnkD,UAAA4rD,eAAR,WAECnsD,KAAKqlD,gBAAgBrlD,KAAKiC,aAAcjC,KAAK6rD,cAE7C7rD,MAAK0rD,WAAa,MAMXhH,GAAAnkD,UAAAimC,UAAR,WAECxmC,KAAK4mD,WAAW5mD,KAAKiC,aAAcjC,KAAK6rD,cAExC7rD,MAAK2rD,SAAW,MAGVjH,GAAAnkD,UAAAgL,WAAP,WAEC,GAAIvL,KAAK4rD,mBACR5rD,KAAK+rD,oBAEN,IAAI/rD,KAAK0rD,WACR1rD,KAAKmsD,gBAEN,IAAInsD,KAAK2rD,SACR3rD,KAAKwmC,YAIAke,GAAAnkD,UAAAikD,eAAP,WAEC,GAAI4H,GAAY,GAAIhvB,GAAKp9B,KAAKi+B,UAAWj+B,KAAKkX,UAC9Ck1C,GAAK9gD,eAAiBtL,IAEtB,OAAOosD,GAzLM1H,GAAAxjD,UAAmB,yBAoMlC,OAAAwjD,IAtMkCJ,EAwMlC3kD,GAA6BJ,QAApBmlD,I3FupcNtkB,gCAAgCh/B,UAAU4U,uCAAuC5U,UAAUgY,2CAA2ChY,UAAUsR,6CAA6CtR,UAAU47B,mCAAmC,mCAAmCqnB,wCAAwC,0CAA0CpmC,oDAAoD,SAASxf,EAAQkB,EAAOJ,GAC9a,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4F72ctB,IAAOqkD,GAAmBjmD,EAAY,iD5Fm3ctC,I4F92cM8e,GAAqB,SAAA7c,GAASX,EAA9Bwd,EAAqB7c,EA6E1B,SA7EK6c,GA6EOM,EAAoB+mC,EAAuBC,EAAuBC,GAAlE,GAAAjnC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA+mC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7EpkD,EAAAlB,KAAAQ,KAEAA,MAAKyd,QAAUI,CACf7d,MAAKglD,WAAaJ,CAClB5kD,MAAKilD,WAAaJ,CAClB7kD,MAAKklD,KAAOJ,EA1EbnkD,OAAAC,eAAW2c,EAAAhd,UAAA,U5F63cJM,I4F73cP,WAEC,MAAOb,MAAKyd,S5F83cNjX,I4F33cP,SAAkBC,GAEjBzG,KAAKyd,QAAUhX,CAEfzG,MAAKmlD,wB5F23cCpkD,WAAY,KACZC,aAAc,M4Ft3crBL,QAAAC,eAAW2c,EAAAhd,UAAA,a5F43cJM,I4F53cP,WAEC,MAAOb,MAAKglD,Y5F63cNx+C,I4F13cP,SAAqBC,GAEpBzG,KAAKglD,WAAav+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mB5F03cCrkD,WAAY,KACZC,aAAc,M4Fr3crBL,QAAAC,eAAW2c,EAAAhd,UAAA,a5F23cJM,I4F33cP,WAEC,MAAOb,MAAKilD,Y5F43cNz+C,I4Fz3cP,SAAqBC,GAEpBzG,KAAKilD,WAAax+C,CAElBzG,MAAKmlD,sBACLnlD,MAAKolD,mB5Fy3cCrkD,WAAY,KACZC,aAAc,M4Fp3crBL,QAAAC,eAAW2c,EAAAhd,UAAA,O5F03cJM,I4F13cP,WAEC,MAAOb,MAAKklD,M5F23cN1+C,I4Fx3cP,SAAeC,GAEdzG,KAAKklD,KAAOz+C,CAEZzG,MAAKmlD,wB5Fw3cCpkD,WAAY,KACZC,aAAc,M4Fj2cduc,GAAAhd,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAIyR,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAIrmD,EACJ,IAAI+/B,EACJ,IAAI8oB,GAAaC,CAEjB,IAAItC,EACJ,IAAIC,EACJ,IAAIK,EAGJ,IAAI/oC,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAEjEy5C,IAAehmD,KAAKilD,WAAa,IAAIjlD,KAAKglD,WAAa,EAEvD,IAAIgB,GAAeD,EAAiBC,aAAeD,EAAiBlzB,SAAW,KAAM,CACpFA,EAAUkzB,EAAiBlzB,OAC3ByR,GAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACNrzB,EAAU,GAAIhtB,QAAe7F,KAAKilD,WAAa,GAAGjlD,KAAKglD,WAAW,EAClE1gB,GAAY,GAAIz+B,OAAcmgD,EAAY,EAC1CV,GAAU,GAAIz/C,OAAcmgD,EAAY,EACxCT,GAAW,GAAI1/C,OAAcmgD,EAAY,EAEzChmD,MAAKolD,kBAGN2C,EAAO,CACPC,GAAO,CAEP,IAAIvC,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAK5mB,EAAI,EAAGA,GAAKj/B,KAAKilD,aAAchmB,EAAG,CAEtCwmB,EAAasC,CAEb,IAAI5B,GAAkB92C,KAAK+2C,GAAGnnB,EAAEj/B,KAAKilD,UACrC,IAAI59C,IAAYrH,KAAKyd,QAAQpO,KAAKud,IAAIu5B,EACtC,IAAIE,GAAoBrmD,KAAKyd,QAAQpO,KAAKsd,IAAIw5B,EAE9C,KAAKjnD,EAAI,EAAGA,GAAKc,KAAKglD,aAAc9lD,EAAG,CACtC,GAAIonD,GAAkB,EAAEj3C,KAAK+2C,GAAGlnD,EAAEc,KAAKglD,UACvC,IAAI99C,GAAWm/C,EAAWh3C,KAAKud,IAAI05B,EACnC,IAAIl/C,GAAWi/C,EAAWh3C,KAAKsd,IAAI25B,EACnC,IAAIE,GAAiB,EAAEn3C,KAAKC,KAAKpI,EAAEA,EAAIE,EAAEA,EAAIC,EAAEA,EAC/C,IAAIo/C,GAAgBp3C,KAAKC,KAAKlI,EAAEA,EAAIF,EAAEA,EAEtC,IAAIlH,KAAKklD,KAAM,CAEdU,EAAK,CACLC,GAAKY,EAAS,KAAMv/C,EAAEu/C,EAAS,CAC/Bf,IAASr+C,CACTs+C,GAAQv+C,MAEF,CACNw+C,EAAKa,EAAS,KAAMv/C,EAAEu/C,EAAS,CAC/BZ,GAAK,CACLH,GAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,GAAKc,KAAKglD,WAAY,CACzB1gB,EAAUyjB,GAAQzjB,EAAUmhB,EAC5BnhB,GAAUyjB,EAAK,GAAKzjB,EAAUmhB,EAAa,EAC3CnhB,GAAUyjB,EAAK,GAAKzjB,EAAUmhB,EAAa,EAC3CH,GAAQyC,GAAQzC,EAAQG,GAAev+C,EAAEs/C,EAAS,EAClDlB,GAAQyC,EAAK,GAAKzC,EAAQG,EAAa,GAAOC,EAAMc,EAAS,EAC7DlB,GAAQyC,EAAK,GAAKzC,EAAQG,EAAa,GAAME,EAAMa,EAAS,EAC5DjB,GAASwC,GAAQtB,EAAS,MAAOr/C,EAAEq/C,EAAS,CAC5ClB,GAASwC,EAAK,GAAKnC,CACnBL,GAASwC,EAAK,GAAKlC,MAEb,CAENvhB,EAAUyjB,GAAQ7gD,CAClBo9B,GAAUyjB,EAAK,GAAKrC,CACpBphB,GAAUyjB,EAAK,GAAKpC,CACpBL,GAAQyC,GAAQ7gD,EAAEs/C,CAClBlB,GAAQyC,EAAK,GAAKrC,EAAMc,CACxBlB,GAAQyC,EAAK,GAAKpC,EAAMa,CACxBjB,GAASwC,GAAQtB,EAAS,MAAOr/C,EAAEq/C,EAAS,CAC5ClB,GAASwC,EAAK,GAAKnC,CACnBL,GAASwC,EAAK,GAAKlC,EAGpB,GAAI3mD,EAAI,GAAK+/B,EAAI,EAAG,CAEnB,GAAIhgC,IAAYe,KAAKglD,WAAa,GAAG/lB,EAAI//B,CACzC,IAAIgB,IAAYF,KAAKglD,WAAa,GAAG/lB,EAAI//B,EAAI,CAC7C,IAAIqb,IAAYva,KAAKglD,WAAa,IAAI/lB,EAAI,GAAK//B,EAAI,CACnD,IAAIe,IAAYD,KAAKglD,WAAa,IAAI/lB,EAAI,GAAK//B,CAE/C,IAAI+/B,GAAKj/B,KAAKilD,WAAY,CAEzB3gB,EAAUyjB,GAAQzjB,EAAUmhB,EAC5BnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAE7C5yB,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAUztC,CAClBsY,GAAQm1B,KAAU/nD,MAEZ,IAAIg/B,GAAK,EAAG,CAElBpM,EAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAU9nD,CAClB2yB,GAAQm1B,KAAUztC,MAEZ,CACNsY,EAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAU9nD,CAClB2yB,GAAQm1B,KAAUztC,CAClBsY,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAUztC,CAClBsY,GAAQm1B,KAAU/nD,GAIpB8nD,GAAQ,GAIVhC,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,CAE7C,GAAIsrC,GAAiDh8C,CAErD,IAAIi8C,IAAsBxoD,KAAKilD,WAAa,GAAGjlD,KAAKglD,WAAW,CAC/D,IAAIyD,EACJ,IAAIC,EACJ,IAAIt1B,EAEJ,IAAIm1B,EAAa11B,SAAW,MAAQ21B,GAAeD,EAAaC,YAAa,CAC5EC,EAAiBF,EAAaE,cAC9BC,GAAeH,EAAaG,YAC5Bt1B,GAAYm1B,EAAan1B,cACnB,CACNq1B,EAAiB,GAAI5iD,OAAc2iD,EAAY,EAC/CE,GAAe,GAAI7iD,OAAc2iD,EAAY,EAC7Cp1B,GAAY,GAAIvtB,OAAc2iD,GAG/BT,EAAO,CAEPC,GAAO,CAEP,KAAK/oB,EAAI,EAAGA,GAAKj/B,KAAKilD,aAAchmB,EAAG,CAEtC,GAAIknB,GAAkB92C,KAAK+2C,GAAGnnB,EAAEj/B,KAAKilD,UACrC,IAAI59C,IAAYrH,KAAKyd,QAAQpO,KAAKud,IAAIu5B,EACtC,IAAIE,GAAoBrmD,KAAKyd,QAAQpO,KAAKsd,IAAIw5B,EAE9C,KAAKjnD,EAAI,EAAGA,GAAKc,KAAKglD,aAAc9lD,EAAG,CACtC,GAAIonD,GAAkB,EAAEj3C,KAAK+2C,GAAGlnD,EAAEc,KAAKglD,UACvC,IAAI99C,GAAWm/C,EAAWh3C,KAAKud,IAAI05B,EACnC,IAAIl/C,GAAWi/C,EAAWh3C,KAAKsd,IAAI25B,EAEnC,IAAItmD,KAAKklD,KAAM,CACdQ,GAASr+C,CACTs+C,GAAQv+C,MAEF,CACNs+C,EAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,EAAI,GAAK+/B,EAAI,EAAG,CAEnB,GAAIA,EAAIj/B,KAAKilD,WAAY,CACxByD,EAAaX,GAAQ7gD,CACrBwhD,GAAaX,EAAO,GAAKrC,CACzBgD,GAAaX,EAAO,GAAKpC,CAEzBvyB,GAAU40B,KAAU,CAEpBD,IAAQ,EAITU,EAAeV,GAAQW,EAAaX,EAAO/nD,KAAKglD,WAAW,EAC3DyD,GAAeV,EAAO,GAAKW,EAAaX,EAAO,EAAI/nD,KAAKglD,WAAW,EACnEyD,GAAeV,EAAO,GAAKW,EAAaX,EAAO,EAAI/nD,KAAKglD,WAAW,EAEnE0D,GAAaX,GAAQ7gD,CACrBwhD,GAAaX,EAAO,GAAKrC,CACzBgD,GAAaX,EAAO,GAAKpC,CAEzBvyB,GAAU40B,KAAU,CAEpBD,IAAQ,EAGT,GAAI7oD,EAAIc,KAAKglD,YAAc/lB,EAAI,GAAKA,EAAIj/B,KAAKilD,WAAY,CACxDwD,EAAeV,GAAQ7gD,CACvBuhD,GAAeV,EAAO,GAAKrC,CAC3B+C,GAAeV,EAAO,GAAKpC,IAM9B4C,EAAajiB,gBAAgBmiB,EAAgBC,EAC7CH,GAAaI,gBAAgBv1B,IAOxB7V,GAAAhd,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAEzC,GAAI/d,GAAU+/B,CACd,IAAI+mB,IAAsBhmD,KAAKilD,WAAa,IAAIjlD,KAAKglD,WAAa,EAClE,IAAIxgB,EAGJ,IAAIvnB,GAAgB,sBAAuB,CAE1C+oC,GAAehmD,KAAKilD,WAAa,IAAIjlD,KAAKglD,WAAa,EAEvD,IAAIe,GAA6Dx5C,CAEjE,IAAIy5C,GAAeD,EAAiBC,aAAeD,EAAiBvhB,KAAO,KAAM,CAChFA,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAcmgD,EAAY,GAGrC,GAAI70C,GAAe,CACnB,KAAK8tB,EAAI,EAAGA,GAAKj/B,KAAKilD,aAAchmB,EAAG,CACtC,IAAK//B,EAAI,EAAGA,GAAKc,KAAKglD,aAAc9lD,EAAG,CACtCslC,EAAIrzB,KAAajS,EAAEc,KAAKglD,WAAae,EAAiBc,MACtDriB,GAAIrzB,KAAa8tB,EAAEj/B,KAAKilD,WAAac,EAAiBe,QAIxDf,EAAiBvf,UAAUhC,OAErB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAAM,IA5VoCmnC,EA8VL/kD,GAAAJ,QAAtBge,I5FmzcNwpC,iDAAiD,mDAAmDsF,mDAAmD,SAAS5tD,EAAQkB,EAAOJ,GAClL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6F5pdtB,IAAOqkD,GAAmBjmD,EAAY,iD7FkqdtC,I6F7pdM6tD,GAAoB,SAAA5rD,GAASX,EAA7BusD,EAAoB5rD,EAyFzB,SAzFK4rD,GAyFOzuC,EAAoB0uC,EAAwBC,EAAuBC,EAAsB3H,GAAzF,GAAAjnC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA0uC,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA3H,QAAA,GAAkB,CAAlBA,EAAA,KAEpGpkD,EAAAlB,KAAAQ,KApFOA,MAAA+kD,aAAsB,CAsF7B/kD,MAAKyd,QAAUI,CACf7d,MAAK0sD,YAAcH,CACnBvsD,MAAK2sD,WAAaH,CAClBxsD,MAAK4sD,WAAaH,CAClBzsD,MAAKklD,KAAOJ,EArFbnkD,OAAAC,eAAW0rD,EAAA/rD,UAAA,U7F6qdJM,I6F7qdP,WAEC,MAAOb,MAAKyd,S7F8qdNjX,I6F3qdP,SAAkBC,GAEjBzG,KAAKyd,QAAUhX,CACfzG,MAAKmlD,wB7F4qdCpkD,WAAY,KACZC,aAAc,M6FvqdrBL,QAAAC,eAAW0rD,EAAA/rD,UAAA,c7F6qdJM,I6F7qdP,WAEC,MAAOb,MAAK0sD,a7F8qdNlmD,I6F3qdP,SAAsBC,GAErBzG,KAAK0sD,YAAcjmD,CACnBzG,MAAKmlD,wB7F4qdCpkD,WAAY,KACZC,aAAc,M6FvqdrBL,QAAAC,eAAW0rD,EAAA/rD,UAAA,a7F6qdJM,I6F7qdP,WAEC,MAAOb,MAAK2sD,Y7F8qdNnmD,I6F3qdP,SAAqBC,GAEpBzG,KAAK2sD,WAAalmD,CAClBzG,MAAKmlD,sBACLnlD,MAAKolD,mB7F4qdCrkD,WAAY,KACZC,aAAc,M6FvqdrBL,QAAAC,eAAW0rD,EAAA/rD,UAAA,a7F6qdJM,I6F7qdP,WAEC,MAAOb,MAAK4sD,Y7F8qdNpmD,I6F3qdP,SAAqBC,GAEpBzG,KAAK4sD,WAAanmD,CAClBzG,MAAKmlD,sBACLnlD,MAAKolD,mB7F4qdCrkD,WAAY,KACZC,aAAc,M6FvqdrBL,QAAAC,eAAW0rD,EAAA/rD,UAAA,O7F6qdJM,I6F7qdP,WAEC,MAAOb,MAAKklD,M7F8qdN1+C,I6F3qdP,SAAeC,GAEdzG,KAAKklD,KAAOz+C,CACZzG,MAAKmlD,wB7F4qdCpkD,WAAY,KACZC,aAAc,M6FnpddsrD,GAAA/rD,UAAA8kD,gBAAP,SAAuB94C,EAAwB0Q,GAE9C,GAAI4V,EACJ,IAAIyR,EACJ,IAAIghB,EACJ,IAAIC,EAEJ,IAAIrmD,GAAU+/B,CACd,IAAI/3B,GAAUE,EAAUC,EAAUwlD,EAAWC,EAAWC,EAAWC,EAAyBC,CAC5F,IAAIlF,EACJ,IAAIC,EACJ,IAAIlC,GAAoB,CAExB,IAAI7oC,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjEvM,MAAK+kD,cAAgB/kD,KAAK4sD,WAAa,IAAI5sD,KAAK2sD,WAAa,EAC7D7G,GAAa9lD,KAAK4sD,WAAW5sD,KAAK2sD,WAAW,CAG7C,IAAI3sD,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CACtDnzB,EAAUkzB,EAAiBlzB,OAC3ByR,GAAYyhB,EAAiBzhB,SAC7BghB,GAAUS,EAAiBE,aAC3BV,GAAWQ,EAAiBG,mBACtB,CACNrzB,EAAU,GAAIhtB,OAAcigD,EAC5BxhB,GAAY,GAAIz+B,OAAc7F,KAAK+kD,aAAa,EAChDO,GAAU,GAAIz/C,OAAc7F,KAAK+kD,aAAa,EAC9CQ,GAAW,GAAI1/C,OAAc7F,KAAK+kD,aAAa,EAE/C/kD,MAAKolD,kBAIN2C,EAAO,CACPC,GAAO,C7FkpdE,I6F/odLkF,GAA+B,EAAE79C,KAAK+2C,GAAGpmD,KAAK2sD,UAClD,IAAIQ,GAA+B,EAAE99C,KAAK+2C,GAAGpmD,KAAK4sD,UAElD,IAAIlH,GAAcC,CAClB,IAAIC,GAAWC,EAAWuH,EAAWC,CACrC,IAAI5H,GAAoB,CACxB,IAAI8E,GAAyB,C7FgpdpB,I6F7odLtrD,GAAUiB,EAAUqa,EAAUta,EAAUR,CAE5C,KAAKw/B,EAAI,EAAGA,GAAKj/B,KAAK4sD,aAAc3tB,EAAG,CAEtCwmB,EAAa8E,EAAgB,CAE7B,KAAKrrD,EAAI,EAAGA,GAAKc,KAAK2sD,aAAcztD,EAAG,CAGtC8tD,EAAmB9tD,EAAEguD,CACrBD,GAAmBhuB,EAAEkuB,CAErB1tD,GAAS4P,KAAKud,IAAIqgC,EAClBJ,GAAKptD,EAAO4P,KAAKud,IAAIogC,EACrBF,GAAKrtD,EAAO4P,KAAKsd,IAAIqgC,EACrBD,GAAK19C,KAAKsd,IAAIsgC,EAEd/lD,GAAIlH,KAAKyd,QAAQpO,KAAKud,IAAIogC,GAAoBhtD,KAAK0sD,YAAYG,CAC/DzlD,GAAIpH,KAAKyd,QAAQpO,KAAKsd,IAAIqgC,GAAoBhtD,KAAK0sD,YAAYI,CAC/DzlD,GAAK43B,GAAKj/B,KAAK4sD,WAAa,EAAI5sD,KAAK0sD,YAAYK,CAEjD,IAAI/sD,KAAKklD,KAAM,CAEdkI,GAAML,CACNM,GAAKP,CACLlH,GAAK,CACLC,GAAMpmD,EAAQotD,EAAGptD,EAASyH,EAAElH,KAAKyd,OACjCioC,IAASr+C,CACTs+C,GAAQv+C,MAEF,CACNgmD,EAAKN,CACLO,GAAKN,CACLnH,GAAMnmD,EAAQotD,EAAGptD,EAASyH,EAAElH,KAAKyd,OACjCooC,GAAK,CACLH,GAAQt+C,CACRu+C,GAAQt+C,EAGT,GAAInI,GAAKc,KAAK2sD,WAAY,CACzBroB,EAAUyjB,GAAQ7gD,CAClBo9B;EAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,EAC7CnhB,GAAUyjB,EAAO,GAAKzjB,EAAUmhB,EAAa,OACvC,CACNnhB,EAAUyjB,GAAQ7gD,CAClBo9B,GAAUyjB,EAAO,GAAKrC,CACtBphB,GAAUyjB,EAAO,GAAKpC,EAGvBL,EAAQyC,GAAQ8E,CAChBvH,GAAQyC,EAAO,GAAKqF,CACpB9H,GAAQyC,EAAO,GAAKsF,CACpB9H,GAASwC,KAAUtoD,EAAQqtD,EAAGrtD,EAAS2H,EAAEpH,KAAKyd,QAC9C8nC,GAASwC,EAAO,GAAKnC,CACrBL,GAASwC,EAAO,GAAKlC,CAErBkC,IAAQ,CAGR,IAAI7oD,EAAI,GAAK+/B,EAAI,EAAG,CACnBhgC,EAAIsrD,CACJrqD,GAAIqqD,EAAkB,CACtBhwC,GAAIra,EAAIF,KAAK2sD,WAAa,CAC1B1sD,GAAIhB,EAAIe,KAAK2sD,WAAa,CAE1B95B,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAU9nD,CAClB2yB,GAAQm1B,KAAUztC,CAElBsY,GAAQm1B,KAAU/oD,CAClB4zB,GAAQm1B,KAAUztC,CAClBsY,GAAQm1B,KAAU/nD,EAGnBsqD,KAKFxE,EAAiB1f,cAAcxT,EAE/BkzB,GAAiBzf,gBAAgBhC,EACjCyhB,GAAiBW,oBAAoBpB,EACrCS,GAAiBY,qBAAqBpB,OAEhC,IAAItoC,GAAgB,kBAAmB,GAQxCqvC,GAAA/rD,UAAAqmD,WAAP,SAAkBr6C,EAAwB0Q,GAGzC,GAAI/d,GAAU+/B,CACd,IAAIuF,EAGJ,IAAIvnB,GAAgB,sBAAuB,CAE1C,GAAI8oC,GAA6Dx5C,CAGjE,IAAIw5C,EAAiBvhB,KAAOxkC,KAAK+kD,cAAgBgB,EAAiBC,YAAa,CAC9ExhB,EAAMuhB,EAAiBvhB,QACjB,CACNA,EAAM,GAAI3+B,OAAc7F,KAAK+kD,aAAa,G7FyndlC,G6FrndL5zC,GAAe,CAGnB,KAAK8tB,EAAI,EAAGA,GAAKj/B,KAAK4sD,aAAc3tB,EAAG,CACtC,IAAK//B,EAAI,EAAGA,GAAKc,KAAK2sD,aAAcztD,EAAG,CAEtCslC,EAAIrzB,KAAajS,EAAEc,KAAK2sD,WAAa5G,EAAiBc,MACtDriB,GAAIrzB,KAAa8tB,EAAEj/B,KAAK4sD,WAAa7G,EAAiBe,QAKxDf,EAAiBvf,UAAUhC,OAErB,IAAIvnB,GAAgB,kBAAmB,GAIhD,OAAAqvC,IA5RmC5H,EA8RnC/kD,GAA8BJ,QAArB+sD,I7FmndNvF,iDAAiD,mDAAmDuG,yCAAyC,SAAS7uD,EAAQkB,EAAOJ,SAElKguD,+CAA+C,SAAS9uD,EAAQkB,EAAOJ,GAI7E,G8F15dMiuD,GAAmB,WAAzB,QAAMA,MAEEA,EAAAjtD,UAAAktD,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAKzL,KAAM,CACxB,MAAOyL,GAIRG,EAAOH,CACPE,GAAOF,EAAKzL,IAEZ,OAAO2L,EAAM,CACZA,EAAOA,EAAK3L,IACZ,IAAI2L,EAAM,CACTC,EAAOA,EAAK5L,IACZ2L,GAAOA,EAAK3L,MAId0L,EAAQE,EAAK5L,IACb4L,GAAK5L,KAAO,IAGZyL,GAAO1tD,KAAKytD,uBAAuBC,EACnCC,GAAQ3tD,KAAKytD,uBAAuBE,E9Fu5d9B,I8Fp5dFzjB,EACJ,IAAI4jB,EACJ,IAAIxuD,EAEJ,KAAKouD,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKK,OAASJ,EAAMI,OAAQ,CAC/BzuD,EAAIouD,CACJA,GAAOA,EAAKzL,SACN,CACN3iD,EAAIquD,CACJA,GAAQA,EAAM1L,KAGf,IAAK/X,EACJA,EAAS5qC,MACTwuD,GAAK7L,KAAO3iD,CAEbwuD,GAAOxuD,EAGR,GAAIouD,EACHI,EAAK7L,KAAOyL,MAAW,IAAIC,EAC3BG,EAAK7L,KAAO0L,CAEb,OAAOzjB,GAGDsjB,GAAAjtD,UAAAytD,sBAAP,SAA6BN,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAKzL,KAAM,CACxB,MAAOyL,GAIRG,EAAOH,CACPE,GAAOF,EAAKzL,IAEZ,OAAO2L,EAAM,CACZA,EAAOA,EAAK3L,IACZ,IAAI2L,EAAM,CACTC,EAAOA,EAAK5L,IACZ2L,GAAOA,EAAK3L,MAId0L,EAAQE,EAAK5L,IACb4L,GAAK5L,KAAO,IAGZyL,GAAO1tD,KAAKguD,sBAAsBN,EAClCC,GAAQ3tD,KAAKguD,sBAAsBL,E9F44d7B,I8Fz4dFzjB,EACJ,IAAI4jB,EACJ,IAAIxuD,EACJ,IAAI2uD,GAAa,CAEjB,KAAKP,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,C9F24d7C,G8Ft4dLO,GAAaR,EAAKS,aACtB,IAAIC,GAAaT,EAAMQ,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYX,EAAKY,QACrB,IAAIC,GAAYZ,EAAMW,QAEtB,IAAID,GAAME,EAAI,CACb,GAAIb,EAAKK,OAASJ,EAAMI,OACvBE,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZ3uD,EAAIouD,CACJA,GAAOA,EAAKzL,SACN,CACN3iD,EAAIquD,CACJA,GAAQA,EAAM1L,KAGf,IAAK/X,EAAQ,CACZA,EAAS5qC,CACTwuD,GAAOxuD,MACD,CACNwuD,EAAK7L,KAAO3iD,CACZwuD,GAAOxuD,GAIT,GAAIouD,EACHI,EAAK7L,KAAOyL,MAAW,IAAIC,EAC3BG,EAAK7L,KAAO0L,CAEb,OAAOzjB,GAET,OAAAsjB,KAEA7tD,GAA6BJ,QAApBiuD,O9F04dHgB,8CAA8C,SAAS/vD,EAAQkB,EAAOJ,GAI5E,G+FzieMkvD,GAAkB,WAAxB,QAAMA,MAEEA,EAAAluD,UAAAktD,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDe,GAAAluD,UAAAytD,sBAAP,SAA6BN,GAE5B,MAAOA,GAET,OAAAe,KAEA9uD,GAA4BJ,QAAnBkvD,O/FyieHC,yCAAyC,SAASjwD,EAAQkB,EAAOJ,GAKvE,GgG7jeMovD,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAAp6B,OAAgB,QAC/B,OAAAo6B,KAEAhvD,GAAuBJ,QAAdovD,OhG+jeHE,gCAAgC,SAASpwD,EAAQkB,EAAOJ,GAC9D,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiG/letB,IAAOG,GAAS/B,EAAe,oCAG/B,IAAOqwD,GAASrwD,EAAe,8CjGyme/B,IiG9leMswD,GAAI,SAAAruD,GAASX,EAAbgvD,EAAIruD,EAgBT,SAhBKquD,KAkBJruD,EAAAlB,KAAAQ,KAdOA,MAAAgvD,aAAgC,GAAInpD,OAoB5ClF,OAAAC,eAAWmuD,EAAAxuD,UAAA,ajGyleJM,IiGzleP,WAEC,MAAOkuD,GAAK7tD,WjG0leNH,WAAY,KACZC,aAAc,MiGtled+tD,GAAAxuD,UAAAU,QAAP,YAOO8tD,GAAAxuD,UAAA0uD,eAAP,SAAsBC,GAErB,GAAIvoD,GAAa3G,KAAKgvD,aAAavvD,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,IAAOzH,EAAG,CACpC,GAAGc,KAAKgvD,aAAa9vD,GAAG2L,MAAMqkD,EAC7B,MAAOlvD,MAAKgvD,aAAa9vD,GAE3B,GAAIiwD,GAAuB,GAAIL,EAC/BK,GAAWtkD,KAAKqkD,CAChBlvD,MAAKgvD,aAAa/9C,KAAKk+C,EACvB,OAAOA,GA/CMJ,GAAA7tD,UAAmB,cAkDlC,OAAA6tD,IApDmBvuD,EAsDLb,GAAAJ,QAALwvD,IjGyleN5tD,oCAAoCC,UAAUguD,8CAA8C,gDAAgDC,uCAAuC,SAAS5wD,EAAQkB,EAAOJ,GAI9M,GkG9peM+vD,GAAW,WAAjB,QAAMA,MASSA,EAAA5/B,KAAc,MAUd4/B,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEqB3vD,GAAAJ,QAAZ+vD,OlG+peHG,8CAA8C,SAAShxD,EAAQkB,EAAOJ,GA2B5E,GmG/reMmwD,GAAkB,WAuBvB,QAvBKA,GAuBOlqB,GAPLxlC,KAAAgmC,iBAA+B,GAAIngC,MAInC7F,MAAAimC,cAA4B,GAAIpgC,MAKtC7F,MAAKkmC,WAAW,CAChBlmC,MAAKwlC,QAAUA,CACf,IAAIxlC,KAAKwlC,SAAW,KAAM,CACzB,GAAIE,GAA2B1lC,KAAKwlC,QAAQlB,SAC5C,KAAK,GAAIza,GAAW,EAAGA,EAAI6b,EAAWjmC,OAAO,EAAGoqB,IAAK,CACpD,GAAG6b,EAAW7b,EAAE,GAAG7pB,KAAKkmC,WACvBlmC,KAAKkmC,WAAWR,EAAW7b,EAAE,KAKlC,MAAA6lC,KAE4B/vD,GAAAJ,QAAnBmwD,OnGireHN,+CAA+C,SAAS3wD,EAAQkB,EAAOJ,GAC7E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoGzvetB,IAAOG,GAAS/B,EAAe,oCAM/B,IAAOixD,GAAkBjxD,EAAa,6CpGgwetC,IoGrveMkxD,GAAmB,SAAAjvD,GAASX,EAA5B4vD,EAAmBjvD,EAgBxB,SAhBKivD,KAkBJjvD,EAAAlB,KAAAQ,KACAA,MAAK4vD,YAAc,GAAI/pD,MACvB7F,MAAK6vD,gBAAkB,GAAIlvD,QAMrBgvD,EAAApvD,UAAAU,QAAP,YAKO0uD,GAAApvD,UAAAuvD,eAAP,WAEC,MAAO9vD,MAAK4vD,YAEND,GAAApvD,UAAAqkC,iBAAP,WAEC,MAAO5kC,MAAK+vD,cAENJ,GAAApvD,UAAAyvD,iBAAP,SAAwBC,GAEvBjwD,KAAK+vD,cAAcE,EAKbN,GAAApvD,UAAA6kC,oBAAP,SAA2B8qB,GAE1B,MAAOlwD,MAAK6vD,gBAAgBK,GAKtBP,GAAApvD,UAAA4vD,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIX,GAAqCU,EACvFA,GAAOvlD,KAAKqlD,CACZlwD,MAAK4vD,YAAY3+C,KAAKo/C,EACtBrwD,MAAK6vD,gBAAgBK,GAAMG,EAG7B,OAAAV,IA7DkCnvD,EA+DlCb,GAA6BJ,QAApBowD,IpGuueNxuD,oCAAoCC,UAAUquD,6CAA6C,+CAA+Ca,6CAA6C,SAAS7xD,EAAQkB,EAAOJ,GAKlN,GqGzzeMgxD,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAA7gC,KAAc,MAOd6gC,GAAAG,MAAe,OAC9B,OAAAH,KAEA5wD,GAA2BJ,QAAlBgxD,OrGyzeHI,yCAAyC,SAASlyD,EAAQkB,EAAOJ,GAOvE,GsG31eMqxD,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,QAAiB,SAKjBD,GAAAE,MAAe,OAC9B,OAAAF,KAEAjxD,GAAuBJ,QAAdqxD,OtG61eHG,2CAA2C,SAAStyD,EAAQkB,EAAOJ,GAKzE,GuGj3eMyxD,GAAe,WAArB,QAAMA,KAMEhxD,KAAAwwD,OAAgB,QAMhBxwD,MAAAixD,QAAiB,SAMjBjxD,MAAAywD,KAAc,MAMdzwD,MAAA0wD,MAAe,QACvB,MAAAM,KAEyBrxD,GAAAJ,QAAhByxD,OvGi3eHE,sCAAsC,SAASzyD,EAAQkB,EAAOJ,GACpE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwGr5etB,IAAOG,GAAS/B,EAAe,oCxGk7e/B,IwGn5eM0yD,GAAU,SAAAzwD,GAASX,EAAnBoxD,EAAUzwD,EA4Of,SA5OKywD,GA4OOC,EAAiC1sB,EAAkB/T,EAAiC0gC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyBC,EAAuBC,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAV,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAA1sB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAA/T,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAA0gC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3SpxD,EAAAlB,KAAAQ,KAjFMA,MAAA+xD,SAAiC,GAAIlsD,MAkF3C7F,MAAKgyD,UAAYZ,CACjBpxD,MAAK0kC,KAAOA,CACZ1kC,MAAKqxD,KAAOA,CACZrxD,MAAKsxD,OAASA,CACdtxD,MAAKuxD,UAAYA,CACjBvxD,MAAKwxD,IAAMA,CACXxxD,MAAKyxD,YAAcA,CACnBzxD,MAAK0xD,MAAQA,CACb1xD,MAAK2xD,WAAaA,CAClB3xD,MAAK4xD,YAAcA,CACnB5xD,MAAK6xD,OAASA,CACd7xD,MAAK8xD,QAAUA,EAMhBnxD,OAAAC,eAAWuwD,EAAA5wD,UAAA,axGmueJM,IwGnueP,WAEC,MAAOswD,GAAWjwD,WxGoueZH,WAAY,KACZC,aAAc,MwGr+ePmwD,GAAAjwD,UAAmB,oBAkQlC,OAAAiwD,IApQyB3wD,EAsQLb,GAAAJ,QAAX4xD,IxGwueNhwD,oCAAoCC,YAAY6wD,+CAA+C,SAASxzD,EAAQkB,EAAOJ,GAM1H,GyG9gfM2yD,GAAmB,WAAzB,QAAMA,MASSA,EAAA39B,OAAgB,QAOhB29B,GAAAC,UAAmB,WAClC,OAAAD,KAE6BvyD,GAAAJ,QAApB2yD,OzGghfHE,2CAA2C,SAAS3zD,EAAQkB,EAAOJ,GAOzE,G0GzifM8yD,GAAe,WA4DpB,QA5DKA,GA4DOnrD,EAAgB2C,EAAoBrC,EAAqB8qD,EAAqBC,EAAsBT,GAApG,GAAA5qD,QAAA,GAAc,CAAdA,EAAAwrB,IAAgB,GAAA7oB,QAAA,GAAkB,CAAlBA,EAAA6oB,IAAoB,GAAAlrB,QAAA,GAAmB,CAAnBA,EAAAkrB,IAAqB,GAAA4/B,QAAA,GAAmB,CAAnBA,EAAA5/B,IAAqB,GAAA6/B,QAAA,GAAoB,CAApBA,EAAA7/B,IAAsB,GAAAo/B,QAAA,GAAoB,CAApBA,EAAAp/B,KAIjH,MAAA2/B,KAEyB1yD,GAAAJ,QAAhB8yD,O1GsgfH9kB,+CAA+C,SAAS9uC,EAAQkB,EAAOJ,GAC7E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2GnlfrB,IAAOmyD,GAAS/zD,EAAc,iCAC/B,IAAO2xC,GAAO3xC,EAAe,+BAE7B,IAAOW,GAAKX,EAAe,+BAC3B,IAAOg0D,GAAUh0D,EAAc,mCAE/B,IAAO6xC,GAAW7xC,EAAc,0CAEhC,IAAM6tC,GAAe,SAAA5rC,GAASX,EAAxBusC,EAAe5rC,EAyCpB,SAzCK4rC,GAyCOomB,GAEXhyD,EAAAlB,KAAAQ,KAEA,IAAI0yD,YAAkBtiB,GACrBpwC,KAAKyyC,UAAY,GAAI+f,GAAUE,OAE/B1yD,MAAKyyC,UAAYigB,EAtCnB/xD,OAAAC,eAAW0rC,EAAA/rC,UAAA,a3GslfJM,I2GtlfP,WAEC,MAAOyrC,GAAgBprC,W3GulfjBH,WAAY,KACZC,aAAc,M2GjlfrBL,QAAAC,eAAW0rC,EAAA/rC,UAAA,a3GwlfJM,I2GxlfP,WAEC,MAAOb,MAAK2yD,Y3GylfNnsD,I2GtlfP,SAAqBC,GAEpB,GAAIzG,KAAK2yD,YAAclsD,EACtB,MAED,KAAKgsD,EAAWG,eAAensD,EAAMywC,SACpC,KAAM,IAAI93C,GAAM,oFAEjBY,MAAK2yD,WAAalsD,CAElBzG,MAAK6yD,SAAS7yD,KAAK2yD,WAAWjgB,KAAK7oC,MAAO7J,KAAK2yD,WAAWjgB,KAAKlrC,OAE/DxH,MAAK8yD,qB3GmlfC/xD,WAAY,KACZC,aAAc,M2GtnfPsrC,GAAAprC,UAAmB,2BAiDlC,OAAAorC,IAnD8BgE,EAqD9B3wC,GAAyBJ,QAAhB+sC,I3G0kfNsE,+BAA+BxvC,UAAU2xD,iCAAiC3xD,UAAUsf,+BAA+Btf,UAAU4xD,mCAAmC5xD,UAAU0vC,0CAA0C,4CAA4CqJ,iDAAiD,SAAS17C,EAAQkB,EAAOJ,GAC5U,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4G5oftB,IAAO4yD,GAAWx0D,EAAc,mCAChC,IAAOy6C,GAASz6C,EAAc,iCAE9B,IAAO6xC,GAAW7xC,EAAc,0CAGhC,IAAM26C,GAAiB,SAAA14C,GAASX,EAA1Bq5C,EAAiB14C,EAoCtB,SApCK04C,GAoCOsZ,GAEXhyD,EAAAlB,KAAAQ,KAEA,IAAI0yD,YAAkBxZ,GACrBl5C,KAAK+5C,YAAc,GAAIkZ,GAAYP,OAEnC1yD,MAAK+5C,YAAc2Y,EAjCrB/xD,OAAAC,eAAWw4C,EAAA74C,UAAA,a5G+ofJM,I4G/ofP,WAEC,MAAOu4C,GAAkBl4C,W5GgpfnBH,WAAY,KACZC,aAAc,M4G1ofrBL,QAAAC,eAAWw4C,EAAA74C,UAAA,e5GipfJM,I4GjpfP,WAEC,MAAOb,MAAKkzD,c5GkpfN1sD,I4G/ofP,SAAuBC,GAEtB,GAAIzG,KAAKkzD,cAAgBzsD,EACxB,MAEDzG,MAAKkzD,aAAezsD,CAEpBzG,MAAK8yD,qB5G8ofC/xD,WAAY,KACZC,aAAc,M4G5qfPo4C,GAAAl4C,UAAmB,6BA2ClC,OAAAk4C,IA7CgC9I,EA+ChC3wC,GAA2BJ,QAAlB65C,I5GsofNa,iCAAiC74C,UAAU+xD,mCAAmC/xD,UAAU0vC,0CAA0C,4CAA4CA,2CAA2C,SAASryC,EAAQkB,EAAOJ,GACpP,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6G/rftB,IAAOG,GAAS/B,EAAc,oC7Gqsf9B,I6G9rfM6xC,GAAW,SAAA5vC,GAASX,EAApBuwC,EAAW5vC,EAoBhB,SApBK4vC,KAsBJ5vC,EAAAlB,KAAAQ,KApBOA,MAAAozD,WAA+B,GAAIvtD,MAEpC7F,MAAAoJ,OAAgB,CAChBpJ,MAAAyH,QAAiB,EAExB9G,OAAAC,eAAI0vC,EAAA/vC,UAAA,S7GmsfGM,I6GnsfP,WAEC,MAAOb,MAAKoJ,Q7GosfNrI,WAAY,KACZC,aAAc,M6GlsfrBL,QAAAC,eAAI0vC,EAAA/vC,UAAA,U7GqsfGM,I6GrsfP,WAEC,MAAOb,MAAKyH,S7GssfN1G,WAAY,KACZC,aAAc,M6GzrfdsvC,GAAA/vC,UAAAuyD,kBAAP,WAEC,GAAInsD,GAAa3G,KAAKozD,WAAW3zD,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIyH,EAAKzH,IAC/Bc,KAAKozD,WAAWl0D,GAAGgf,aAOdoyB,GAAA/vC,UAAA8yD,eAAP,WAEC,MAAOrzD,KAAKozD,WAAW3zD,OACtBO,KAAKozD,WAAW,GAAGnyD,UAMdqvC,GAAA/vC,UAAAU,QAAP,WAEC,MAAOjB,KAAKozD,WAAW3zD,OACtBO,KAAKozD,WAAW,GAAGnyD,UAIdqvC,GAAA/vC,UAAA+yD,eAAP,SAAsBC,GAErBvzD,KAAKozD,WAAWniD,KAAKsiD,EAErB,OAAOA,GAGDjjB,GAAA/vC,UAAAizD,kBAAP,SAAyBD,GAExBvzD,KAAKozD,WAAW/hD,OAAOrR,KAAKozD,WAAWhiD,QAAQmiD,GAAY,EAE3D,OAAOA,GAGDjjB,GAAA/vC,UAAAsyD,SAAP,SAAgBhpD,EAAcrC,GAE7BxH,KAAKoJ,OAASS,CACd7J,MAAKyH,QAAUD,EAGjB,OAAA8oC,IA3E0B9vC,EA6E1Bb,GAAqBJ,QAAZ+wC,I7GirfNnvC,oCAAoCC,YAAYqyD,kDAAkD,SAASh1D,EAAQkB,EAAOJ,GAC7H,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8G3wftB,IAAOqzD,GAAaj1D,EAAc,4C9GixflC,I8G5wfMk1D,GAAkB,SAAAjzD,GAASX,EAA3B4zD,EAAkBjzD,EAEvB,SAFKizD,KAIJjzD,EAAAlB,KAAAQ,MAEF,MAAA2zD,IANiCD,EAQjC/zD,GAA4BJ,QAAnBo0D,I9G6wfNC,4CAA4C,8CAA8CA,6CAA6C,SAASn1D,EAAQkB,EAAOJ,G+GtxflK,GAAO6jD,GAAkB3kD,EAAa,6C/G2xftC,I+GnxfMi1D,GAAa,WAelB,QAfKA,KASG1zD,KAAA6zD,eAAwB,CACzB7zD,MAAA++C,cAAuB,CACvB/+C,MAAA8zD,yBAAkC,CAMxC9zD,MAAK+zD,qBAAuB,GAAI3Q,GAMjCziD,OAAAC,eAAW8yD,EAAAnzD,UAAA,U/GuwfJM,I+GvwfP,WAEC,MAAOb,MAAKqnB,U/GwwfN7gB,I+GrwfP,SAAkBC,GAEjBzG,KAAKqnB,SAAW5gB,CAChBzG,MAAKg0D,YAAch0D,KAAKqnB,SAASuzB,e/Gswf3B75C,WAAY,KACZC,aAAc,M+GjwfrBL,QAAAC,eAAW8yD,EAAAnzD,UAAA,c/GuwfJM,I+GvwfP,WAEC,MAAOb,MAAKi0D,mB/GwwfNztD,I+GrwfP,SAAsBC,GAErBzG,KAAKi0D,kBAAoBxtD,G/GswfnB1F,WAAY,KACZC,aAAc,M+GjwfrBL,QAAAC,eAAW8yD,EAAAnzD,UAAA,c/GuwfJM,I+GvwfP,WAEC,MAAOb,MAAKk0D,c/GwwfNnzD,WAAY,KACZC,aAAc,M+GnwfrBL,QAAAC,eAAW8yD,EAAAnzD,UAAA,e/GywfJM,I+GzwfP,WAEC,MAAOb,MAAK++C,e/G0wfNh+C,WAAY,KACZC,aAAc,M+GrwfrBL,QAAAC,eAAW8yD,EAAAnzD,UAAA,0B/G2wfJM,I+G3wfP,WAEC,MAAOb,MAAK8zD,0B/G4wfN/yD,WAAY,KACZC,aAAc,M+Gvwfd0yD,GAAAnzD,UAAAipB,MAAP,WAECxpB,KAAK++C,cAAgB/+C,KAAK8zD,yBAA2B,CACrD9zD,MAAKg0D,YAAch0D,KAAKi0D,kBAAmBj0D,KAAKi0D,kBAAsBj0D,KAAKqnB,SAAUrnB,KAAKqnB,SAASuzB,cAAgB,IACnH56C,MAAK6zD,eAAiB7zD,KAAKg0D,YAAah0D,KAAKg0D,YAAYv0D,OAAS,CAClEO,MAAKk0D,aAAe,IACpBl0D,MAAK+zD,qBAAqBvQ,UAQpBkQ,GAAAnzD,UAAAm8C,UAAP,SAAiBwC,GAEhB,GAAIiV,GAAgBn0D,KAAKkQ,MAAMyU,kBAAoBu6B,EAAKv6B,kBAAoBu6B,EAAKjlC,YAAYja,KAAKg0D,YAAah0D,KAAK6zD,eAEpH3U,GAAKv6B,iBAAmB3kB,KAAKkQ,MAAMyU,gBAEnC,OAAOwvC,GAODT,GAAAnzD,UAAAo8C,sBAAP,SAA6BjnC,IAStBg+C,GAAAnzD,UAAA48C,YAAP,SAAmBznC,GAElB1V,KAAK++C,eAEL,IAAIrpC,EAAO9D,mBACV5R,KAAK8zD,0BAEN,IAAIvQ,GAAsBvjD,KAAK+zD,qBAAqBvT,SACpD+C,GAAK7tC,OAASA,CAEd6tC,GAAKtB,KAAOjiD,KAAKk0D,YACjBl0D,MAAKk0D,aAAe3Q,EAOdmQ,GAAAnzD,UAAAg+C,gBAAP,SAAuB7oC,IAShBg+C,GAAAnzD,UAAAygD,gBAAP,SAAuBtrC,IAShBg+C,GAAAnzD,UAAA4gD,YAAP,SAAmBzrC,IAIpB,OAAAg+C,KAEA/zD,GAAuBJ,QAAdm0D,I/G4vfNxQ,6CAA6C,+CAA+CkR,+CAA+C,SAAS31D,EAAQkB,EAAOJ,GACtK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgHp6ftB,IAAOqzD,GAAaj1D,EAAc,4ChH06flC,IgHh6fM41D,GAAe,SAAA3zD,GAASX,EAAxBs0D,EAAe3zD,EAsDpB,SAtDK2zD,KAwDJ3zD,EAAAlB,KAAAQ,KAhDMA,MAAAs0D,YAAqB,CAEpBt0D,MAAAu0D,sBAA+B,CAC/Bv0D,MAAAw0D,gBAAyB,CACzBx0D,MAAAy0D,gBAAyB,CA8ChCz0D,MAAK00D,SAAW,GAAI7uD,MACpB7F,MAAK20D,mBAAqB,GAAI9uD,MAC9B7F,MAAK40D,aAAe,GAAI/uD,MACxB7F,MAAK60D,aAAe,GAAIhvD,MAExB7F,MAAKq9C,kBAAoB,KA9C1B18C,OAAAC,eAAWyzD,EAAA9zD,UAAA,qBhHi6fJM,IgHj6fP,WAEC,MAAOb,MAAK20D,oBhHk6fN5zD,WAAY,KACZC,aAAc,MgH75frBL,QAAAC,eAAWyzD,EAAA9zD,UAAA,ehHm6fJM,IgHn6fP,WAEC,MAAOb,MAAK60D,chHo6fN9zD,WAAY,KACZC,aAAc,MgH/5frBL,QAAAC,eAAWyzD,EAAA9zD,UAAA,UhHq6fJM,IgHr6fP,WAEC,MAAOb,MAAK00D,UhHs6fN3zD,WAAY,KACZC,aAAc,MgHj6frBL,QAAAC,eAAWyzD,EAAA9zD,UAAA,ehHu6fJM,IgHv6fP,WAEC,MAAOb,MAAK40D,chHw6fN7zD,WAAY,KACZC,aAAc,MgHn6frBL,QAAAC,eAAWyzD,EAAA9zD,UAAA,UhHy6fJM,IgHz6fP,WAEC,MAAOb,MAAK80D,UhH06fN/zD,WAAY,KACZC,aAAc,MgHx5fdqzD,GAAA9zD,UAAAo8C,sBAAP,SAA6BjnC,GAE5B1V,KAAK20D,mBAAoB30D,KAAKu0D,yBAA+C7+C,EAOvE2+C,GAAA9zD,UAAAg+C,gBAAP,SAAuB7oC,GAEtB1V,KAAK60D,aAAc70D,KAAKy0D,mBAAmC/+C,EAOrD2+C,GAAA9zD,UAAAygD,gBAAP,SAAuBtrC,GAEtB1V,KAAK40D,aAAc50D,KAAKw0D,mBAAmC9+C,EAOrD2+C,GAAA9zD,UAAA4gD,YAAP,SAAmBzrC,GAElB1V,KAAK80D,SAAoBp/C,EAMnB2+C,GAAA9zD,UAAAipB,MAAP,WAEC9oB,EAAAH,UAAMipB,MAAKhqB,KAAAQ,KAEXA,MAAK80D,SAAW,IAEhB,IAAI90D,KAAKs0D,YAAc,EACtBt0D,KAAK00D,SAASj1D,OAASO,KAAKs0D,YAAc,CAE3C,IAAIt0D,KAAKu0D,sBAAwB,EAChCv0D,KAAK20D,mBAAmBl1D,OAASO,KAAKu0D,sBAAwB,CAE/D,IAAIv0D,KAAKw0D,gBAAkB,EAC1Bx0D,KAAK40D,aAAan1D,OAASO,KAAKw0D,gBAAkB,CAEnD,IAAIx0D,KAAKy0D,gBAAkB,EAC1Bz0D,KAAK60D,aAAap1D,OAASO,KAAKy0D,gBAAkB,EAErD,OAAAJ,IA3H8BX,EA6H9B/zD,GAAyBJ,QAAhB80D,IhHk5fNT,4CAA4C,8CAA8C3Q,gDAAgD,SAASxkD,EAAQkB,EAAOJ,GACrK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiH/hgBtB,IAAOuC,GAAQnE,EAAgB,gCAG/B,IAAOi1D,GAAaj1D,EAAc,4CjHyigBlC,IiH5hgBM6iD,GAAgB,SAAA5gD,GAASX,EAAzBuhD,EAAgB5gD,EAoCrB,SApCK4gD,KAsCJ5gD,EAAAlB,KAAAQ,KApCOA,MAAA+0D,aAAwB,GAAInyD,EAC5B5C,MAAAg1D,cAAyB,GAAIpyD,EAE9B5C,MAAA2kB,iBAA0B,EAKjChkB,OAAAC,eAAW0gD,EAAA/gD,UAAA,ejHiigBJM,IiHjigBP,WAEC,MAAOb,MAAK+0D,cjHkigBNvuD,IiH/hgBP,SAAuBC,GAEtBzG,KAAK+0D,aAAetuD,GjHgigBd1F,WAAY,KACZC,aAAc,MiH3hgBrBL,QAAAC,eAAW0gD,EAAA/gD,UAAA,gBjHiigBJM,IiHjigBP,WAEC,MAAOb,MAAKg1D,ejHkigBNxuD,IiH/hgBP,SAAwBC,GAEvBzG,KAAKg1D,cAAgBvuD,GjHgigBf1F,WAAY,KACZC,aAAc,MiHjhgBdsgD,GAAA/gD,UAAAm8C,UAAP,SAAiBwC,GAEhB,MAAOA,GAAK3B,kBAAkBv9C,KAAK+0D,aAAc/0D,KAAKg1D,eAExD,OAAA1T,IAlD+BoS,EAoDL/zD,GAAAJ,QAAjB+hD,IjHyhgBNruC,gCAAgC7R,UAAUwyD,4CAA4C,8CAA8C7X,qDAAqD,SAASt9C,EAAQkB,EAAOJ,GACpN,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkHjmgBtB,IAAOqzD,GAAaj1D,EAAc,4ClHumgBlC,IkHlmgBM+8C,GAAqB,SAAA96C,GAASX,EAA9By7C,EAAqB96C,EAE1B,SAFK86C,KAIJ96C,EAAAlB,KAAAQ,MAMMw7C,EAAAj7C,UAAAm8C,UAAP,SAAiBwC,GAEhB,GAAIiV,GAAgBn0D,KAAKkQ,MAAMyU,kBAAoBu6B,EAAKv6B,kBAAoBu6B,EAAKtC,iBAEjF,KAAKuX,EAAO,CACXjV,EAAKv6B,iBAAmB3kB,KAAKkQ,MAAMyU,gBAEnC,OAAO,OAGR,MAAOjkB,GAAAH,UAAMm8C,UAASl9C,KAAAQ,KAACk/C,GAEzB,OAAA1D,IAtBoCkY,EAwBL/zD,GAAAJ,QAAtBi8C,IlH8lgBNoY,4CAA4C,8CAA8CqB,iCAAiC,SAASx2D,EAAQkB,EAAOJ,GmH5ngBtJ,GAAO6wC,GAAO3xC,EAAe,+BAC7B,IAAO+zD,GAAS/zD,EAAc,iCAC9B,IAAOy2D,GAASz2D,EAAc,kCAE9B,IAAO2qC,GAAS3qC,EAAc,sCAC9B,IAAO6tC,GAAe7tC,EAAa,8CnHgogBnC,ImH3ngBM02D,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqB/xC,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH8xC,GAAAE,UAAd,SAAwBhyC,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB6xC,GACnB,MAAO7xC,EAER,OAAmBA,GAcL8xC,GAAAG,MAAf,SAAqBC,GAEpB,GAAI91D,GAAwB81D,EAAI91D,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIc,KAAKw1D,UAAUpkD,QAAQmkD,EAAIE,OAAOv2D,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGMi2D,GAAAO,SAAd,SAAuBryC,GAEtB,SAAU,IAAU,SACnB,MAAOhU,MAAK0pC,MAAe11B,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOhU,MAAK0pC,MAAM1pC,KAAKsmD,SAAS,SAEjC,IAAI31D,KAAK41D,aAAe,KAAM,CAC7B51D,KAAK41D,YAAc,GAAIj1D,OACvBX,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,aAAe,MAChC51D,MAAK41D,YAAY,kBAAoB,OACrC51D,MAAK41D,YAAY,kBAAoB,QACrC51D,MAAK41D,YAAY,mBAAqB,OACtC51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,iBAAmB,OACpC51D,MAAK41D,YAAY,gBAAkB,OACnC51D,MAAK41D,YAAY,QAAU,GAC3B51D,MAAK41D,YAAY,YAAc,GAC/B51D,MAAK41D,YAAY,cAAgB,GACjC51D,MAAK41D,YAAY,QAAU,GAC3B51D,MAAK41D,YAAY,cAAgB,OACjC51D,MAAK41D,YAAY,eAAiB,KAClC51D,MAAK41D,YAAY,gBAAkB,OACnC51D,MAAK41D,YAAY,WAAa,OAC9B51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,cAAgB,QACjC51D,MAAK41D,YAAY,SAAW,QAC5B51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,iBAAmB,QACpC51D,MAAK41D,YAAY,mBAAqB,OACtC51D,MAAK41D,YAAY,iBAAmB,OACpC51D,MAAK41D,YAAY,YAAc,KAC/B51D,MAAK41D,YAAY,QAAU,KAC3B51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,iBAAmB,KACpC51D,MAAK41D,YAAY,QAAU,KAC3B51D,MAAK41D,YAAY,QAAU,KAC3B51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,cAAgB,OACjC51D,MAAK41D,YAAY,oBAAsB,OACvC51D,MAAK41D,YAAY,gBAAkB,OACnC51D,MAAK41D,YAAY,kBAAoB,OACrC51D,MAAK41D,YAAY,YAAc,OAC/B51D,MAAK41D,YAAY,aAAe,KAChC51D,MAAK41D,YAAY,SAAW,KAC5B51D,MAAK41D,YAAY,eAAiB,OAClC51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,QAAU,KAC3B51D,MAAK41D,YAAY,cAAgB,OACjC51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,eAAiB,QAClC51D,MAAK41D,YAAY,eAAiB,QAClC51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,cAAgB,OACjC51D,MAAK41D,YAAY,eAAiB,KAClC51D,MAAK41D,YAAY,qBAAuB,KACxC51D,MAAK41D,YAAY,kBAAoB,OACrC51D,MAAK41D,YAAY,aAAe,OAChC51D,MAAK41D,YAAY,SAAW,OAC5B51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,iBAAmB,QACpC51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,QAAU,QAC3B51D,MAAK41D,YAAY,UAAY,QAC7B51D,MAAK41D,YAAY,SAAW,QAC5B51D,MAAK41D,YAAY,iBAAmB,QACpC51D,MAAK41D,YAAY,kBAAoB,QACrC51D,MAAK41D,YAAY,YAAc,QAC/B51D,MAAK41D,YAAY,SAAW,QAC5B51D,MAAK41D,YAAY,eAAiB,QAClC51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,OAAS,QAC1B51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,UAAY,QAC7B51D,MAAK41D,YAAY,eAAiB,OAClC51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,YAAY,QAAU,QAC3B51D,MAAK41D,YAAY,cAAgB,QACjC51D,MAAK41D,YAAY,WAAa,OAC9B51D,MAAK41D,YAAY,UAAY,OAC7B51D,MAAK41D,YAAY,SAAW,QAC5B51D,MAAK41D,YAAY,aAAe,QAChC51D,MAAK41D,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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic alpha:number;\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i){\r\n\t\t\tthis._subMeshes[i].colorTransform = value;\r\n\t\t}\r\n\r\n\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n        clone._iMasks = this._iMasks;\r\n        clone._iMaskID = this._iMaskID;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar positions:Array<number> = new Array<number>();\r\n\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\r\n\t\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\r\n\t\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices.push(indices2[v] + tri_idx_offset);\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < positions2.length / 3; v++) {\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3] * char_scale) + x_offset);\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3 + 1] * char_scale) + y_offset);\r\n\t\t\t\t\t\tpositions.push(positions2[v * 3 + 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2 + 1]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[0]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Array<number> = this.subgeom.positions;\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"
  ],
  "sourceRoot": ""
}
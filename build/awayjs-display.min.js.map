{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/View.ts",
    "awayjs-display/lib/animators/data/ParticleData.ts",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/display/Billboard.ts",
    "awayjs-display/lib/display/Camera.ts",
    "awayjs-display/lib/display/DirectionalLight.ts",
    "awayjs-display/lib/display/DisplayObjectContainer.ts",
    "awayjs-display/lib/display/DisplayObject.ts",
    "awayjs-display/lib/display/LightBase.ts",
    "awayjs-display/lib/display/LightProbe.ts",
    "awayjs-display/lib/display/LineSegment.ts",
    "awayjs-display/lib/display/LoaderContainer.ts",
    "awayjs-display/lib/display/Mesh.ts",
    "awayjs-display/lib/display/MovieClip.ts",
    "awayjs-display/lib/display/PointLight.ts",
    "awayjs-display/lib/display/Scene.ts",
    "awayjs-display/lib/display/Shape.ts",
    "awayjs-display/lib/display/Skybox.ts",
    "awayjs-display/lib/display/TextField.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathCommand.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/GraphicsPath.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/ElementsEvent.ts",
    "awayjs-display/lib/events/GraphicsEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SurfaceEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/graphics/ElementsBase.ts",
    "awayjs-display/lib/graphics/ElementsType.ts",
    "awayjs-display/lib/graphics/Graphics.ts",
    "awayjs-display/lib/graphics/Graphic.ts",
    "awayjs-display/lib/graphics/LineElements.ts",
    "awayjs-display/lib/graphics/TriangleElements.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/RenderableListItemPool.ts",
    "awayjs-display/lib/pool/RenderableListItem.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/ElementsUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Mesh",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/display/Billboard",
    "awayjs-display/lib/display/Camera",
    "awayjs-display/lib/display/DirectionalLight",
    "awayjs-display/lib/display/LightProbe",
    "awayjs-display/lib/display/LineSegment",
    "awayjs-display/lib/display/Mesh",
    "awayjs-display/lib/display/PointLight",
    "awayjs-display/lib/display/Skybox",
    "awayjs-display/lib/display/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/View",
    "getTimer",
    "TouchPoint",
    "Scene",
    "RaycastPicker",
    "CameraEvent",
    "DisplayObjectEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_pScene",
    "partition",
    "_iRegisterEntity",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "traversePartitions",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/base/TouchPoint",
    "awayjs-display/lib/display/Scene",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/base/Timeline",
    "ColorTransform",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "alphaMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/Transform",
    "Matrix3D",
    "Matrix3DUtils",
    "Vector3D",
    "TransformEvent",
    "Transform",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "ElementsType",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "LINE",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/graphics/ElementsType",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "AbstractMethodError",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "Rectangle",
    "DisplayObject",
    "RenderableEvent",
    "SurfaceEvent",
    "DefaultMaterialManager",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "shortestCollisionDistance",
    "_pPickingCollider",
    "testBillboardCollision",
    "_pPickingCollisionVO",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "_pInvalidateBounds",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_RENDER_OWNER",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/DisplayObject",
    "awayjs-display/lib/events/RenderableEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "DisplayObjectContainer",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "LightBase",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "iGetObjectProjectionMatrix",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/display/LightBase",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_pIsContainer",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setEmpty",
    "_iSetScene",
    "splice",
    "hitTestPoint",
    "shapeFlag",
    "masksFlag",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_explicitMasks",
    "maskHit",
    "_hitTestPointInternal",
    "_updateMaskMode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "Box",
    "Sphere",
    "Point",
    "PickingCollisionVO",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskFlag",
    "isMask",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pImplicitPartition",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/display/IEntity",
    "LightEvent",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "awayjs-display/lib/events/LightEvent",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "invalidateGraphics",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "Graphics",
    "GraphicsEvent",
    "_shareAnimationGraphics",
    "_tempPoint",
    "_onGraphicsBoundsInvalidDelegate",
    "onGraphicsBoundsInvalid",
    "_graphics",
    "BOUNDS_INVALID",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_meshes",
    "pop",
    "mesh",
    "shareAnimationGraphics",
    "graphics",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "acceptTraverser",
    "count",
    "local",
    "awayjs-display/lib/events/GraphicsEvent",
    "awayjs-display/lib/graphics/Graphics",
    "awayjs-display/lib/display/MovieClip",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "BasicPartition",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/display/Shape",
    "Shape",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AttributesView",
    "Float3Attributes",
    "Float2Attributes",
    "Matrix",
    "TextFieldType",
    "TriangleElements",
    "Sampler2D",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "vertices",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "getChar",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "positions",
    "numVertices",
    "curveData2",
    "getCustomAtributes",
    "leading",
    "attributesView",
    "Float32Array",
    "vertexBuffer",
    "buffer",
    "curveElements",
    "setPositions",
    "setCustomAttributes",
    "addGraphic",
    "uvMatrix",
    "uv_values",
    "animateUVs",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/graphics/TriangleElements",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "GraphicsPathCommand",
    "NO_OP",
    "MOVE_TO",
    "LINE_TO",
    "CURVE_TO",
    "CURVE_TO_2",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "CUBIC_CURVE",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPath",
    "commands",
    "winding",
    "_data",
    "_commands",
    "_draw_directions",
    "_contours_closed",
    "_startPoint",
    "_cur_point",
    "_tmp_point",
    "isFill",
    "_winding",
    "_isFill",
    "curveTo",
    "controlX",
    "controlY",
    "anchorX",
    "anchorY",
    "testpoint",
    "degree_anchor",
    "acos",
    "PI",
    "degree_control",
    "atan2",
    "lineTo",
    "finalizeContour",
    "wideLineTo",
    "wideMoveTo",
    "awayjs-display/lib/draw/Graphics",
    "PartialImplementationError",
    "_current_position",
    "_target",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "draw_fill",
    "beginFill",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "drawCircle",
    "radius2",
    "degree",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "draw_strokes",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "contour_commands",
    "contour_data",
    "contour_closed",
    "contours_closed",
    "vert_cnt",
    "data_cnt",
    "draw_started",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "start_point",
    "end_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "first_point",
    "first_point_set",
    "closed",
    "tessVerts",
    "_tess_obj",
    "newTess",
    "contour_points",
    "contour_types",
    "curve_direction",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "con_length",
    "next_start_right",
    "next_start_left",
    "next_end_right",
    "next_end_left",
    "prevLeft",
    "prevRight",
    "nextIdx",
    "cur_vertical",
    "next_vertical",
    "cur_horizontal",
    "next_horizontal",
    "factor1",
    "offsetY1",
    "factor2",
    "offsetY2",
    "factor3",
    "offsetY3",
    "factor4",
    "offsetY4",
    "finished_curves",
    "finished_curves_types",
    "test_concave_curves",
    "test_convex_curves",
    "curve_sign",
    "getSign",
    "curve_sign2",
    "curve_sign3",
    "subdivided",
    "subdivided2",
    "subdivideCurve",
    "sc",
    "verticesF32",
    "addContour",
    "tesselate",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "attributesBuffer",
    "setUVs",
    "getDefaultMaterial",
    "bothSides",
    "useColorTransform",
    "curves",
    "isClockWiseXY",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "contour_draw_directions",
    "draw_directions",
    "draw_direction",
    "contours_vertices",
    "curve_attr_1",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "apply",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "localNormal",
    "elementsIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "_renderable",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes",
    "ElementsBase",
    "concatenatedBuffer",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "setIndices",
    "values",
    "offset",
    "clearIndices",
    "invalidateIndicies",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "pickingCollider",
    "pickingCollisionVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "TRIANGLE",
    "Graphic",
    "ElementsUtils",
    "sourceEntity",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "invalidateElements",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "newGraphic",
    "_available",
    "parent",
    "_invalidateBounds",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setBoundIdentity",
    "hitTestTriangleElements",
    "awayjs-display/lib/graphics/Graphic",
    "awayjs-display/lib/utils/ElementsUtils",
    "_iIndex",
    "_iPickingCollisionVO",
    "awayjs-display/lib/graphics/LineElements",
    "Byte4Attributes",
    "Float1Attributes",
    "LineElements",
    "_numVertices",
    "_positions",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "floor",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "cells",
    "lastCollisionIndex",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "scaleUVs",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "isContainerNode",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "_updateBounds",
    "onClear",
    "_debugEntity",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_partition",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "debugVisible",
    "isEntityCollector",
    "boundsPrimitive",
    "iMarkForUpdate",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pEntityNode",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "uvDim",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "RaycastCollector",
    "_ignoredRenderables",
    "_onlyMouseEnabled",
    "_numRenderables",
    "_raycastCollector",
    "_renderables",
    "_view",
    "getSceneCollision",
    "renderableHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "renderables",
    "sortOnNearT",
    "renderable1",
    "renderable2",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/RenderableListItemPool",
    "RenderableListItem",
    "RenderableListItemPool",
    "_pool",
    "_index",
    "_poolSize",
    "getItem",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/RenderableListItem",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "_elements",
    "updateGraphics",
    "updateUVs",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "dim",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/traverse/CollectorBase",
    "CollectorBase",
    "_numCullPlanes",
    "_pRenderableListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pRenderableHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "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AY,eAAiB,KAClC91E,MAAK81E,YAAY,gBAAkB,OACnC91E,MAAK81E,YAAY,WAAa,OAC9B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,cAAgB,QACjC91E,MAAK81E,YAAY,SAAW,QAC5B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,iBAAmB,QACpC91E,MAAK81E,YAAY,mBAAqB,OACtC91E,MAAK81E,YAAY,iBAAmB,OACpC91E,MAAK81E,YAAY,YAAc,KAC/B91E,MAAK81E,YAAY,QAAU,KAC3B91E,MAAK81E,YAAY,aAAe,OAChC91E,MAAK81E,YAAY,iBAAmB,KACpC91E,MAAK81E,YAAY,QAAU,KAC3B91E,MAAK81E,YAAY,QAAU,KAC3B91E,MAAK81E,YAAY,aAAe,OAChC91E,MAAK81E,YAAY,cAAgB,OACjC91E,MAAK81E,YAAY,oBAAsB,OACvC91E,MAAK81E,YAAY,gBAAkB,OACnC91E,MAAK81E,YAAY,kBAAoB,OACrC91E,MAAK81E,YAAY,YAAc,OAC/B91E,MAAK81E,YAAY,aAAe,KAChC91E,MAAK81E,YAAY,SAAW,KAC5B91E,MAAK81E,YAAY,eAAiB,OAClC91E,MAAK81E,YAAY,aAAe,OAChC91E,MAAK81E,YAAY,QAAU,KAC3B91E,MAAK81E,YAAY,cAAgB,OACjC91E,MAAK81E,YAAY,aAAe,OAChC91E,MAAK81E,YAAY,eAAiB,QAClC91E,MAAK81E,YAAY,eAAiB,QAClC91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,cAAgB,OACjC91E,MAAK81E,YAAY,eAAiB,KAClC91E,MAAK81E,YAAY,qBAAuB,KACxC91E,MAAK81E,YAAY,kBAAoB,OACrC91E,MAAK81E,YAAY,aAAe,OAChC91E,MAAK81E,YAAY,SAAW,OAC5B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,iBAAmB,QACpC91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,QAAU,QAC3B91E,MAAK81E,YAAY,UAAY,QAC7B91E,MAAK81E,YAAY,SAAW,QAC5B91E,MAAK81E,YAAY,iBAAmB,QACpC91E,MAAK81E,YAAY,kBAAoB,QACrC91E,MAAK81E,YAAY,YAAc,QAC/B91E,MAAK81E,YAAY,SAAW,QAC5B91E,MAAK81E,YAAY,eAAiB,QAClC91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,OAAS,QAC1B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,UAAY,QAC7B91E,MAAK81E,YAAY,eAAiB,OAClC91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,QAAU,QAC3B91E,MAAK81E,YAAY,cAAgB,QACjC91E,MAAK81E,YAAY,WAAa,OAC9B91E,MAAK81E,YAAY,UAAY,OAC7B91E,MAAK81E,YAAY,SAAW,QAC5B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,cAAgB,QACjC91E,MAAK81E,YAAY,UAAY,QAC7B91E,MAAK81E,YAAY,cAAgB,QACjC91E,MAAK81E,YAAY,eAAiB,QAClC91E,MAAK81E,YAAY,SAAW,QAC5B91E,MAAK81E,YAAY,UAAY,QAC7B91E,MAAK81E,YAAY,cAAgB,QACjC91E,MAAK81E,YAAY,UAAY,QAC7B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,WAAa,QAC9B91E,MAAK81E,YAAY,OAAS,QAC1B91E,MAAK81E,YAAY,YAAc,QAC/B91E,MAAK81E,YAAY,WAAa,QAC9B91E,MAAK81E,YAAY,WAAa,QAC9B91E,MAAK81E,YAAY,WAAa,QAC9B91E,MAAK81E,YAAY,aAAe,QAChC91E,MAAK81E,YAAY,QAAU,QAC3B91E,MAAK81E,YAAY,iBAAmB,QACpC91E,MAAK81E,YAAY,mBAAqB,QACtC91E,MAAK81E,YAAY,UAAY,OAC7B91E,MAAK81E,YAAY,eAAiB,OAClC91E,MAAK81E,YAAY,gBAAkB,OACnC91E,MAAK81E,YAAY,cAAgB,OACjC91E,MAAK81E,YAAY,UAAY,OAC7B91E,MAAK81E,YAAY,cAAgB,OACjC91E,MAAK81E,YA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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/display/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/display/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Mesh);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ParticleData\n{\n\tpublic particleIndex:number /*uint*/;\n\tpublic numVertices:number /*uint*/;\n\tpublic startVertexIndex:number /*uint*/;\n\tpublic elements:TriangleElements;\n}\n\nexport = ParticleData",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _uvMatrix:Matrix;\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get uvMatrix():Matrix\n\t{\n\t\treturn this._uvMatrix;\n\t}\n\n\tpublic set uvMatrix(value:Matrix)\n\t{\n\t\tif (this._uvMatrix == value)\n\t\t\treturn;\n\n\t\tthis._uvMatrix = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\t\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/display/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsType\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderable\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:SurfaceEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tif (sampler.imageRect) {\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\n\t\t\t} else {\n\t\t\t\tthis._billboardWidth = image.rect.width;\n\t\t\t\tthis._billboardHeight = image.rect.height;\n\t\t\t}\n\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateSurface();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _acceptTraverser(collector:CollectorBase)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderable\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGraphics();\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGraphics()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false; //TODO: detect line collisions\n\t}\n\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\ttraverser.applyRenderable(this);\n\t}\n}\n\nexport = LineSegment;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport GraphicsEvent\t\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * Mesh is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\n * of the graphics to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _center:Vector3D;\n\tpublic _graphics:Graphics;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGraphics:boolean = true;\n\n\tpublic _onGraphicsBoundsInvalidDelegate:(event:GraphicsEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The graphics used by the mesh that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._graphics;\n\t}\n\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._graphics.animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.removeOwner(this);\n\n\t\tthis._graphics.animator = value;\n\n\t\tif (this._graphics.animator)\n\t\t\tthis._graphics.animator.addOwner(this);\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._graphics.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tthis._graphics.material = value;\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation graphics.\n\t */\n\tpublic get shareAnimationGraphics():boolean\n\t{\n\t\treturn this._shareAnimationGraphics;\n\t}\n\n\tpublic set shareAnimationGraphics(value:boolean)\n\t{\n\t\tthis._shareAnimationGraphics = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._graphics.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tthis._graphics.style = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onGraphicsBoundsInvalidDelegate = (event:GraphicsEvent) => this.onGraphicsBoundsInvalid(event);\n\n\t\tthis._graphics = new Graphics(this); //unique graphics object for each Mesh\n\t\tthis._graphics.addEventListener(GraphicsEvent.BOUNDS_INVALID, this._onGraphicsBoundsInvalidDelegate);\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._graphics.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, graphics and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * graphics, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's graphics and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.graphics, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(mesh:Mesh)\n\t{\n\t\tsuper.copyTo(mesh);\n\n\t\tmesh.castsShadows = this._castsShadows;\n\t\tmesh.shareAnimationGraphics = this._shareAnimationGraphics;\n\n\t\tthis._graphics.copyTo(mesh.graphics);\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGraphicsBoundsInvalid(event:GraphicsEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tthis.graphics.acceptTraverser(traverser);\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._graphics.count) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the graphics thing\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._graphics.clear();\n\t}\n}\n\nexport = Mesh;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/display/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/display/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/display/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/display/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:AssetEvent;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.disposeValues();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public disposeValues()\n    {\n        super.disposeValues();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public clear()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            }\n        }\n\n        super.clear();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone.transform.matrix3D = this.transform.matrix3D\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport SurfaceEvent\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _owners:Array<IRenderable>;\n\tprivate _curves:boolean = false;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether skybox should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderable>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\n\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Style \t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGraphicsDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGraphicsDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get graphics():Graphics\n\t{\n\t\tif (this._textGraphicsDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * Reconstructs the Graphics for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGraphicsDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tthis._graphics.dispose();\n\t\tthis._graphics = new Graphics(this);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.getChar(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:TriangleElements = this_char.elements;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar elements:TriangleElements = this_char.elements;\n\t\t\t\t\tif (elements != null) {\n\t\t\t\t\t\tvar positions2:ArrayBufferView = elements.positions.get(elements.numVertices);\n\t\t\t\t\t\tvar curveData2:ArrayBufferView = elements.getCustomAtributes(\"curves\").get(elements.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2]*char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v*2 + 1]*char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 1];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v*3 + 2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// hack for multiline textfield in icycle.\n\t\t\ty_offset+=(this._textFormat.size+this._textFormat.leading*1.6);\n\t\t\tif(this._textFormat.leading>=11){\n\t\t\t\ty_offset+=2.5;\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\n\t\tattributesView.set(vertices);\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curveElements:TriangleElements = new TriangleElements(vertexBuffer);\n\t\tcurveElements.setPositions(new Float2Attributes(vertexBuffer));\n\t\tcurveElements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\n\n\t\tthis._graphics.addGraphic(curveElements);\n\n\t\tthis.material = this._textFormat.material;\n\t\tvar sampler:Sampler2D = new Sampler2D();\n\t\tthis.style = new Style();\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\n\t\tthis.material.animateUVs = true;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n* Defines the values to use for specifying path-drawing commands.\n* The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPathCommand\n{\n\t/**\n\t * Represents the default \"do nothing\" command.\n\t */\n\tpublic static NO_OP:number = 0;\n\t/**\n\t * Specifies a drawing command that moves the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static MOVE_TO:number = 1;\n\n\t/**\n\t * Specifies a drawing command that draws a line from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector.\n\t */\n\tpublic static LINE_TO:number = 2;\n\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO:number = 3;\n\t/**\n\t *  Specifies a drawing command that draws a curve from the current drawing position\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\n\t */\n\tpublic static CURVE_TO_2:number = 13;\n\n\t/**\n\t * Specifies a \"line to\" drawing command,\n\t * but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_LINE_TO:number = 4;\n\n\t/**\n\t *   Specifies a \"move to\" drawing command,\n\t *   but uses two sets of coordinates (four values) instead of one set.\n\t */\n\tpublic static WIDE_MOVE_TO:number = 5;\n\n\t/**\n\t * Specifies a drawing command that draws a curve from the current drawing position\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\n\t */\n\tpublic static CUBIC_CURVE:number = 6;\n}\n\nexport = GraphicsPathCommand;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n/**\n\n * Defines the values to use for specifying path-drawing commands.\n * The values in this class are used by the Graphics.drawPath() method,\n *or stored in the commands vector of a GraphicsPath object.\n */\nclass GraphicsPath\n{\n    /**\n     * The Vector of drawing commands as integers representing the path.\n     */\n    private _commands:Array<Array<number>>;\n    /**\n     * The Vector of Numbers containing the parameters used with the drawing commands.\n     */\n    private _data:Array<Array<number>>;\n\n    private _draw_directions:Array<number>;\n    private _contours_closed:Array<boolean>;\n\n    /**\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\n     */\n    private _winding:string;\n\n    private _startPoint:Point;\n    private _tmp_point:Point;\n    private _cur_point:Point;\n    private _direction:Point;\n    private _isFill:boolean;\n\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding:string = GraphicsPathWinding.EVEN_ODD)\n    {\n        this._data=[];\n        this._commands=[];\n        this._draw_directions=[0];\n        this._contours_closed=[false];\n\n        if(commands!=null && data!=null){\n            this._data[0]=data;\n            this._commands[0]=commands;\n        }\n        else{\n            this._data[0]=[];\n            this._commands[0]=[];\n\n        }\n\n        this._direction=new Point(0, -1);\n        this._startPoint=new Point();\n        this._cur_point=new Point();\n        this._tmp_point=new Point();\n        this.isFill=false;\n        this._winding=winding;\n    }\n\n    public get draw_directions():Array<number>\n    {\n        return this._draw_directions;\n    }\n    public get contours_closed():Array<boolean>\n    {\n        return this._contours_closed;\n    }\n\n    public get isFill():boolean\n    {\n        return this._isFill;\n    }\n    public set isFill(value:boolean)\n    {\n        this._isFill=value;\n    }\n    public get commands():Array<Array<number>>\n    {\n        return this._commands;\n    }\n\n    public get data():Array<Array<number>>\n    {\n        return this._data;\n    }\n\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\n\n        if(this.isFill){\n            this._tmp_point.x=anchorX-this._cur_point.x;\n            this._tmp_point.y=anchorY-this._cur_point.y;\n            this._tmp_point.normalize();\n\n            var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\n            testpoint.normalize();\n            var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\n            if(degree_anchor>180)degree_anchor-=360;\n            //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n            this._tmp_point.x=controlX-this._cur_point.x;\n            this._tmp_point.y=controlY-this._cur_point.y;\n            this._tmp_point.normalize();\n            //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\n            var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\n            if(degree_control>180)degree_control-=360;\n            //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\n            console.log(\"degree_control \"+degree_control);\n            console.log(\"degree_anchor \"+degree_anchor);\n            console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\n            this._direction.x=testpoint.x;\n            this._direction.y=testpoint.y;\n            if((degree_control)<0)\n                this._data[this._data.length-1].push(1);\n            else\n                this._data[this._data.length-1].push(2);\n\n        }\n        else{\n            this._data[this._data.length-1].push(1);\n        }\n        this._cur_point.x=anchorX;\n        this._cur_point.y=anchorY;\n        this._data[this._data.length-1].push(controlX);\n        this._data[this._data.length-1].push(controlY);\n        this._data[this._data.length-1].push(anchorX);\n        this._data[this._data.length-1].push(anchorY);\n\n    }\n\n    public lineTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length==0){\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\n            this._data[this._data.length-1].push(this._cur_point.x);\n            this._data[this._data.length-1].push(this._cur_point.y);\n        }\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\n        this._data[this._data.length-1].push(x);\n        this._data[this._data.length-1].push(y);\n        if(this.isFill) {\n            this._tmp_point.x = x - this._cur_point.x;\n            this._tmp_point.y = y - this._cur_point.y;\n            this._tmp_point.normalize();\n            this._direction.x=this._tmp_point.x;\n            this._direction.y=this._tmp_point.y;\n            var degree_anchor:number = Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\n            this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\n        }\n        this._cur_point.x=x;\n        this._cur_point.y=y;\n    }\n\n    public moveTo(x:number, y:number)\n    {\n        if(this._commands[this._commands.length-1].length>0){\n            this.finalizeContour();\n            this._draw_directions.push(0);\n            this._contours_closed.push(false);\n            this._commands.push([]);\n            this._data.push([]);\n        }\n        this._startPoint.x = x;\n        this._startPoint.y = y;\n        this._cur_point.x = x;\n        this._cur_point.y = y;\n    }\n\n    public finalizeContour()\n    {\n        if((this._startPoint.x != this._cur_point.x) || (this._startPoint.y != this._cur_point.y)){\n            if(this.isFill) {\n                this.lineTo(this._startPoint.x, this._startPoint.y);\n            }\n        }\n        else{\n            this._contours_closed[this._contours_closed.length-1]=true;\n        }\n\n    }\n    public wideLineTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n    public wideMoveTo(x:number, y:number)\n    {\n        // not used\n        /*\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\n         this._data.push(0);\n         this._data.push(0);\n         this._data.push(x);\n         this._data.push(y);\n         */\n    }\n\n}\n\nexport = GraphicsPath;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\nimport GraphicsPath\t\t\t\t= require(\"awayjs-display/lib/draw/GraphicsPath\");\nimport GraphicsPathCommand\t\t= require(\"awayjs-display/lib/draw/GraphicsPathCommand\");\nimport DefaultMaterialManager\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MovieClip\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\")\nimport AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\n\n\nimport PartialImplementationError\t\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport TriangleElements = require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase = require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\n\n\tpublic static _tess_obj:any;\n\n\tpublic _target:Mesh;\n\n\tprivate _active_fill_path:GraphicsPath;\n\tprivate _active_stroke_path:GraphicsPath;\n\n\tprivate _current_position:Point=new Point();\n\n\tconstructor(target:Mesh){\n\t\tthis._target=target;\n\t\tthis._queued_fill_pathes=[];\n\t\tthis._queued_stroke_pathes=[];\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\t\tthis._current_position=new Point();\n\t}\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\t\tthis.draw_fill();\n\t\t// start a new fill path\n\t\tthis._active_fill_path=new GraphicsPath();\n\t\tthis._active_fill_path.isFill=true;\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\t// todo: do this the correct way\n\t\tthis._target.graphics.dispose();\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\t\tsourceGraphics._target.graphics.copyTo(this._target.graphics);\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\n\t\t/*\n\t\t t = 0.5; // given example value\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\n\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\n\t\t this.queued_command_data.push(controlX1);\n\t\t this.queued_command_data.push(controlY1);\n\t\t this.queued_command_data.push(controlX2);\n\t\t this.queued_command_data.push(controlY2);\n\t\t this.queued_command_data.push(anchorX);\n\t\t this.queued_command_data.push(anchorY);\n\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\n\n\t\t this.draw_direction+=0;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t}\n\t\tthis._current_position.x=anchorX;\n\t\tthis._current_position.y=anchorY;\n\t\t/*\n\t\tthis.queued_command_types.push(Graphics.CMD_CURVE);\n\t\tthis.queued_command_data.push(controlX);\n\t\tthis.queued_command_data.push(controlY);\n\t\tthis.queued_command_data.push(anchorX);\n\t\tthis.queued_command_data.push(anchorY);\n\t\t*/\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\t\tvar radius2=radius*1.065;\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\n\t\t\tfor(var i=8; i>=0;i--){\n\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\n\t\t\t}\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\n\t\t\tvar radius2=radius*0.93;\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\n\t\t}\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\t\twidth/=2;\n\t\theight/=2;\n\t\tif(this._active_fill_path!=null){\n\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\n\t\t}\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\t\t//this.draw_fill();\n\t\t/*\n\t\t for (var i:number=0; i<graphicsData.length; i++){\n\t\t //todo\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\n\n\t\t }\n\t\t else if(graphicsData[i].dataType==\"Path\"){\n\n\t\t }\n\n\t\t }\n\t\t */\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\t\t//todo\n\t\t/*\n\t\t if(this._active_fill_path!=null){\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t if(this._active_stroke_path!=null){\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\n\t\t }\n\t\t this._current_position.x=anchorX;\n\t\t this._current_position.y=anchorY;\n\t\t */\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t\tif(!ellipseHeight){\n\t\t\tellipseHeight=ellipseWidth;\n\t\t}\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\n\t\t}\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\t//todo\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\t//todo\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\t\tthis.draw_strokes();\n\t\tthis.draw_fill();\n\t\tthis._active_fill_path=null;\n\t\tthis._active_stroke_path=null;\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t\t// start a new stroke path\n\t\tthis._active_stroke_path=new GraphicsPath();\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.lineTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.lineTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t\tif(this._active_fill_path!=null){\n\t\t\tthis._active_fill_path.moveTo(x, y);\n\t\t}\n\t\tif(this._active_stroke_path!=null){\n\t\t\tthis._active_stroke_path.moveTo(x, y);\n\t\t}\n\t\tthis._current_position.x=x;\n\t\tthis._current_position.y=y;\n\t}\n\n\tpublic draw_strokes(){\n\t\tif(this._active_stroke_path==null)return;\n\t\tthis._active_stroke_path.finalizeContour();\n\t\tvar contour_commands:Array<Array<number> >=this._active_stroke_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_stroke_path.data;\n\t\tvar contour_closed:Array<boolean >=this._active_stroke_path.contours_closed;\n\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_started:boolean=false;\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tvar start_point:Point=new Point();\n\t\tvar end_point:Point=new Point();\n\t\tvar start_left:Point=new Point();\n\t\tvar start_right:Point=new Point();\n\t\tvar ctr_left:Point=new Point();\n\t\tvar ctr_right:Point=new Point();\n\t\tvar ctr_left2:Point=new Point();\n\t\tvar ctr_right2:Point=new Point();\n\t\tvar end_left:Point=new Point();\n\t\tvar end_right:Point=new Point();\n\t\tvar tmp_point:Point=new Point();\n\t\tvar tmp_point2:Point=new Point();\n\t\tvar first_point:Point=new Point();\n\t\tvar first_point_set:boolean=false;\n\t\tvar closed:boolean=false;\n\t\tvar thickness:number=3;\n\t\tvar tessVerts:Array<number>=[];\n\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tvar contour_points:Array<Point>=[];\n\t\t\tvar contour_types:Array<number>=[];\n\t\t\tcommands = contour_commands[k];\n\t\t\tdata = contour_data[k];\n\t\t\tclosed=contour_closed[k];\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tdraw_started=false;\n\t\t\tfirst_point_set=false;\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.LINE_TO);\n\t\t\t\t\t\tend_point.x = data[data_cnt++];\n\t\t\t\t\t\tend_point.y = data[data_cnt++];\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_point.y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = end_point.x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tend_left.x  = end_point.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_point.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_point.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_point.y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tlastPoint.x=end_point.x;\n\t\t\t\t\t\tlastPoint.y=end_point.y;\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO);\n\t\t\t\t\t\tcontour_types.push(GraphicsPathCommand.CURVE_TO_2);\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\n\n\t\t\t\t\t\ttmp_point.x = -1*(control_y-lastPoint.y);\n\t\t\t\t\t\ttmp_point.y = control_x-lastPoint.x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tstart_left.x  = lastPoint.x + (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_left.y  = lastPoint.y + (tmp_point.y * thickness);\n\t\t\t\t\t\tstart_right.x = lastPoint.x - (tmp_point.x * thickness);\n\t\t\t\t\t\tstart_right.y = lastPoint.y - (tmp_point.y * thickness);\n\t\t\t\t\t\t// rotate point\n\t\t\t\t\t\tctr_left.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(start_right.x, start_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(start_left.x, start_left.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right.x, ctr_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left.x, ctr_left.y));\n\n\t\t\t\t\t\ttmp_point.x = -1*(end_y-control_y);\n\t\t\t\t\t\ttmp_point.y = end_x-control_x;\n\t\t\t\t\t\ttmp_point.normalize();\n\n\t\t\t\t\t\tctr_left2.x  = control_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_left2.y  = control_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tctr_right2.x = control_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tctr_right2.y = control_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tend_left.x  = end_x + (tmp_point.x * thickness);\n\t\t\t\t\t\tend_left.y  = end_y + (tmp_point.y * thickness);\n\t\t\t\t\t\tend_right.x = end_x - (tmp_point.x * thickness);\n\t\t\t\t\t\tend_right.y = end_y - (tmp_point.y * thickness);\n\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_right2.x, ctr_right2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(ctr_left2.x, ctr_left2.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_right.x, end_right.y));\n\t\t\t\t\t\tcontour_points.push(new Point(end_left.x, end_left.y));\n\n\t\t\t\t\t\tlastPoint.x=end_x;\n\t\t\t\t\t\tlastPoint.y=end_y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar con_length:number=contour_points.length/4;\n\t\t\tvar next_start_right:Point=new Point();\n\t\t\tvar next_start_left:Point=new Point();\n\t\t\tvar next_end_right:Point=new Point();\n\t\t\tvar next_end_left:Point=new Point();\n\t\t\tvar prevLeft:Point;\n\t\t\tvar prevRight:Point;\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\tvar nextIdx:number = i + 1;\n\t\t\t\tif (i >= con_length - 1) {\n\t\t\t\t\t// last segment\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\tnextIdx = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextIdx = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextIdx >= 0) {\n\t\t\t\t\tnext_start_right = contour_points[nextIdx * 4];\n\t\t\t\t\tnext_start_left = contour_points[nextIdx * 4 + 1];\n\t\t\t\t\tnext_end_right = contour_points[nextIdx * 4 + 2];\n\t\t\t\t\tnext_end_left = contour_points[nextIdx * 4 + 3];\n\n\t\t\t\t\tvar cur_vertical:boolean = false;\n\t\t\t\t\tvar next_vertical:boolean = false;\n\t\t\t\t\tvar cur_horizontal:boolean = false;\n\t\t\t\t\tvar next_horizontal:boolean = false;\n\n\t\t\t\t\ttmp_point.x = end_right.x - start_right.x;\n\t\t\t\t\ttmp_point.y = end_right.y - start_right.y;\n\t\t\t\t\tvar factor1:number=0;\n\t\t\t\t\tvar offsetY1:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor1 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY1 = -(factor1 * start_right.x - start_right.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_right.x - next_start_right.x;\n\t\t\t\t\ttmp_point.y = next_end_right.y - next_start_right.y;\n\t\t\t\t\tvar factor2:number=0;\n\t\t\t\t\tvar offsetY2:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor2 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY2 = -(factor2 * next_start_right.x - next_start_right.y);\n\t\t\t\t\t}\n\n\n\t\t\t\t\ttmp_point.x = end_left.x - start_left.x;\n\t\t\t\t\ttmp_point.y = end_left.y - start_left.y;\n\t\t\t\t\tvar factor3:number=0;\n\t\t\t\t\tvar offsetY3:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)cur_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)cur_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor3 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY3 = -(factor3 * start_left.x - start_left.y);\n\t\t\t\t\t}\n\n\t\t\t\t\ttmp_point.x = next_end_left.x - next_start_left.x;\n\t\t\t\t\ttmp_point.y = next_end_left.y - next_start_left.y;\n\t\t\t\t\tvar factor4:number=0;\n\t\t\t\t\tvar offsetY4:number=0;\n\t\t\t\t\tif (tmp_point.x == 0)next_vertical = true;\n\t\t\t\t\telse if (tmp_point.y == 0)next_horizontal = true;\n\t\t\t\t\telse {\n\t\t\t\t\t\tfactor4 = tmp_point.y / tmp_point.x;\n\t\t\t\t\t\toffsetY4 = -(factor4 * next_start_left.x - next_start_left.y);\n\t\t\t\t\t}\n\t\t\t\t\tif ((cur_vertical && cur_horizontal)||(next_horizontal && next_vertical)) console.log(\"ERROR\");\n\t\t\t\t\tif((factor1==factor2)||(factor3==factor4)) {\n\t\t\t\t\t\tconsole.log(\"STRAIGHT LINE factor same\");\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor1);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor2);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor3);\n\t\t\t\t\t\tconsole.log(\"factor = \"+ factor4);\n\t\t\t\t\t}\n\t\t\t\t\t//else\n\t\t\t\t\tif ((cur_horizontal && next_horizontal)||(cur_vertical && next_vertical)) console.log(\"STRAIGHT LINE\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ((cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\t\t\tend_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\t\t\tend_left.y = next_start_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((cur_vertical)&&(!next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(cur_vertical)&&(!next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor2 * start_right.x + offsetY2;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor4 * start_left.x + offsetY4;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!cur_vertical)&&(next_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!cur_vertical)&&(next_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = next_start_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (next_start_right.y - offsetY1)/factor1;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = next_start_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (next_start_left.y - offsetY3)/factor3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(cur_horizontal)\");\n\t\t\t\t\t\t\tend_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tend_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((next_vertical)&&(!cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = next_start_right.x;\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * next_start_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = next_start_left.x;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * next_start_left.x + offsetY3;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ((!next_vertical)&&(cur_horizontal)) {\n\t\t\t\t\t\t\tconsole.log(\"(!next_vertical)&&(!cur_horizontal)\");\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = (end_right.y - offsetY2)/factor2;\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = (end_left.y - offsetY4)/factor4;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.log(\"else\");\n\t\t\t\t\t\t\tconsole.log(\"factor1 - factor2 \"+(factor1 - factor2));\n\t\t\t\t\t\t\tconsole.log(\"offsetY1 - offsetY2 \"+(offsetY1 - offsetY2));\n\t\t\t\t\t\t\tconsole.log(\"factor3 - factor4 \"+(factor3 - factor4));\n\t\t\t\t\t\t\tconsole.log(\"offsetY3 - offsetY4 \"+(offsetY3 - offsetY4));\n\n\t\t\t\t\t\t\tnext_start_right.x = end_right.x = -((offsetY1 - offsetY2) / (factor1 - factor2));\n\t\t\t\t\t\t\tnext_start_right.y = end_right.y = factor1 * end_right.x + offsetY1;\n\t\t\t\t\t\t\tnext_start_left.x = end_left.x = -((offsetY3 - offsetY4) / (factor3 - factor4));\n\t\t\t\t\t\t\tnext_start_left.y = end_left.y = factor3 * end_left.x + offsetY3;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnext_start_right.x = end_right.x;\n\t\t\t\t\tnext_start_right.y = end_right.y;\n\t\t\t\t\tnext_start_left.x = end_left.x;\n\t\t\t\t\tnext_start_left.y = end_left.y;\n\n\n\t\t\t\t\t// calculate the correct end points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < con_length; i++) {\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO_2)\n\t\t\t\t\tcontinue;\n\t\t\t\tstart_right = contour_points[i * 4];\n\t\t\t\tstart_left = contour_points[i * 4 + 1];\n\t\t\t\tif(contour_types[i]==GraphicsPathCommand.CURVE_TO) {\n\t\t\t\t\ti++;\n\t\t\t\t\tctr_right = contour_points[i * 4];\n\t\t\t\t\tctr_left = contour_points[i * 4 + 1];\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\n\t\t\t\t\tvar finished_curves:Array<Point>=[];\n\t\t\t\t\tvar finished_curves_types:Array<number>=[];\n\t\t\t\t\tvar test_concave_curves:Array<Point>=[];\n\t\t\t\t\tvar test_convex_curves:Array<Point>=[];\n\t\t\t\t\tvar curve_sign:boolean=this.getSign(start_right.x, start_right.y,  ctr_right.x, ctr_right.y, end_right.x, end_right.y )>0;\n\t\t\t\t\tvar curve_sign2:number=-1;\n\t\t\t\t\tvar curve_sign3:number=1;\n\t\t\t\t\ttessVerts.length=0;\n\t\t\t\t\tif(curve_sign){\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\n\t\t\t\t\t\tthis.subdivideCurve(start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y,subdivided, subdivided2);\n\t\t\t\t\t\tfor(var sc:number=0; sc<subdivided.length/6; sc++) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6], subdivided[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 2], subdivided[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves_types.push(-1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6], subdivided[sc * 6 + 1]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(var sc:number=(subdivided2.length/6)-1; sc>=0; sc--) {\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]));\n\t\t\t\t\t\t\tfinished_curves.push(new Point(subdivided2[sc * 6], subdivided2[sc * 6 + 1]));\n\t\t\t\t\t\t\tfinished_curves_types.push(1);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3]);\n\t\t\t\t\t\t\ttessVerts.push(subdivided2[sc * 6], subdivided2[sc * 6 + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(tessVerts.length>0){\n\n\t\t\t\t\t\tvar verticesF32 = new Float32Array(tessVerts);\n\t\t\t\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, tessVerts.length / 2);\n\t\t\t\t\t}\n\t\t\t\t\tvar t:number=0;\n\t\t\t\t\tfor(t=0; t<finished_curves_types.length;t++){\n\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3].y;;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+1].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].x;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves[t*3+2].y;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = finished_curves_types[t];\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t final_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tend_right = contour_points[i * 4 + 2];\n\t\t\t\t\tend_left = contour_points[i * 4 + 3];\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = start_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_left.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.x;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_right.y;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t console.log(\"final verts stroke \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\t */\n\t\tGraphics._tess_obj.tesselate(4/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\n\t\t}\n\n\t\t// todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\n\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_stroke_path=null;\n\t}\n\n\tpublic isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\n\t{\n\t\treturn ((point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x) < 0);\n\t}\n\n\tpublic getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\n\t{\n\t\t/*if(this.isClockWiseXY(ax, ay, bx, by, cx, cy)) {\n\t\t return (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n\t\t }*/\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\n\n\t}\n\n\tpublic pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\n\t{\n\t\tvar b1:boolean = this.getSign(ax, ay, xx, xy, bx, by) > 0;\n\t\tvar b2:boolean = this.getSign(bx, by, xx, xy, cx, cy) > 0;\n\t\tvar b3:boolean = this.getSign(cx, cy, xx, xy, ax, ay) > 0;\n\t\treturn ((b1 == b2) && (b2 == b3));\n\t}\n\tpublic subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\n\t{\n\t\t/*\n\t\t if(!this.pointInTri(startx2, starty2, cx2, cy2, endx2, endy2, cx, cy)){\n\t\t }\n\t\t */\n\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\n\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\n\t\treturn;\n\t\tvar c1x = startx + (cx - startx) * 0.5;\n\t\tvar c1y = starty + (cy - starty) * 0.5;\n\t\tvar c2x = cx + (endx - cx) * 0.5;\n\t\tvar c2y = cy + (endy - cy) * 0.5;\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\n\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\n\t\tif(this.pointInTri(startx2, starty2, c1x2, c1y2, ax2, ay2, c1x, c1y)){\n\t\t\tthis.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(startx, starty, c1x, c1y, ax, ay);\n\t\t\tarray2_out.push(startx2, starty2, c1x2, c1y2, ax2, ay2);\n\t\t}\n\n\t\tif(this.pointInTri(ax2, ay2, c2x2, c2y2,  endx2, endy2, c2x, c2y)){\n\t\t\tthis.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\n\t\t}\n\t\telse{\n\t\t\tarray_out.push(ax, ay, c2x, c2y, endx, endy);\n\t\t\tarray2_out.push(ax2, ay2, c2x2, c2y2, endx2, endy2);\n\t\t}\n\t}\n\tpublic draw_fill(){\n\t\tif(this._active_fill_path==null)return;\n\t\tthis._active_fill_path.finalizeContour();\n\n\t\tvar contour_commands:Array<Array<number> >=this._active_fill_path.commands;\n\t\tvar contour_data:Array<Array<number> >=this._active_fill_path.data;\n\t\tvar contour_draw_directions:Array<number>=this._active_fill_path.draw_directions;\n\t\tvar commands:Array<number>;\n\t\tvar data:Array<number>;\n\t\tvar i:number=0;\n\t\tvar k:number=0;\n\t\tvar vert_cnt:number=0;\n\t\tvar data_cnt:number=0;\n\t\tvar draw_direction:number=0;\n\t\tvar contours_vertices:Array<Array<number>> = [[]];\n\t\tvar final_vert_list:Array<number> = [];\n\t\tvar final_vert_cnt:number=0;\n\t\tvar lastPoint:Point=new Point();\n\t\tfor(k=0; k<contour_commands.length; k++) {\n\t\t\tcontours_vertices.push([]);\n\t\t\tvert_cnt = 0;\n\t\t\tdata_cnt = 0;\n\t\t\tcommands=contour_commands[k];\n\t\t\tdata=contour_data[k];\n\t\t\tdraw_direction=contour_draw_directions[k];\n\t\t\tfor (i = 0; i < commands.length; i++) {\n\t\t\t\tswitch (commands[i]) {\n\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\n\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\tvar curve_direction:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\n\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\n\t\t\t\t\t\tvar curve_attr_1 = -1;\n\t\t\t\t\t\tif (draw_direction > 0) {\n\t\t\t\t\t\t\tif (curve_direction == 1) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (curve_direction == 2) {\n\t\t\t\t\t\t\t\t//convex\n\t\t\t\t\t\t\t\t//console.log(\"convex\");\n\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!this.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)){\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPoint.x = end_x;\n\t\t\t\t\t\tlastPoint.y = end_y;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\n\t\t\t\t\t\t//todo\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar verts:Array<number>=[];\n\t\tvar all_verts:Array<Point>=[];\n\t\tvar vertIndicess:Array<number>=[];\n\t\tvar elems:Array<number>=[];\n\t\tGraphics._tess_obj.newTess(1024 * 512);\n\t\tfor(k=0; k<contours_vertices.length; k++) {\n\t\t\tvar vertices=contours_vertices[k];\n\t\t\t/*\n\t\t\t for (i = 0; i < vertices.length / 2; ++i)\n\t\t\t console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\n\t\t\t */\n\t\t\tvar verticesF32 = new Float32Array(vertices);\n\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\n\t\t\t//console.log(\"in vertices\", vertices);\n\t\t\t//var tess = new TESS();\n\t\t\tif (Graphics._tess_obj == null) {\n\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tGraphics._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\n\n\t\t}\n\t\tGraphics._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\n\n\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\n\t\tverts = Graphics._tess_obj.getVertices();\n\t\telems = Graphics._tess_obj.getElements();\n\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\n\n\n\t\tvar numVerts:number = verts.length / 2;\n\t\tvar numElems:number = elems.length / 3;\n\t\tfor (i = 0; i < numVerts; ++i)\n\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\n\n\t\tfor (i = 0; i < numElems; ++i) {\n\t\t\tvar p1 = elems[i * 3];\n\t\t\tvar p2 = elems[i * 3 + 1];\n\t\t\tvar p3 = elems[i * 3 + 2];\n\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\n\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\n\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\n\n\t\t}\n\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\n\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(final_vert_list);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\n\t\telements.setPositions(new Float2Attributes(attributesBuffer));\n\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\n\t\telements.setUVs(new Float2Attributes(attributesBuffer));\n\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\n\t\tmaterial.bothSides = true;\n\t\tmaterial.useColorTransform = true;\n\t\tmaterial.curves = true;\n\t\tthis._target.graphics.addGraphic(elements, material);\n\t\tthis._active_fill_path=null;\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.ElementsEvent\n * @see away.core.base.Graphics\n */\nclass ElementsEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Elements's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a Elements's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a Elements's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a Elements's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsEvent\n\t{\n\t\treturn new ElementsEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = ElementsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GraphicsEvent\n* @see away3d.core.base.Graphics\n*/\nclass GraphicsEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GraphicsEvent\n\t{\n\t\treturn new GraphicsEvent(this.type);\n\t}\n}\n\nexport = GraphicsEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementsIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.elementsIndex = this.elementsIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderable\t\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableEvent\n * @see away.core.base.Graphics\n */\nclass RenderableEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderable\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\n\n\tprivate _renderable:IRenderable;\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderable:IRenderable)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderable = renderable;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderable():IRenderable\n\t{\n\t\treturn this._renderable;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableEvent\n\t{\n\t\treturn new RenderableEvent(this.type, this._renderable);\n\t}\n}\n\nexport = RenderableEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n\nclass SurfaceEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _surface:ISurface;\n\n\n\t/**\n\t * Create a new GraphicsEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, surface:ISurface)\n\t{\n\t\tsuper(type);\n\n\t\tthis._surface = surface;\n\t}\n\n\t/**\n\t * The surface of the renderable.\n\t */\n\tpublic get surface():ISurface\n\t{\n\t\treturn this._surface;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SurfaceEvent\n\t{\n\t\treturn new SurfaceEvent(this.type, this._surface);\n\t}\n}\n\nexport = SurfaceEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderable:IRenderable;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n\tpublic elementsIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderable = this.renderable;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.elementsIndex = this.elementsIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsEvent\t\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass ElementsBase extends AssetBase\n{\n\tprivate _indices:Short3Attributes;\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\n\tprivate _customAttributes:Object = new Object();\n\t\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:ElementsEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\t\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._indices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributesNames():Array<string>\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getCustomAtributes(name:string):AttributesView\n\t{\n\t\treturn this._customAttributes[name];\n\t}\n\t\n\t/**\n\t * The total amount of triangles in the TriangleElements.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\tpublic copyTo(elements:ElementsBase)\n\t{\n\t\tif (this.indices)\n\t\t\telements.setIndices(this.indices.clone());\n\t\t\n\t\tfor (var name in this._customAttributes)\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\t\t}\n\t\t\n\t\tfor (var name in this._customAttributes) {\n\t\t\tthis._customAttributes[name].dispose();\n\t\t\tdelete this._customAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._indices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._indices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._indices)\n\t\t\t\tthis._indices = new Short3Attributes();\n\n\t\t\tthis._indices.set(values, offset);\n\t\t} else if (this._indices) {\n\t\t\tthis._indices.dispose();\n\t\t\tthis._indices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._indices) {\n\t\t\tthis._numElements = this._indices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Updates custom attributes.\n\t */\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0)\n\t{\n\t\tif (values == this._customAttributes[name])\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributes[name] = values;\n\t\t} else if (values) {\n\t\t\tif (!this._customAttributes[name])\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\n\n\t\t\tthis._customAttributes[name].set(values, offset);\n\t\t} else if (this._customAttributes[name]) {\n\t\t\tthis.clearVertices(this._customAttributes[name]);\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\n\t\t\tdelete this._customAttributes[name];\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._customAttributes[name]);\n\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\n\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\n\t\t\tthis._customAttributesNames.push(name);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ElementsBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ElementsBase;",
    "class ElementsType\n{\n\t/**\n\t *\n\t */\n\tpublic static TRIANGLE:string = \"triangle\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINE:string = \"line\";\n}\n\nexport = ElementsType;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Graphic\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\nimport GraphicsEvent\t\t\t= require(\"awayjs-display/lib/events/GraphicsEvent\");\nimport Style\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IAnimator \t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ElementsEvent\t\t\t= require(\"awayjs-display/lib/events/ElementsEvent\");\nimport StyleEvent\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport CollectorBase\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ElementsUtils\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport ParticleData\t\t\t\t= require(\"awayjs-display/lib/animators/data/ParticleData\");\n\n/**\n *\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Graphics object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleGraphic objects.\n *\n *\n *\n * @see away.core.base.SubGraphics\n * @see away.entities.Mesh\n *\n * @class Graphics\n */\nclass Graphics extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Graphics]\";\n\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\n\n\tprivate _boxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tprivate _sphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\n\tprivate _animator:IAnimator;\n\tprivate _style:Style;\n\n\tpublic sourceEntity:IEntity;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Graphics.assetType;\n\t}\n\n\tpublic particles:Array<ParticleData>;\n\n\tpublic numParticles:number /*uint*/;\n\n\tpublic get count():number\n\t{\n\t\treturn this._graphics.length;\n\t}\n\n\t/**\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (graphic.material) {\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\n\t\t\t\tgraphic.material.iAddOwner(graphic);\n\t\t\t}\n\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\n\t\t\tgraphic.invalidateElements();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\t/**\n\t * The material with which to render the Graphics.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._graphics.length;\n\t\tvar graphic:Graphic;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\n\t\t\t\t\tthis._material.iAddOwner(graphic);\n\t}\n\n\t/**\n\t * Creates a new Graphics object.\n\t */\n\tconstructor(sourceEntity:IEntity)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\n\n\t\tthis.sourceEntity = sourceEntity;\n\t}\n\n\t/**\n\t * Adds a GraphicBase wrapping a Elements.\n\t *\n\t * @param elements\n\t */\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tvar newGraphic:Graphic;\n\n\t\tif (Graphic._available.length) {\n\t\t\tnewGraphic = Graphic._available.pop();\n\t\t\tnewGraphic.parent = this;\n\t\t\tnewGraphic.elements = elements;\n\t\t\tnewGraphic.material = material;\n\t\t\tnewGraphic.style = style;\n\t\t} else {\n\t\t\tnewGraphic = new Graphic(this._graphics.length, this, elements, material, style);\n\t\t}\n\n\t\tthis._graphics.push(newGraphic);\n\n\t\telements.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic removeGraphic(graphic:Graphic)\n\t{\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\n\n\t\tgraphic.elements.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\n\n\t\tgraphic.elements = null;\n\t\tgraphic.material = null;\n\t\tgraphic.style = null;\n\n\t\tthis._invalidateBounds();\n\t}\n\n\tpublic getGraphicAt(index:number):Graphic\n\t{\n\t\treturn this._graphics[index];\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.applyTransformation(transform);\n\t}\n\n\tpublic copyTo(graphics:Graphics)\n\t{\n\t\tgraphics.material = this._material;\n\t\tgraphics.style = this.style;\n\t\tgraphics.particles = this.particles;\n\t\tgraphics.numParticles = this.numParticles;\n\t\tvar graphic:Graphic;\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tgraphic = this._graphics[i];\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle());\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tgraphics.animator = this._animator.clone();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scale(scale);\n\t}\n\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].clear();\n\t}\n\n\t/**\n\t * Clears all resources used by the Graphics object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\n\t\t\tthis._graphics[i].dispose();\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar len:number = this._graphics.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].elements.scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic getBoxBounds():Box\n\t{\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._boxBoundsInvalid = false;\n\n\t\t\tif (!this._boxBounds)\n\t\t\t\tthis._boxBounds = new Box();\n\n\t\t\tif (this._graphics.length) {\n\t\t\t\tthis._boxBounds.setBoundIdentity();\n\t\t\t\tvar len:number = this._graphics.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\tthis._boxBounds = this._graphics[i].elements.getBoxBounds(this._boxBounds);\n\t\t\t} else {\n\t\t\t\tthis._boxBounds.setEmpty();\n\t\t\t}\n\t\t}\n\n\t\treturn this._boxBounds;\n\t}\n\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttarget = this._graphics[i].elements.getSphereBounds(center, target);\n\n\t\treturn target;\n\t}\n\n\tprivate _invalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.hasEventListener(GraphicsEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GraphicsEvent(GraphicsEvent.BOUNDS_INVALID));\n\t}\n\n\tpublic _iInvalidateSurfaces()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateSurface();\n\t}\n\n\n\tpublic invalidateElements()\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._graphics[i].invalidateElements();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\n\t{\n\t\t//TODO: handle lines as well\n\t\tvar len:number = this._graphics.length;\n\t\tfor(var i:number = 0; i < len; i++)\n\t\t\tif (ElementsUtils.hitTestTriangleElements(x, y, 0, this.getBoxBounds(), <TriangleElements> this._graphics[i].elements))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tvar len:number = this._graphics.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateVertices(event:ElementsEvent)\n\t{\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\n\t\t\treturn;\n\n\t\tthis._invalidateBounds();\n\t}\n}\n\nexport = Graphics;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport RenderableEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport IRenderable \t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphics\");\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport IPickingCollider = require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO = require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Mesh object.\n *\n *\n * @see away.base.ElementsBase\n * @see away.entities.Mesh\n *\n * @class away.base.Graphic\n */\nclass Graphic extends AssetBase implements IRenderable\n{\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\n\n\tpublic static assetType:string = \"[asset Graphic]\";\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tprivate _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic parent:Graphics;\n\n\t/**\n\t * The Elements object which provides the geometry data for this Graphic.\n\t */\n\tpublic elements:ElementsBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Graphic.assetType;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parent.animator;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this.parent.sourceEntity.pickingCollider;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\treturn this.parent.sourceEntity._iPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this.parent.sourceEntity._iIsMouseEnabled();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\treturn this.parent.sourceEntity._iAssignedMasks();\n\t}\n\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parent.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parent.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateSurface();\n\t}\n\n\n\t/**\n\t * Creates a new Graphic object\n\t */\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._iIndex = index;\n\t\tthis.parent = parent;\n\t\tthis.elements = elements;\n\t\tthis.material = material;\n\t\tthis.style = style;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.parent.removeGraphic(this);\n\t\tthis.parent = null;\n\n\t\tGraphic._available.push(this);\n\t}\n\n\tpublic invalidateElements()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\n\t}\n\n\tpublic invalidateSurface()\n\t{\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _iGetExplicitStyle():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateSurface();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number):boolean\n\t{\n\t\treturn this.elements._iTestCollision(this.pickingCollider, this.material, this._iPickingCollisionVO, shortestCollisionDistance)\n\t}\n\n}\n\nexport = Graphic;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineElements\n */\nclass LineElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset LineElements]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineElements.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineElements.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineElements\n\t{\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this.indices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineElements;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ElementsUtils\t\t\t\t= require(\"awayjs-display/lib/utils/ElementsUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleElements\n */\nclass TriangleElements extends ElementsBase\n{\n\tpublic static assetType:string = \"[asset TriangleElements]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:AttributesView;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:AttributesView;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = - 1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleElements.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\tif (!this._positions)\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._positions)\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tif (this._positions) {\n\t\t\tthis._positions.dispose();\n\t\t\tthis._positions = null;\n\t\t}\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleElements.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\t}\n\n\tpublic copyTo(elements:TriangleElements)\n\t{\n\t\tsuper.copyTo(elements);\n\n\t\t//temp disable auto derives\n\t\telements.autoDeriveNormals = false;\n\t\telements.autoDeriveTangents = false;\n\n\t\telements.setPositions(this.positions.clone());\n\n\t\tif (this.normals)\n\t\t\telements.setNormals(this.normals.clone());\n\n\t\tif (this.tangents)\n\t\t\telements.setTangents(this.tangents.clone());\n\n\t\tif (this.uvs)\n\t\t\telements.setUVs(this.uvs.clone());\n\n\t\telements.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\telements.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\telements.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\telements.autoDeriveNormals = this._autoDeriveNormals;\n\t\telements.autoDeriveTangents = this._autoDeriveTangents;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleElements\n\t{\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tthis.copyTo(clone);\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tif (this.uvs) // only scale if uvs exist\n\t\t\tElementsUtils.scaleUVs(scaleU, scaleV, this.uvs, this._numVertices);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tElementsUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleElements;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport LineElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Graphic\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/Graphic\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\n\t{\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/display/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.elementsIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderable = collider.renderable;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// ElementsIndex.\n\t\t\tevent.elementsIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.elementsIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport SurfaceEvent\t\t\t\t= require(\"awayjs-display/lib/events/SurfaceEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements ISurface\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _curves:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether material should use curves. Defaults to false.\n\t */\n\tpublic get curves():boolean\n\t{\n\t\treturn this._curves;\n\t}\n\n\tpublic set curves(value:boolean)\n\t{\n\t\tif (this._curves == value)\n\t\t\treturn;\n\n\t\tthis._curves = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderable as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderable that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * Removes an IRenderable as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderable)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateSurface();\n\t}\n\n\t/**\n\t * A list of the IRenderables that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderable>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateSurfaces()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateSurface();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\t//invalidate renderables for number of images getter (in case it has changed)\n\t\tthis.invalidateSurfaces();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/display/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _debugEntity:IEntity;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tpublic isContainerNode:boolean = false;\n\n\tpublic boundsType:string;\n\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis.boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t\tthis._debugEntity = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this.boundsType != this._displayObject.boundsType) {\n\t\t\tthis.boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._displayObject._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._displayObject.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\tthis._displayObject._acceptTraverser(traverser);\n\n\t\t\tif (this._displayObject.debugVisible && traverser.isEntityCollector)\n\t\t\t\tthis.bounds.boundsPrimitive._acceptTraverser(traverser);\n\t\t}\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _numChildMasks:number = 0;\n\tprivate _pNumChildNodes:number = 0;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic _pEntityNode:EntityNode;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (this._pEntityNode)\n\t\t\tthis._pEntityNode.acceptTraverser(traverser);\n\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numChildMasks; i++)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\n\t\tfor (i = 0; i < this._pNumChildNodes; i++)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = <EntityNode> node;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = null;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/display/DisplayObjectContainer\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node._displayObject.partition == this || node._displayObject._iIsRoot) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;\n\n\n/**\n * @class away.pool.SceneGraphNodePool\n */\nclass SceneGraphNodePool implements IAbstractionPool\n{\n\tprivate _abstractionPool:Object = new Object();\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\n\t}\n}",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport LineElements\t\t\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport TriangleElements\t\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport AttributesView = require(\"awayjs-core/lib/attributes/AttributesView\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderable = null;\n\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderable = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(triangleElements.numVertices);\n\t\tvar posDim:number = triangleElements.positions.dimensions;\n\n\t\tvar indices:Uint16Array;\n\t\tvar count:number;\n\t\tif (triangleElements.indices) {\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\n\t\t\tcount = indices.length;\n\t\t} else {\n\t\t\tcount = triangleElements.numVertices;\n\t\t}\n\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\tif (indices) {\n\t\t\t\ti0 = indices[index]*posDim;\n\t\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\t\ti2 = indices[index + 2]*posDim;\n\t\t\t} else {\n\t\t\t\ti0 = index*posDim;\n\t\t\t\ti1 = (index + 1)*posDim;\n\t\t\t\ti2 = (index + 2)*posDim;\n\t\t\t}\n\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp1x = positions[i1];\n\t\t\tp2x = positions[i2];\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\ts0y = p1y - p0y;\n\t\t\ts1y = p2y - p0y;\n\n\t\t\tif (posDim == 3) {\n\t\t\t\tp0z = positions[i0 + 2];\n\t\t\t\tp1z = positions[i1 + 2];\n\t\t\t\tp2z = positions[i2 + 2];\n\t\t\t\ts0z = p1z - p0z;\n\t\t\t\ts1z = p2z - p0z;\n\n\t\t\t\t// evaluate sides and triangle normal\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\t\tnx *= nl;\n\t\t\t\tny *= nl;\n\t\t\t\tnz *= nl;\n\t\t\t} else { //2d hittest\n\t\t\t\tnx = 0;\n\t\t\t\tny = 0;\n\t\t\t\tnz = 1;\n\t\t\t}\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\n\t\t\t\t\t\tvar uvDim:number = triangleElements.uvs.dimensions;\n\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvDim;\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvDim;\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvDim;\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\n\t\t\t\t\t\tpickingCollisionVO.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\n\t\t\t\t\t}\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.elementsIndex = this.pGetMeshGraphicIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\t//\n\t///**\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\n\t// *\n\t// * @param triangleElements\n\t// * @param material\n\t// * @param pickingCollisionVO\n\t// * @param shortestCollisionDistance\n\t// * @returns {boolean}\n\t// */\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t//{\n\t//\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t//\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t//\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t//\t//this will only work while all points lie on the x/y plane\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\t//\n\t//\tvar result:Vector3D = new Vector3D();\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t//\trayDirection.scaleBy(t);\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\n\t//\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\n\t//\tvar collisionCurveIndex:number = -1;\n\t//\tvar bothSides:boolean = material.bothSides;\n\t//\n\t//\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\n\t//\tvar posDim:number = curveElements.positions.dimensions;\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\n\t//\tvar numIndices:number = indices.length;\n\t//\n\t//\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\n\t//\t{\n\t//\t\tvar id0:number = indices[index];\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\n\t//\n\t//\t\tvar ax:number = positions[id0 * posDim];\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\n\t//\t\tvar bx:number = positions[id1];\n\t//\t\tvar by:number = positions[id1 + 1];\n\t//\t\tvar cx:number = positions[id2];\n\t//\t\tvar cy:number = positions[id2 + 1];\n\t//\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\n\t//\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\n\t//\n\t//\t\t//from a to p\n\t//\t\tvar dx:number = ax - p.x;\n\t//\t\tvar dy:number = ay - p.y;\n\t//\n\t//\t\t//edge normal (a-b)\n\t//\t\tvar nx:number = by - ay;\n\t//\t\tvar ny:number = -(bx - ax);\n\t//\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\n\t//\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot a\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = bx - p.x;\n\t//\t\tdy = by - p.y;\n\t//\t\tnx = cy - by;\n\t//\t\tny = -(cx - bx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot b\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\tdx = cx - p.x;\n\t//\t\tdy = cy - p.y;\n\t//\t\tnx = ay - cy;\n\t//\t\tny = -(ax - cx);\n\t//\n\t//\t\tdot = (dx * nx) + (dy * ny);\n\t//\t\t//console.log(\"dot c\",dot);\n\t//\t\tif (dot > 0)\n\t//\t\t\tcontinue;\n\t//\n\t//\t\t//check if not solid\n\t//\t\tif (curvex != 2) {\n\t//\n\t//\t\t\tvar v0x:number = bx - ax;\n\t//\t\t\tvar v0y:number = by - ay;\n\t//\t\t\tvar v1x:number = cx - ax;\n\t//\t\t\tvar v1y:number = cy - ay;\n\t//\t\t\tvar v2x:number = p.x - ax;\n\t//\t\t\tvar v2y:number = p.y - ay;\n\t//\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t//\t\t\tvar u:number = 1 - v - w;\n\t//\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\t//\n\t//\t\t\tvar d:number = uu * uu - vv;\n\t//\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t//\t\t\t\tcontinue;\n\t//\t\t}\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t//\t\tif (distance < shortestCollisionDistance) {\n\t//\t\t\tshortestCollisionDistance = distance;\n\t//\t\t\tcollisionCurveIndex = index/3;\n\t//\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t//\t\t\tpickingCollisionVO.localPosition = p;\n\t//\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t//\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t//\t\t\tpickingCollisionVO.index = index;\n\t//\t\t\t//\t\t\t\t\t\tpickingCollisionVO.elementsIndex = this.pGetMeshGraphicIndex(renderable);\n\t//\n\t//\t\t\t// if not looking for best hit, first found will do...\n\t//\t\t\tif (!this._findClosestCollision)\n\t//\t\t\t\treturn true;\n\t//\t\t}\n\t//\t}\n\t//\n\t//\tif (collisionCurveIndex >= 0)\n\t//\t\treturn true;\n\t//\n\t//\treturn false;\n\t//}\n\n\t/**\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleElements\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the elements where the event took place.\n\t */\n//\t\tpublic elementsIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderable = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RenderableListItem\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredRenderables = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _renderables:Array<IRenderable>;\n\tprivate _numRenderables:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numRenderables = 0;\n\t\tvar node:RenderableListItem = this._raycastCollector.renderableHead;\n\t\tvar renderable:IRenderable;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(renderable = node.renderable))\n\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numRenderables)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numRenderables = 0;\n//\n//\t\t\tvar renderable:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\trenderable = entities[c];\n//\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(renderables)\n\t{\n\t\tthis._ignoredRenderables = renderables;\n\t}\n\n\tprivate isIgnored(renderable:IRenderable):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !renderable._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredRenderables[i] == renderable)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(renderable1:IRenderable, renderable2:IRenderable):number\n\t{\n\t\treturn renderable1._iPickingCollisionVO.rayEntryDistance > renderable2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._renderables.length = this._numRenderables;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._renderables = this._renderables.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar renderable:IRenderable;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numRenderables; ++i) {\n\t\t\trenderable = this._renderables[i];\n\t\t\tpickingCollisionVO = renderable._iPickingCollisionVO;\n\t\t\tif (renderable.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && renderable._iTestCollision(shortestCollisionDistance)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(renderable._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._renderables.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import RenderableListItem\t\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\n\n/**\n * @class away.pool.RenderableListItemPool\n */\nclass RenderableListItemPool\n{\n\tprivate _pool:Array<RenderableListItem> = new Array<RenderableListItem>();\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic getItem():RenderableListItem\n\t{\n\t\tvar item:RenderableListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new RenderableListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:RenderableListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.renderable = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = RenderableListItemPool;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass RenderableListItem\n{\n\t/**\n\t *\n\t */\n\tpublic renderable:IRenderable;\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableListItem;\n}\n\nexport = RenderableListItem;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGraphics() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:ArrayBufferView;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper(material, elementsType);\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:ArrayBufferView;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar uvs:ArrayBufferView;\n\t\tvar numVertices:number;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidatePrimitive()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/display/DisplayObject\");\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _primitiveDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _elements:ElementsBase;\n\tprivate _elementsType:string;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get elementsType():string\n\t{\n\t\treturn this._elementsType;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._material = material;\n\t\tthis._elementsType = elementsType;\n\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\n\t\t\ttriangleElements.autoDeriveNormals = false;\n\t\t\ttriangleElements.autoDeriveTangents = false;\n\t\t\tthis._elements = triangleElements;\n\t\t} else if (this._elementsType == ElementsType.LINE) {\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\n\t\t}\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\t\n\t/**\n\t * Invalidates the primitive, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidatePrimitive()\n\t{\n\t\tthis._primitiveDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGraphics()\n\t{\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\n\n\t\tthis._primitiveDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._primitiveDirty)\n\t\t\tthis.updateGraphics();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._material);\n\t\tmesh.graphics.addGraphic(this._elements);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport LineElements\t\t\t\t= require(\"awayjs-display/lib/graphics/LineElements\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGraphics.setPositions(positions);\n\t\t\tlineGraphics.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.uvs != null) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport ElementsType\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsType\");\nimport ElementsBase\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidatePrimitive();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidatePrimitive();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper(material, elementsType);\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:ArrayBufferView;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\n\t\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setIndices(indices);\n\n\t\t\ttriangleGraphics.setPositions(positions);\n\t\t\ttriangleGraphics.setNormals(normals);\n\t\t\ttriangleGraphics.setTangents(tangents);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:ArrayBufferView;\n\n\n\t\tif (elementsType == ElementsType.TRIANGLE) {\n\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\n\t\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGraphics.setUVs(uvs);\n\n\t\t} else if (elementsType == ElementsType.LINE) {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Mesh\n *\n * @class away.base.GraphicBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * Elements for this char\n\t */\n\tpublic elements:TriangleElements;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(elements:TriangleElements)\n\t{\n\t\tthis.elements = elements;\n\n\t\tthis.char_width = 0;\n\n\t\tif (this.elements != null) {\n\t\t\tvar positions2:ArrayBufferView = this.elements.positions.get(this.elements.numVertices);\n\t\t\tvar count:number = this.elements.positions.count;\n\t\t\tvar dim:number = this.elements.positions.dimensions;\n\t\t\tfor (var v:number = 0; v < count*dim; v+=dim) {\n\t\t\t\tif(positions2[v] > this.char_width)\n\t\t\t\t\tthis.char_width = positions2[v];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ElementsBase\t\t\t\t\t= require(\"awayjs-display/lib/graphics/ElementsBase\");\nimport TriangleElements\t\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleElements\n * @see away.entities.Mesh\n *\n * @class away.base.GraphicBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getChar(name:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[name];\n\t}\n\t/**\n\t *\n\t */\n\tpublic setChar(name:string, elements:ElementsBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\n\t\telements.name = name;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport ISurface\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISurface\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Scene\");\nimport RenderableListItem\t\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItem\");\nimport RenderableListItemPool\t\t\t= require(\"awayjs-display/lib/pool/RenderableListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IRenderable = require(\"awayjs-display/lib/base/IRenderable\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pRenderableHead:RenderableListItem;\n\tpublic _pRenderableListItemPool:RenderableListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pRenderableListItemPool = new RenderableListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get renderableHead():RenderableListItem\n\t{\n\t\treturn this._pRenderableHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pRenderableHead = null;\n\t\tthis._pRenderableListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyRenderable(renderable:IRenderable)\n\t{\n\t\tvar item:RenderableListItem = this._pRenderableListItemPool.getItem();\n\t\titem.renderable = renderable;\n\n\t\titem.next = this._pRenderableHead;\n\t\tthis._pRenderableHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/display/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/display/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/display/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/display/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/display/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport TriangleElements\t\t\t= require(\"awayjs-display/lib/graphics/TriangleElements\");\n\nclass ElementsUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tif (positionDim == 3) {\n\t\t\twhile (i < count) {\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx1 = positions[index];\n\t\t\t\ty1 = positions[index + 1];\n\t\t\t\tz1 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx2 = positions[index];\n\t\t\t\ty2 = positions[index + 1];\n\t\t\t\tz2 = positions[index + 2];\n\t\t\t\tindex = indices[i++]*3;\n\t\t\t\tx3 = positions[index];\n\t\t\t\ty3 = positions[index + 1];\n\t\t\t\tz3 = positions[index + 2];\n\t\t\t\tdx1 = x3 - x1;\n\t\t\t\tdy1 = y3 - y1;\n\t\t\t\tdz1 = z3 - z1;\n\t\t\t\tdx2 = x2 - x1;\n\t\t\t\tdy2 = y2 - y1;\n\t\t\t\tdz2 = z2 - z1;\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t\t// length of cross product = 2*triangle area\n\n\t\t\t\tfaceNormals[j++] = cx;\n\t\t\t\tfaceNormals[j++] = cy;\n\t\t\t\tfaceNormals[j++] = cz;\n\t\t\t\tfaceNormals[j++] = d;\n\t\t\t}\n\t\t} else if (positionDim == 2) {\n\t\t\twhile (i < count) {\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 0;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\tfaceNormals[j++] = 1;\n\t\t\t\ti += 3;\n\t\t\t}\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar v0:number;\n\t\tvar v1:number;\n\t\tvar v2:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tv0 = index1*positionDim;\n\t\t\tv1 = index2*positionDim;\n\t\t\tv2 = index3*positionDim;\n\n\t\t\tx0 = positions[v0];\n\t\t\tdx1 = positions[v1] - x0;\n\t\t\tdx2 = positions[v2] - x0;\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\n\t\t\ty0 = positions[v0 + 1];\n\t\t\tdy1 = positions[v1 + 1] - y0;\n\t\t\tdy2 = positions[v2 + 1] - y0;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\n\t\t\tif (positionDim == 3) {\n\t\t\t\tz0 = positions[v0 + 2];\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\t} else {\n\t\t\t\tcz = 0;\n\t\t\t}\n\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\t//todo: make this compatible with 2-dimensional positions\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, boundingBox:Box, triangleElements:TriangleElements):boolean\n\t{\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\n\t\tvar count:number = triangleElements.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count);\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count) : null;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = triangleElements.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = triangleElements.cells;\n\t\t\tvar divisions:number = cells.length? triangleElements.divisions : (triangleElements.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (curves) {\n\t\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t\t//check if not solid\n\t\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t\t//here be dragons\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\n\t\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tif (curves) {\n\t\t\t\tvar curvex:number = curves[id0 * curveDim + 1];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = curves[id0 * curveDim];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttriangleElements.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\n\n\t\tvar len:number = count*posDim;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tif (i == 0) {\n\t\t\t\tmaxX = minX = positions[i];\n\t\t\t\tmaxY = minY = positions[i + 1];\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\n\t\t\t} else {\n\t\t\t\tpos = positions[i];\n\t\t\t\tif (pos < minX)\n\t\t\t\t\tminX = pos;\n\t\t\t\telse if (pos > maxX)\n\t\t\t\t\tmaxX = pos;\n\n\t\t\t\tpos = positions[i + 1];\n\n\t\t\t\tif (pos < minY)\n\t\t\t\t\tminY = pos;\n\t\t\t\telse if (pos > maxY)\n\t\t\t\t\tmaxY = pos;\n\n\t\t\t\tif (posDim == 3) {\n\t\t\t\t\tpos = positions[i + 2];\n\n\t\t\t\t\tif (pos < minZ)\n\t\t\t\t\t\tminZ = pos;\n\t\t\t\t\telse if (pos > maxZ)\n\t\t\t\t\t\tmaxZ = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (output.x > minX)\n\t\t\toutput.x = minX;\n\n\t\tif (output.y > minY)\n\t\t\toutput.y = minY;\n\n\t\tif (output.z > minZ)\n\t\t\toutput.z = minZ;\n\n\t\tif (output.right < maxX)\n\t\t\toutput.right = maxX;\n\n\t\tif (output.bottom < maxY)\n\t\t\toutput.bottom = maxY;\n\n\t\tif (output.back < maxZ)\n\t\t\toutput.back = maxZ;\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = count*posDim;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = ElementsUtils;"
  ],
  "sourceRoot": ""
}
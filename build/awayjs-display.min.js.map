{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "childHit",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "hit",
    "sub",
    "curve",
    "hittestMesh",
    "px",
    "py",
    "posDim",
    "curveDim",
    "curves",
    "k",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "w",
    "uu",
    "vv",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "numElements",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag);\r\n\t\t\tif(childHit) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\t//thought I would need the global hit point converted into local space, but not sure how to hook it in\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tvar hit:boolean = false;\r\n\r\n\t\tif(this.geometry)\r\n\t\t{\r\n\t\t\tvar box:Box = this.getBox();\r\n\t\t\tif(box.left > local.x || box.right < local.x || box.top  > local.y ||  box.bottom < local.y) return false;\r\n\r\n\r\n\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++)\r\n\t\t\t{\r\n\t\t\t\tvar sub:SubGeometryBase = this.geometry.subGeometries[j];\r\n\t\t\t\tvar curve:CurveSubGeometry = <CurveSubGeometry>sub;\r\n\t\t\t\tif(curve) hit = this.hittestMesh(local.x, local.y, curve);\r\n\t\t\t\tif(hit) return true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag);\r\n\t\tif(hit) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\tprivate hittestMesh(px:number, py:number, sub:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar posDim:number = sub.positions.dimensions;\r\n\t\tvar curveDim:number = sub.curves.dimensions;\r\n\t\tvar indices:Uint16Array = sub.indices.get(sub.indices.count);\r\n\t\tvar positions:Float32Array = sub.positions.get(sub.positions.count);\r\n\t\tvar curves:Float32Array = sub.curves.get(sub.curves.count);\r\n\r\n\t\tfor(var k:number = 0; k < sub.indices.length; k+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[k + 2];\r\n\t\t\tvar id1:number = indices[k + 1];\r\n\t\t\tvar id2:number = indices[k + 0];\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1 * posDim];\r\n\t\t\tvar by:number = positions[id1 * posDim + 1];\r\n\t\t\tvar cx:number = positions[id2 * posDim];\r\n\t\t\tvar cy:number = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - px;\r\n\t\t\tvar dy:number = ay - py;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - px;\r\n\t\t\tdy = by - py;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - px;\r\n\t\t\tdy = cy - py;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = px - ax;\r\n\t\t\t\tvar v2y:number = py - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Uint16Array = this_subGeom.indices.get(this_subGeom.numElements);\r\n\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices[k++] = indices2[v] + tri_idx_offset;\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setIndices(indices);\r\n\t\tcurve_sub_geom.setPositions(new Float3Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setCurves(new Float2Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
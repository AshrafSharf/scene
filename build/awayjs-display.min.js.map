{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "MovieClip",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "translateScript",
    "classReplacements",
    "addScriptForExecution",
    "frame_script_in",
    "replacementPreface",
    "replacementPostface",
    "srcName",
    "dstName",
    "Function",
    "err",
    "console",
    "log",
    "message",
    "numFrames",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "removeAll",
    "removeAllFromScript",
    "previous_sessions",
    "previous_mcs",
    "session_cnt",
    "prev_script_cnt",
    "numChildren",
    "child",
    "getChildAt",
    "removeChildAt",
    "isAsset",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "remove_childs",
    "command_index_stream",
    "command_length_stream",
    "add_childs",
    "target_sessions",
    "reset",
    "doit",
    "isBlockedByScript",
    "freeFromScript",
    "unregisterScriptObject",
    "update_childs",
    "constructNextFrame",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "start_index",
    "removeChildAtDepth",
    "remove_child_stream",
    "add_child_stream",
    "addChildAtDepth",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "childID",
    "update_child_stream",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "firstMaskID",
    "mask",
    "masks",
    "mouseEnabled",
    "properties_stream_strings",
    "registerScriptObject",
    "makeButton",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/entities/MovieClip",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getChildDepth",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "Event",
    "MouseEvent",
    "FrameScriptManager",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_timeline",
    "potential_child_length",
    "timeline",
    "_skipAdvance",
    "_onMouseOver",
    "evt",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListener",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "add_script_to_queue",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "executePostConstructCommands",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "mc",
    "script",
    "_queued_mcs",
    "_queued_scripts",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\r\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\t\tnewInstance.name = this.name;\r\n\r\n\t\tnewInstance._iMaskID = this._iMaskID;\r\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\r\n\t\t\treturn;\r\n\t\tthis.keyframe_firstframes=[];\r\n\t\tthis.keyframe_constructframes=[];\r\n\t\tvar frame_cnt=0;\r\n\t\tvar ic=0;\r\n\t\tvar ic2=0;\r\n\t\tvar keyframe_cnt=0;\r\n\t\tvar last_construct_frame=0;\r\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\r\n\t\t\t\tlast_construct_frame=keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\r\n\r\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis.translateScript(target_mc.adapter.classReplacements,this._framescripts[keyframe_idx], keyframe_idx);\r\n\t\t\t}\r\n\t\t\ttarget_mc.addScriptForExecution(this._framescripts[keyframe_idx]);\r\n\t\t}\r\n\t}\r\n\t// TODO: handle this in the exporter so it's safe!\r\n\tpublic translateScript(classReplacements, frame_script_in:string, keyframe_idx:number)\r\n\t{\r\n\t\tvar replacementPreface = \"\";\r\n\t\tvar replacementPostface = \"\";\r\n\r\n\t\tfor (var srcName in classReplacements) {\r\n\t\t\tvar dstName = classReplacements[srcName];\r\n\t\t\t// where class name is a single word\r\n\t\t\t//var regex = \"\\b\" + srcName + \"\\b\";\r\n\t\t\t//replaced = replaced.replace(new RegExp(regex, \"g\"), dstName);\r\n\r\n\t\t\t// store old references to stuff in a temporary var to be reset after script execution;\r\n\t\t\t// make sure a definition exists, even if it's undefined\r\n\t\t\treplacementPreface += \"var __OLD_\" + srcName + \" = typeof \" + srcName + \" == 'function'? \" + srcName + \" : undefined;\\n\";\r\n\t\t\treplacementPreface += srcName + \" = require(\\\"\" + dstName + \"\\\");\\n\";\r\n\t\t\treplacementPreface += \"function int(value) { return value | 0; }\\n\";\r\n\t\t\treplacementPostface += srcName + \" = __OLD_\" + srcName + \";\\n\";\r\n\t\t}\r\n\r\n\t\t// make sure we don't use \"this\", since Actionscript's \"this\" has the same scope rules as a variable\r\n\t\tvar str =   replacementPreface +\r\n\t\t\tframe_script_in +\r\n\t\t\treplacementPostface;\r\n\r\n\t\t//console.log(str);\r\n\r\n\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\ttry {\r\n\t\t\tthis._framescripts[keyframe_idx] = new Function(str);\r\n\t\t}\r\n\t\tcatch(err)\r\n\t\t{\r\n\t\t\tconsole.log(\"Syntax error in script:\\n\", str);\r\n\t\t\tconsole.log(err.message);\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id].clone();\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\r\n\t{\r\n\r\n\t\t//console.log(\"gotoframe\");\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\r\n\t\tif(frameIndex==value){\r\n\t\t\t//we are already on this frame.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//console.log(\"gotoframe 2\");\r\n\t\tif(firstframe==value){\r\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx);\r\n\t\t}\r\n\r\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\r\n\t\t\t// already constructed\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number=break_frame_idx;\r\n\t\t// in case we jump fporward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\tif((jump_forward)&&(!jump_gap)){\r\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\r\n\t\t}\r\n\t\tvar removeAll:boolean=false;\r\n\t\tvar removeAllFromScript:boolean=false;\r\n\t\t// if we jump backwards, or if we jump a gap, we want to remove everything from the stage.\r\n\t\t// if we jump a gap, we also want to free everything from script access.\r\n\t\tif((!jump_forward)||(jump_gap)){\r\n\t\t\tremoveAll=true;\r\n\t\t\tif(jump_gap){\r\n\t\t\t\tremoveAllFromScript;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar previous_sessions:Array<number> = [];\t// store a list of all previous active sessionIDs\r\n\t\tvar previous_mcs:Array<MovieClip> = [];\t// store a list of all previous active Movieclips\r\n\t\tvar session_cnt:number=0;\r\n\t\tvar prev_script_cnt:number=0;\r\n\t\tvar i:number=0;\r\n\t\tvar k:number=0;\r\n\t\tfor (i=target_mc.numChildren-1; i>=0; i--) {\r\n\t\t\t//else{\r\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\r\n\r\n\t\t\t// if we jump back, or if we do not jump a gap, we need to collect all sessionIDs, in order to know what to reset\r\n\t\t\tif((!jump_forward)||(!jump_gap)){\r\n\t\t\t\tprevious_sessions[session_cnt++] = child[\"__sessionID\"];\r\n\t\t\t}\r\n\t\t\tif (removeAll) {\r\n\t\t\t\tif(removeAllFromScript){\r\n\t\t\t\t\t//target_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\t\t//if(child.isAsset(MovieClip) && (<MovieClip>child).adapter)\r\n\t\t\t\t\t//\t(<MovieClip>child).adapter.freeFromScript();\r\n\r\n\t\t\t\t}\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(child.isAsset(MovieClip))\r\n\t\t\t\t\tprevious_mcs[prev_script_cnt++] = <MovieClip>child;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass1: only apply add/remove commands.\r\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt=0;\r\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\r\n\r\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\r\n\r\n\t\t\tif ((frame_recipe & 2) == 2){\r\n\t\t\t\t// if this is the first frame of the run-through, and we have \"removeAll\", we cannot execute remove (because all childs already removed)\r\n\t\t\t\tthis.remove_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\r\n\t\t}\r\n\r\n\t\tsession_cnt=0;\r\n\t\tvar target_sessions:Array<number> = [];\r\n\t\t// between passes:\r\n\t\t// if a child has a sessionID that was not present in previous frame, it must be reset\r\n\t\tfor (i=0; i<target_mc.numChildren; ++i) {\r\n\t\t\tvar child:DisplayObject = target_mc.getChildAt(i);\r\n\t\t\ttarget_sessions[session_cnt++] = child[\"__sessionID\"];\r\n\t\t\tif (previous_sessions.indexOf(child[\"__sessionID\"]) == -1) {\r\n\t\t\t\tchild.reset_to_init_state();\r\n\t\t\t\tif (child.isAsset(MovieClip))\r\n\t\t\t\t\t(<MovieClip>child).reset();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(!jump_forward) {\r\n\t\t\t\t\tvar doit:boolean = true;\r\n\t\t\t\t\tif (child.isAsset(MovieClip)) {\r\n\t\t\t\t\t\tif ((<MovieClip>child).adapter && (<MovieClip>child).adapter.isBlockedByScript())\r\n\t\t\t\t\t\t\tdoit = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doit)\r\n\t\t\t\t\t\tchild.reset_to_init_state();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// all objects that was present on previous frame, but not on current need to be unregistered\r\n\t\tfor (i=0; i<previous_mcs.length; ++i) {\r\n\t\t\tif(target_sessions.indexOf(previous_mcs[i][\"__sessionID\"])==-1){\r\n\t\t\t\tprevious_mcs[i].adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(previous_mcs[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number=0;\r\n\t\tfor(k=0;k<update_indices.length; k++){\r\n\t\t\tframe_command_idx=update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx] );\r\n\t\t}\r\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex){\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex);\r\n\t\t}\r\n\r\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\r\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif((frame_recipe & 1)==1) {\r\n\t\t\t\tvar i:number = target_mc.numChildren;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tvar target:DisplayObject=target_mc.getChildAt(i);\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(target);\r\n\t\t\t\t\tif (target.isAsset(MovieClip) && (<MovieClip> target).adapter)\r\n\t\t\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ((frame_recipe & 2)==2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tpublic remove_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index+i] - 16383);\r\n\t}\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\r\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\r\n\t\t\tif(target.isAsset(MovieClip) && (<MovieClip> target).adapter)\r\n\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\r\n\t\t}\r\n\t}\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\r\n\r\n\t\t\tif(target.isAsset(MovieClip)) {\r\n\t\t\t\tif ((<MovieClip>target).adapter && !(<MovieClip>target).adapter.isBlockedByScript()) {\r\n\t\t\t\t\t(<MovieClip>target).reset();\r\n\t\t\t\t\ttarget.reset_to_init_state();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttarget.reset_to_init_state();\r\n\t\t\t}\r\n\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_cnt:number;\r\n\t\tvar props_start_idx:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\r\n\t\t\tif (target.parent == sourceMovieClip) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.isAsset(MovieClip))\r\n\t\t\t\t\tif ((<MovieClip>target).adapter.isBlockedByScript())\r\n\t\t\t\t\t\tdoit = false;\r\n\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\r\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\r\n\r\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:// masks\r\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\r\n\t\t\t\t\t\t\tvar firstMaskID:number=this.properties_stream_int[value_start_index] - 1;\r\n\t\t\t\t\t\t\tif (mask_length == 1 && firstMaskID == -1) {\r\n\t\t\t\t\t\t\t\ttarget._iMaskID = childID;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\r\n\t\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getPotentialChildInstance(this.properties_stream_int[value_start_index++] - 1);\r\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\r\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(MovieClip))\r\n\t\t\t\t\t\t\t\t\t\t(<MovieClip> mask).mouseChildren = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\t(<MovieClip>target).makeButton();\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depths:Array<number> = new Array<number>();\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\t\t\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._depths.length;\r\n\t\tvar index:number = len;\r\n\t\t\r\n\t\twhile (index--)\r\n\t\t\tif (this._depths[index] < depth)\r\n\t\t\t\tbreak;\r\n\r\n\t\tindex++;\r\n\r\n\t\tif (index < len) {\r\n\t\t\t//if replace flag & depths match current depth, remove the existing child\r\n\t\t\tif (this._depths[index] == depth) {\r\n\t\t\t\tif (replace) {\r\n\t\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//update depths if there are children higher than added child\r\n\t\t\t\t\tfor (var i:number = index; i < len; i++)\r\n\t\t\t\t\t\tthis._depths[i] = this._depths[i] + 1;\r\n\r\n\t\t\t\t\tthis._nextHighestDepth++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._children.splice(index, 0, child);\r\n\t\t\tthis._depths.splice(index, 0, depth);\r\n\t\t} else {\r\n\t\t\tthis._children.push(child);\r\n\t\t\tthis._depths.push(depth);\r\n\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\t\t}\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\t\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\treturn this._depths[this.getChildIndex(child)];\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\t\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t\t\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._depths[index1];\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis._depths[index1] = this._depths[index2];\r\n\t\tthis._children[index1] = this._children[index2];\r\n\r\n\t\tthis._depths[index2] = depth;\r\n\t\tthis._children[index2] = child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\t\tthis._depths.splice(index, 1);\r\n\r\n\t\t//if child is the last in array, update next highest depth\r\n\t\tif (index == this._children.length)\r\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tvar index:number = this._depths.indexOf(depth);\r\n\r\n\t\tif (index == -1)\r\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\r\n\r\n\t\treturn index;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this.getChildAt(i).clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:Function;\r\n    private _onMouseOut:Function;\r\n    private _onMouseDown:Function;\r\n    private _onMouseUp:Function;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Array<DisplayObject>;\r\n   // private _framescripts_to_execute:Array<Function>;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this._potentialInstances = [];\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._fps = 30;\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n        var i:number=0;\r\n        var potential_child_length:number=value.getPotentialChilds().length;\r\n        for(i=0; i<potential_child_length; i++){\r\n            this._potentialInstances[i]=null;\r\n        }\r\n    }\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this.timeline.numFrames();\r\n    }\r\n\r\n    public jumpToLabel(label:string) : void\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this.timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex() : number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex() : number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public reset():void\r\n    {\r\n        if(this.adapter){\r\n            this.adapter.freeFromScript();\r\n        }\r\n\r\n        this._isPlaying = true;\r\n        this._time = 0;\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            var child:DisplayObject=this.getChildAt(i);\r\n            this.adapter.unregisterScriptObject(child);\r\n            this.removeChildAt(i);\r\n        }\r\n\r\n        /*\r\n        // force reset all potential childs on timeline. // this seem to slow things down without having positive any effect\r\n        for (var key in this._potentialInstances) {\r\n            if (this._potentialInstances[key]) {\r\n                if (this._potentialInstances[key].isAsset(MovieClip))\r\n                    (<MovieClip>this._potentialInstances[key]).reset();\r\n            }\r\n        }\r\n        */\r\n        if(this.parent!=null){\r\n            this._skipAdvance = true;\r\n            this.timeline.gotoFrame(this, 0);\r\n            this._currentFrameIndex = 0;\r\n        }\r\n        // i was thinking we might need to reset all children, but it makes stuff worse\r\n        /*\r\n        var i:number=this.numChildren;\r\n        while (i--) {\r\n            var child = this.getChildAt(i);\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip>child).reset();\r\n        }\r\n        */\r\n        //this.advanceChildren();\r\n\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline) {\r\n            value = Math.floor(value);\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this.timeline.numFrames())\r\n                value = this.timeline.numFrames() - 1;\r\n\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this.timeline.gotoFrame(this, value);\r\n\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public makeButton()\r\n    {\r\n        this._isButton=true;\r\n        this.stop();\r\n\r\n        this._onMouseOver = function(evt:MouseEvent) {(<MovieClip>evt.target).currentFrameIndex = 1; };\r\n        this._onMouseOut = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 0; };\r\n        this._onMouseDown = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = 2; };\r\n        this._onMouseUp = function(evt:MouseEvent) { (<MovieClip>evt.target).currentFrameIndex = this.currentFrameIndex == 0? 0 : 1; };\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListener()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\t\tsuper.addChildAtDepth(child, depth, replace);\r\n\r\n        return child;\r\n    }\r\n\r\n    public get fps():number\r\n    {\r\n        return this._fps;\r\n    }\r\n\r\n    public set fps(newFps:number)\r\n    {\r\n        this._fps = newFps;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update(timeDelta:number)\r\n    {\r\n        //this.logHierarchy();\r\n        // TODO: Implement proper elastic racetrack logic\r\n        var frameMarker:number = Math.floor(1000/this._fps);\r\n\r\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\r\n        this._time += Math.min(timeDelta, frameMarker);\r\n\r\n        if (this._time >= frameMarker) {\r\n            this._time = 0;\r\n            this.advanceFrame();\r\n            // after we advanced the scenegraph, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n\r\n            // now we want to execute the onEnter\r\n            this.dispatchEvent(this._enterFrame);\r\n            // after we executed the onEnter, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n            //console.log(\"update \"+this._currentFrameIndex);\r\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\r\n        }\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id]) {\r\n            this._potentialInstances[id] = this.timeline.getPotentialChildInstance(id);\r\n        }\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n    public addScriptForExecution(value:Function)\r\n    {\r\n        FrameScriptManager.add_script_to_queue(this, value);\r\n    }\r\n    public activateChild(id:number)\r\n    {\r\n        this.addChild(this.getPotentialChildInstance(id));\r\n    }\r\n\r\n    public deactivateChild(id:number)\r\n    {\r\n        this.removeChild(this._potentialInstances[id]);\r\n    }\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip());\r\n\r\n        newInstance.timeline = this._timeline;\r\n\r\n        newInstance._fps = this._fps;\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\r\n\t\tif (value && this._timeline && this._currentFrameIndex == -1){\r\n            this.currentFrameIndex=0;\r\n        }\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this.timeline) {\r\n            var i;\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n            if (advance && oldFrameIndex == this.timeline.numFrames() - 1 && !this._loop) {\r\n                advance = false;\r\n            }\r\n            if (advance && oldFrameIndex == 0 && this.timeline.numFrames() == 1) {\r\n                //console.log(\"one frame clip\");\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n            if (advance) {\r\n                //console.log(\"advance\");\r\n                ++this._currentFrameIndex;\r\n                if (this._currentFrameIndex == this.timeline.numFrames()) {\r\n                    // looping - jump to first frame.\r\n                    this.currentFrameIndex=0;\r\n                }\r\n                else if (oldFrameIndex != this._currentFrameIndex){\r\n                    // not looping - construct next frame\r\n                    this.timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n\r\n        }\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len = this.numChildren;\r\n        for (var i = 0; i <  len; ++i) {\r\n            var child = this.getChildAt(i);\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        for (var i = 0; i < len; i++) {\r\n            var child = this.getChildAt(i);\r\n\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target._iMaskID;\r\n        console.log(str);\r\n    }\r\n\r\n    executePostConstructCommands():boolean\r\n    {\r\n        return true;\r\n    }\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this.getChildAt(i).clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tvar i=0;\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif((mc.parent!=null)||(mc.name==\"Scene 1\")) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade) {\r\n\t\t\tvar t:EntityNode = this._updateQueue;\r\n\t\t\twhile (t) {\r\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\t\tt.entity._iInternalUpdate();\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\t\t\t}\r\n\t\t\tthis.updateEntities();\r\n\t\t}\r\n\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
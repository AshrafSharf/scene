{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_available",
    "push",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_orientationMatrix",
    "_rot",
    "_ske",
    "_sca",
    "_pRenderables",
    "_entityNodes",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transformComponents",
    "_transform",
    "identity",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "_explicitColorTransform",
    "alphaMultiplier",
    "_iColorTransform",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "SCENE_TRANSFORM",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "_iMatrix3D",
    "adapter",
    "colorTransform",
    "clear",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset",
    "visible",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartition",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_clearInterfaces",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "event",
    "elements",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_images",
    "_samplers",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "getImageAt",
    "addImageAt",
    "image",
    "removeImageAt",
    "getSamplerAt",
    "addSamplerAt",
    "sampler",
    "removeSamplerAt",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "containerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onTextureChangedDelegate",
    "onTextureChanged",
    "_updateDimensions",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "TEXTURE_CHANGED",
    "_colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "getSamplerIndex",
    "texture",
    "rect",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "_meshes",
    "pop",
    "isAsset",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "getNewSubMesh",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "TextField",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "RenderableOwnerEvent",
    "Skybox",
    "cubeMap",
    "_imageCount",
    "_imageIndex",
    "_samplerIndices",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_imageRect",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "getNumImages",
    "getImageIndex",
    "getNumSamplers",
    "_pUpdateRender",
    "RENDER_OWNER_UPDATED",
    "_pInvalidatePasses",
    "_iAddRender",
    "_iRemoveRender",
    "_iAddImage",
    "_iRemoveImage",
    "_iAddSampler",
    "_iRemoveSampler",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "split",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_subGeometry",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "renderOwner",
    "_renderOwner",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "CHANGE",
    "_pTexture",
    "_pNotifyTextureChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_textureChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "iAddNode",
    "node",
    "isContainer",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "disposeItem",
    "iRemoveEntity",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "findParentForNode",
    "targetNode",
    "getItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "getClass",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "newSubMesh",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "ImageUtils",
    "isImage2DValid",
    "iRemoveImage",
    "iAddImage",
    "invalidateContent",
    "awayjs-core/lib/utils/ImageUtils",
    "_counts",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "createSampler",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<CurveSubMesh> = new Array<CurveSubMesh>();\n\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic subGeometry:CurveSubGeometry;\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tCurveSubMesh._available.push(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tpublic _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _explicitColorTransform:ColorTransform;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tpublic _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D;\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotDirty:boolean;\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._explicitColorTransform? this._explicitColorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._explicitColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n        this._explicitColorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._matrix3D.rawData[12];\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[12] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._matrix3D.rawData[13];\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[13] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._matrix3D.rawData[14];\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._matrix3D.rawData[14] == val)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\t}\n\n\tpublic clear()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t\tthis._explicitColorTransform = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._matrix3D.rawData[12] == dx && this._matrix3D.rawData[13] == dy && this._matrix3D.rawData[14] == dz)\n\t\t\treturn;\n\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\n\t\tif(this._iColorTransform)\n\t\t\tthis._iColorTransform.clear();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._matrix3D.rawData[12] += x*len;\n\t\tthis._matrix3D.rawData[13] += y*len;\n\t\tthis._matrix3D.rawData[14] += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis._elementsDirty = true;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic get _iColorTransform():ColorTransform\n\t{\n\t\treturn this._explicitColorTransform;\n\t}\n\n\tpublic set _iColorTransform(value:ColorTransform)\n\t{\n\t\tthis._explicitColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartition();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc associated objects\n\t\t\tthis._clearInterfaces();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\n\t\tif (this._pivot)\n\t\t\tthis.invalidatePivot();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tif (this._listenToSkewChanged)\n\t\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.splice(this._entityNodes.indexOf(entityNode), 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tpublic updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._explicitColorTransform);\n\t\t} else {\n\t\t\tif (this._explicitColorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._explicitColorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tvar i:number;\n\n\t\tfor (i = this._entityNodes.length - 1; i >= 0; i--)\n\t\t\tthis._entityNodes[i].dispose();\n\n\t\tfor (i = this._pRenderables.length - 1; i >= 0; i--)\n\t\t\tthis._pRenderables[i].dispose();\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<LineSubMesh> = new Array<LineSubMesh>();\n\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic subGeometry:LineSubGeometry;\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tLineSubMesh._available.push(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _samplers:Object = new Array<ImageBase>();\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this.parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic parentMesh:Mesh;\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this.parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index] || this.parentMesh.getImageAt(index);\n\t}\n\n\tpublic addImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\t}\n\n\tpublic removeImageAt(index:number)\n\t{\n\t\tthis._images[index] = null;\n\t}\n\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index] || this.parentMesh.getSamplerAt(index);\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\t}\n\n\tpublic removeSamplerAt(index:number)\n\t{\n\t\tthis._samplers[index] = null;\n\t}\n\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.parentMesh = parentMesh;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\t\tthis.parentMesh = null;\n\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this.parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.splice(this._renderables.indexOf(renderable), 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renderables.length - 1; i >= 0; i--)\n\t\t\tthis._renderables[i].dispose();\n\t}\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tif (child._iMatrix3D) {\n\t\t\t\t\t\t\t\tchild._iMatrix3D.identity();\n\t\t\t\t\t\t\t\tchild.x = child._iMatrix3D.rawData[12];\n\t\t\t\t\t\t\t\tchild.y = child._iMatrix3D.rawData[13];\n\t\t\t\t\t\t\t\tchild._elementsDirty = true;\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child._iColorTransform) {\n\t\t\t\t\t\t\t\tchild._iColorTransform.clear();\n\t\t\t\t\t\t\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild._elementsDirty = true;\n\n\t\tchild.invalidatePosition();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child._iColorTransform || (child._iColorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild._elementsDirty = true;\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child._iMatrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._displayObject._iColorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tthis._displayObject._iColorTransform = val;\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._displayObject = null;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<TriangleSubMesh> = new Array<TriangleSubMesh>();\n\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic subGeometry:TriangleSubGeometry;\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tTriangleSubMesh._available.push(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.clear();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _iAddContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.push(containerNode);\n\n\t\treturn containerNode;\n\t}\n\n\n\tpublic _iRemoveContainerNode(containerNode:ContainerNode):ContainerNode\n\t{\n\t\tthis._containerNodes.splice(this._containerNodes.indexOf(containerNode), 1);\n\n\t\treturn containerNode;\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar i:number;\n\n\t\tfor (i = this._children.length - 1; i >= 0; i--)\n\t\t\tthis._children[i]._clearInterfaces();\n\n\t\tfor (i = this._containerNodes.length - 1; i >= 0; i--)\n\t\t\tthis._containerNodes[i].dispose();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onTextureChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.TEXTURE_CHANGED, this.onTextureChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.TEXTURE_CHANGED, this.onTextureChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onTextureChangedDelegate = (event:MaterialEvent) => this.onTextureChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index] || this.material.getImageAt(index);\n\t}\n\n\tpublic addImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\t}\n\n\tpublic removeImageAt(index:number)\n\t{\n\t\tthis._images[index] = null;\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\n\t\tif (index == 0)\n\t\t\tthis._updateDimensions();\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tif (index == 0)\n\t\t\tthis._updateDimensions();\n\t}\n\n\tpublic removeSamplerAt(index:number)\n\t{\n\t\tthis._samplers[index] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onTextureChanged(event:MaterialEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar image:Image2D = <Image2D> this.getImageAt(0);\n\n\t\tif (image) {\n\t\t\tvar index:number = this.material.getSamplerIndex(this.material.texture);\n\t\t\tvar sampler:Sampler2D = <Sampler2D> (this.getSamplerAt(index) || this.material.getSamplerAt(index));\n\t\t\tvar rect:Rectangle = sampler.imageRect || image.rect;\n\t\t\tthis._billboardWidth = rect.width;\n\t\t\tthis._billboardHeight = rect.height;\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic addImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\t}\n\n\tpublic removeImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = null;\n\t}\n\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\t}\n\n\tpublic removeSamplerAt(index:number)\n\t{\n\t\tthis._samplers[index] = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic addImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\t}\n\n\tpublic removeImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = null;\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\t}\n\n\tpublic removeSamplerAt(index:number)\n\t{\n\t\tthis._samplers[index] = null;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tif (this.isAsset(Mesh))\n\t\t\tnewInstance.geometry = this._geometry;\n\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subMesh:ISubMesh = SubMeshPool.getNewSubMesh(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tsuper._clearInterfaces();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._clearInterfaces();\n\t}\n}\n\nexport = Mesh;",
    "import Event                        = require(\"awayjs-core/lib/events/Event\");\nimport AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\nimport IAsset                       = require(\"awayjs-core/lib/library/IAsset\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:Event;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new Event(Event.ENTER_FRAME);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.clear();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public clear()\n    {\n        super.clear();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public _clearInterfaces()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            } else {\n                instance._clearInterfaces();\n            }\n        }\n\n        super._clearInterfaces();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _imageCount:Array<number> = new Array<number>();\n\tprivate _imageIndex:Object = new Object();\n\tprivate _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\tprivate _samplerIndices:Object = new Object();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _imageRect:boolean = false;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\tif (this._cubeMap == value)\n\t\t\treturn;\n\n\t\tif (this._cubeMap)\n\t\t\tthis._cubeMap.iRemoveOwner(this);\n\n\t\tthis._cubeMap = value;\n\n\t\tif (this._cubeMap)\n\t\t\tthis._cubeMap.iAddOwner(this);\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._images.length;\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic getImageIndex(image:ImageBase):number\n\t{\n\t\treturn this._imageIndex[image.id];\n\t}\n\n\tpublic getNumSamplers():number\n\t{\n\t\treturn this._samplers.length;\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic getSamplerIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (!this._samplerIndices[texture.id])\n\t\t\tthis._samplerIndices[texture.id] = new Array<number>();\n\n\t\treturn this._samplerIndices[texture.id][index];\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _pUpdateRender()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iAddImage(image:ImageBase)\n\t{\n\t\tvar index:number = this._imageIndex[image.id];\n\t\tif (!index) {\n\t\t\tthis._imageIndex[image.id] = this._images.length;\n\n\t\t\tthis._images.push(image);\n\t\t\tthis._imageCount.push(1);\n\n\t\t\tthis._pInvalidatePasses();\n\n\t\t\tthis._pUpdateRender();\n\t\t} else {\n\t\t\tthis._imageCount[index]--;\n\t\t}\n\t}\n\n\tpublic _iRemoveImage(image:ImageBase)\n\t{\n\t\tvar index:number = this._imageIndex[image.id];\n\t\tif (this._imageCount[index] != 1) {\n\t\t\tthis._imageCount[index]--;\n\t\t} else {\n\t\t\tdelete this._imageIndex[image.id];\n\n\t\t\tthis._images.splice(index, 1);\n\t\t\tthis._imageCount.splice(index, 1);\n\n\t\t\tvar len:number = this._images.length;\n\t\t\tfor (var i:number = index; i < len; i++) {\n\t\t\t\tthis._imageIndex[this._images[i].id] = i;\n\t\t\t}\n\n\t\t\tthis._pInvalidatePasses();\n\n\t\t\tthis._pUpdateRender();\n\t\t}\n\t}\n\n\n\tpublic _iAddSampler(sampler:SamplerBase, texture:TextureBase, index:number)\n\t{\n\t\t//find free sampler slot\n\t\tvar i:number = 0;\n\t\tvar len:number = this._samplers.length;\n\t\twhile (i < len) {\n\t\t\tif (!this._samplers[i])\n\t\t\t\tbreak;\n\n\t\t\ti++;\n\t\t}\n\n\t\tif (!this._samplerIndices[texture.id])\n\t\t\tthis._samplerIndices[texture.id] = new Array<number>();\n\n\t\tthis._samplerIndices[texture.id][index] = i;\n\n\t\tthis._samplers[i] = sampler;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pUpdateRender();\n\t}\n\n\tpublic _iRemoveSampler(texture:TextureBase, index:number)\n\t{\n\t\tvar index:number = this._samplerIndices[texture.id][index];\n\n\t\tthis._samplers[index] = null;\n\n\t\t//shorten samplers array if sampler at end\n\t\tif (index == this._samplers.length - 1) {\n\t\t\twhile(index--) {\n\t\t\t\tif (this._samplers[index] != null)\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._samplers.length = index + 1;\n\t\t}\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pUpdateRender();\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this._iColorTransform)\n\t\t\tthis._iColorTransform = new ColorTransform();\n\n\t\tthis._iColorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.clear();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\tpublic clear()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.clear();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static TEXTURE_CHANGED:string = \"textureChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _images:Array<ImageBase> = new Array<ImageBase>();\n\tprivate _imageCount:Array<number> = new Array<number>();\n\tprivate _imageIndex:Object = new Object();\n\tprivate _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\tprivate _samplerIndices:Object = new Object();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _textureChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner> = new Array<IRenderableOwner>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tif (this._pTexture)\n\t\t\tthis._pTexture.iRemoveOwner(this);\n\n\t\tthis._pTexture = value;\n\n\t\tif (this._pTexture)\n\t\t\tthis._pTexture.iAddOwner(this);\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pNotifyTextureChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._clearInterfaces();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._images.length;\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic getImageIndex(image:ImageBase):number\n\t{\n\t\treturn this._imageIndex[image.id];\n\t}\n\n\n\tpublic getNumSamplers():number\n\t{\n\t\treturn this._samplers.length;\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic getSamplerIndex(texture:TextureBase, index:number = 0):number\n\t{\n\t\tif (!this._samplerIndices[texture.id])\n\t\t\tthis._samplerIndices[texture.id] = new Array<number>();\n\n\t\treturn this._samplerIndices[texture.id][index];\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\tpublic _pUpdateRender()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifyTextureChanged()\n\t{\n\t\tif (!this._textureChanged)\n\t\t\tthis._textureChanged = new MaterialEvent(MaterialEvent.TEXTURE_CHANGED);\n\n\t\tthis.dispatchEvent(this._textureChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _clearInterfaces()\n\t{\n\t\tfor (var i:number = this._renders.length - 1; i >= 0; i--)\n\t\t\tthis._renders[i].dispose();\n\t}\n\n\tpublic _iAddImage(image:ImageBase)\n\t{\n\t\tvar index:number = this._imageIndex[image.id];\n\t\tif (!index) {\n\t\t\tthis._imageIndex[image.id] = this._images.length;\n\n\t\t\tthis._images.push(image);\n\t\t\tthis._imageCount.push(1);\n\n\t\t\tthis._pInvalidatePasses();\n\n\t\t\tthis._pUpdateRender();\n\t\t} else {\n\t\t\tthis._imageCount[index]--;\n\t\t}\n\t}\n\n\tpublic _iRemoveImage(image:ImageBase)\n\t{\n\t\tvar index:number = this._imageIndex[image.id];\n\t\tif (this._imageCount[index] != 1) {\n\t\t\tthis._imageCount[index]--;\n\t\t} else {\n\t\t\tdelete this._imageIndex[image.id];\n\n\t\t\tthis._images.splice(index, 1);\n\t\t\tthis._imageCount.splice(index, 1);\n\n\t\t\tvar len:number = this._images.length;\n\t\t\tfor (var i:number = index; i < len; i++) {\n\t\t\t\tthis._imageIndex[this._images[i].id] = i;\n\t\t\t}\n\n\t\t\tthis._pInvalidatePasses();\n\n\t\t\tthis._pUpdateRender();\n\t\t}\n\t}\n\n\n\tpublic _iAddSampler(sampler:SamplerBase, texture:TextureBase, index:number)\n\t{\n\t\t//find free sampler slot\n\t\tvar i:number = 0;\n\t\tvar len:number = this._samplers.length;\n\t\twhile (i < len) {\n\t\t\tif (!this._samplers[i])\n\t\t\t\tbreak;\n\n\t\t\ti++;\n\t\t}\n\n\t\tif (!this._samplerIndices[texture.id])\n\t\t\tthis._samplerIndices[texture.id] = new Array<number>();\n\n\t\tthis._samplerIndices[texture.id][index] = i;\n\n\t\tthis._samplers[i] = sampler;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pUpdateRender();\n\t}\n\n\tpublic _iRemoveSampler(texture:TextureBase, index:number)\n\t{\n\t\tvar index:number = this._samplerIndices[texture.id][index];\n\n\t\tthis._samplers[index] = null;\n\n\t\t//shorten samplers array if sampler at end\n\t\tif (index == this._samplers.length - 1) {\n\t\t\twhile(index--) {\n\t\t\t\tif (this._samplers[index] != null)\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._samplers.length = index + 1;\n\t\t}\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pUpdateRender();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\n{\n    public isContainerNode:boolean = true;\n\n    public _iUpdateQueueNext:IDisplayObjectNode;\n\n    private _pool:ContainerNodePool;\n    private _container : DisplayObjectContainer;\n    private _partition:PartitionBase;\n    private _childDepths:Array<number> = new Array<number>();\n    private _childMasks:Array<INode> = new Array<INode>();\n    private _numChildMasks:number = 0;\n\n    public _pEntityNode:IDisplayObjectNode;\n\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\n    {\n        super();\n\n        this._pool = pool;\n        this._container = container;\n        this._partition = partition;\n    }\n\n    public get displayObject():DisplayObject\n    {\n        return this._container;\n    }\n\n    /**\n     *\n     * @param traverser\n     */\n    public acceptTraverser(traverser:CollectorBase)\n    {\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\n        if (this.numEntities == 0)\n            return;\n\n        if (this._pEntityNode)\n            this._pEntityNode.acceptTraverser(traverser);\n\n        var i:number;\n        for (i = 0; i < this._numChildMasks; i++)\n            this._childMasks[i].acceptTraverser(traverser);\n\n        for (i = 0; i < this._pNumChildNodes; i++)\n            this._pChildNodes[i].acceptTraverser(traverser);\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iAddNode(node:IDisplayObjectNode)\n    {\n        node.parent = this;\n\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = node;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.push(node);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var depth:number = node.displayObject._depthID;\n            var len:number = this._childDepths.length;\n            var index:number = len;\n\n            while (index--)\n                if (this._childDepths[index] < depth)\n                    break;\n\n            index++;\n\n            if (index < len) {\n                this._pChildNodes.splice(index, 0, node);\n                this._childDepths.splice(index, 0, depth);\n            } else {\n                this._pChildNodes.push(node);\n                this._childDepths.push(depth);\n            }\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities += numEntities;\n        } while ((node = <EntityNode> node.parent) != null);\n    }\n\n    public dispose()\n    {\n        super.dispose();\n\n        this._childDepths = null;\n        this._childMasks = null;\n\n        this._pool.disposeItem(this._container);\n        this._partition.iRemoveEntity(this);\n\n        this._pool = null;\n        this._container = null;\n        this._partition = null;\n    }\n\n    /**\n     *\n     * @param node\n     * @internal\n     */\n    public iRemoveNode(node:IDisplayObjectNode)\n    {\n        if (!node.isContainerNode && node.displayObject.isContainer) {\n            this._pEntityNode = null;\n        } else if (node.displayObject.maskMode) {\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\n            this._numChildMasks = this._childMasks.length;\n        } else {\n            var index:number = this._pChildNodes.indexOf(node);\n\n            this._pChildNodes.splice(index, 1);\n            this._childDepths.splice(index, 1);\n\n            this._pNumChildNodes = this._childDepths.length;\n        }\n\n        node._iUpdateImplicitDebugVisible(false);\n\n        var numEntities:number = node.numEntities;\n        node = this;\n\n        do {\n            node.numEntities -= numEntities;\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\n    }\n}\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static assetClass:IAssetClass = DirectionalLight;\n\n\tprivate _directionalLight:DirectionalLight;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase implements IDisplayObjectNode\n{\n\tpublic isContainerNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\n\tprivate _pool:EntityNodePool;\n\tprivate _entity:DisplayObject;\n\tprivate _partition:PartitionBase;\n\tpublic _bounds:BoundingVolumeBase;\n\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis.numEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get displayObject():DisplayObject\n\t{\n\t\treturn this._entity;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.displayObject.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._pool.disposeItem(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:LightProbe;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements INode\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:INode;\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase\n{\n\tpublic _entityNodePool:EntityNodePool;\n\tpublic _rootNode:INode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:IDisplayObjectNode;\n\n\tconstructor()\n\t{\n\t\tthis._entityNodePool = new EntityNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\n\t{\n\t\tvar t:IDisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:INode):INode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode.displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:INode;\n\t\tvar t:IDisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this._entityNodePool.getItem(displayObject));\n\t}\n}\n\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:PointLight;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _containerNodePool:ContainerNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._containerNodePool = new ContainerNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:IDisplayObjectNode):INode\n\t{\n\t\tif (node.displayObject.partition == this || node.displayObject._iIsRoot) {\n\t\t\tthis._rootNode = node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isContainerNode && node.displayObject.isContainer)\n\t\t\treturn this._containerNodePool.getItem(<DisplayObjectContainer> node.displayObject);\n\n\t\treturn this._containerNodePool.getItem(node.displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:Skybox;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdisplayObjectContainer._iRemoveContainerNode(this._containerNodePool[displayObjectContainer.id]);\n\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate static _classPool:Object = new Object();\n\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(displayObject:DisplayObject)\n\t{\n\t\tdisplayObject._iRemoveEntityNode(this._entityNodePool[displayObject.id]);\n\n\t\tdelete this._entityNodePool[displayObject.id];\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\n\t{\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\n\t}\n\n\tprivate static main = EntityNodePool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static getNewSubMesh(subGeometry:SubGeometryBase, parentMesh:Mesh, material:MaterialBase = null):ISubMesh\n\t{\n\t\tvar subMeshClass:ISubMeshClass = SubMeshPool.classPool[subGeometry.assetType];\n\n\t\tif (!subMeshClass._available.length)\n\t\t\treturn new subMeshClass(subGeometry, parentMesh, material);\n\n\t\tvar newSubMesh:ISubMesh = subMeshClass._available.pop();\n\n\t\tnewSubMesh.subGeometry = subGeometry;\n\t\tnewSubMesh.parentMesh = parentMesh;\n\t\tnewSubMesh.material = material;\n\n\t\treturn newSubMesh;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new Error(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tif (this._images[0])\n\t\t\tthis.iRemoveImage(0);\n\n\t\tif (value)\n\t\t\tthis.iAddImage(value, 0);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(image2D:Image2D)\n\t{\n\t\tsuper();\n\n\t\tthis._images.length = 1;\n\n\t\tthis.image2D = image2D;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (this._images[0])\n\t\t\tthis.iRemoveImage(0);\n\n\t\tif (value)\n\t\t\tthis.iAddImage(value, 0);\n\n\n\t\tthis.invalidateContent();\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube)\n\t{\n\t\tsuper();\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/data/SamplerBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport ITextureVO\t\t\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _owners:Array<IRenderOwner> = new Array<IRenderOwner>();\n\tprivate _counts:Array<number> = new Array<number>();\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic iAddOwner(owner:IRenderOwner)\n\t{\n\t\t//a texture can be used more than once in the same owner, so we check for this\n\t\tvar index:number = this._owners.indexOf(owner);\n\n\t\tif (index != -1) {\n\t\t\tthis._counts[index]++;\n\t\t} else {\n\t\t\tthis._owners.push(owner);\n\t\t\tthis._counts.push(1);\n\n\t\t\t//add images\n\t\t\tvar len:number = this._images.length;\n\t\t\tfor (var i:number = 0; i< len; i++)\n\t\t\t\towner._iAddImage(this._images[i]);\n\t\t}\n\n\t\t//add samplers\n\t\tvar len:number = this._images.length;\n\t\tfor (var i:number = 0; i< len; i++)\n\t\t\towner._iAddSampler(this._images[i].createSampler(), this, i);\n\t}\n\n\tpublic iRemoveOwner(owner:IRenderOwner)\n\t{\n\t\tvar index:number = this._owners.indexOf(owner);\n\n\t\tif (this._counts[index] != 1) {\n\t\t\tthis._counts[index]--;\n\t\t} else {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tthis._counts.splice(index, 1);\n\n\t\t\t//remove images\n\t\t\tvar len:number = this._images.length;\n\t\t\tfor (var i:number = 0; i< len; i++)\n\t\t\t\towner._iRemoveImage(this._images[i]);\n\t\t}\n\n\t\t//add samplers\n\t\tvar len:number = this._images.length;\n\t\tfor (var i:number = 0; i< len; i++)\n\t\t\towner._iRemoveSampler(this, i);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic iAddImage(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._owners[i]._iAddImage(image);\n\t\t\tthis._owners[i]._iAddSampler(image.createSampler(), this, index);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic iRemoveImage(index:number)\n\t{\n\t\tvar image:ImageBase = this._images[index];\n\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tthis._owners[i]._iRemoveImage(image);\n\t\t\tthis._owners[i]._iRemoveSampler(this, index);\n\t\t}\n\t}\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}